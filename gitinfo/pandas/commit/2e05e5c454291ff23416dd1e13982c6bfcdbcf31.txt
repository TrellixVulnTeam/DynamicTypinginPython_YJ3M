commit 2e05e5c454291ff23416dd1e13982c6bfcdbcf31
Author: Chang She <chang@lambdafoundry.com>
Date:   Sat Dec 29 12:38:38 2012 -0500

    BUG: nanmin/nanmax fails for empty int dtype #2610

diff --git a/pandas/core/nanops.py b/pandas/core/nanops.py
index be2189ef6..ba0dc91f4 100644
--- a/pandas/core/nanops.py
+++ b/pandas/core/nanops.py
@@ -177,7 +177,7 @@ def _nanmin(values, axis=None, skipna=True):
     else:
         if ((axis is not None and values.shape[axis] == 0)
              or values.size == 0):
-            result = values.sum(axis)
+            result = com.ensure_float(values.sum(axis))
             result.fill(np.nan)
         else:
             result = values.min(axis)
@@ -216,7 +216,7 @@ def _nanmax(values, axis=None, skipna=True):
     else:
         if ((axis is not None and values.shape[axis] == 0)
              or values.size == 0):
-            result = values.sum(axis)
+            result = com.ensure_float(values.sum(axis))
             result.fill(np.nan)
         else:
             result = values.max(axis)
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index 462812296..81f4055ab 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -7010,6 +7010,13 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
         desc = df.describe()
         assert(desc.time['first'] == min(self.tsframe.index))
 
+    def test_describe_empty_int_columns(self):
+        df = DataFrame([[0, 1], [1, 2]])
+        desc = df[df[0] < 0].describe() #works
+        assert_series_equal(desc.xs('count'),
+                            Series([0, 0], dtype=float, name='count'))
+        self.assert_(isnull(desc.ix[1:]).all().all())
+
     def test_get_axis_etc(self):
         f = self.frame
 
