commit 0c67f136a59242ee90359c9dfd71c1baf4dd6578
Author: Gabriel Monteiro <gabriellopesmonteiro41@gmail.com>
Date:   Mon Sep 16 17:23:23 2019 -0300

    BUG: to_html() with formatters=<list> and max_cols fixed (#28183)
    
    * BUG: issue-25955 fixed

diff --git a/doc/source/whatsnew/v1.0.0.rst b/doc/source/whatsnew/v1.0.0.rst
index c78e27f09..a9140fa20 100644
--- a/doc/source/whatsnew/v1.0.0.rst
+++ b/doc/source/whatsnew/v1.0.0.rst
@@ -107,6 +107,7 @@ Performance improvements
 Bug fixes
 ~~~~~~~~~
 
+- Bug in :meth:`DataFrame.to_html` when using ``formatters=<list>`` and ``max_cols`` together. (:issue:`25955`)
 
 Categorical
 ^^^^^^^^^^^
diff --git a/pandas/io/formats/format.py b/pandas/io/formats/format.py
index 4a66ad48d..d3570f5cb 100644
--- a/pandas/io/formats/format.py
+++ b/pandas/io/formats/format.py
@@ -657,6 +657,13 @@ class DataFrameFormatter(TableFormatter):
                 frame = concat(
                     (frame.iloc[:, :col_num], frame.iloc[:, -col_num:]), axis=1
                 )
+                # truncate formatter
+                if isinstance(self.formatters, (list, tuple)):
+                    truncate_fmt = self.formatters
+                    self.formatters = [
+                        *truncate_fmt[:col_num],
+                        *truncate_fmt[-col_num:],
+                    ]
             self.tr_col_num = col_num
         if truncate_v:
             # cast here since if truncate_v is True, max_rows_adj is not None
diff --git a/pandas/tests/io/formats/data/html/truncate_formatter.html b/pandas/tests/io/formats/data/html/truncate_formatter.html
new file mode 100644
index 000000000..7615ef89d
--- /dev/null
+++ b/pandas/tests/io/formats/data/html/truncate_formatter.html
@@ -0,0 +1,36 @@
+<table border="1" class="dataframe">
+  <thead>
+    <tr style="text-align: right;">
+      <th></th>
+      <th>A</th>
+      <th>...</th>
+      <th>D</th>
+    </tr>
+  </thead>
+  <tbody>
+    <tr>
+      <th>0</th>
+      <td>1_mod</td>
+      <td>...</td>
+      <td>4</td>
+    </tr>
+    <tr>
+      <th>1</th>
+      <td>5_mod</td>
+      <td>...</td>
+      <td>8</td>
+    </tr>
+    <tr>
+      <th>2</th>
+      <td>9_mod</td>
+      <td>...</td>
+      <td>12</td>
+    </tr>
+    <tr>
+      <th>3</th>
+      <td>13_mod</td>
+      <td>...</td>
+      <td>16</td>
+    </tr>
+  </tbody>
+</table>
diff --git a/pandas/tests/io/formats/test_to_html.py b/pandas/tests/io/formats/test_to_html.py
index 52c7b8922..004dffd12 100644
--- a/pandas/tests/io/formats/test_to_html.py
+++ b/pandas/tests/io/formats/test_to_html.py
@@ -235,6 +235,23 @@ def test_to_html_truncate(datapath):
     assert result == expected
 
 
+def test_to_html_truncate_formatter(datapath):
+    # issue-25955
+    data = [
+        {"A": 1, "B": 2, "C": 3, "D": 4},
+        {"A": 5, "B": 6, "C": 7, "D": 8},
+        {"A": 9, "B": 10, "C": 11, "D": 12},
+        {"A": 13, "B": 14, "C": 15, "D": 16},
+    ]
+
+    df = DataFrame(data)
+    fmt = lambda x: str(x) + "_mod"
+    formatters = [fmt, fmt, None, None]
+    result = df.to_html(formatters=formatters, max_cols=3)
+    expected = expected_html(datapath, "truncate_formatter")
+    assert result == expected
+
+
 @pytest.mark.parametrize(
     "sparsify,expected",
     [(True, "truncate_multi_index"), (False, "truncate_multi_index_sparse_off")],
