commit 48a31946871c37322eca3d83ce3b9d285bf5c4e9
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Sat Aug 11 20:53:00 2012 -0400

    BUG: exclude unobserved levels when grouping by level, close #1697

diff --git a/RELEASE.rst b/RELEASE.rst
index 0767b8ed8..edb7fb5e5 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -63,6 +63,7 @@ pandas 0.8.2
   - Fix min_periods handling in new rolling_max/min at array start (#1695)
   - Fix errors with how='median' and generic NumPy resampling in some cases
     caused by SeriesBinGrouper (#1648, #1688)
+  - When grouping by level, exclude unobserved levels (#1697)
 
 pandas 0.8.1
 ============
diff --git a/pandas/core/groupby.py b/pandas/core/groupby.py
index d819d81ef..88b9dea33 100644
--- a/pandas/core/groupby.py
+++ b/pandas/core/groupby.py
@@ -986,14 +986,21 @@ class Grouping(object):
 
             # XXX complete hack
 
-            level_values = index.levels[level].take(inds)
             if grouper is not None:
+                level_values = index.levels[level].take(inds)
                 self.grouper = level_values.map(self.grouper)
             else:
                 self._was_factor = True
-                self._labels = inds
+
+                # all levels may not be observed
+                labels, uniques, counts = algos.factorize(inds, sort=True)
+
+                if len(uniques) < len(level_index):
+                    level_index = level_index.take(uniques)
+
+                self._labels = labels
                 self._group_index = level_index
-                self.grouper = level_values
+                self.grouper = level_index.take(labels)
         else:
             if isinstance(self.grouper, (list, tuple)):
                 self.grouper = com._asarray_tuplesafe(self.grouper)
diff --git a/pandas/tests/test_multilevel.py b/pandas/tests/test_multilevel.py
index ecfb157b9..6eb6976b1 100644
--- a/pandas/tests/test_multilevel.py
+++ b/pandas/tests/test_multilevel.py
@@ -788,6 +788,18 @@ x   q   30      3    -0.6662 -0.5243 -0.3580  0.89145  2.5838"""
         # should work
         df.groupby(level='three')
 
+    def test_groupby_level_no_obs(self):
+        # #1697
+        midx = MultiIndex.from_tuples([('f1', 's1'),('f1','s2'),
+                                       ('f2', 's1'),('f2', 's2'),
+                                       ('f3', 's1'),('f3','s2')])
+        df = DataFrame([[1,2,3,4,5,6],[7,8,9,10,11,12]], columns= midx)
+        df1 = df.select(lambda u: u[0] in ['f2', 'f3'], axis=1)
+
+        grouped = df1.groupby(axis=1, level=0)
+        result = grouped.sum()
+        self.assert_((result.columns == ['f2', 'f3']).all())
+
     def test_join(self):
         a = self.frame.ix[:5, ['A']]
         b = self.frame.ix[2:, ['B', 'C']]
