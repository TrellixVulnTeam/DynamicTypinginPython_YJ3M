commit a594dc19eb6f7a572971511080481c8caa8283e8
Author: Joris Van den Bossche <jorisvandenbossche@gmail.com>
Date:   Thu Sep 24 11:30:04 2015 +0200

    DOC: fix bunch of doc build warnings

diff --git a/doc/source/basics.rst b/doc/source/basics.rst
index bc4b463e5..14d712c82 100644
--- a/doc/source/basics.rst
+++ b/doc/source/basics.rst
@@ -1090,7 +1090,7 @@ decreasing.
 
 Note that the same result could have been achieved using
 :ref:`fillna <missing_data.fillna>` (except for ``method='nearest'``) or
-:ref:`interpolate <missing_data.interpolation>`:
+:ref:`interpolate <missing_data.interpolate>`:
 
 .. ipython:: python
 
diff --git a/doc/source/comparison_with_sas.rst b/doc/source/comparison_with_sas.rst
index 2b3a1b927..f51603750 100644
--- a/doc/source/comparison_with_sas.rst
+++ b/doc/source/comparison_with_sas.rst
@@ -34,7 +34,7 @@ Data Structures
 ---------------
 
 General Terminology Translation
-~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 
 .. csv-table::
     :header: "pandas", "SAS"
diff --git a/doc/source/contributing.rst b/doc/source/contributing.rst
index 5d26ca241..3e8e866c0 100644
--- a/doc/source/contributing.rst
+++ b/doc/source/contributing.rst
@@ -154,8 +154,8 @@ Creating a Development Environment
 
 An easy way to create a *pandas* development environment is as follows.
 
-- Install either :ref:`Install Anaconda <install-anaconda>` or :ref:`Install miniconda <install-miniconda>`
-- Make sure that you have :ref:`cloned the repository <contributing-forking>`
+- Install either :ref:`Install Anaconda <install.anaconda>` or :ref:`Install miniconda <install.miniconda>`
+- Make sure that you have :ref:`cloned the repository <contributing.forking>`
 - ``cd`` to the pandas source directory
 
 Tell ``conda`` to create a new environment, named ``pandas_dev``, or any name you would like for this environment by running:
@@ -339,7 +339,7 @@ follow the Numpy Docstring Standard (see above), but you don't need to install
 this because a local copy of ``numpydoc`` is included in the *pandas* source
 code.
 
-It is easiest to :ref:`create a development environment <contributing-dev_env>`, then install:
+It is easiest to :ref:`create a development environment <contributing.dev_env>`, then install:
 
 ::
 
@@ -567,7 +567,7 @@ It is also useful to run tests in your current environment. You can simply do it
 
 which would be equivalent to ``asv run --quick --show-stderr --python=same``. This
 will launch every test only once, display stderr from the benchmarks and use your
-local ``python'' that comes from your $PATH.
+local ``python`` that comes from your $PATH.
 
 Information on how to write a benchmark can be found in
 `*asv*'s documentation http://asv.readthedocs.org/en/latest/writing_benchmarks.html`.
diff --git a/doc/source/install.rst b/doc/source/install.rst
index 5c5f6bdcf..3c624a9d2 100644
--- a/doc/source/install.rst
+++ b/doc/source/install.rst
@@ -179,7 +179,7 @@ To install pandas for Python 3 you may need to use the package ``python3-pandas`
 Installing from source
 ~~~~~~~~~~~~~~~~~~~~~~
 
-See the :ref:`contributing documentation <contributing>` for complete instructions on building from the git source tree. Further, see :ref:`creating a devevlopment environment <contributing-dev_env>` if you wish to create a *pandas* development environment.
+See the :ref:`contributing documentation <contributing>` for complete instructions on building from the git source tree. Further, see :ref:`creating a development environment <contributing.dev_env>` if you wish to create a *pandas* development environment.
 
 Running the test suite
 ~~~~~~~~~~~~~~~~~~~~~~
diff --git a/doc/source/io.rst b/doc/source/io.rst
index 6affbedad..ceebef187 100644
--- a/doc/source/io.rst
+++ b/doc/source/io.rst
@@ -2075,11 +2075,11 @@ Equivalent class and function approaches to read multiple sheets:
     # For when Sheet1's format is identical to Sheet2
     data = read_excel('path_to_file.xls', ['Sheet1','Sheet2'], index_col=None, na_values=['NA'])
 
+.. _io.excel.specifying_sheets:
+
 Specifying Sheets
 +++++++++++++++++
 
-.. _io.specifying_sheets:
-
 .. note :: The second argument is ``sheetname``, not to be confused with ``ExcelFile.sheet_names``
 
 .. note :: An ExcelFile's attribute ``sheet_names`` provides access to a list of sheets.
@@ -3924,7 +3924,7 @@ For more information see the examples the SQLAlchemy `documentation <http://docs
 
 
 Advanced SQLAlchemy queries
-~~~~~~~~~~~~~~~~~~~~~~~~~~~
+'''''''''''''''''''''''''''
 
 You can use SQLAlchemy constructs to describe your query.
 
diff --git a/doc/source/timeseries.rst b/doc/source/timeseries.rst
index 150f72887..2b1e77653 100644
--- a/doc/source/timeseries.rst
+++ b/doc/source/timeseries.rst
@@ -1768,7 +1768,6 @@ TZ aware Dtypes
    s_aware
 
 Both of these ``Series`` can be manipulated via the ``.dt`` accessor, see :ref:`here <basics.dt_accessors>`.
-See the :ref:`docs <timeseries.dtypes>` for more details.
 
 For example, to localize and convert a naive stamp to timezone aware.
 
diff --git a/doc/source/whatsnew/v0.16.0.txt b/doc/source/whatsnew/v0.16.0.txt
index f9bef3d9c..a78d77640 100644
--- a/doc/source/whatsnew/v0.16.0.txt
+++ b/doc/source/whatsnew/v0.16.0.txt
@@ -179,7 +179,7 @@ Other enhancements
 
   This method is also exposed by the lower level ``Index.get_indexer`` and ``Index.get_loc`` methods.
 
-- The ``read_excel()`` function's :ref:`sheetname <_io.specifying_sheets>` argument now accepts a list and ``None``, to get multiple or all sheets respectively.  If more than one sheet is specified, a dictionary is returned. (:issue:`9450`)
+- The ``read_excel()`` function's :ref:`sheetname <io.excel.specifying_sheets>` argument now accepts a list and ``None``, to get multiple or all sheets respectively.  If more than one sheet is specified, a dictionary is returned. (:issue:`9450`)
 
   .. code-block:: python
 
diff --git a/doc/source/whatsnew/v0.16.1.txt b/doc/source/whatsnew/v0.16.1.txt
index 79a0c4823..e1a58a443 100755
--- a/doc/source/whatsnew/v0.16.1.txt
+++ b/doc/source/whatsnew/v0.16.1.txt
@@ -97,7 +97,7 @@ values NOT in the categories, similarly to how you can reindex ANY pandas index.
    df2.reindex(pd.Categorical(['a','e'],categories=list('abcde')))
    df2.reindex(pd.Categorical(['a','e'],categories=list('abcde'))).index
 
-See the :ref:`documentation <advanced.categoricalindex>` for more. (:issue:`7629`, :issue:`10038`, :issue:`10039`)
+See the :ref:`documentation <indexing.categoricalindex>` for more. (:issue:`7629`, :issue:`10038`, :issue:`10039`)
 
 .. _whatsnew_0161.enhancements.sample:
 
diff --git a/doc/source/whatsnew/v0.17.0.txt b/doc/source/whatsnew/v0.17.0.txt
index 6be913e1e..08b453ecc 100644
--- a/doc/source/whatsnew/v0.17.0.txt
+++ b/doc/source/whatsnew/v0.17.0.txt
@@ -453,7 +453,7 @@ Other enhancements
 
 - Enable reading gzip compressed files via URL, either by explicitly setting the compression parameter or by inferring from the presence of the HTTP Content-Encoding header in the response (:issue:`8685`)
 
-- Enable writing Excel files in :ref:`memory <_io.excel_writing_buffer>` using StringIO/BytesIO (:issue:`7074`)
+- Enable writing Excel files in :ref:`memory <io.excel_writing_buffer>` using StringIO/BytesIO (:issue:`7074`)
 
 - Enable serialization of lists and dicts to strings in ``ExcelWriter`` (:issue:`8188`)
 
@@ -967,7 +967,7 @@ Deprecations
   ``DataFrame.add(other, fill_value=0)`` and ``DataFrame.mul(other, fill_value=1.)``
   (:issue:`10735`).
 - ``TimeSeries`` deprecated in favor of ``Series`` (note that this has been alias since 0.13.0), (:issue:`10890`)
-- ``SparsePanel`` deprecated and will be removed in a future version (:issue:``)
+- ``SparsePanel`` deprecated and will be removed in a future version (:issue:`11157`).
 - ``Series.is_time_series`` deprecated in favor of ``Series.index.is_all_dates`` (:issue:`11135`)
 - Legacy offsets (like ``'A@JAN'``) listed in :ref:`here <timeseries.legacyaliases>` are deprecated (note that this has been alias since 0.8.0), (:issue:`10878`)
 - ``WidePanel`` deprecated in favor of ``Panel``, ``LongPanel`` in favor of ``DataFrame`` (note these have been aliases since < 0.11.0), (:issue:`10892`)
