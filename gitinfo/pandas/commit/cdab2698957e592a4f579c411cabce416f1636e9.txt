commit cdab2698957e592a4f579c411cabce416f1636e9
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Sun Sep 25 17:39:26 2011 -0400

    DOC: documented swaplevel, address GH #150

diff --git a/doc/source/dsintro.rst b/doc/source/dsintro.rst
index eeff9f845..eca3e2ccd 100644
--- a/doc/source/dsintro.rst
+++ b/doc/source/dsintro.rst
@@ -513,11 +513,6 @@ The API for insertion and deletion is the same as for DataFrame.
 Indexing / Selection
 ~~~~~~~~~~~~~~~~~~~~
 
-As of this writing, indexing with Panel is a bit more restrictive than in
-DataFrame. Notably, :ref:`advanced indexing <indexing>` via the **ix** property
-has not yet been integrated in Panel. This will be done, however, in a
-future release.
-
 .. csv-table::
     :header: "Operation", "Syntax", "Result"
     :widths: 30, 20, 10
diff --git a/doc/source/indexing.rst b/doc/source/indexing.rst
index c324f5bfc..905f004e9 100644
--- a/doc/source/indexing.rst
+++ b/doc/source/indexing.rst
@@ -291,7 +291,8 @@ than integer locations. Therefore, advanced indexing with ``.ix`` will always
 Setting values in mixed-type objects
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 
-Setting values on a mixed-type DataFrame or Panel is not yet supported:
+Setting values on a mixed-type DataFrame or Panel is supported when using scalar
+values, though setting arbitrary vectors is not yet supported:
 
 .. ipython:: python
 
@@ -299,11 +300,7 @@ Setting values on a mixed-type DataFrame or Panel is not yet supported:
    df2['foo'] = 'bar'
    df2.ix[3]
    df2.ix[3] = np.nan
-
-The reason it has not been implemented yet is simply due to difficulty of
-implementation relative to its utility. Handling the full spectrum of
-exceptional cases for setting values is trickier than getting values (which is
-relatively straightforward).
+   df2
 
 .. _indexing.hierarchical:
 
@@ -523,6 +520,16 @@ However:
    >>> s.ix[('a', 'b'):('b', 'a')]
    Exception: MultiIndex lexsort depth 1, key was length 2
 
+Swapping levels with ``swaplevel``
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+
+The ``swaplevel`` function can switch the order of two levels:
+
+.. ipython:: python
+
+   df[:5]
+   df[:5].swaplevel(0, 1, axis=0)
+
 The ``delevel`` DataFrame function
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 
