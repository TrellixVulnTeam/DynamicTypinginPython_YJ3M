commit 8caedef55ab0ed25cba2ce4b6032df940e6163c2
Author: Adam Klein <adamklein@gmail.com>
Date:   Thu Apr 5 18:59:55 2012 -0400

    BUG: close #1001, dataframe lookup return bad data

diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 140d8a40c..3ad27406c 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -1711,6 +1711,10 @@ class DataFrame(NDFrame):
             values = self.values
             ridx = self.index.get_indexer(row_labels)
             cidx = self.columns.get_indexer(col_labels)
+            if (ridx == -1).any():
+                raise ValueError("Bad row label(s)")
+            if (cidx == -1).any():
+                raise ValueError("Bad col label(s)")
             flat_index = ridx * len(self.columns) + cidx
             result = values.flat[flat_index]
         else:
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index 5d48f6a6b..49c66f63c 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -882,6 +882,12 @@ class CheckIndexing(object):
         assert_almost_equal(df['mask'], exp_mask)
         self.assert_(df['mask'].dtype == np.bool_)
 
+        self.assertRaises(ValueError, self.frame.lookup, 
+                          ['xyz'], ['A'])
+
+        self.assertRaises(ValueError, self.frame.lookup, 
+                          [self.frame.index[0]], ['xyz'])
+
     def test_set_value(self):
         for idx in self.frame.index:
             for col in self.frame.columns:
