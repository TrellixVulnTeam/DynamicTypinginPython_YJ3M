commit 10edfd06c097f6d471b3cd96f6359b924ab8839b
Author: jbrockmendel <jbrockmendel@gmail.com>
Date:   Fri Dec 29 06:39:37 2017 -0800

    Fix DatetimeIndex.insert(pd.NaT) for tz-aware index (#18883)
    
    closes #16357

diff --git a/doc/source/whatsnew/v0.23.0.txt b/doc/source/whatsnew/v0.23.0.txt
index 2eef43562..0301bf0a2 100644
--- a/doc/source/whatsnew/v0.23.0.txt
+++ b/doc/source/whatsnew/v0.23.0.txt
@@ -313,6 +313,7 @@ Indexing
 - :func:`Index.to_series` now accepts ``index`` and ``name`` kwargs (:issue:`18699`)
 - :func:`DatetimeIndex.to_series` now accepts ``index`` and ``name`` kwargs (:issue:`18699`)
 - Bug in indexing non-scalar value from ``Series`` having non-unique ``Index`` will return value flattened (:issue:`17610`)
+- Bug in :func:`DatetimeIndex.insert` where inserting ``NaT`` into a timezone-aware index incorrectly raised (:issue:`16357`)
 
 
 I/O
diff --git a/pandas/core/indexes/datetimes.py b/pandas/core/indexes/datetimes.py
index 321d59eb0..af901440d 100644
--- a/pandas/core/indexes/datetimes.py
+++ b/pandas/core/indexes/datetimes.py
@@ -1791,7 +1791,7 @@ class DatetimeIndex(DatelikeOps, TimelikeOps, DatetimeIndexOpsMixin,
 
         if isinstance(item, (datetime, np.datetime64)):
             self._assert_can_do_op(item)
-            if not self._has_same_tz(item):
+            if not self._has_same_tz(item) and not isna(item):
                 raise ValueError(
                     'Passed item and index have different timezone')
             # check freq can be preserved on edge cases
diff --git a/pandas/tests/indexes/datetimes/test_indexing.py b/pandas/tests/indexes/datetimes/test_indexing.py
index b3ce22962..48ceefd63 100644
--- a/pandas/tests/indexes/datetimes/test_indexing.py
+++ b/pandas/tests/indexes/datetimes/test_indexing.py
@@ -46,6 +46,15 @@ class TestDatetimeIndex(object):
         expected = i2
         tm.assert_index_equal(result, expected)
 
+    @pytest.mark.parametrize('null', [None, np.nan, pd.NaT])
+    @pytest.mark.parametrize('tz', [None, 'UTC', 'US/Eastern'])
+    def test_insert_nat(self, tz, null):
+        # GH#16537, GH#18295 (test missing)
+        idx = pd.DatetimeIndex(['2017-01-01'], tz=tz)
+        expected = pd.DatetimeIndex(['NaT', '2017-01-01'], tz=tz)
+        res = idx.insert(0, null)
+        tm.assert_index_equal(res, expected)
+
     def test_insert(self):
         idx = DatetimeIndex(
             ['2000-01-04', '2000-01-01', '2000-01-02'], name='idx')
@@ -145,13 +154,6 @@ class TestDatetimeIndex(object):
                 assert result.tz == expected.tz
                 assert result.freq is None
 
-        # GH 18295 (test missing)
-        expected = DatetimeIndex(
-            ['20170101', pd.NaT, '20170102', '20170103', '20170104'])
-        for na in (np.nan, pd.NaT, None):
-            result = date_range('20170101', periods=4).insert(1, na)
-            tm.assert_index_equal(result, expected)
-
     def test_delete(self):
         idx = date_range(start='2000-01-01', periods=5, freq='M', name='idx')
 
