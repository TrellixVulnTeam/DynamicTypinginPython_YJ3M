commit 4f8b7284977bf39872ca42b9e9be9fa7aa314724
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Tue Aug 30 00:02:53 2011 -0400

    DOC: more missing data docs

diff --git a/doc/source/api.rst b/doc/source/api.rst
index e22a37f0e..0a98d1401 100644
--- a/doc/source/api.rst
+++ b/doc/source/api.rst
@@ -271,6 +271,8 @@ Reindexing / Selection / Label manipulation
    DataFrame.head
    DataFrame.tail
 
+.. _api.dataframe.missing:
+
 Missing data handling
 ~~~~~~~~~~~~~~~~~~~~~
 .. autosummary::
diff --git a/doc/source/index.rst b/doc/source/index.rst
index 0dd4babc2..cdabc25bc 100755
--- a/doc/source/index.rst
+++ b/doc/source/index.rst
@@ -1,8 +1,8 @@
 .. Pandas documentation master file, created by
 
-*********************************************
-pandas: powerful Python data analysis library
-*********************************************
+*************************************************
+pandas: Pythonic data analysis for the real world
+*************************************************
 
 .. note::
 
diff --git a/doc/source/missing_data.rst b/doc/source/missing_data.rst
index b6f46b8c5..b131ed17e 100644
--- a/doc/source/missing_data.rst
+++ b/doc/source/missing_data.rst
@@ -13,6 +13,7 @@ pandas.
 
    import numpy as np; randn = np.random.randn
    from pandas import *
+   import matplotlib.pyplot as plt
 
 .. note::
 
@@ -154,8 +155,8 @@ To remind you, these are the available filling methods:
     :header: "Method", "Action"
     :widths: 30, 50
 
-	pad / ffill, Fill values forward
-	bfill / backfill, Fill values backward
+    pad / ffill, Fill values forward
+    bfill / backfill, Fill values backward
 
 With time series data, using pad/ffill is extremely common so that the "last
 known value" is available at every time point.
@@ -163,8 +164,57 @@ known value" is available at every time point.
 Dropping axis labels with missing data: dropna
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 
+You may wish to simply exclude labels from a data set which refer to missing
+data. To do this, use the **dropna** method:
+
+.. ipython:: python
+   :suppress:
+
+   df['two'] = df['two'].fillna(0)
+   df['three'] = df['three'].fillna(0)
+
+.. ipython:: python
+
+   df
+   df.dropna(axis=0)
+   df.dropna(axis=1)
+   df['one'].dropna()
+
+**dropna** is presently only implemented for Series and DataFrame, but will be
+eventually added to WidePanel. Series.dropna is a simpler method as it only has
+one axis to consider. DataFrame.dropna has considerably more options, which can
+be examined :ref:`in the API <api.dataframe.missing>`.
+
 Interpolation
 ~~~~~~~~~~~~~
 
+A basic linear **interpolate** method has been implemented on Series with
+intended use for time series data. There has not been a great deal of demand
+for interpolation methods outside of the filling methods described above.
+
+.. ipython:: python
+   :suppress:
+
+   np.random.seed(123456)
+   ts = Series(randn(100), index=DateRange('1/1/2000', periods=100,
+                                           timeRule='EOM'))
+   ts[20:40] = np.nan
+   ts[60:80] = np.nan
+   ts = ts.cumsum()
+
+.. ipython::
+
+   In [0]: fig, axes = plt.subplots(ncols=2, figsize=(8, 4))
+
+   In [0]: ts.plot(ax=axes[0])
+
+   In [0]: ts.interpolate().plot(ax=axes[1])
+
+   In [0]: axes[0].set_title('Not interpolated')
+
+   @savefig series_interpolate.png width=6in
+   In [0]: axes[1].set_title('Interpolated')
+
+
 Missing data casting and indexing rules
 ---------------------------------------
diff --git a/doc/sphinxext/ipython_directive.py b/doc/sphinxext/ipython_directive.py
index ce50497f9..a16b64d26 100644
--- a/doc/sphinxext/ipython_directive.py
+++ b/doc/sphinxext/ipython_directive.py
@@ -396,7 +396,7 @@ class EmbeddedSphinxShell(object):
         Saves the image file to disk.
         """
         self.ensure_pyplot()
-        command = 'plt.gcf().savefig("%s")'%image_file
+        command = 'plt.gcf().savefig("%s", bbox_inches="tight", dpi=150)'%image_file
         #print 'SAVEFIG', command  # dbg
         self.process_input_line('bookmark ipy_thisdir', store_history=False)
         self.process_input_line('cd -b ipy_savedir', store_history=False)
@@ -468,8 +468,6 @@ class EmbeddedSphinxShell(object):
                 output.append(line) # preserve empty lines in output
                 continue
 
-
-
             # handle decorators
             if line_stripped.startswith('@'):
                 output.extend([line])
