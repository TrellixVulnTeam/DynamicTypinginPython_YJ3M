commit 36130c0c5375d827c7a0a45397d14b72d798d307
Author: y-p <yoval@gmx.com>
Date:   Thu Dec 19 23:38:41 2013 +0200

    CLN: simplify code in config.py

diff --git a/pandas/core/config.py b/pandas/core/config.py
index 96d89e960..f2f932e39 100644
--- a/pandas/core/config.py
+++ b/pandas/core/config.py
@@ -100,26 +100,6 @@ def _get_option(pat, silent=False):
     return root[k]
 
 
-def _set_single_option(pat, value, silent):
-    key = _get_single_key(pat, silent)
-
-    o = _get_registered_option(key)
-    if o and o.validator:
-        o.validator(value)
-
-    # walk the nested dict
-    root, k = _get_root(key)
-    root[k] = value
-
-    if o.cb:
-        o.cb(key)
-
-
-def _set_multiple_options(args, silent):
-    for k, v in zip(args[::2], args[1::2]):
-        _set_single_option(k, v, silent)
-
-
 def _set_option(*args, **kwargs):
     # must at least 1 arg deal with constraints later
     nargs = len(args)
@@ -127,27 +107,22 @@ def _set_option(*args, **kwargs):
         raise ValueError("Must provide an even number of non-keyword "
                              "arguments")
 
-    # must be 0 or 1 kwargs
-    nkwargs = len(kwargs)
-    if nkwargs not in (0, 1):
-        raise ValueError("The can only be 0 or 1 keyword arguments")
+    # default to false
+    silent = kwargs.get('silent', False)
 
-    # if 1 kwarg then it must be silent=True or silent=False
-    if nkwargs:
-        k, = list(kwargs.keys())
-        v, = list(kwargs.values())
+    for k, v in zip(args[::2], args[1::2]):
+        key = _get_single_key(k, silent)
 
-        if k != 'silent':
-            raise ValueError("the only allowed keyword argument is 'silent', "
-                             "you passed '{0}'".format(k))
-        if not isinstance(v, bool):
-            raise TypeError("the type of the keyword argument passed must be "
-                            "bool, you passed a {0}".format(v.__class__))
+        o = _get_registered_option(key)
+        if o and o.validator:
+            o.validator(v)
 
-    # default to false
-    silent = kwargs.get('silent', False)
-    _set_multiple_options(args, silent)
+        # walk the nested dict
+        root, k = _get_root(key)
+        root[k] = v
 
+        if o.cb:
+            o.cb(key)
 
 def _describe_option(pat='', _print_desc=True):
 
diff --git a/pandas/tests/test_config.py b/pandas/tests/test_config.py
index 2c00a0928..6d4486525 100644
--- a/pandas/tests/test_config.py
+++ b/pandas/tests/test_config.py
@@ -175,19 +175,6 @@ class TestConfig(unittest.TestCase):
     def test_set_option_uneven_args(self):
         self.assertRaises(ValueError, self.cf.set_option, 'a.b', 2, 'b.c')
 
-
-    def test_set_option_2_kwargs(self):
-        self.assertRaises(ValueError, self.cf.set_option, 'a.b', 2,
-                          silenadf=2, asdf=2)
-
-    def test_set_option_invalid_kwargs_key(self):
-        self.assertRaises(ValueError, self.cf.set_option, 'a.b', 2,
-                          silenadf=2)
-
-    def test_set_option_invalid_kwargs_value_type(self):
-        self.assertRaises(TypeError, self.cf.set_option, 'a.b', 2,
-                          silent=2)
-
     def test_set_option_invalid_single_argument_type(self):
         self.assertRaises(ValueError, self.cf.set_option, 2)
 
