commit d1f3689513026ba64122f1e254d6facef4d2e396
Author: Joris Van den Bossche <jorisvandenbossche@gmail.com>
Date:   Fri Mar 2 22:33:48 2018 +0100

     DOC: fix some sphinx syntax warnings  (#19962)

diff --git a/doc/source/merging.rst b/doc/source/merging.rst
index 4d9746eed..cfd3f9e88 100644
--- a/doc/source/merging.rst
+++ b/doc/source/merging.rst
@@ -152,7 +152,7 @@ functionality below.
 Set logic on the other axes
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~
 
-When gluing together multiple ``DataFrame``s, you have a choice of how to handle 
+When gluing together multiple DataFrames, you have a choice of how to handle
 the other axes (other than the one being concatenated). This can be done in 
 the following three ways:
 
@@ -636,7 +636,7 @@ key combination:
 
 Here is a more complicated example with multiple join keys. Only the keys 
 appearing in ``left`` and ``right`` are present (the intersection), since 
-``how='inner'```by default.
+``how='inner'`` by default.
 
 .. ipython:: python
 
@@ -721,7 +721,7 @@ either the left or right tables, the values in the joined table will be
           labels=['left', 'right'], vertical=False);
    plt.close('all');
 
-Here is another example with duplicate join keys in ``DataFrame``s:
+Here is another example with duplicate join keys in DataFrames:
 
 .. ipython:: python
 
diff --git a/doc/source/tutorials.rst b/doc/source/tutorials.rst
index 0398e2892..85e455de7 100644
--- a/doc/source/tutorials.rst
+++ b/doc/source/tutorials.rst
@@ -180,13 +180,13 @@ Video Tutorials
 
 - `Pandas From The Ground Up <https://www.youtube.com/watch?v=5JnMutdy6Fw>`_ 
   (2015) (2:24)
-  `GitHub repo <https://github.com/brandon-rhodes/pycon-pandas-tutorial>`_ 
+  `GitHub repo <https://github.com/brandon-rhodes/pycon-pandas-tutorial>`__
 - `Introduction Into Pandas <https://www.youtube.com/watch?v=-NR-ynQg0YM>`_ 
   (2016) (1:28)
-  `GitHub repo <https://github.com/chendaniely/2016-pydata-carolinas-pandas>`_ 
+  `GitHub repo <https://github.com/chendaniely/2016-pydata-carolinas-pandas>`__
 - `Pandas: .head() to .tail() <https://www.youtube.com/watch?v=7vuO9QXDN50>`_ 
   (2016) (1:26)
-  `GitHub repo <https://github.com/TomAugspurger/pydata-chi-h2t>`_ 
+  `GitHub repo <https://github.com/TomAugspurger/pydata-chi-h2t>`__
 
 
 Various Tutorials
diff --git a/doc/source/visualization.rst b/doc/source/visualization.rst
index ee93f06fb..09a52ee52 100644
--- a/doc/source/visualization.rst
+++ b/doc/source/visualization.rst
@@ -870,7 +870,7 @@ Andrews Curves
 
 Andrews curves allow one to plot multivariate data as a large number
 of curves that are created using the attributes of samples as coefficients
-for Fourier series, see the `Wikipedia entry<https://en.wikipedia.org/wiki/Andrews_plot>`_
+for Fourier series, see the `Wikipedia entry <https://en.wikipedia.org/wiki/Andrews_plot>`__
 for more information. By coloring these curves differently for each class
 it is possible to visualize data clustering. Curves belonging to samples
 of the same class will usually be closer together and form larger structures.
@@ -894,7 +894,7 @@ Parallel Coordinates
 ~~~~~~~~~~~~~~~~~~~~
 
 Parallel coordinates is a plotting technique for plotting multivariate data,
-see the `Wikipedia entry<https://en.wikipedia.org/wiki/Parallel_coordinates>`_
+see the `Wikipedia entry <https://en.wikipedia.org/wiki/Parallel_coordinates>`__
 for an introduction.
 Parallel coordinates allows one to see clusters in data and to estimate other statistics visually.
 Using parallel coordinates points are represented as connected line segments.
@@ -962,7 +962,7 @@ all time-lag separations. If time series is non-random then one or more of the
 autocorrelations will be significantly non-zero. The horizontal lines displayed
 in the plot correspond to 95% and 99% confidence bands. The dashed line is 99%
 confidence band. See the 
-`Wikipedia entry<https://en.wikipedia.org/wiki/Correlogram>`_ for more about
+`Wikipedia entry <https://en.wikipedia.org/wiki/Correlogram>`__ for more about
 autocorrelation plots.
 
 .. ipython:: python
@@ -1032,7 +1032,7 @@ unit interval). The point in the plane, where our sample settles to (where the
 forces acting on our sample are at an equilibrium) is where a dot representing
 our sample will be drawn. Depending on which class that sample belongs it will
 be colored differently.
-See the R package `Radviz<https://cran.r-project.org/web/packages/Radviz/>`_
+See the R package `Radviz <https://cran.r-project.org/web/packages/Radviz/>`__
 for more information.
 
 **Note**: The "Iris" dataset is available `here <https://raw.github.com/pandas-dev/pandas/master/pandas/tests/data/iris.csv>`__.
diff --git a/doc/source/whatsnew/v0.23.0.txt b/doc/source/whatsnew/v0.23.0.txt
index cf2a5de58..bffdf5b79 100644
--- a/doc/source/whatsnew/v0.23.0.txt
+++ b/doc/source/whatsnew/v0.23.0.txt
@@ -117,7 +117,7 @@ resetting indexes. See the :ref:`Sorting by Indexes and Values
    # Sort by 'second' (index) and 'A' (column)
    df_multi.sort_values(by=['second', 'A'])
 
-.. _whatsnew_0230.enhancements.timedelta_mod
+.. _whatsnew_0230.enhancements.timedelta_mod:
 
 Timedelta mod method
 ^^^^^^^^^^^^^^^^^^^^
@@ -756,7 +756,7 @@ Removal of prior version deprecations/changes
 - The ``Panel4D`` and ``PanelND`` classes have been removed (:issue:`13776`)
 - The ``Panel`` class has dropped the ``to_long`` and ``toLong`` methods (:issue:`19077`)
 - The options ``display.line_with`` and ``display.height`` are removed in favor of ``display.width`` and ``display.max_rows`` respectively (:issue:`4391`, :issue:`19107`)
-- The ``labels`` attribute of the ``Categorical`` class has been removed in favor of :attribute:`Categorical.codes` (:issue:`7768`)
+- The ``labels`` attribute of the ``Categorical`` class has been removed in favor of :attr:`Categorical.codes` (:issue:`7768`)
 - The ``flavor`` parameter have been removed from func:`to_sql` method (:issue:`13611`)
 - The modules ``pandas.tools.hashing`` and ``pandas.util.hashing`` have been removed (:issue:`16223`)
 - The top-level functions ``pd.rolling_*``, ``pd.expanding_*`` and ``pd.ewm*`` have been removed (Deprecated since v0.18).
diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index ff4064b3f..a66d00fff 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -116,8 +116,8 @@ _shared_doc_kwargs = dict(
             - if `axis` is 1 or `'columns'` then `by` may contain column
               levels and/or index labels
 
-        .. versionchanged:: 0.23.0
-           Allow specifying index or column level names.""",
+            .. versionchanged:: 0.23.0
+               Allow specifying index or column level names.""",
     versionadded_to_excel='',
     optional_labels="""labels : array-like, optional
             New labels / index to conform the axis specified by 'axis' to.""",
diff --git a/pandas/core/window.py b/pandas/core/window.py
index a3f19ef50..417888ce8 100644
--- a/pandas/core/window.py
+++ b/pandas/core/window.py
@@ -416,11 +416,11 @@ class Window(_Window):
     A ragged (meaning not-a-regular frequency), time-indexed DataFrame
 
     >>> df = pd.DataFrame({'B': [0, 1, 2, np.nan, 4]},
-    ....:                 index = [pd.Timestamp('20130101 09:00:00'),
-    ....:                          pd.Timestamp('20130101 09:00:02'),
-    ....:                          pd.Timestamp('20130101 09:00:03'),
-    ....:                          pd.Timestamp('20130101 09:00:05'),
-    ....:                          pd.Timestamp('20130101 09:00:06')])
+    ...                   index = [pd.Timestamp('20130101 09:00:00'),
+    ...                            pd.Timestamp('20130101 09:00:02'),
+    ...                            pd.Timestamp('20130101 09:00:03'),
+    ...                            pd.Timestamp('20130101 09:00:05'),
+    ...                            pd.Timestamp('20130101 09:00:06')])
 
     >>> df
                            B
diff --git a/pandas/io/json/json.py b/pandas/io/json/json.py
index 24364fe07..1627b2f4d 100644
--- a/pandas/io/json/json.py
+++ b/pandas/io/json/json.py
@@ -348,7 +348,7 @@ def read_json(path_or_buf=None, orient=None, typ='frame', dtype=True,
     to denote a missing :class:`Index` name, and the subsequent
     :func:`read_json` operation cannot distinguish between the two. The same
     limitation is encountered with a :class:`MultiIndex` and any names
-    beginning with 'level_'.
+    beginning with ``'level_'``.
 
     See Also
     --------
