commit 73f57bbc93a6ef86306829601f764cb8a9105616
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Tue Mar 9 19:14:30 2010 +0000

    ported tdates C extension to Cython, removed unneeded include files, etc.
    
    git-svn-id: http://pandas.googlecode.com/svn/trunk@137 d5231056-7de3-11de-ac95-d976489f1ece

diff --git a/pandas/lib/build.py b/pandas/lib/build.py
index f036b8fe1..8f0696add 100644
--- a/pandas/lib/build.py
+++ b/pandas/lib/build.py
@@ -6,7 +6,7 @@ import numpy
 from Cython.Distutils import build_ext
 
 pyx_ext = Extension('tseries', ['src/tseries.pyx',
-                                 'src/wirth.c'],
+                                'src/wirth.c'],
                     include_dirs=[numpy.get_include(),
                                   'include/'])
 
diff --git a/pandas/lib/include/datetime.pxi b/pandas/lib/include/datetime.pxi
deleted file mode 100644
index 91e25fe9c..000000000
--- a/pandas/lib/include/datetime.pxi
+++ /dev/null
@@ -1,14 +0,0 @@
-cdef extern from "datetime.h":
-
-    ctypedef extern class datetime.datetime [object PyDateTime_DateTime]:
-        cdef int *data
-        cdef long hashcode
-        cdef char hastzinfo
-
-    int PyDateTime_GET_YEAR(datetime o)
-    int PyDateTime_GET_MONTH(datetime o)
-    int PyDateTime_GET_DAY(datetime o)
-    int PyDateTime_DATE_GET_HOUR(datetime o)
-    int PyDateTime_DATE_GET_MINUTE(datetime o)
-    int PyDateTime_DATE_GET_SECOND(datetime o)
-    int PyDateTime_DATE_GET_MICROSECOND(datetime o)
diff --git a/pandas/lib/include/python_datetime.pxd b/pandas/lib/include/python_datetime.pxd
deleted file mode 100644
index fed6e55d0..000000000
--- a/pandas/lib/include/python_datetime.pxd
+++ /dev/null
@@ -1,16 +0,0 @@
-cdef extern from "datetime.h":
-    
-    ctypedef extern class datetime.datetime [object PyDateTime_DateTime]:
-        cdef int *data
-        cdef long hashcode
-        cdef char hastzinfo
-        
-    int PyDateTime_GET_YEAR(datetime o)
-    int PyDateTime_GET_MONTH(datetime o)
-    int PyDateTime_GET_DAY(datetime o)
-    int PyDateTime_TIME_GET_HOUR(datetime o)
-    int PyDateTime_TIME_GET_MINUTE(datetime o)
-    int PyDateTime_TIME_GET_SECOND(datetime o)
-    int PyDateTime_TIME_GET_MICROSECOND(datetime o)
-    void PyDateTime_IMPORT()
-    
\ No newline at end of file
diff --git a/pandas/lib/setup.py b/pandas/lib/setup.py
index 503dcb753..6b65290db 100644
--- a/pandas/lib/setup.py
+++ b/pandas/lib/setup.py
@@ -30,7 +30,5 @@ def configuration(parent_package='', top_path=None):
                                   'src/wirth.c'],
                          include_dirs=[numpy.get_include(),
                                        'include/'])
-    config.add_extension('tdates',
-                         sources=['src/tdates.c'])
 
     return config
diff --git a/pandas/lib/src/common.pyx b/pandas/lib/src/common.pyx
index 40f121643..6e99979e7 100644
--- a/pandas/lib/src/common.pyx
+++ b/pandas/lib/src/common.pyx
@@ -1,4 +1,3 @@
-include "datetime.pxi"
 include "Python.pxi"
 
 cimport numpy as np
@@ -53,6 +52,36 @@ cdef double_t *get_double_ptr(ndarray arr):
 
     return <double_t *> arr.data
 
+cdef extern from "math.h":
+    double sqrt(double x)
+
+cdef extern from "cobject.h":
+    pass # for datetime API
+
+cdef extern from "datetime.h":
+
+    ctypedef class datetime.datetime [object PyDateTime_DateTime]:
+        # cdef int *data
+        # cdef long hashcode
+        # cdef char hastzinfo
+        pass
+
+    int PyDateTime_GET_YEAR(datetime o)
+    int PyDateTime_GET_MONTH(datetime o)
+    int PyDateTime_GET_DAY(datetime o)
+    int PyDateTime_TIME_GET_HOUR(datetime o)
+    int PyDateTime_TIME_GET_MINUTE(datetime o)
+    int PyDateTime_TIME_GET_SECOND(datetime o)
+    int PyDateTime_TIME_GET_MICROSECOND(datetime o)
+    bint PyDateTime_Check(object o)
+    void PyDateTime_IMPORT()
+
+# import datetime C API
+PyDateTime_IMPORT
+
+# initialize numpy
+import_array()
+
 cpdef map_indices(ndarray index):
     '''
     Produce a dict mapping the values of the input array to their respective
@@ -80,10 +109,38 @@ cpdef map_indices(ndarray index):
 
     return result
 
-cdef extern from "math.h":
-    double sqrt(double x)
+def isAllDates(ndarray index):
+    cdef int i, length
+    cdef flatiter iter
+    cdef object date
 
+    iter = <flatiter> PyArray_IterNew(index)
+    length = PyArray_SIZE(index)
 
-# initialize numpy
-import_array()
+    for i from 0 <= i < length:
+        date = PyArray_GETITEM(index, PyArray_ITER_DATA(iter))
+
+        if not PyDateTime_Check(date):
+            return False
+        PyArray_ITER_NEXT(iter)
+
+    return True
+
+def isAllDates2(ndarray[object, ndim=1] arr):
+    '''
+    cannot use
+    '''
+
+    cdef int i, size = len(arr)
+    cdef object date
+
+    if size == 0:
+        return False
+
+    for i from 0 <= i < size:
+        date = arr[i]
+
+        if not PyDateTime_Check(date):
+            return False
 
+    return True
diff --git a/pandas/lib/src/moments.pyx b/pandas/lib/src/moments.pyx
index 8b3921373..1d100115d 100644
--- a/pandas/lib/src/moments.pyx
+++ b/pandas/lib/src/moments.pyx
@@ -157,8 +157,8 @@ def _ewma(ndarray[double_t, ndim=1] input,
 
 def _roll_var(ndarray[double_t, ndim=1] input,
               int win, int minp):
-    cdef double val, prev, sum_x = 0, sum_xx = 0
-    cdef int nobs = 0, i
+    cdef double val, prev, sum_x = 0, sum_xx = 0, nobs = 0
+    cdef int i
     cdef int N = len(input)
 
     cdef ndarray[double_t, ndim=1] output = np.empty(N, dtype=float)
diff --git a/pandas/lib/src/tdates.c b/pandas/lib/src/tdates.c
deleted file mode 100644
index 688e5fd39..000000000
--- a/pandas/lib/src/tdates.c
+++ /dev/null
@@ -1,58 +0,0 @@
-#include <Python.h>
-#include <datetime.h>
-#include <numpy/arrayobject.h>
-#include <stdio.h>
-
-static PyObject* isAllDates(PyObject *self, PyObject *args) {
-    PyObject *input;
-    PyArrayIterObject *iter;
-    PyObject *obj;
-
-    PyDateTime_IMPORT;
-
-    if (PyArg_ParseTuple(args, "O", &input)) {
-      long size;
-
-      if (!PyArray_Check(input)) {
-	PyErr_SetString(PyExc_RuntimeError, "Input was not ndarray!");
-	return NULL;
-      }
-
-      size = PyArray_SIZE(input);
-
-      if (size == 0) {
-	Py_RETURN_FALSE;
-      }
-
-      iter = (PyArrayIterObject *) PyArray_IterNew(input);
-
-      while (iter->index < iter->size) {
-	obj = PyArray_GETITEM(input, (void *) iter->dataptr);
-	if (!PyDateTime_Check(obj)) {
-	  Py_DECREF(obj);
-	  Py_DECREF(iter);
-
-	  Py_RETURN_FALSE;
-	}
-
-	Py_DECREF(obj);
-	PyArray_ITER_NEXT(iter);
-      }
-
-      Py_DECREF(iter);
-      Py_RETURN_TRUE;
-    }
-    return NULL;
-}
-
-static PyMethodDef tdatesMethods[] =
-{
-    { "isAllDates", isAllDates, METH_VARARGS, NULL },
-    {  NULL, NULL, 0, NULL},
-};
-
-PyMODINIT_FUNC inittdates(void)
-{
-    (void) Py_InitModule("tdates", tdatesMethods);
-    import_array();
-}
diff --git a/pandas/lib/src/tseries.c b/pandas/lib/src/tseries.c
index a2b702ea2..55fec3d84 100644
--- a/pandas/lib/src/tseries.c
+++ b/pandas/lib/src/tseries.c
@@ -1,4 +1,4 @@
-/* Generated by Cython 0.12.1 on Tue Mar 02 11:39:58 2010 */
+/* Generated by Cython 0.12.1 on Tue Mar 09 14:13:06 2010 */
 
 #define PY_SSIZE_T_CLEAN
 #include "Python.h"
@@ -153,13 +153,14 @@
 #endif
 #include <math.h>
 #define __PYX_HAVE_API__tseries
-#include "datetime.h"
 #include "string.h"
 #include "math.h"
 #include "stdlib.h"
 #include "stdio.h"
 #include "numpy/arrayobject.h"
 #include "numpy/ufuncobject.h"
+#include "cobject.h"
+#include "datetime.h"
 #include "wirth.h"
 
 #ifndef CYTHON_INLINE
@@ -462,6 +463,36 @@ struct __pyx_obj_7tseries_Node {
 
 static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb); /*proto*/
 
+/* Run-time type information about structs used with buffers */
+struct __Pyx_StructField_;
+
+typedef struct {
+  const char* name; /* for error messages only */
+  struct __Pyx_StructField_* fields;
+  size_t size;     /* sizeof(type) */
+  char typegroup; /* _R_eal, _C_omplex, Signed _I_nt, _U_nsigned int, _S_truct, _P_ointer, _O_bject */
+} __Pyx_TypeInfo;
+
+typedef struct __Pyx_StructField_ {
+  __Pyx_TypeInfo* type;
+  const char* name;
+  size_t offset;
+} __Pyx_StructField;
+
+typedef struct {
+  __Pyx_StructField* field;
+  size_t parent_offset;
+} __Pyx_BufFmt_StackElem;
+
+
+static CYTHON_INLINE void __Pyx_SafeReleaseBuffer(Py_buffer* info);
+static int __Pyx_GetBufferAndValidate(Py_buffer* buf, PyObject* obj, __Pyx_TypeInfo* dtype, int flags, int nd, int cast, __Pyx_BufFmt_StackElem* stack);
+static void __Pyx_RaiseBufferIndexError(int axis); /*proto*/
+#define __Pyx_BufPtrStrided1d(type, buf, i0, s0) (type)((char*)buf + i0 * s0)
+
+static CYTHON_INLINE void __Pyx_ErrRestore(PyObject *type, PyObject *value, PyObject *tb); /*proto*/
+static CYTHON_INLINE void __Pyx_ErrFetch(PyObject **type, PyObject **value, PyObject **tb); /*proto*/
+
 static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type); /*proto*/
 
 static void __Pyx_RaiseDoubleKeywordsError(
@@ -573,37 +604,7 @@ static CYTHON_INLINE int __Pyx_SetItemInt_Fast(PyObject *o, Py_ssize_t i, PyObje
     }
 }
 
-/* Run-time type information about structs used with buffers */
-struct __Pyx_StructField_;
-
-typedef struct {
-  const char* name; /* for error messages only */
-  struct __Pyx_StructField_* fields;
-  size_t size;     /* sizeof(type) */
-  char typegroup; /* _R_eal, _C_omplex, Signed _I_nt, _U_nsigned int, _S_truct, _P_ointer, _O_bject */
-} __Pyx_TypeInfo;
-
-typedef struct __Pyx_StructField_ {
-  __Pyx_TypeInfo* type;
-  const char* name;
-  size_t offset;
-} __Pyx_StructField;
-
-typedef struct {
-  __Pyx_StructField* field;
-  size_t parent_offset;
-} __Pyx_BufFmt_StackElem;
-
-
-static CYTHON_INLINE void __Pyx_SafeReleaseBuffer(Py_buffer* info);
-static int __Pyx_GetBufferAndValidate(Py_buffer* buf, PyObject* obj, __Pyx_TypeInfo* dtype, int flags, int nd, int cast, __Pyx_BufFmt_StackElem* stack);
-
 static void __Pyx_RaiseBufferFallbackError(void); /*proto*/
-static void __Pyx_RaiseBufferIndexError(int axis); /*proto*/
-#define __Pyx_BufPtrStrided1d(type, buf, i0, s0) (type)((char*)buf + i0 * s0)
-
-static CYTHON_INLINE void __Pyx_ErrRestore(PyObject *type, PyObject *value, PyObject *tb); /*proto*/
-static CYTHON_INLINE void __Pyx_ErrFetch(PyObject **type, PyObject **value, PyObject **tb); /*proto*/
 
 static CYTHON_INLINE long __Pyx_NegateNonNeg(long b) { return unlikely(b < 0) ? b : !b; }
 static CYTHON_INLINE PyObject* __Pyx_PyBoolOrNull_FromLong(long b) {
@@ -769,8 +770,6 @@ static PyObject *__Pyx_ImportModule(const char *name); /*proto*/
 static void __Pyx_AddTraceback(const char *funcname); /*proto*/
 
 static int __Pyx_InitStrings(__Pyx_StringTabEntry *t); /*proto*/
-/* Module declarations from datetime */
-
 /* Module declarations from python_buffer */
 
 /* Module declarations from python_ref */
@@ -802,6 +801,8 @@ static CYTHON_INLINE PyObject *__pyx_f_5numpy_get_array_base(PyArrayObject *); /
 
 /* Module declarations from python_float */
 
+/* Module declarations from datetime */
+
 /* Module declarations from tseries */
 
 static PyTypeObject *__pyx_ptype_7tseries_datetime = 0;
@@ -835,8 +836,8 @@ static double __pyx_f_7tseries___lt(double, double); /*proto*/
 static double __pyx_f_7tseries___gt(double, double); /*proto*/
 static double __pyx_f_7tseries___pow(double, double); /*proto*/
 static PyArrayObject *__pyx_f_7tseries__applyFunc(__pyx_t_7tseries_double_func, PyArrayObject *, PyObject *, PyObject *, PyObject *, PyObject *); /*proto*/
-static __Pyx_TypeInfo __Pyx_TypeInfo_nn_npy_int8 = { "numpy.npy_int8", NULL, sizeof(npy_int8), 'I' };
 static __Pyx_TypeInfo __Pyx_TypeInfo_object = { "Python object", NULL, sizeof(PyObject *), 'O' };
+static __Pyx_TypeInfo __Pyx_TypeInfo_nn_npy_int8 = { "numpy.npy_int8", NULL, sizeof(npy_int8), 'I' };
 static __Pyx_TypeInfo __Pyx_TypeInfo_nn_npy_float64 = { "numpy.npy_float64", NULL, sizeof(npy_float64), 'R' };
 static __Pyx_TypeInfo __Pyx_TypeInfo_nn___pyx_t_5numpy_double_t = { "numpy.double_t", NULL, sizeof(__pyx_t_5numpy_double_t), 'R' };
 #define __Pyx_MODULE_NAME "tseries"
@@ -1112,7 +1113,7 @@ static PyObject *__pyx_int_neg_1;
 static PyObject *__pyx_int_15;
 static PyObject *__pyx_int_100;
 
-/* "H:\workspace\pandas\pandas\lib\src\common.pyx":18
+/* "H:\workspace\pandas\pandas\lib\src\common.pyx":17
  * from datetime import datetime as pydatetime
  * 
  * cdef inline object trycall(object func, object arg):             # <<<<<<<<<<<<<<
@@ -1131,7 +1132,7 @@ static CYTHON_INLINE PyObject *__pyx_f_7tseries_trycall(PyObject *__pyx_v_func,
   __Pyx_INCREF(__pyx_v_func);
   __Pyx_INCREF(__pyx_v_arg);
 
-  /* "H:\workspace\pandas\pandas\lib\src\common.pyx":19
+  /* "H:\workspace\pandas\pandas\lib\src\common.pyx":18
  * 
  * cdef inline object trycall(object func, object arg):
  *     try:             # <<<<<<<<<<<<<<
@@ -1146,7 +1147,7 @@ static CYTHON_INLINE PyObject *__pyx_f_7tseries_trycall(PyObject *__pyx_v_func,
     __Pyx_XGOTREF(__pyx_save_exc_tb);
     /*try:*/ {
 
-      /* "H:\workspace\pandas\pandas\lib\src\common.pyx":20
+      /* "H:\workspace\pandas\pandas\lib\src\common.pyx":19
  * cdef inline object trycall(object func, object arg):
  *     try:
  *         return func(arg)             # <<<<<<<<<<<<<<
@@ -1154,12 +1155,12 @@ static CYTHON_INLINE PyObject *__pyx_f_7tseries_trycall(PyObject *__pyx_v_func,
  *         raise Exception('Error calling func on index %s' % arg)
  */
       __Pyx_XDECREF(__pyx_r);
-      __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 20; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
+      __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 19; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
       __Pyx_GOTREF(__pyx_t_1);
       __Pyx_INCREF(__pyx_v_arg);
       PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_arg);
       __Pyx_GIVEREF(__pyx_v_arg);
-      __pyx_t_2 = PyObject_Call(__pyx_v_func, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 20; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
+      __pyx_t_2 = PyObject_Call(__pyx_v_func, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 19; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
       __Pyx_GOTREF(__pyx_t_2);
       __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
       __pyx_r = __pyx_t_2;
@@ -1180,7 +1181,7 @@ static CYTHON_INLINE PyObject *__pyx_f_7tseries_trycall(PyObject *__pyx_v_func,
     __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
     __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
 
-    /* "H:\workspace\pandas\pandas\lib\src\common.pyx":21
+    /* "H:\workspace\pandas\pandas\lib\src\common.pyx":20
  *     try:
  *         return func(arg)
  *     except:             # <<<<<<<<<<<<<<
@@ -1189,31 +1190,31 @@ static CYTHON_INLINE PyObject *__pyx_f_7tseries_trycall(PyObject *__pyx_v_func,
  */
     /*except:*/ {
       __Pyx_AddTraceback("tseries.trycall");
-      if (__Pyx_GetException(&__pyx_t_2, &__pyx_t_1, &__pyx_t_3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 21; __pyx_clineno = __LINE__; goto __pyx_L5_except_error;}
+      if (__Pyx_GetException(&__pyx_t_2, &__pyx_t_1, &__pyx_t_3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 20; __pyx_clineno = __LINE__; goto __pyx_L5_except_error;}
       __Pyx_GOTREF(__pyx_t_2);
       __Pyx_GOTREF(__pyx_t_1);
       __Pyx_GOTREF(__pyx_t_3);
 
-      /* "H:\workspace\pandas\pandas\lib\src\common.pyx":22
+      /* "H:\workspace\pandas\pandas\lib\src\common.pyx":21
  *         return func(arg)
  *     except:
  *         raise Exception('Error calling func on index %s' % arg)             # <<<<<<<<<<<<<<
  * 
  * cdef inline int int_max(int a, int b): return a if a >= b else b
  */
-      __pyx_t_4 = PyNumber_Remainder(((PyObject *)__pyx_kp_s_1), __pyx_v_arg); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 22; __pyx_clineno = __LINE__; goto __pyx_L5_except_error;}
+      __pyx_t_4 = PyNumber_Remainder(((PyObject *)__pyx_kp_s_1), __pyx_v_arg); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 21; __pyx_clineno = __LINE__; goto __pyx_L5_except_error;}
       __Pyx_GOTREF(__pyx_t_4);
-      __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 22; __pyx_clineno = __LINE__; goto __pyx_L5_except_error;}
+      __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 21; __pyx_clineno = __LINE__; goto __pyx_L5_except_error;}
       __Pyx_GOTREF(__pyx_t_5);
       PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4);
       __Pyx_GIVEREF(__pyx_t_4);
       __pyx_t_4 = 0;
-      __pyx_t_4 = PyObject_Call(__pyx_builtin_Exception, __pyx_t_5, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 22; __pyx_clineno = __LINE__; goto __pyx_L5_except_error;}
+      __pyx_t_4 = PyObject_Call(__pyx_builtin_Exception, __pyx_t_5, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 21; __pyx_clineno = __LINE__; goto __pyx_L5_except_error;}
       __Pyx_GOTREF(__pyx_t_4);
       __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
       __Pyx_Raise(__pyx_t_4, 0, 0);
       __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
-      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 22; __pyx_clineno = __LINE__; goto __pyx_L5_except_error;}
+      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 21; __pyx_clineno = __LINE__; goto __pyx_L5_except_error;}
       __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
       __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
       __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
@@ -1251,7 +1252,7 @@ static CYTHON_INLINE PyObject *__pyx_f_7tseries_trycall(PyObject *__pyx_v_func,
   return __pyx_r;
 }
 
-/* "H:\workspace\pandas\pandas\lib\src\common.pyx":24
+/* "H:\workspace\pandas\pandas\lib\src\common.pyx":23
  *         raise Exception('Error calling func on index %s' % arg)
  * 
  * cdef inline int int_max(int a, int b): return a if a >= b else b             # <<<<<<<<<<<<<<
@@ -1277,7 +1278,7 @@ static CYTHON_INLINE int __pyx_f_7tseries_int_max(int __pyx_v_a, int __pyx_v_b)
   return __pyx_r;
 }
 
-/* "H:\workspace\pandas\pandas\lib\src\common.pyx":25
+/* "H:\workspace\pandas\pandas\lib\src\common.pyx":24
  * 
  * cdef inline int int_max(int a, int b): return a if a >= b else b
  * cdef inline int int_min(int a, int b): return a if a >= b else b             # <<<<<<<<<<<<<<
@@ -1303,7 +1304,7 @@ static CYTHON_INLINE int __pyx_f_7tseries_int_min(int __pyx_v_a, int __pyx_v_b)
   return __pyx_r;
 }
 
-/* "H:\workspace\pandas\pandas\lib\src\common.pyx":29
+/* "H:\workspace\pandas\pandas\lib\src\common.pyx":28
  * ctypedef unsigned char UChar
  * 
  * cdef int is_contiguous(ndarray arr):             # <<<<<<<<<<<<<<
@@ -1315,7 +1316,7 @@ static  int __pyx_f_7tseries_is_contiguous(PyArrayObject *__pyx_v_arr) {
   int __pyx_r;
   __Pyx_RefNannySetupContext("is_contiguous");
 
-  /* "H:\workspace\pandas\pandas\lib\src\common.pyx":30
+  /* "H:\workspace\pandas\pandas\lib\src\common.pyx":29
  * 
  * cdef int is_contiguous(ndarray arr):
  *     return np.PyArray_CHKFLAGS(arr, np.NPY_C_CONTIGUOUS)             # <<<<<<<<<<<<<<
@@ -1331,7 +1332,7 @@ static  int __pyx_f_7tseries_is_contiguous(PyArrayObject *__pyx_v_arr) {
   return __pyx_r;
 }
 
-/* "H:\workspace\pandas\pandas\lib\src\common.pyx":32
+/* "H:\workspace\pandas\pandas\lib\src\common.pyx":31
  *     return np.PyArray_CHKFLAGS(arr, np.NPY_C_CONTIGUOUS)
  * 
  * cdef int _contiguous_check(ndarray arr):             # <<<<<<<<<<<<<<
@@ -1347,7 +1348,7 @@ static  int __pyx_f_7tseries__contiguous_check(PyArrayObject *__pyx_v_arr) {
   __Pyx_RefNannySetupContext("_contiguous_check");
   __Pyx_INCREF((PyObject *)__pyx_v_arr);
 
-  /* "H:\workspace\pandas\pandas\lib\src\common.pyx":33
+  /* "H:\workspace\pandas\pandas\lib\src\common.pyx":32
  * 
  * cdef int _contiguous_check(ndarray arr):
  *     if not is_contiguous(arr):             # <<<<<<<<<<<<<<
@@ -1357,24 +1358,24 @@ static  int __pyx_f_7tseries__contiguous_check(PyArrayObject *__pyx_v_arr) {
   __pyx_t_1 = (!__pyx_f_7tseries_is_contiguous(__pyx_v_arr));
   if (__pyx_t_1) {
 
-    /* "H:\workspace\pandas\pandas\lib\src\common.pyx":34
+    /* "H:\workspace\pandas\pandas\lib\src\common.pyx":33
  * cdef int _contiguous_check(ndarray arr):
  *     if not is_contiguous(arr):
  *         raise ValueError('Tried to use data field on non-contiguous array!')             # <<<<<<<<<<<<<<
  * 
  * cdef int16_t *get_int16_ptr(ndarray arr):
  */
-    __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 34; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
+    __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 33; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
     __Pyx_GOTREF(__pyx_t_2);
     __Pyx_INCREF(((PyObject *)__pyx_kp_s_2));
     PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_kp_s_2));
     __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_2));
-    __pyx_t_3 = PyObject_Call(__pyx_builtin_ValueError, __pyx_t_2, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 34; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
+    __pyx_t_3 = PyObject_Call(__pyx_builtin_ValueError, __pyx_t_2, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 33; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
     __Pyx_GOTREF(__pyx_t_3);
     __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
     __Pyx_Raise(__pyx_t_3, 0, 0);
     __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
-    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 34; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
+    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 33; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
     goto __pyx_L3;
   }
   __pyx_L3:;
@@ -1392,7 +1393,7 @@ static  int __pyx_f_7tseries__contiguous_check(PyArrayObject *__pyx_v_arr) {
   return __pyx_r;
 }
 
-/* "H:\workspace\pandas\pandas\lib\src\common.pyx":36
+/* "H:\workspace\pandas\pandas\lib\src\common.pyx":35
  *         raise ValueError('Tried to use data field on non-contiguous array!')
  * 
  * cdef int16_t *get_int16_ptr(ndarray arr):             # <<<<<<<<<<<<<<
@@ -1404,7 +1405,7 @@ static  __pyx_t_5numpy_int16_t *__pyx_f_7tseries_get_int16_ptr(PyArrayObject *__
   __pyx_t_5numpy_int16_t *__pyx_r;
   __Pyx_RefNannySetupContext("get_int16_ptr");
 
-  /* "H:\workspace\pandas\pandas\lib\src\common.pyx":37
+  /* "H:\workspace\pandas\pandas\lib\src\common.pyx":36
  * 
  * cdef int16_t *get_int16_ptr(ndarray arr):
  *     _contiguous_check(arr)             # <<<<<<<<<<<<<<
@@ -1413,7 +1414,7 @@ static  __pyx_t_5numpy_int16_t *__pyx_f_7tseries_get_int16_ptr(PyArrayObject *__
  */
   __pyx_f_7tseries__contiguous_check(__pyx_v_arr);
 
-  /* "H:\workspace\pandas\pandas\lib\src\common.pyx":39
+  /* "H:\workspace\pandas\pandas\lib\src\common.pyx":38
  *     _contiguous_check(arr)
  * 
  *     return <int16_t *> arr.data             # <<<<<<<<<<<<<<
@@ -1429,7 +1430,7 @@ static  __pyx_t_5numpy_int16_t *__pyx_f_7tseries_get_int16_ptr(PyArrayObject *__
   return __pyx_r;
 }
 
-/* "H:\workspace\pandas\pandas\lib\src\common.pyx":41
+/* "H:\workspace\pandas\pandas\lib\src\common.pyx":40
  *     return <int16_t *> arr.data
  * 
  * cdef int32_t *get_int32_ptr(ndarray arr):             # <<<<<<<<<<<<<<
@@ -1441,7 +1442,7 @@ static  __pyx_t_5numpy_int32_t *__pyx_f_7tseries_get_int32_ptr(PyArrayObject *__
   __pyx_t_5numpy_int32_t *__pyx_r;
   __Pyx_RefNannySetupContext("get_int32_ptr");
 
-  /* "H:\workspace\pandas\pandas\lib\src\common.pyx":42
+  /* "H:\workspace\pandas\pandas\lib\src\common.pyx":41
  * 
  * cdef int32_t *get_int32_ptr(ndarray arr):
  *     _contiguous_check(arr)             # <<<<<<<<<<<<<<
@@ -1450,7 +1451,7 @@ static  __pyx_t_5numpy_int32_t *__pyx_f_7tseries_get_int32_ptr(PyArrayObject *__
  */
   __pyx_f_7tseries__contiguous_check(__pyx_v_arr);
 
-  /* "H:\workspace\pandas\pandas\lib\src\common.pyx":44
+  /* "H:\workspace\pandas\pandas\lib\src\common.pyx":43
  *     _contiguous_check(arr)
  * 
  *     return <int32_t *> arr.data             # <<<<<<<<<<<<<<
@@ -1466,7 +1467,7 @@ static  __pyx_t_5numpy_int32_t *__pyx_f_7tseries_get_int32_ptr(PyArrayObject *__
   return __pyx_r;
 }
 
-/* "H:\workspace\pandas\pandas\lib\src\common.pyx":46
+/* "H:\workspace\pandas\pandas\lib\src\common.pyx":45
  *     return <int32_t *> arr.data
  * 
  * cdef int64_t *get_int64_ptr(ndarray arr):             # <<<<<<<<<<<<<<
@@ -1478,7 +1479,7 @@ static  __pyx_t_5numpy_int64_t *__pyx_f_7tseries_get_int64_ptr(PyArrayObject *__
   __pyx_t_5numpy_int64_t *__pyx_r;
   __Pyx_RefNannySetupContext("get_int64_ptr");
 
-  /* "H:\workspace\pandas\pandas\lib\src\common.pyx":47
+  /* "H:\workspace\pandas\pandas\lib\src\common.pyx":46
  * 
  * cdef int64_t *get_int64_ptr(ndarray arr):
  *     _contiguous_check(arr)             # <<<<<<<<<<<<<<
@@ -1487,7 +1488,7 @@ static  __pyx_t_5numpy_int64_t *__pyx_f_7tseries_get_int64_ptr(PyArrayObject *__
  */
   __pyx_f_7tseries__contiguous_check(__pyx_v_arr);
 
-  /* "H:\workspace\pandas\pandas\lib\src\common.pyx":49
+  /* "H:\workspace\pandas\pandas\lib\src\common.pyx":48
  *     _contiguous_check(arr)
  * 
  *     return <int64_t *> arr.data             # <<<<<<<<<<<<<<
@@ -1503,7 +1504,7 @@ static  __pyx_t_5numpy_int64_t *__pyx_f_7tseries_get_int64_ptr(PyArrayObject *__
   return __pyx_r;
 }
 
-/* "H:\workspace\pandas\pandas\lib\src\common.pyx":51
+/* "H:\workspace\pandas\pandas\lib\src\common.pyx":50
  *     return <int64_t *> arr.data
  * 
  * cdef double_t *get_double_ptr(ndarray arr):             # <<<<<<<<<<<<<<
@@ -1515,7 +1516,7 @@ static  __pyx_t_5numpy_double_t *__pyx_f_7tseries_get_double_ptr(PyArrayObject *
   __pyx_t_5numpy_double_t *__pyx_r;
   __Pyx_RefNannySetupContext("get_double_ptr");
 
-  /* "H:\workspace\pandas\pandas\lib\src\common.pyx":52
+  /* "H:\workspace\pandas\pandas\lib\src\common.pyx":51
  * 
  * cdef double_t *get_double_ptr(ndarray arr):
  *     _contiguous_check(arr)             # <<<<<<<<<<<<<<
@@ -1524,12 +1525,12 @@ static  __pyx_t_5numpy_double_t *__pyx_f_7tseries_get_double_ptr(PyArrayObject *
  */
   __pyx_f_7tseries__contiguous_check(__pyx_v_arr);
 
-  /* "H:\workspace\pandas\pandas\lib\src\common.pyx":54
+  /* "H:\workspace\pandas\pandas\lib\src\common.pyx":53
  *     _contiguous_check(arr)
  * 
  *     return <double_t *> arr.data             # <<<<<<<<<<<<<<
  * 
- * cpdef map_indices(ndarray index):
+ * cdef extern from "math.h":
  */
   __pyx_r = ((__pyx_t_5numpy_double_t *)__pyx_v_arr->data);
   goto __pyx_L0;
@@ -1540,8 +1541,8 @@ static  __pyx_t_5numpy_double_t *__pyx_f_7tseries_get_double_ptr(PyArrayObject *
   return __pyx_r;
 }
 
-/* "H:\workspace\pandas\pandas\lib\src\common.pyx":56
- *     return <double_t *> arr.data
+/* "H:\workspace\pandas\pandas\lib\src\common.pyx":85
+ * import_array()
  * 
  * cpdef map_indices(ndarray index):             # <<<<<<<<<<<<<<
  *     '''
@@ -1564,34 +1565,34 @@ static  PyObject *__pyx_f_7tseries_map_indices(PyArrayObject *__pyx_v_index, int
   __pyx_v_result = ((PyObject *)Py_None); __Pyx_INCREF(Py_None);
   __pyx_v_idx = Py_None; __Pyx_INCREF(Py_None);
 
-  /* "H:\workspace\pandas\pandas\lib\src\common.pyx":71
+  /* "H:\workspace\pandas\pandas\lib\src\common.pyx":100
  *     cdef object idx
  * 
  *     result = {}             # <<<<<<<<<<<<<<
  * 
  *     iter = <flatiter> PyArray_IterNew(index)
  */
-  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 71; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
+  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 100; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
   __Pyx_GOTREF(((PyObject *)__pyx_t_1));
   __Pyx_DECREF(((PyObject *)__pyx_v_result));
   __pyx_v_result = __pyx_t_1;
   __pyx_t_1 = 0;
 
-  /* "H:\workspace\pandas\pandas\lib\src\common.pyx":73
+  /* "H:\workspace\pandas\pandas\lib\src\common.pyx":102
  *     result = {}
  * 
  *     iter = <flatiter> PyArray_IterNew(index)             # <<<<<<<<<<<<<<
  *     length = PyArray_SIZE(index)
  * 
  */
-  __pyx_t_1 = PyArray_IterNew(((PyObject *)__pyx_v_index)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 73; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
+  __pyx_t_1 = PyArray_IterNew(((PyObject *)__pyx_v_index)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 102; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
   __Pyx_GOTREF(__pyx_t_1);
   __Pyx_INCREF(((PyObject *)((PyArrayIterObject *)__pyx_t_1)));
   __Pyx_DECREF(((PyObject *)__pyx_v_iter));
   __pyx_v_iter = ((PyArrayIterObject *)__pyx_t_1);
   __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
 
-  /* "H:\workspace\pandas\pandas\lib\src\common.pyx":74
+  /* "H:\workspace\pandas\pandas\lib\src\common.pyx":103
  * 
  *     iter = <flatiter> PyArray_IterNew(index)
  *     length = PyArray_SIZE(index)             # <<<<<<<<<<<<<<
@@ -1600,7 +1601,7 @@ static  PyObject *__pyx_f_7tseries_map_indices(PyArrayObject *__pyx_v_index, int
  */
   __pyx_v_length = PyArray_SIZE(__pyx_v_index);
 
-  /* "H:\workspace\pandas\pandas\lib\src\common.pyx":76
+  /* "H:\workspace\pandas\pandas\lib\src\common.pyx":105
  *     length = PyArray_SIZE(index)
  * 
  *     for i from 0 <= i < length:             # <<<<<<<<<<<<<<
@@ -1610,32 +1611,32 @@ static  PyObject *__pyx_f_7tseries_map_indices(PyArrayObject *__pyx_v_index, int
   __pyx_t_2 = __pyx_v_length;
   for (__pyx_v_i = 0; __pyx_v_i < __pyx_t_2; __pyx_v_i++) {
 
-    /* "H:\workspace\pandas\pandas\lib\src\common.pyx":77
+    /* "H:\workspace\pandas\pandas\lib\src\common.pyx":106
  * 
  *     for i from 0 <= i < length:
  *         idx = PyArray_GETITEM(index, PyArray_ITER_DATA(iter))             # <<<<<<<<<<<<<<
  *         result[idx] = i
  *         PyArray_ITER_NEXT(iter)
  */
-    __pyx_t_1 = PyArray_GETITEM(__pyx_v_index, PyArray_ITER_DATA(__pyx_v_iter)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 77; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
+    __pyx_t_1 = PyArray_GETITEM(__pyx_v_index, PyArray_ITER_DATA(__pyx_v_iter)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 106; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
     __Pyx_GOTREF(__pyx_t_1);
     __Pyx_DECREF(__pyx_v_idx);
     __pyx_v_idx = __pyx_t_1;
     __pyx_t_1 = 0;
 
-    /* "H:\workspace\pandas\pandas\lib\src\common.pyx":78
+    /* "H:\workspace\pandas\pandas\lib\src\common.pyx":107
  *     for i from 0 <= i < length:
  *         idx = PyArray_GETITEM(index, PyArray_ITER_DATA(iter))
  *         result[idx] = i             # <<<<<<<<<<<<<<
  *         PyArray_ITER_NEXT(iter)
  * 
  */
-    __pyx_t_1 = PyInt_FromLong(__pyx_v_i); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 78; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
+    __pyx_t_1 = PyInt_FromLong(__pyx_v_i); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 107; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
     __Pyx_GOTREF(__pyx_t_1);
-    if (PyDict_SetItem(((PyObject *)__pyx_v_result), __pyx_v_idx, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 78; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
+    if (PyDict_SetItem(((PyObject *)__pyx_v_result), __pyx_v_idx, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 107; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
     __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
 
-    /* "H:\workspace\pandas\pandas\lib\src\common.pyx":79
+    /* "H:\workspace\pandas\pandas\lib\src\common.pyx":108
  *         idx = PyArray_GETITEM(index, PyArray_ITER_DATA(iter))
  *         result[idx] = i
  *         PyArray_ITER_NEXT(iter)             # <<<<<<<<<<<<<<
@@ -1645,12 +1646,12 @@ static  PyObject *__pyx_f_7tseries_map_indices(PyArrayObject *__pyx_v_index, int
     PyArray_ITER_NEXT(__pyx_v_iter);
   }
 
-  /* "H:\workspace\pandas\pandas\lib\src\common.pyx":81
+  /* "H:\workspace\pandas\pandas\lib\src\common.pyx":110
  *         PyArray_ITER_NEXT(iter)
  * 
  *     return result             # <<<<<<<<<<<<<<
  * 
- * cdef extern from "math.h":
+ * def isAllDates(ndarray index):
  */
   __Pyx_XDECREF(__pyx_r);
   __Pyx_INCREF(((PyObject *)__pyx_v_result));
@@ -1673,8 +1674,8 @@ static  PyObject *__pyx_f_7tseries_map_indices(PyArrayObject *__pyx_v_index, int
   return __pyx_r;
 }
 
-/* "H:\workspace\pandas\pandas\lib\src\common.pyx":56
- *     return <double_t *> arr.data
+/* "H:\workspace\pandas\pandas\lib\src\common.pyx":85
+ * import_array()
  * 
  * cpdef map_indices(ndarray index):             # <<<<<<<<<<<<<<
  *     '''
@@ -1688,9 +1689,9 @@ static PyObject *__pyx_pf_7tseries_map_indices(PyObject *__pyx_self, PyObject *_
   PyObject *__pyx_t_1 = NULL;
   __Pyx_RefNannySetupContext("map_indices");
   __pyx_self = __pyx_self;
-  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_index), __pyx_ptype_5numpy_ndarray, 1, "index", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 56; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
+  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_index), __pyx_ptype_5numpy_ndarray, 1, "index", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 85; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
   __Pyx_XDECREF(__pyx_r);
-  __pyx_t_1 = __pyx_f_7tseries_map_indices(((PyArrayObject *)__pyx_v_index), 0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 56; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
+  __pyx_t_1 = __pyx_f_7tseries_map_indices(((PyArrayObject *)__pyx_v_index), 0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 85; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
   __Pyx_GOTREF(__pyx_t_1);
   __pyx_r = __pyx_t_1;
   __pyx_t_1 = 0;
@@ -1708,115 +1709,420 @@ static PyObject *__pyx_pf_7tseries_map_indices(PyObject *__pyx_self, PyObject *_
   return __pyx_r;
 }
 
-/* "H:\workspace\pandas\pandas\lib\src\skiplist.pyx":29
- *     cdef public:
- *         double value
- *         list next             # <<<<<<<<<<<<<<
- *         ndarray width_arr
+/* "H:\workspace\pandas\pandas\lib\src\common.pyx":112
+ *     return result
  * 
+ * def isAllDates(ndarray index):             # <<<<<<<<<<<<<<
+ *     cdef int i, length
+ *     cdef flatiter iter
  */
 
-static PyObject *__pyx_pf_7tseries_4Node_4next___get__(PyObject *__pyx_v_self); /*proto*/
-static PyObject *__pyx_pf_7tseries_4Node_4next___get__(PyObject *__pyx_v_self) {
+static PyObject *__pyx_pf_7tseries_isAllDates(PyObject *__pyx_self, PyObject *__pyx_v_index); /*proto*/
+static PyObject *__pyx_pf_7tseries_isAllDates(PyObject *__pyx_self, PyObject *__pyx_v_index) {
+  int __pyx_v_i;
+  int __pyx_v_length;
+  PyArrayIterObject *__pyx_v_iter;
+  PyObject *__pyx_v_date;
   PyObject *__pyx_r = NULL;
-  __Pyx_RefNannySetupContext("__get__");
-  __Pyx_XDECREF(__pyx_r);
-  __Pyx_INCREF(((PyObject *)((struct __pyx_obj_7tseries_Node *)__pyx_v_self)->next));
-  __pyx_r = ((PyObject *)((struct __pyx_obj_7tseries_Node *)__pyx_v_self)->next);
-  goto __pyx_L0;
+  PyObject *__pyx_t_1 = NULL;
+  int __pyx_t_2;
+  int __pyx_t_3;
+  __Pyx_RefNannySetupContext("isAllDates");
+  __pyx_self = __pyx_self;
+  __Pyx_INCREF((PyObject *)__pyx_v_index);
+  __pyx_v_iter = ((PyArrayIterObject *)Py_None); __Pyx_INCREF(Py_None);
+  __pyx_v_date = Py_None; __Pyx_INCREF(Py_None);
+  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_index), __pyx_ptype_5numpy_ndarray, 1, "index", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 112; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
 
-  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
-  __pyx_L0:;
-  __Pyx_XGIVEREF(__pyx_r);
-  __Pyx_RefNannyFinishContext();
-  return __pyx_r;
-}
+  /* "H:\workspace\pandas\pandas\lib\src\common.pyx":117
+ *     cdef object date
+ * 
+ *     iter = <flatiter> PyArray_IterNew(index)             # <<<<<<<<<<<<<<
+ *     length = PyArray_SIZE(index)
+ * 
+ */
+  __pyx_t_1 = PyArray_IterNew(__pyx_v_index); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 117; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
+  __Pyx_GOTREF(__pyx_t_1);
+  __Pyx_INCREF(((PyObject *)((PyArrayIterObject *)__pyx_t_1)));
+  __Pyx_DECREF(((PyObject *)__pyx_v_iter));
+  __pyx_v_iter = ((PyArrayIterObject *)__pyx_t_1);
+  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
 
-static int __pyx_pf_7tseries_4Node_4next___set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
-static int __pyx_pf_7tseries_4Node_4next___set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
-  int __pyx_r;
-  __Pyx_RefNannySetupContext("__set__");
-  if (!(likely(PyList_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected list, got %.200s", Py_TYPE(__pyx_v_value)->tp_name), 0))) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 29; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
-  __Pyx_INCREF(__pyx_v_value);
-  __Pyx_GIVEREF(__pyx_v_value);
-  __Pyx_GOTREF(((struct __pyx_obj_7tseries_Node *)__pyx_v_self)->next);
-  __Pyx_DECREF(((PyObject *)((struct __pyx_obj_7tseries_Node *)__pyx_v_self)->next));
-  ((struct __pyx_obj_7tseries_Node *)__pyx_v_self)->next = ((PyObject *)__pyx_v_value);
+  /* "H:\workspace\pandas\pandas\lib\src\common.pyx":118
+ * 
+ *     iter = <flatiter> PyArray_IterNew(index)
+ *     length = PyArray_SIZE(index)             # <<<<<<<<<<<<<<
+ * 
+ *     for i from 0 <= i < length:
+ */
+  __pyx_v_length = PyArray_SIZE(((PyArrayObject *)__pyx_v_index));
 
-  __pyx_r = 0;
-  goto __pyx_L0;
-  __pyx_L1_error:;
-  __Pyx_AddTraceback("tseries.Node.next.__set__");
-  __pyx_r = -1;
-  __pyx_L0:;
-  __Pyx_RefNannyFinishContext();
-  return __pyx_r;
-}
+  /* "H:\workspace\pandas\pandas\lib\src\common.pyx":120
+ *     length = PyArray_SIZE(index)
+ * 
+ *     for i from 0 <= i < length:             # <<<<<<<<<<<<<<
+ *         date = PyArray_GETITEM(index, PyArray_ITER_DATA(iter))
+ * 
+ */
+  __pyx_t_2 = __pyx_v_length;
+  for (__pyx_v_i = 0; __pyx_v_i < __pyx_t_2; __pyx_v_i++) {
 
-/* "H:\workspace\pandas\pandas\lib\src\skiplist.pyx":30
- *         double value
- *         list next
- *         ndarray width_arr             # <<<<<<<<<<<<<<
+    /* "H:\workspace\pandas\pandas\lib\src\common.pyx":121
  * 
- *     cdef:
+ *     for i from 0 <= i < length:
+ *         date = PyArray_GETITEM(index, PyArray_ITER_DATA(iter))             # <<<<<<<<<<<<<<
+ * 
+ *         if not PyDateTime_Check(date):
  */
+    __pyx_t_1 = PyArray_GETITEM(((PyArrayObject *)__pyx_v_index), PyArray_ITER_DATA(__pyx_v_iter)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 121; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
+    __Pyx_GOTREF(__pyx_t_1);
+    __Pyx_DECREF(__pyx_v_date);
+    __pyx_v_date = __pyx_t_1;
+    __pyx_t_1 = 0;
 
-static PyObject *__pyx_pf_7tseries_4Node_9width_arr___get__(PyObject *__pyx_v_self); /*proto*/
-static PyObject *__pyx_pf_7tseries_4Node_9width_arr___get__(PyObject *__pyx_v_self) {
-  PyObject *__pyx_r = NULL;
-  __Pyx_RefNannySetupContext("__get__");
+    /* "H:\workspace\pandas\pandas\lib\src\common.pyx":123
+ *         date = PyArray_GETITEM(index, PyArray_ITER_DATA(iter))
+ * 
+ *         if not PyDateTime_Check(date):             # <<<<<<<<<<<<<<
+ *             return False
+ *         PyArray_ITER_NEXT(iter)
+ */
+    __pyx_t_3 = (!PyDateTime_Check(__pyx_v_date));
+    if (__pyx_t_3) {
+
+      /* "H:\workspace\pandas\pandas\lib\src\common.pyx":124
+ * 
+ *         if not PyDateTime_Check(date):
+ *             return False             # <<<<<<<<<<<<<<
+ *         PyArray_ITER_NEXT(iter)
+ * 
+ */
+      __Pyx_XDECREF(__pyx_r);
+      __pyx_t_1 = __Pyx_PyBool_FromLong(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 124; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
+      __Pyx_GOTREF(__pyx_t_1);
+      __pyx_r = __pyx_t_1;
+      __pyx_t_1 = 0;
+      goto __pyx_L0;
+      goto __pyx_L7;
+    }
+    __pyx_L7:;
+
+    /* "H:\workspace\pandas\pandas\lib\src\common.pyx":125
+ *         if not PyDateTime_Check(date):
+ *             return False
+ *         PyArray_ITER_NEXT(iter)             # <<<<<<<<<<<<<<
+ * 
+ *     return True
+ */
+    PyArray_ITER_NEXT(__pyx_v_iter);
+  }
+
+  /* "H:\workspace\pandas\pandas\lib\src\common.pyx":127
+ *         PyArray_ITER_NEXT(iter)
+ * 
+ *     return True             # <<<<<<<<<<<<<<
+ * 
+ * def isAllDates2(ndarray[object, ndim=1] arr):
+ */
   __Pyx_XDECREF(__pyx_r);
-  __Pyx_INCREF(((PyObject *)((struct __pyx_obj_7tseries_Node *)__pyx_v_self)->width_arr));
-  __pyx_r = ((PyObject *)((struct __pyx_obj_7tseries_Node *)__pyx_v_self)->width_arr);
+  __pyx_t_1 = __Pyx_PyBool_FromLong(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 127; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
+  __Pyx_GOTREF(__pyx_t_1);
+  __pyx_r = __pyx_t_1;
+  __pyx_t_1 = 0;
   goto __pyx_L0;
 
   __pyx_r = Py_None; __Pyx_INCREF(Py_None);
+  goto __pyx_L0;
+  __pyx_L1_error:;
+  __Pyx_XDECREF(__pyx_t_1);
+  __Pyx_AddTraceback("tseries.isAllDates");
+  __pyx_r = NULL;
   __pyx_L0:;
+  __Pyx_DECREF((PyObject *)__pyx_v_iter);
+  __Pyx_DECREF(__pyx_v_date);
+  __Pyx_DECREF((PyObject *)__pyx_v_index);
   __Pyx_XGIVEREF(__pyx_r);
   __Pyx_RefNannyFinishContext();
   return __pyx_r;
 }
 
-static int __pyx_pf_7tseries_4Node_9width_arr___set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
-static int __pyx_pf_7tseries_4Node_9width_arr___set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
-  int __pyx_r;
-  __Pyx_RefNannySetupContext("__set__");
-  if (!(likely(((__pyx_v_value) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_value, __pyx_ptype_5numpy_ndarray))))) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 30; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
-  __Pyx_INCREF(__pyx_v_value);
-  __Pyx_GIVEREF(__pyx_v_value);
-  __Pyx_GOTREF(((struct __pyx_obj_7tseries_Node *)__pyx_v_self)->width_arr);
-  __Pyx_DECREF(((PyObject *)((struct __pyx_obj_7tseries_Node *)__pyx_v_self)->width_arr));
-  ((struct __pyx_obj_7tseries_Node *)__pyx_v_self)->width_arr = ((PyArrayObject *)__pyx_v_value);
+/* "H:\workspace\pandas\pandas\lib\src\common.pyx":129
+ *     return True
+ * 
+ * def isAllDates2(ndarray[object, ndim=1] arr):             # <<<<<<<<<<<<<<
+ *     '''
+ *     cannot use
+ */
 
-  __pyx_r = 0;
-  goto __pyx_L0;
-  __pyx_L1_error:;
-  __Pyx_AddTraceback("tseries.Node.width_arr.__set__");
-  __pyx_r = -1;
-  __pyx_L0:;
-  __Pyx_RefNannyFinishContext();
-  return __pyx_r;
-}
+static PyObject *__pyx_pf_7tseries_isAllDates2(PyObject *__pyx_self, PyObject *__pyx_v_arr); /*proto*/
+static char __pyx_doc_7tseries_isAllDates2[] = "\n    cannot use\n    ";
+static PyObject *__pyx_pf_7tseries_isAllDates2(PyObject *__pyx_self, PyObject *__pyx_v_arr) {
+  int __pyx_v_i;
+  int __pyx_v_size;
+  PyObject *__pyx_v_date;
+  Py_buffer __pyx_bstruct_arr;
+  Py_ssize_t __pyx_bstride_0_arr = 0;
+  Py_ssize_t __pyx_bshape_0_arr = 0;
+  PyObject *__pyx_r = NULL;
+  Py_ssize_t __pyx_t_1;
+  int __pyx_t_2;
+  PyObject *__pyx_t_3 = NULL;
+  int __pyx_t_4;
+  int __pyx_t_5;
+  int __pyx_t_6;
+  __Pyx_RefNannySetupContext("isAllDates2");
+  __pyx_self = __pyx_self;
+  __Pyx_INCREF((PyObject *)__pyx_v_arr);
+  __pyx_v_date = Py_None; __Pyx_INCREF(Py_None);
+  __pyx_bstruct_arr.buf = NULL;
+  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_arr), __pyx_ptype_5numpy_ndarray, 1, "arr", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 129; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
+  {
+    __Pyx_BufFmt_StackElem __pyx_stack[1];
+    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_bstruct_arr, (PyObject*)__pyx_v_arr, &__Pyx_TypeInfo_object, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 129; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
+  }
+  __pyx_bstride_0_arr = __pyx_bstruct_arr.strides[0];
+  __pyx_bshape_0_arr = __pyx_bstruct_arr.shape[0];
 
-/* "H:\workspace\pandas\pandas\lib\src\skiplist.pyx":35
- *         int *width
+  /* "H:\workspace\pandas\pandas\lib\src\common.pyx":134
+ *     '''
+ * 
+ *     cdef int i, size = len(arr)             # <<<<<<<<<<<<<<
+ *     cdef object date
  * 
- *     def __init__(self, double value, list next, ndarray width):             # <<<<<<<<<<<<<<
- *         self.value = value
- *         self.next = next
  */
+  __pyx_t_1 = PyObject_Length(__pyx_v_arr); if (unlikely(__pyx_t_1 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 134; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
+  __pyx_v_size = __pyx_t_1;
 
-static int __pyx_pf_7tseries_4Node___init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
-static int __pyx_pf_7tseries_4Node___init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
-  double __pyx_v_value;
-  PyObject *__pyx_v_next = 0;
-  PyArrayObject *__pyx_v_width = 0;
-  int __pyx_r;
-  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__value,&__pyx_n_s__next,&__pyx_n_s__width,0};
-  __Pyx_RefNannySetupContext("__init__");
-  if (unlikely(__pyx_kwds)) {
-    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
-    PyObject* values[3] = {0,0,0};
+  /* "H:\workspace\pandas\pandas\lib\src\common.pyx":137
+ *     cdef object date
+ * 
+ *     if size == 0:             # <<<<<<<<<<<<<<
+ *         return False
+ * 
+ */
+  __pyx_t_2 = (__pyx_v_size == 0);
+  if (__pyx_t_2) {
+
+    /* "H:\workspace\pandas\pandas\lib\src\common.pyx":138
+ * 
+ *     if size == 0:
+ *         return False             # <<<<<<<<<<<<<<
+ * 
+ *     for i from 0 <= i < size:
+ */
+    __Pyx_XDECREF(__pyx_r);
+    __pyx_t_3 = __Pyx_PyBool_FromLong(0); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 138; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
+    __Pyx_GOTREF(__pyx_t_3);
+    __pyx_r = __pyx_t_3;
+    __pyx_t_3 = 0;
+    goto __pyx_L0;
+    goto __pyx_L5;
+  }
+  __pyx_L5:;
+
+  /* "H:\workspace\pandas\pandas\lib\src\common.pyx":140
+ *         return False
+ * 
+ *     for i from 0 <= i < size:             # <<<<<<<<<<<<<<
+ *         date = arr[i]
+ * 
+ */
+  __pyx_t_4 = __pyx_v_size;
+  for (__pyx_v_i = 0; __pyx_v_i < __pyx_t_4; __pyx_v_i++) {
+
+    /* "H:\workspace\pandas\pandas\lib\src\common.pyx":141
+ * 
+ *     for i from 0 <= i < size:
+ *         date = arr[i]             # <<<<<<<<<<<<<<
+ * 
+ *         if not PyDateTime_Check(date):
+ */
+    __pyx_t_5 = __pyx_v_i;
+    __pyx_t_6 = -1;
+    if (__pyx_t_5 < 0) {
+      __pyx_t_5 += __pyx_bshape_0_arr;
+      if (unlikely(__pyx_t_5 < 0)) __pyx_t_6 = 0;
+    } else if (unlikely(__pyx_t_5 >= __pyx_bshape_0_arr)) __pyx_t_6 = 0;
+    if (unlikely(__pyx_t_6 != -1)) {
+      __Pyx_RaiseBufferIndexError(__pyx_t_6);
+      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 141; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
+    }
+    __pyx_t_3 = *__Pyx_BufPtrStrided1d(PyObject **, __pyx_bstruct_arr.buf, __pyx_t_5, __pyx_bstride_0_arr);
+    __Pyx_INCREF((PyObject*)__pyx_t_3);
+    __Pyx_DECREF(__pyx_v_date);
+    __pyx_v_date = __pyx_t_3;
+    __pyx_t_3 = 0;
+
+    /* "H:\workspace\pandas\pandas\lib\src\common.pyx":143
+ *         date = arr[i]
+ * 
+ *         if not PyDateTime_Check(date):             # <<<<<<<<<<<<<<
+ *             return False
+ * 
+ */
+    __pyx_t_2 = (!PyDateTime_Check(__pyx_v_date));
+    if (__pyx_t_2) {
+
+      /* "H:\workspace\pandas\pandas\lib\src\common.pyx":144
+ * 
+ *         if not PyDateTime_Check(date):
+ *             return False             # <<<<<<<<<<<<<<
+ * 
+ *     return True
+ */
+      __Pyx_XDECREF(__pyx_r);
+      __pyx_t_3 = __Pyx_PyBool_FromLong(0); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 144; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
+      __Pyx_GOTREF(__pyx_t_3);
+      __pyx_r = __pyx_t_3;
+      __pyx_t_3 = 0;
+      goto __pyx_L0;
+      goto __pyx_L8;
+    }
+    __pyx_L8:;
+  }
+
+  /* "H:\workspace\pandas\pandas\lib\src\common.pyx":146
+ *             return False
+ * 
+ *     return True             # <<<<<<<<<<<<<<
+ */
+  __Pyx_XDECREF(__pyx_r);
+  __pyx_t_3 = __Pyx_PyBool_FromLong(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 146; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
+  __Pyx_GOTREF(__pyx_t_3);
+  __pyx_r = __pyx_t_3;
+  __pyx_t_3 = 0;
+  goto __pyx_L0;
+
+  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
+  goto __pyx_L0;
+  __pyx_L1_error:;
+  __Pyx_XDECREF(__pyx_t_3);
+  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
+    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
+    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_arr);
+  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
+  __Pyx_AddTraceback("tseries.isAllDates2");
+  __pyx_r = NULL;
+  goto __pyx_L2;
+  __pyx_L0:;
+  __Pyx_SafeReleaseBuffer(&__pyx_bstruct_arr);
+  __pyx_L2:;
+  __Pyx_DECREF(__pyx_v_date);
+  __Pyx_DECREF((PyObject *)__pyx_v_arr);
+  __Pyx_XGIVEREF(__pyx_r);
+  __Pyx_RefNannyFinishContext();
+  return __pyx_r;
+}
+
+/* "H:\workspace\pandas\pandas\lib\src\skiplist.pyx":29
+ *     cdef public:
+ *         double value
+ *         list next             # <<<<<<<<<<<<<<
+ *         ndarray width_arr
+ * 
+ */
+
+static PyObject *__pyx_pf_7tseries_4Node_4next___get__(PyObject *__pyx_v_self); /*proto*/
+static PyObject *__pyx_pf_7tseries_4Node_4next___get__(PyObject *__pyx_v_self) {
+  PyObject *__pyx_r = NULL;
+  __Pyx_RefNannySetupContext("__get__");
+  __Pyx_XDECREF(__pyx_r);
+  __Pyx_INCREF(((PyObject *)((struct __pyx_obj_7tseries_Node *)__pyx_v_self)->next));
+  __pyx_r = ((PyObject *)((struct __pyx_obj_7tseries_Node *)__pyx_v_self)->next);
+  goto __pyx_L0;
+
+  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
+  __pyx_L0:;
+  __Pyx_XGIVEREF(__pyx_r);
+  __Pyx_RefNannyFinishContext();
+  return __pyx_r;
+}
+
+static int __pyx_pf_7tseries_4Node_4next___set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
+static int __pyx_pf_7tseries_4Node_4next___set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
+  int __pyx_r;
+  __Pyx_RefNannySetupContext("__set__");
+  if (!(likely(PyList_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected list, got %.200s", Py_TYPE(__pyx_v_value)->tp_name), 0))) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 29; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
+  __Pyx_INCREF(__pyx_v_value);
+  __Pyx_GIVEREF(__pyx_v_value);
+  __Pyx_GOTREF(((struct __pyx_obj_7tseries_Node *)__pyx_v_self)->next);
+  __Pyx_DECREF(((PyObject *)((struct __pyx_obj_7tseries_Node *)__pyx_v_self)->next));
+  ((struct __pyx_obj_7tseries_Node *)__pyx_v_self)->next = ((PyObject *)__pyx_v_value);
+
+  __pyx_r = 0;
+  goto __pyx_L0;
+  __pyx_L1_error:;
+  __Pyx_AddTraceback("tseries.Node.next.__set__");
+  __pyx_r = -1;
+  __pyx_L0:;
+  __Pyx_RefNannyFinishContext();
+  return __pyx_r;
+}
+
+/* "H:\workspace\pandas\pandas\lib\src\skiplist.pyx":30
+ *         double value
+ *         list next
+ *         ndarray width_arr             # <<<<<<<<<<<<<<
+ * 
+ *     cdef:
+ */
+
+static PyObject *__pyx_pf_7tseries_4Node_9width_arr___get__(PyObject *__pyx_v_self); /*proto*/
+static PyObject *__pyx_pf_7tseries_4Node_9width_arr___get__(PyObject *__pyx_v_self) {
+  PyObject *__pyx_r = NULL;
+  __Pyx_RefNannySetupContext("__get__");
+  __Pyx_XDECREF(__pyx_r);
+  __Pyx_INCREF(((PyObject *)((struct __pyx_obj_7tseries_Node *)__pyx_v_self)->width_arr));
+  __pyx_r = ((PyObject *)((struct __pyx_obj_7tseries_Node *)__pyx_v_self)->width_arr);
+  goto __pyx_L0;
+
+  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
+  __pyx_L0:;
+  __Pyx_XGIVEREF(__pyx_r);
+  __Pyx_RefNannyFinishContext();
+  return __pyx_r;
+}
+
+static int __pyx_pf_7tseries_4Node_9width_arr___set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
+static int __pyx_pf_7tseries_4Node_9width_arr___set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
+  int __pyx_r;
+  __Pyx_RefNannySetupContext("__set__");
+  if (!(likely(((__pyx_v_value) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_value, __pyx_ptype_5numpy_ndarray))))) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 30; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
+  __Pyx_INCREF(__pyx_v_value);
+  __Pyx_GIVEREF(__pyx_v_value);
+  __Pyx_GOTREF(((struct __pyx_obj_7tseries_Node *)__pyx_v_self)->width_arr);
+  __Pyx_DECREF(((PyObject *)((struct __pyx_obj_7tseries_Node *)__pyx_v_self)->width_arr));
+  ((struct __pyx_obj_7tseries_Node *)__pyx_v_self)->width_arr = ((PyArrayObject *)__pyx_v_value);
+
+  __pyx_r = 0;
+  goto __pyx_L0;
+  __pyx_L1_error:;
+  __Pyx_AddTraceback("tseries.Node.width_arr.__set__");
+  __pyx_r = -1;
+  __pyx_L0:;
+  __Pyx_RefNannyFinishContext();
+  return __pyx_r;
+}
+
+/* "H:\workspace\pandas\pandas\lib\src\skiplist.pyx":35
+ *         int *width
+ * 
+ *     def __init__(self, double value, list next, ndarray width):             # <<<<<<<<<<<<<<
+ *         self.value = value
+ *         self.next = next
+ */
+
+static int __pyx_pf_7tseries_4Node___init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
+static int __pyx_pf_7tseries_4Node___init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
+  double __pyx_v_value;
+  PyObject *__pyx_v_next = 0;
+  PyArrayObject *__pyx_v_width = 0;
+  int __pyx_r;
+  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__value,&__pyx_n_s__next,&__pyx_n_s__width,0};
+  __Pyx_RefNannySetupContext("__init__");
+  if (unlikely(__pyx_kwds)) {
+    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
+    PyObject* values[3] = {0,0,0};
     switch (PyTuple_GET_SIZE(__pyx_args)) {
       case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
       case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
@@ -8536,7 +8842,7 @@ static PyObject *__pyx_pf_7tseries__ewma(PyObject *__pyx_self, PyObject *__pyx_a
  * 
  * def _roll_var(ndarray[double_t, ndim=1] input,             # <<<<<<<<<<<<<<
  *               int win, int minp):
- *     cdef double val, prev, sum_x = 0, sum_xx = 0
+ *     cdef double val, prev, sum_x = 0, sum_xx = 0, nobs = 0
  */
 
 static PyObject *__pyx_pf_7tseries__roll_var(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
@@ -8548,7 +8854,7 @@ static PyObject *__pyx_pf_7tseries__roll_var(PyObject *__pyx_self, PyObject *__p
   double __pyx_v_prev;
   double __pyx_v_sum_x;
   double __pyx_v_sum_xx;
-  int __pyx_v_nobs;
+  double __pyx_v_nobs;
   int __pyx_v_i;
   int __pyx_v_N;
   PyArrayObject *__pyx_v_output = 0;
@@ -8574,8 +8880,9 @@ static PyObject *__pyx_pf_7tseries__roll_var(PyObject *__pyx_self, PyObject *__p
   int __pyx_t_13;
   int __pyx_t_14;
   double __pyx_t_15;
-  int __pyx_t_16;
+  double __pyx_t_16;
   int __pyx_t_17;
+  int __pyx_t_18;
   static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__input,&__pyx_n_s__win,&__pyx_n_s__minp,0};
   __Pyx_RefNannySetupContext("_roll_var");
   __pyx_self = __pyx_self;
@@ -8641,25 +8948,17 @@ static PyObject *__pyx_pf_7tseries__roll_var(PyObject *__pyx_self, PyObject *__p
   /* "H:\workspace\pandas\pandas\lib\src\moments.pyx":160
  * def _roll_var(ndarray[double_t, ndim=1] input,
  *               int win, int minp):
- *     cdef double val, prev, sum_x = 0, sum_xx = 0             # <<<<<<<<<<<<<<
- *     cdef int nobs = 0, i
+ *     cdef double val, prev, sum_x = 0, sum_xx = 0, nobs = 0             # <<<<<<<<<<<<<<
+ *     cdef int i
  *     cdef int N = len(input)
  */
   __pyx_v_sum_x = 0;
   __pyx_v_sum_xx = 0;
-
-  /* "H:\workspace\pandas\pandas\lib\src\moments.pyx":161
- *               int win, int minp):
- *     cdef double val, prev, sum_x = 0, sum_xx = 0
- *     cdef int nobs = 0, i             # <<<<<<<<<<<<<<
- *     cdef int N = len(input)
- * 
- */
   __pyx_v_nobs = 0;
 
   /* "H:\workspace\pandas\pandas\lib\src\moments.pyx":162
- *     cdef double val, prev, sum_x = 0, sum_xx = 0
- *     cdef int nobs = 0, i
+ *     cdef double val, prev, sum_x = 0, sum_xx = 0, nobs = 0
+ *     cdef int i
  *     cdef int N = len(input)             # <<<<<<<<<<<<<<
  * 
  *     cdef ndarray[double_t, ndim=1] output = np.empty(N, dtype=float)
@@ -8979,22 +9278,22 @@ static PyObject *__pyx_pf_7tseries__roll_var(PyObject *__pyx_self, PyObject *__p
  *             output[i] = NaN
  */
       __pyx_t_15 = ((__pyx_v_nobs * __pyx_v_sum_xx) - (__pyx_v_sum_x * __pyx_v_sum_x));
-      __pyx_t_14 = ((__pyx_v_nobs * __pyx_v_nobs) - __pyx_v_nobs);
-      if (unlikely(__pyx_t_14 == 0)) {
+      __pyx_t_16 = ((__pyx_v_nobs * __pyx_v_nobs) - __pyx_v_nobs);
+      if (unlikely(__pyx_t_16 == 0)) {
         PyErr_Format(PyExc_ZeroDivisionError, "float division");
         {__pyx_filename = __pyx_f[2]; __pyx_lineno = 196; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
       }
-      __pyx_t_16 = __pyx_v_i;
+      __pyx_t_14 = __pyx_v_i;
       __pyx_t_17 = -1;
-      if (__pyx_t_16 < 0) {
-        __pyx_t_16 += __pyx_bshape_0_output;
-        if (unlikely(__pyx_t_16 < 0)) __pyx_t_17 = 0;
-      } else if (unlikely(__pyx_t_16 >= __pyx_bshape_0_output)) __pyx_t_17 = 0;
+      if (__pyx_t_14 < 0) {
+        __pyx_t_14 += __pyx_bshape_0_output;
+        if (unlikely(__pyx_t_14 < 0)) __pyx_t_17 = 0;
+      } else if (unlikely(__pyx_t_14 >= __pyx_bshape_0_output)) __pyx_t_17 = 0;
       if (unlikely(__pyx_t_17 != -1)) {
         __Pyx_RaiseBufferIndexError(__pyx_t_17);
         {__pyx_filename = __pyx_f[2]; __pyx_lineno = 196; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
       }
-      *__Pyx_BufPtrStrided1d(__pyx_t_5numpy_double_t *, __pyx_bstruct_output.buf, __pyx_t_16, __pyx_bstride_0_output) = (__pyx_t_15 / __pyx_t_14);
+      *__Pyx_BufPtrStrided1d(__pyx_t_5numpy_double_t *, __pyx_bstruct_output.buf, __pyx_t_14, __pyx_bstride_0_output) = (__pyx_t_15 / __pyx_t_16);
       goto __pyx_L15;
     }
     /*else*/ {
@@ -9006,17 +9305,17 @@ static PyObject *__pyx_pf_7tseries__roll_var(PyObject *__pyx_self, PyObject *__p
  * 
  *     return output
  */
-      __pyx_t_14 = __pyx_v_i;
-      __pyx_t_17 = -1;
-      if (__pyx_t_14 < 0) {
-        __pyx_t_14 += __pyx_bshape_0_output;
-        if (unlikely(__pyx_t_14 < 0)) __pyx_t_17 = 0;
-      } else if (unlikely(__pyx_t_14 >= __pyx_bshape_0_output)) __pyx_t_17 = 0;
-      if (unlikely(__pyx_t_17 != -1)) {
-        __Pyx_RaiseBufferIndexError(__pyx_t_17);
+      __pyx_t_17 = __pyx_v_i;
+      __pyx_t_18 = -1;
+      if (__pyx_t_17 < 0) {
+        __pyx_t_17 += __pyx_bshape_0_output;
+        if (unlikely(__pyx_t_17 < 0)) __pyx_t_18 = 0;
+      } else if (unlikely(__pyx_t_17 >= __pyx_bshape_0_output)) __pyx_t_18 = 0;
+      if (unlikely(__pyx_t_18 != -1)) {
+        __Pyx_RaiseBufferIndexError(__pyx_t_18);
         {__pyx_filename = __pyx_f[2]; __pyx_lineno = 198; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
       }
-      *__Pyx_BufPtrStrided1d(__pyx_t_5numpy_double_t *, __pyx_bstruct_output.buf, __pyx_t_14, __pyx_bstride_0_output) = __pyx_v_7tseries_NaN;
+      *__Pyx_BufPtrStrided1d(__pyx_t_5numpy_double_t *, __pyx_bstruct_output.buf, __pyx_t_17, __pyx_bstride_0_output) = __pyx_v_7tseries_NaN;
     }
     __pyx_L15:;
   }
@@ -17353,7 +17652,7 @@ static PyObject *__pyx_pf_7tseries_combineFunc(PyObject *__pyx_self, PyObject *_
   return __pyx_r;
 }
 
-/* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":187
+/* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":187
  *         # experimental exception made for __getbuffer__ and __releasebuffer__
  *         # -- the details of this may change.
  *         def __getbuffer__(ndarray self, Py_buffer* info, int flags):             # <<<<<<<<<<<<<<
@@ -17389,7 +17688,7 @@ static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyObject *__pyx_v_self, Py_buf
   __Pyx_GIVEREF(__pyx_v_info->obj);
   __Pyx_INCREF((PyObject *)__pyx_v_self);
 
-  /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":193
+  /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":193
  *             # of flags
  *             cdef int copy_shape, i, ndim
  *             cdef int endian_detector = 1             # <<<<<<<<<<<<<<
@@ -17398,7 +17697,7 @@ static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyObject *__pyx_v_self, Py_buf
  */
   __pyx_v_endian_detector = 1;
 
-  /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":194
+  /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":194
  *             cdef int copy_shape, i, ndim
  *             cdef int endian_detector = 1
  *             cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)             # <<<<<<<<<<<<<<
@@ -17407,7 +17706,7 @@ static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyObject *__pyx_v_self, Py_buf
  */
   __pyx_v_little_endian = ((((char *)(&__pyx_v_endian_detector))[0]) != 0);
 
-  /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":196
+  /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":196
  *             cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)
  * 
  *             ndim = PyArray_NDIM(self)             # <<<<<<<<<<<<<<
@@ -17416,7 +17715,7 @@ static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyObject *__pyx_v_self, Py_buf
  */
   __pyx_v_ndim = PyArray_NDIM(((PyArrayObject *)__pyx_v_self));
 
-  /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":198
+  /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":198
  *             ndim = PyArray_NDIM(self)
  * 
  *             if sizeof(npy_intp) != sizeof(Py_ssize_t):             # <<<<<<<<<<<<<<
@@ -17426,7 +17725,7 @@ static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyObject *__pyx_v_self, Py_buf
   __pyx_t_1 = ((sizeof(npy_intp)) != (sizeof(Py_ssize_t)));
   if (__pyx_t_1) {
 
-    /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":199
+    /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":199
  * 
  *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
  *                 copy_shape = 1             # <<<<<<<<<<<<<<
@@ -17438,7 +17737,7 @@ static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyObject *__pyx_v_self, Py_buf
   }
   /*else*/ {
 
-    /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":201
+    /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":201
  *                 copy_shape = 1
  *             else:
  *                 copy_shape = 0             # <<<<<<<<<<<<<<
@@ -17449,7 +17748,7 @@ static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyObject *__pyx_v_self, Py_buf
   }
   __pyx_L5:;
 
-  /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":203
+  /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":203
  *                 copy_shape = 0
  * 
  *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)             # <<<<<<<<<<<<<<
@@ -17459,7 +17758,7 @@ static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyObject *__pyx_v_self, Py_buf
   __pyx_t_1 = ((__pyx_v_flags & PyBUF_C_CONTIGUOUS) == PyBUF_C_CONTIGUOUS);
   if (__pyx_t_1) {
 
-    /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":204
+    /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":204
  * 
  *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
  *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):             # <<<<<<<<<<<<<<
@@ -17473,7 +17772,7 @@ static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyObject *__pyx_v_self, Py_buf
   }
   if (__pyx_t_3) {
 
-    /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":205
+    /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":205
  *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
  *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):
  *                 raise ValueError(u"ndarray is not C contiguous")             # <<<<<<<<<<<<<<
@@ -17495,7 +17794,7 @@ static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyObject *__pyx_v_self, Py_buf
   }
   __pyx_L6:;
 
-  /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":207
+  /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":207
  *                 raise ValueError(u"ndarray is not C contiguous")
  * 
  *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)             # <<<<<<<<<<<<<<
@@ -17505,7 +17804,7 @@ static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyObject *__pyx_v_self, Py_buf
   __pyx_t_3 = ((__pyx_v_flags & PyBUF_F_CONTIGUOUS) == PyBUF_F_CONTIGUOUS);
   if (__pyx_t_3) {
 
-    /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":208
+    /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":208
  * 
  *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
  *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):             # <<<<<<<<<<<<<<
@@ -17519,7 +17818,7 @@ static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyObject *__pyx_v_self, Py_buf
   }
   if (__pyx_t_2) {
 
-    /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":209
+    /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":209
  *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
  *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):
  *                 raise ValueError(u"ndarray is not Fortran contiguous")             # <<<<<<<<<<<<<<
@@ -17541,7 +17840,7 @@ static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyObject *__pyx_v_self, Py_buf
   }
   __pyx_L7:;
 
-  /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":211
+  /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":211
  *                 raise ValueError(u"ndarray is not Fortran contiguous")
  * 
  *             info.buf = PyArray_DATA(self)             # <<<<<<<<<<<<<<
@@ -17550,7 +17849,7 @@ static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyObject *__pyx_v_self, Py_buf
  */
   __pyx_v_info->buf = PyArray_DATA(((PyArrayObject *)__pyx_v_self));
 
-  /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":212
+  /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":212
  * 
  *             info.buf = PyArray_DATA(self)
  *             info.ndim = ndim             # <<<<<<<<<<<<<<
@@ -17559,7 +17858,7 @@ static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyObject *__pyx_v_self, Py_buf
  */
   __pyx_v_info->ndim = __pyx_v_ndim;
 
-  /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":213
+  /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":213
  *             info.buf = PyArray_DATA(self)
  *             info.ndim = ndim
  *             if copy_shape:             # <<<<<<<<<<<<<<
@@ -17569,7 +17868,7 @@ static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyObject *__pyx_v_self, Py_buf
   __pyx_t_6 = __pyx_v_copy_shape;
   if (__pyx_t_6) {
 
-    /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":216
+    /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":216
  *                 # Allocate new buffer for strides and shape info. This is allocated
  *                 # as one block, strides first.
  *                 info.strides = <Py_ssize_t*>stdlib.malloc(sizeof(Py_ssize_t) * ndim * 2)             # <<<<<<<<<<<<<<
@@ -17578,7 +17877,7 @@ static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyObject *__pyx_v_self, Py_buf
  */
     __pyx_v_info->strides = ((Py_ssize_t *)malloc((((sizeof(Py_ssize_t)) * __pyx_v_ndim) * 2)));
 
-    /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":217
+    /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":217
  *                 # as one block, strides first.
  *                 info.strides = <Py_ssize_t*>stdlib.malloc(sizeof(Py_ssize_t) * ndim * 2)
  *                 info.shape = info.strides + ndim             # <<<<<<<<<<<<<<
@@ -17587,7 +17886,7 @@ static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyObject *__pyx_v_self, Py_buf
  */
     __pyx_v_info->shape = (__pyx_v_info->strides + __pyx_v_ndim);
 
-    /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":218
+    /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":218
  *                 info.strides = <Py_ssize_t*>stdlib.malloc(sizeof(Py_ssize_t) * ndim * 2)
  *                 info.shape = info.strides + ndim
  *                 for i in range(ndim):             # <<<<<<<<<<<<<<
@@ -17598,7 +17897,7 @@ static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyObject *__pyx_v_self, Py_buf
     for (__pyx_t_7 = 0; __pyx_t_7 < __pyx_t_6; __pyx_t_7+=1) {
       __pyx_v_i = __pyx_t_7;
 
-      /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":219
+      /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":219
  *                 info.shape = info.strides + ndim
  *                 for i in range(ndim):
  *                     info.strides[i] = PyArray_STRIDES(self)[i]             # <<<<<<<<<<<<<<
@@ -17607,7 +17906,7 @@ static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyObject *__pyx_v_self, Py_buf
  */
       (__pyx_v_info->strides[__pyx_v_i]) = (PyArray_STRIDES(((PyArrayObject *)__pyx_v_self))[__pyx_v_i]);
 
-      /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":220
+      /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":220
  *                 for i in range(ndim):
  *                     info.strides[i] = PyArray_STRIDES(self)[i]
  *                     info.shape[i] = PyArray_DIMS(self)[i]             # <<<<<<<<<<<<<<
@@ -17620,7 +17919,7 @@ static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyObject *__pyx_v_self, Py_buf
   }
   /*else*/ {
 
-    /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":222
+    /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":222
  *                     info.shape[i] = PyArray_DIMS(self)[i]
  *             else:
  *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)             # <<<<<<<<<<<<<<
@@ -17629,7 +17928,7 @@ static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyObject *__pyx_v_self, Py_buf
  */
     __pyx_v_info->strides = ((Py_ssize_t *)PyArray_STRIDES(((PyArrayObject *)__pyx_v_self)));
 
-    /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":223
+    /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":223
  *             else:
  *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)
  *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)             # <<<<<<<<<<<<<<
@@ -17640,7 +17939,7 @@ static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyObject *__pyx_v_self, Py_buf
   }
   __pyx_L8:;
 
-  /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":224
+  /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":224
  *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)
  *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)
  *             info.suboffsets = NULL             # <<<<<<<<<<<<<<
@@ -17649,7 +17948,7 @@ static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyObject *__pyx_v_self, Py_buf
  */
   __pyx_v_info->suboffsets = NULL;
 
-  /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":225
+  /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":225
  *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)
  *             info.suboffsets = NULL
  *             info.itemsize = PyArray_ITEMSIZE(self)             # <<<<<<<<<<<<<<
@@ -17658,7 +17957,7 @@ static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyObject *__pyx_v_self, Py_buf
  */
   __pyx_v_info->itemsize = PyArray_ITEMSIZE(((PyArrayObject *)__pyx_v_self));
 
-  /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":226
+  /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":226
  *             info.suboffsets = NULL
  *             info.itemsize = PyArray_ITEMSIZE(self)
  *             info.readonly = not PyArray_ISWRITEABLE(self)             # <<<<<<<<<<<<<<
@@ -17667,7 +17966,7 @@ static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyObject *__pyx_v_self, Py_buf
  */
   __pyx_v_info->readonly = (!PyArray_ISWRITEABLE(((PyArrayObject *)__pyx_v_self)));
 
-  /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":229
+  /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":229
  * 
  *             cdef int t
  *             cdef char* f = NULL             # <<<<<<<<<<<<<<
@@ -17676,7 +17975,7 @@ static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyObject *__pyx_v_self, Py_buf
  */
   __pyx_v_f = NULL;
 
-  /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":230
+  /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":230
  *             cdef int t
  *             cdef char* f = NULL
  *             cdef dtype descr = self.descr             # <<<<<<<<<<<<<<
@@ -17686,7 +17985,7 @@ static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyObject *__pyx_v_self, Py_buf
   __Pyx_INCREF(((PyObject *)((PyArrayObject *)__pyx_v_self)->descr));
   __pyx_v_descr = ((PyArrayObject *)__pyx_v_self)->descr;
 
-  /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":234
+  /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":234
  *             cdef int offset
  * 
  *             cdef bint hasfields = PyDataType_HASFIELDS(descr)             # <<<<<<<<<<<<<<
@@ -17695,7 +17994,7 @@ static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyObject *__pyx_v_self, Py_buf
  */
   __pyx_v_hasfields = PyDataType_HASFIELDS(__pyx_v_descr);
 
-  /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":236
+  /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":236
  *             cdef bint hasfields = PyDataType_HASFIELDS(descr)
  * 
  *             if not hasfields and not copy_shape:             # <<<<<<<<<<<<<<
@@ -17711,7 +18010,7 @@ static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyObject *__pyx_v_self, Py_buf
   }
   if (__pyx_t_1) {
 
-    /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":238
+    /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":238
  *             if not hasfields and not copy_shape:
  *                 # do not call releasebuffer
  *                 info.obj = None             # <<<<<<<<<<<<<<
@@ -17727,7 +18026,7 @@ static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyObject *__pyx_v_self, Py_buf
   }
   /*else*/ {
 
-    /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":241
+    /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":241
  *             else:
  *                 # need to call releasebuffer
  *                 info.obj = self             # <<<<<<<<<<<<<<
@@ -17742,7 +18041,7 @@ static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyObject *__pyx_v_self, Py_buf
   }
   __pyx_L11:;
 
-  /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":243
+  /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":243
  *                 info.obj = self
  * 
  *             if not hasfields:             # <<<<<<<<<<<<<<
@@ -17752,7 +18051,7 @@ static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyObject *__pyx_v_self, Py_buf
   __pyx_t_1 = (!__pyx_v_hasfields);
   if (__pyx_t_1) {
 
-    /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":244
+    /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":244
  * 
  *             if not hasfields:
  *                 t = descr.type_num             # <<<<<<<<<<<<<<
@@ -17761,7 +18060,7 @@ static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyObject *__pyx_v_self, Py_buf
  */
     __pyx_v_t = __pyx_v_descr->type_num;
 
-    /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":245
+    /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":245
  *             if not hasfields:
  *                 t = descr.type_num
  *                 if ((descr.byteorder == '>' and little_endian) or             # <<<<<<<<<<<<<<
@@ -17776,7 +18075,7 @@ static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyObject *__pyx_v_self, Py_buf
     }
     if (!__pyx_t_2) {
 
-      /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":246
+      /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":246
  *                 t = descr.type_num
  *                 if ((descr.byteorder == '>' and little_endian) or
  *                     (descr.byteorder == '<' and not little_endian)):             # <<<<<<<<<<<<<<
@@ -17796,7 +18095,7 @@ static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyObject *__pyx_v_self, Py_buf
     }
     if (__pyx_t_1) {
 
-      /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":247
+      /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":247
  *                 if ((descr.byteorder == '>' and little_endian) or
  *                     (descr.byteorder == '<' and not little_endian)):
  *                     raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
@@ -17818,7 +18117,7 @@ static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyObject *__pyx_v_self, Py_buf
     }
     __pyx_L13:;
 
-    /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":248
+    /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":248
  *                     (descr.byteorder == '<' and not little_endian)):
  *                     raise ValueError(u"Non-native byte order not supported")
  *                 if   t == NPY_BYTE:        f = "b"             # <<<<<<<<<<<<<<
@@ -17831,7 +18130,7 @@ static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyObject *__pyx_v_self, Py_buf
       goto __pyx_L14;
     }
 
-    /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":249
+    /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":249
  *                     raise ValueError(u"Non-native byte order not supported")
  *                 if   t == NPY_BYTE:        f = "b"
  *                 elif t == NPY_UBYTE:       f = "B"             # <<<<<<<<<<<<<<
@@ -17844,7 +18143,7 @@ static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyObject *__pyx_v_self, Py_buf
       goto __pyx_L14;
     }
 
-    /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":250
+    /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":250
  *                 if   t == NPY_BYTE:        f = "b"
  *                 elif t == NPY_UBYTE:       f = "B"
  *                 elif t == NPY_SHORT:       f = "h"             # <<<<<<<<<<<<<<
@@ -17857,7 +18156,7 @@ static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyObject *__pyx_v_self, Py_buf
       goto __pyx_L14;
     }
 
-    /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":251
+    /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":251
  *                 elif t == NPY_UBYTE:       f = "B"
  *                 elif t == NPY_SHORT:       f = "h"
  *                 elif t == NPY_USHORT:      f = "H"             # <<<<<<<<<<<<<<
@@ -17870,7 +18169,7 @@ static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyObject *__pyx_v_self, Py_buf
       goto __pyx_L14;
     }
 
-    /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":252
+    /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":252
  *                 elif t == NPY_SHORT:       f = "h"
  *                 elif t == NPY_USHORT:      f = "H"
  *                 elif t == NPY_INT:         f = "i"             # <<<<<<<<<<<<<<
@@ -17883,7 +18182,7 @@ static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyObject *__pyx_v_self, Py_buf
       goto __pyx_L14;
     }
 
-    /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":253
+    /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":253
  *                 elif t == NPY_USHORT:      f = "H"
  *                 elif t == NPY_INT:         f = "i"
  *                 elif t == NPY_UINT:        f = "I"             # <<<<<<<<<<<<<<
@@ -17896,7 +18195,7 @@ static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyObject *__pyx_v_self, Py_buf
       goto __pyx_L14;
     }
 
-    /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":254
+    /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":254
  *                 elif t == NPY_INT:         f = "i"
  *                 elif t == NPY_UINT:        f = "I"
  *                 elif t == NPY_LONG:        f = "l"             # <<<<<<<<<<<<<<
@@ -17909,7 +18208,7 @@ static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyObject *__pyx_v_self, Py_buf
       goto __pyx_L14;
     }
 
-    /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":255
+    /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":255
  *                 elif t == NPY_UINT:        f = "I"
  *                 elif t == NPY_LONG:        f = "l"
  *                 elif t == NPY_ULONG:       f = "L"             # <<<<<<<<<<<<<<
@@ -17922,7 +18221,7 @@ static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyObject *__pyx_v_self, Py_buf
       goto __pyx_L14;
     }
 
-    /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":256
+    /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":256
  *                 elif t == NPY_LONG:        f = "l"
  *                 elif t == NPY_ULONG:       f = "L"
  *                 elif t == NPY_LONGLONG:    f = "q"             # <<<<<<<<<<<<<<
@@ -17935,7 +18234,7 @@ static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyObject *__pyx_v_self, Py_buf
       goto __pyx_L14;
     }
 
-    /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":257
+    /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":257
  *                 elif t == NPY_ULONG:       f = "L"
  *                 elif t == NPY_LONGLONG:    f = "q"
  *                 elif t == NPY_ULONGLONG:   f = "Q"             # <<<<<<<<<<<<<<
@@ -17948,7 +18247,7 @@ static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyObject *__pyx_v_self, Py_buf
       goto __pyx_L14;
     }
 
-    /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":258
+    /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":258
  *                 elif t == NPY_LONGLONG:    f = "q"
  *                 elif t == NPY_ULONGLONG:   f = "Q"
  *                 elif t == NPY_FLOAT:       f = "f"             # <<<<<<<<<<<<<<
@@ -17961,7 +18260,7 @@ static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyObject *__pyx_v_self, Py_buf
       goto __pyx_L14;
     }
 
-    /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":259
+    /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":259
  *                 elif t == NPY_ULONGLONG:   f = "Q"
  *                 elif t == NPY_FLOAT:       f = "f"
  *                 elif t == NPY_DOUBLE:      f = "d"             # <<<<<<<<<<<<<<
@@ -17974,7 +18273,7 @@ static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyObject *__pyx_v_self, Py_buf
       goto __pyx_L14;
     }
 
-    /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":260
+    /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":260
  *                 elif t == NPY_FLOAT:       f = "f"
  *                 elif t == NPY_DOUBLE:      f = "d"
  *                 elif t == NPY_LONGDOUBLE:  f = "g"             # <<<<<<<<<<<<<<
@@ -17987,7 +18286,7 @@ static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyObject *__pyx_v_self, Py_buf
       goto __pyx_L14;
     }
 
-    /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":261
+    /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":261
  *                 elif t == NPY_DOUBLE:      f = "d"
  *                 elif t == NPY_LONGDOUBLE:  f = "g"
  *                 elif t == NPY_CFLOAT:      f = "Zf"             # <<<<<<<<<<<<<<
@@ -18000,7 +18299,7 @@ static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyObject *__pyx_v_self, Py_buf
       goto __pyx_L14;
     }
 
-    /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":262
+    /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":262
  *                 elif t == NPY_LONGDOUBLE:  f = "g"
  *                 elif t == NPY_CFLOAT:      f = "Zf"
  *                 elif t == NPY_CDOUBLE:     f = "Zd"             # <<<<<<<<<<<<<<
@@ -18013,7 +18312,7 @@ static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyObject *__pyx_v_self, Py_buf
       goto __pyx_L14;
     }
 
-    /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":263
+    /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":263
  *                 elif t == NPY_CFLOAT:      f = "Zf"
  *                 elif t == NPY_CDOUBLE:     f = "Zd"
  *                 elif t == NPY_CLONGDOUBLE: f = "Zg"             # <<<<<<<<<<<<<<
@@ -18026,7 +18325,7 @@ static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyObject *__pyx_v_self, Py_buf
       goto __pyx_L14;
     }
 
-    /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":264
+    /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":264
  *                 elif t == NPY_CDOUBLE:     f = "Zd"
  *                 elif t == NPY_CLONGDOUBLE: f = "Zg"
  *                 elif t == NPY_OBJECT:      f = "O"             # <<<<<<<<<<<<<<
@@ -18040,7 +18339,7 @@ static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyObject *__pyx_v_self, Py_buf
     }
     /*else*/ {
 
-      /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":266
+      /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":266
  *                 elif t == NPY_OBJECT:      f = "O"
  *                 else:
  *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)             # <<<<<<<<<<<<<<
@@ -18066,7 +18365,7 @@ static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyObject *__pyx_v_self, Py_buf
     }
     __pyx_L14:;
 
-    /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":267
+    /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":267
  *                 else:
  *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
  *                 info.format = f             # <<<<<<<<<<<<<<
@@ -18075,7 +18374,7 @@ static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyObject *__pyx_v_self, Py_buf
  */
     __pyx_v_info->format = __pyx_v_f;
 
-    /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":268
+    /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":268
  *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
  *                 info.format = f
  *                 return             # <<<<<<<<<<<<<<
@@ -18088,7 +18387,7 @@ static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyObject *__pyx_v_self, Py_buf
   }
   /*else*/ {
 
-    /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":270
+    /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":270
  *                 return
  *             else:
  *                 info.format = <char*>stdlib.malloc(_buffer_format_string_len)             # <<<<<<<<<<<<<<
@@ -18097,7 +18396,7 @@ static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyObject *__pyx_v_self, Py_buf
  */
     __pyx_v_info->format = ((char *)malloc(255));
 
-    /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":271
+    /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":271
  *             else:
  *                 info.format = <char*>stdlib.malloc(_buffer_format_string_len)
  *                 info.format[0] = '^' # Native data types, manual alignment             # <<<<<<<<<<<<<<
@@ -18106,7 +18405,7 @@ static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyObject *__pyx_v_self, Py_buf
  */
     (__pyx_v_info->format[0]) = '^';
 
-    /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":272
+    /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":272
  *                 info.format = <char*>stdlib.malloc(_buffer_format_string_len)
  *                 info.format[0] = '^' # Native data types, manual alignment
  *                 offset = 0             # <<<<<<<<<<<<<<
@@ -18115,7 +18414,7 @@ static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyObject *__pyx_v_self, Py_buf
  */
     __pyx_v_offset = 0;
 
-    /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":275
+    /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":275
  *                 f = _util_dtypestring(descr, info.format + 1,
  *                                       info.format + _buffer_format_string_len,
  *                                       &offset)             # <<<<<<<<<<<<<<
@@ -18125,7 +18424,7 @@ static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyObject *__pyx_v_self, Py_buf
     __pyx_t_9 = __pyx_f_5numpy__util_dtypestring(__pyx_v_descr, (__pyx_v_info->format + 1), (__pyx_v_info->format + 255), (&__pyx_v_offset)); if (unlikely(__pyx_t_9 == NULL)) {__pyx_filename = __pyx_f[7]; __pyx_lineno = 273; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
     __pyx_v_f = __pyx_t_9;
 
-    /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":276
+    /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":276
  *                                       info.format + _buffer_format_string_len,
  *                                       &offset)
  *                 f[0] = 0 # Terminate format string             # <<<<<<<<<<<<<<
@@ -18158,7 +18457,7 @@ static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyObject *__pyx_v_self, Py_buf
   return __pyx_r;
 }
 
-/* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":278
+/* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":278
  *                 f[0] = 0 # Terminate format string
  * 
  *         def __releasebuffer__(ndarray self, Py_buffer* info):             # <<<<<<<<<<<<<<
@@ -18172,7 +18471,7 @@ static void __pyx_pf_5numpy_7ndarray___releasebuffer__(PyObject *__pyx_v_self, P
   __Pyx_RefNannySetupContext("__releasebuffer__");
   __Pyx_INCREF((PyObject *)__pyx_v_self);
 
-  /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":279
+  /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":279
  * 
  *         def __releasebuffer__(ndarray self, Py_buffer* info):
  *             if PyArray_HASFIELDS(self):             # <<<<<<<<<<<<<<
@@ -18182,7 +18481,7 @@ static void __pyx_pf_5numpy_7ndarray___releasebuffer__(PyObject *__pyx_v_self, P
   __pyx_t_1 = PyArray_HASFIELDS(((PyArrayObject *)__pyx_v_self));
   if (__pyx_t_1) {
 
-    /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":280
+    /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":280
  *         def __releasebuffer__(ndarray self, Py_buffer* info):
  *             if PyArray_HASFIELDS(self):
  *                 stdlib.free(info.format)             # <<<<<<<<<<<<<<
@@ -18194,7 +18493,7 @@ static void __pyx_pf_5numpy_7ndarray___releasebuffer__(PyObject *__pyx_v_self, P
   }
   __pyx_L5:;
 
-  /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":281
+  /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":281
  *             if PyArray_HASFIELDS(self):
  *                 stdlib.free(info.format)
  *             if sizeof(npy_intp) != sizeof(Py_ssize_t):             # <<<<<<<<<<<<<<
@@ -18204,7 +18503,7 @@ static void __pyx_pf_5numpy_7ndarray___releasebuffer__(PyObject *__pyx_v_self, P
   __pyx_t_1 = ((sizeof(npy_intp)) != (sizeof(Py_ssize_t)));
   if (__pyx_t_1) {
 
-    /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":282
+    /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":282
  *                 stdlib.free(info.format)
  *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
  *                 stdlib.free(info.strides)             # <<<<<<<<<<<<<<
@@ -18220,7 +18519,7 @@ static void __pyx_pf_5numpy_7ndarray___releasebuffer__(PyObject *__pyx_v_self, P
   __Pyx_RefNannyFinishContext();
 }
 
-/* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":755
+/* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":755
  * ctypedef npy_cdouble     complex_t
  * 
  * cdef inline object PyArray_MultiIterNew1(a):             # <<<<<<<<<<<<<<
@@ -18233,7 +18532,7 @@ static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew1(PyObject *__
   PyObject *__pyx_t_1 = NULL;
   __Pyx_RefNannySetupContext("PyArray_MultiIterNew1");
 
-  /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":756
+  /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":756
  * 
  * cdef inline object PyArray_MultiIterNew1(a):
  *     return PyArray_MultiIterNew(1, <void*>a)             # <<<<<<<<<<<<<<
@@ -18259,7 +18558,7 @@ static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew1(PyObject *__
   return __pyx_r;
 }
 
-/* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":758
+/* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":758
  *     return PyArray_MultiIterNew(1, <void*>a)
  * 
  * cdef inline object PyArray_MultiIterNew2(a, b):             # <<<<<<<<<<<<<<
@@ -18272,7 +18571,7 @@ static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew2(PyObject *__
   PyObject *__pyx_t_1 = NULL;
   __Pyx_RefNannySetupContext("PyArray_MultiIterNew2");
 
-  /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":759
+  /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":759
  * 
  * cdef inline object PyArray_MultiIterNew2(a, b):
  *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)             # <<<<<<<<<<<<<<
@@ -18298,7 +18597,7 @@ static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew2(PyObject *__
   return __pyx_r;
 }
 
-/* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":761
+/* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":761
  *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
  * 
  * cdef inline object PyArray_MultiIterNew3(a, b, c):             # <<<<<<<<<<<<<<
@@ -18311,7 +18610,7 @@ static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew3(PyObject *__
   PyObject *__pyx_t_1 = NULL;
   __Pyx_RefNannySetupContext("PyArray_MultiIterNew3");
 
-  /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":762
+  /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":762
  * 
  * cdef inline object PyArray_MultiIterNew3(a, b, c):
  *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)             # <<<<<<<<<<<<<<
@@ -18337,7 +18636,7 @@ static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew3(PyObject *__
   return __pyx_r;
 }
 
-/* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":764
+/* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":764
  *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
  * 
  * cdef inline object PyArray_MultiIterNew4(a, b, c, d):             # <<<<<<<<<<<<<<
@@ -18350,7 +18649,7 @@ static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew4(PyObject *__
   PyObject *__pyx_t_1 = NULL;
   __Pyx_RefNannySetupContext("PyArray_MultiIterNew4");
 
-  /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":765
+  /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":765
  * 
  * cdef inline object PyArray_MultiIterNew4(a, b, c, d):
  *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)             # <<<<<<<<<<<<<<
@@ -18376,7 +18675,7 @@ static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew4(PyObject *__
   return __pyx_r;
 }
 
-/* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":767
+/* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":767
  *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
  * 
  * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):             # <<<<<<<<<<<<<<
@@ -18389,7 +18688,7 @@ static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew5(PyObject *__
   PyObject *__pyx_t_1 = NULL;
   __Pyx_RefNannySetupContext("PyArray_MultiIterNew5");
 
-  /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":768
+  /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":768
  * 
  * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):
  *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)             # <<<<<<<<<<<<<<
@@ -18415,7 +18714,7 @@ static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew5(PyObject *__
   return __pyx_r;
 }
 
-/* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":770
+/* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":770
  *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
  * 
  * cdef inline char* _util_dtypestring(dtype descr, char* f, char* end, int* offset) except NULL:             # <<<<<<<<<<<<<<
@@ -18450,7 +18749,7 @@ static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *__pyx
   __pyx_v_new_offset = Py_None; __Pyx_INCREF(Py_None);
   __pyx_v_t = Py_None; __Pyx_INCREF(Py_None);
 
-  /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":777
+  /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":777
  *     cdef int delta_offset
  *     cdef tuple i
  *     cdef int endian_detector = 1             # <<<<<<<<<<<<<<
@@ -18459,7 +18758,7 @@ static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *__pyx
  */
   __pyx_v_endian_detector = 1;
 
-  /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":778
+  /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":778
  *     cdef tuple i
  *     cdef int endian_detector = 1
  *     cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)             # <<<<<<<<<<<<<<
@@ -18468,7 +18767,7 @@ static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *__pyx
  */
   __pyx_v_little_endian = ((((char *)(&__pyx_v_endian_detector))[0]) != 0);
 
-  /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":781
+  /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":781
  *     cdef tuple fields
  * 
  *     for childname in descr.names:             # <<<<<<<<<<<<<<
@@ -18487,7 +18786,7 @@ static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *__pyx
     __pyx_v_childname = __pyx_t_3;
     __pyx_t_3 = 0;
 
-    /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":782
+    /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":782
  * 
  *     for childname in descr.names:
  *         fields = descr.fields[childname]             # <<<<<<<<<<<<<<
@@ -18501,7 +18800,7 @@ static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *__pyx
     __pyx_v_fields = ((PyObject *)__pyx_t_3);
     __pyx_t_3 = 0;
 
-    /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":783
+    /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":783
  *     for childname in descr.names:
  *         fields = descr.fields[childname]
  *         child, new_offset = fields             # <<<<<<<<<<<<<<
@@ -18524,7 +18823,7 @@ static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *__pyx
       {__pyx_filename = __pyx_f[7]; __pyx_lineno = 783; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
     }
 
-    /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":785
+    /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":785
  *         child, new_offset = fields
  * 
  *         if (end - f) - (new_offset - offset[0]) < 15:             # <<<<<<<<<<<<<<
@@ -18549,7 +18848,7 @@ static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *__pyx
     __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
     if (__pyx_t_6) {
 
-      /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":786
+      /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":786
  * 
  *         if (end - f) - (new_offset - offset[0]) < 15:
  *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")             # <<<<<<<<<<<<<<
@@ -18571,7 +18870,7 @@ static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *__pyx
     }
     __pyx_L5:;
 
-    /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":788
+    /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":788
  *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
  * 
  *         if ((child.byteorder == '>' and little_endian) or             # <<<<<<<<<<<<<<
@@ -18586,7 +18885,7 @@ static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *__pyx
     }
     if (!__pyx_t_7) {
 
-      /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":789
+      /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":789
  * 
  *         if ((child.byteorder == '>' and little_endian) or
  *             (child.byteorder == '<' and not little_endian)):             # <<<<<<<<<<<<<<
@@ -18606,7 +18905,7 @@ static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *__pyx
     }
     if (__pyx_t_6) {
 
-      /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":790
+      /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":790
  *         if ((child.byteorder == '>' and little_endian) or
  *             (child.byteorder == '<' and not little_endian)):
  *             raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
@@ -18628,7 +18927,7 @@ static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *__pyx
     }
     __pyx_L6:;
 
-    /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":800
+    /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":800
  * 
  *         # Output padding bytes
  *         while offset[0] < new_offset:             # <<<<<<<<<<<<<<
@@ -18645,7 +18944,7 @@ static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *__pyx
       __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
       if (!__pyx_t_6) break;
 
-      /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":801
+      /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":801
  *         # Output padding bytes
  *         while offset[0] < new_offset:
  *             f[0] = 120 # "x"; pad byte             # <<<<<<<<<<<<<<
@@ -18654,7 +18953,7 @@ static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *__pyx
  */
       (__pyx_v_f[0]) = 120;
 
-      /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":802
+      /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":802
  *         while offset[0] < new_offset:
  *             f[0] = 120 # "x"; pad byte
  *             f += 1             # <<<<<<<<<<<<<<
@@ -18663,7 +18962,7 @@ static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *__pyx
  */
       __pyx_v_f += 1;
 
-      /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":803
+      /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":803
  *             f[0] = 120 # "x"; pad byte
  *             f += 1
  *             offset[0] += 1             # <<<<<<<<<<<<<<
@@ -18673,7 +18972,7 @@ static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *__pyx
       (__pyx_v_offset[0]) += 1;
     }
 
-    /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":805
+    /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":805
  *             offset[0] += 1
  * 
  *         offset[0] += child.itemsize             # <<<<<<<<<<<<<<
@@ -18682,7 +18981,7 @@ static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *__pyx
  */
     (__pyx_v_offset[0]) += __pyx_v_child->elsize;
 
-    /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":807
+    /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":807
  *         offset[0] += child.itemsize
  * 
  *         if not PyDataType_HASFIELDS(child):             # <<<<<<<<<<<<<<
@@ -18692,7 +18991,7 @@ static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *__pyx
     __pyx_t_6 = (!PyDataType_HASFIELDS(__pyx_v_child));
     if (__pyx_t_6) {
 
-      /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":808
+      /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":808
  * 
  *         if not PyDataType_HASFIELDS(child):
  *             t = child.type_num             # <<<<<<<<<<<<<<
@@ -18705,7 +19004,7 @@ static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *__pyx
       __pyx_v_t = __pyx_t_3;
       __pyx_t_3 = 0;
 
-      /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":809
+      /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":809
  *         if not PyDataType_HASFIELDS(child):
  *             t = child.type_num
  *             if end - f < 5:             # <<<<<<<<<<<<<<
@@ -18715,7 +19014,7 @@ static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *__pyx
       __pyx_t_6 = ((__pyx_v_end - __pyx_v_f) < 5);
       if (__pyx_t_6) {
 
-        /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":810
+        /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":810
  *             t = child.type_num
  *             if end - f < 5:
  *                 raise RuntimeError(u"Format string allocated too short.")             # <<<<<<<<<<<<<<
@@ -18737,7 +19036,7 @@ static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *__pyx
       }
       __pyx_L10:;
 
-      /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":813
+      /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":813
  * 
  *             # Until ticket #99 is fixed, use integers to avoid warnings
  *             if   t == NPY_BYTE:        f[0] =  98 #"b"             # <<<<<<<<<<<<<<
@@ -18756,7 +19055,7 @@ static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *__pyx
         goto __pyx_L11;
       }
 
-      /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":814
+      /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":814
  *             # Until ticket #99 is fixed, use integers to avoid warnings
  *             if   t == NPY_BYTE:        f[0] =  98 #"b"
  *             elif t == NPY_UBYTE:       f[0] =  66 #"B"             # <<<<<<<<<<<<<<
@@ -18775,7 +19074,7 @@ static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *__pyx
         goto __pyx_L11;
       }
 
-      /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":815
+      /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":815
  *             if   t == NPY_BYTE:        f[0] =  98 #"b"
  *             elif t == NPY_UBYTE:       f[0] =  66 #"B"
  *             elif t == NPY_SHORT:       f[0] = 104 #"h"             # <<<<<<<<<<<<<<
@@ -18794,7 +19093,7 @@ static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *__pyx
         goto __pyx_L11;
       }
 
-      /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":816
+      /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":816
  *             elif t == NPY_UBYTE:       f[0] =  66 #"B"
  *             elif t == NPY_SHORT:       f[0] = 104 #"h"
  *             elif t == NPY_USHORT:      f[0] =  72 #"H"             # <<<<<<<<<<<<<<
@@ -18813,7 +19112,7 @@ static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *__pyx
         goto __pyx_L11;
       }
 
-      /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":817
+      /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":817
  *             elif t == NPY_SHORT:       f[0] = 104 #"h"
  *             elif t == NPY_USHORT:      f[0] =  72 #"H"
  *             elif t == NPY_INT:         f[0] = 105 #"i"             # <<<<<<<<<<<<<<
@@ -18832,7 +19131,7 @@ static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *__pyx
         goto __pyx_L11;
       }
 
-      /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":818
+      /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":818
  *             elif t == NPY_USHORT:      f[0] =  72 #"H"
  *             elif t == NPY_INT:         f[0] = 105 #"i"
  *             elif t == NPY_UINT:        f[0] =  73 #"I"             # <<<<<<<<<<<<<<
@@ -18851,7 +19150,7 @@ static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *__pyx
         goto __pyx_L11;
       }
 
-      /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":819
+      /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":819
  *             elif t == NPY_INT:         f[0] = 105 #"i"
  *             elif t == NPY_UINT:        f[0] =  73 #"I"
  *             elif t == NPY_LONG:        f[0] = 108 #"l"             # <<<<<<<<<<<<<<
@@ -18870,7 +19169,7 @@ static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *__pyx
         goto __pyx_L11;
       }
 
-      /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":820
+      /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":820
  *             elif t == NPY_UINT:        f[0] =  73 #"I"
  *             elif t == NPY_LONG:        f[0] = 108 #"l"
  *             elif t == NPY_ULONG:       f[0] = 76  #"L"             # <<<<<<<<<<<<<<
@@ -18889,7 +19188,7 @@ static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *__pyx
         goto __pyx_L11;
       }
 
-      /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":821
+      /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":821
  *             elif t == NPY_LONG:        f[0] = 108 #"l"
  *             elif t == NPY_ULONG:       f[0] = 76  #"L"
  *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"             # <<<<<<<<<<<<<<
@@ -18908,7 +19207,7 @@ static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *__pyx
         goto __pyx_L11;
       }
 
-      /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":822
+      /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":822
  *             elif t == NPY_ULONG:       f[0] = 76  #"L"
  *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
  *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"             # <<<<<<<<<<<<<<
@@ -18927,7 +19226,7 @@ static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *__pyx
         goto __pyx_L11;
       }
 
-      /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":823
+      /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":823
  *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
  *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
  *             elif t == NPY_FLOAT:       f[0] = 102 #"f"             # <<<<<<<<<<<<<<
@@ -18946,7 +19245,7 @@ static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *__pyx
         goto __pyx_L11;
       }
 
-      /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":824
+      /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":824
  *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
  *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
  *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"             # <<<<<<<<<<<<<<
@@ -18965,7 +19264,7 @@ static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *__pyx
         goto __pyx_L11;
       }
 
-      /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":825
+      /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":825
  *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
  *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
  *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"             # <<<<<<<<<<<<<<
@@ -18984,7 +19283,7 @@ static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *__pyx
         goto __pyx_L11;
       }
 
-      /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":826
+      /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":826
  *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
  *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
  *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf             # <<<<<<<<<<<<<<
@@ -19005,7 +19304,7 @@ static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *__pyx
         goto __pyx_L11;
       }
 
-      /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":827
+      /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":827
  *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
  *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
  *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd             # <<<<<<<<<<<<<<
@@ -19026,7 +19325,7 @@ static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *__pyx
         goto __pyx_L11;
       }
 
-      /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":828
+      /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":828
  *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
  *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
  *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg             # <<<<<<<<<<<<<<
@@ -19047,7 +19346,7 @@ static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *__pyx
         goto __pyx_L11;
       }
 
-      /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":829
+      /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":829
  *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
  *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg
  *             elif t == NPY_OBJECT:      f[0] = 79 #"O"             # <<<<<<<<<<<<<<
@@ -19067,7 +19366,7 @@ static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *__pyx
       }
       /*else*/ {
 
-        /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":831
+        /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":831
  *             elif t == NPY_OBJECT:      f[0] = 79 #"O"
  *             else:
  *                 raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)             # <<<<<<<<<<<<<<
@@ -19090,7 +19389,7 @@ static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *__pyx
       }
       __pyx_L11:;
 
-      /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":832
+      /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":832
  *             else:
  *                 raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
  *             f += 1             # <<<<<<<<<<<<<<
@@ -19102,7 +19401,7 @@ static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *__pyx
     }
     /*else*/ {
 
-      /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":836
+      /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":836
  *             # Cython ignores struct boundary information ("T{...}"),
  *             # so don't output it
  *             f = _util_dtypestring(child, f, end, offset)             # <<<<<<<<<<<<<<
@@ -19116,7 +19415,7 @@ static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *__pyx
   }
   __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
 
-  /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":837
+  /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":837
  *             # so don't output it
  *             f = _util_dtypestring(child, f, end, offset)
  *     return f             # <<<<<<<<<<<<<<
@@ -19146,7 +19445,7 @@ static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *__pyx
   return __pyx_r;
 }
 
-/* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":952
+/* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":952
  * 
  * 
  * cdef inline void set_array_base(ndarray arr, object base):             # <<<<<<<<<<<<<<
@@ -19161,7 +19460,7 @@ static CYTHON_INLINE void __pyx_f_5numpy_set_array_base(PyArrayObject *__pyx_v_a
   __Pyx_INCREF((PyObject *)__pyx_v_arr);
   __Pyx_INCREF(__pyx_v_base);
 
-  /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":954
+  /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":954
  * cdef inline void set_array_base(ndarray arr, object base):
  *      cdef PyObject* baseptr
  *      if base is None:             # <<<<<<<<<<<<<<
@@ -19171,7 +19470,7 @@ static CYTHON_INLINE void __pyx_f_5numpy_set_array_base(PyArrayObject *__pyx_v_a
   __pyx_t_1 = (__pyx_v_base == Py_None);
   if (__pyx_t_1) {
 
-    /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":955
+    /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":955
  *      cdef PyObject* baseptr
  *      if base is None:
  *          baseptr = NULL             # <<<<<<<<<<<<<<
@@ -19183,7 +19482,7 @@ static CYTHON_INLINE void __pyx_f_5numpy_set_array_base(PyArrayObject *__pyx_v_a
   }
   /*else*/ {
 
-    /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":957
+    /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":957
  *          baseptr = NULL
  *      else:
  *          Py_INCREF(base) # important to do this before decref below!             # <<<<<<<<<<<<<<
@@ -19192,7 +19491,7 @@ static CYTHON_INLINE void __pyx_f_5numpy_set_array_base(PyArrayObject *__pyx_v_a
  */
     Py_INCREF(__pyx_v_base);
 
-    /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":958
+    /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":958
  *      else:
  *          Py_INCREF(base) # important to do this before decref below!
  *          baseptr = <PyObject*>base             # <<<<<<<<<<<<<<
@@ -19203,7 +19502,7 @@ static CYTHON_INLINE void __pyx_f_5numpy_set_array_base(PyArrayObject *__pyx_v_a
   }
   __pyx_L3:;
 
-  /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":959
+  /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":959
  *          Py_INCREF(base) # important to do this before decref below!
  *          baseptr = <PyObject*>base
  *      Py_XDECREF(arr.base)             # <<<<<<<<<<<<<<
@@ -19212,7 +19511,7 @@ static CYTHON_INLINE void __pyx_f_5numpy_set_array_base(PyArrayObject *__pyx_v_a
  */
   Py_XDECREF(__pyx_v_arr->base);
 
-  /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":960
+  /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":960
  *          baseptr = <PyObject*>base
  *      Py_XDECREF(arr.base)
  *      arr.base = baseptr             # <<<<<<<<<<<<<<
@@ -19226,7 +19525,7 @@ static CYTHON_INLINE void __pyx_f_5numpy_set_array_base(PyArrayObject *__pyx_v_a
   __Pyx_RefNannyFinishContext();
 }
 
-/* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":962
+/* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":962
  *      arr.base = baseptr
  * 
  * cdef inline object get_array_base(ndarray arr):             # <<<<<<<<<<<<<<
@@ -19240,7 +19539,7 @@ static CYTHON_INLINE PyObject *__pyx_f_5numpy_get_array_base(PyArrayObject *__py
   __Pyx_RefNannySetupContext("get_array_base");
   __Pyx_INCREF((PyObject *)__pyx_v_arr);
 
-  /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":963
+  /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":963
  * 
  * cdef inline object get_array_base(ndarray arr):
  *     if arr.base is NULL:             # <<<<<<<<<<<<<<
@@ -19250,7 +19549,7 @@ static CYTHON_INLINE PyObject *__pyx_f_5numpy_get_array_base(PyArrayObject *__py
   __pyx_t_1 = (__pyx_v_arr->base == NULL);
   if (__pyx_t_1) {
 
-    /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":964
+    /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":964
  * cdef inline object get_array_base(ndarray arr):
  *     if arr.base is NULL:
  *         return None             # <<<<<<<<<<<<<<
@@ -19265,7 +19564,7 @@ static CYTHON_INLINE PyObject *__pyx_f_5numpy_get_array_base(PyArrayObject *__py
   }
   /*else*/ {
 
-    /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\numpy.pxd":966
+    /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\numpy.pxd":966
  *         return None
  *     else:
  *         return <object>arr.base             # <<<<<<<<<<<<<<
@@ -19719,6 +20018,8 @@ PyTypeObject __pyx_type_7tseries_IndexableSkiplist = {
 
 static struct PyMethodDef __pyx_methods[] = {
   {__Pyx_NAMESTR("map_indices"), (PyCFunction)__pyx_pf_7tseries_map_indices, METH_O, __Pyx_DOCSTR(__pyx_doc_7tseries_map_indices)},
+  {__Pyx_NAMESTR("isAllDates"), (PyCFunction)__pyx_pf_7tseries_isAllDates, METH_O, __Pyx_DOCSTR(0)},
+  {__Pyx_NAMESTR("isAllDates2"), (PyCFunction)__pyx_pf_7tseries_isAllDates2, METH_O, __Pyx_DOCSTR(__pyx_doc_7tseries_isAllDates2)},
   {__Pyx_NAMESTR("isnull"), (PyCFunction)__pyx_pf_7tseries_isnull, METH_O, __Pyx_DOCSTR(__pyx_doc_7tseries_isnull)},
   {__Pyx_NAMESTR("notnull"), (PyCFunction)__pyx_pf_7tseries_notnull, METH_O, __Pyx_DOCSTR(__pyx_doc_7tseries_notnull)},
   {__Pyx_NAMESTR("arrmap"), (PyCFunction)__pyx_pf_7tseries_arrmap, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
@@ -19892,8 +20193,8 @@ static __Pyx_StringTabEntry __pyx_string_tab[] = {
   {0, 0, 0, 0, 0, 0, 0}
 };
 static int __Pyx_InitCachedBuiltins(void) {
-  __pyx_builtin_Exception = __Pyx_GetName(__pyx_b, __pyx_n_s__Exception); if (!__pyx_builtin_Exception) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 22; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
-  __pyx_builtin_ValueError = __Pyx_GetName(__pyx_b, __pyx_n_s__ValueError); if (!__pyx_builtin_ValueError) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 34; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
+  __pyx_builtin_Exception = __Pyx_GetName(__pyx_b, __pyx_n_s__Exception); if (!__pyx_builtin_Exception) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 21; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
+  __pyx_builtin_ValueError = __Pyx_GetName(__pyx_b, __pyx_n_s__ValueError); if (!__pyx_builtin_ValueError) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 33; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
   __pyx_builtin_range = __Pyx_GetName(__pyx_b, __pyx_n_s__range); if (!__pyx_builtin_range) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 71; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
   __pyx_builtin_min = __Pyx_GetName(__pyx_b, __pyx_n_s__min); if (!__pyx_builtin_min) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 100; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
   __pyx_builtin_KeyError = __Pyx_GetName(__pyx_b, __pyx_n_s__KeyError); if (!__pyx_builtin_KeyError) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 138; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
@@ -19980,7 +20281,7 @@ PyMODINIT_FUNC PyInit_tseries(void)
   /*--- Global init code ---*/
   /*--- Function export code ---*/
   /*--- Type init code ---*/
-  __pyx_ptype_7tseries_datetime = __Pyx_ImportType("datetime", "datetime", sizeof(PyDateTime_DateTime), 0); if (unlikely(!__pyx_ptype_7tseries_datetime)) {__pyx_filename = __pyx_f[9]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
+  __pyx_ptype_7tseries_datetime = __Pyx_ImportType("datetime", "datetime", sizeof(PyDateTime_DateTime), 0); if (unlikely(!__pyx_ptype_7tseries_datetime)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 63; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
   if (PyType_Ready(&__pyx_type_7tseries_Node) < 0) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 25; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
   if (__Pyx_SetAttrString(__pyx_m, "Node", (PyObject *)&__pyx_type_7tseries_Node) < 0) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 25; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
   __pyx_ptype_7tseries_Node = &__pyx_type_7tseries_Node;
@@ -19996,75 +20297,85 @@ PyMODINIT_FUNC PyInit_tseries(void)
   /*--- Function import code ---*/
   /*--- Execution code ---*/
 
-  /* "H:\workspace\pandas\pandas\lib\src\common.pyx":12
+  /* "H:\workspace\pandas\pandas\lib\src\common.pyx":11
  * from python_float cimport PyFloat_Check
  * 
  * import numpy as np             # <<<<<<<<<<<<<<
  * isnan = np.isnan
  * cdef double NaN = <double> np.NaN
  */
-  __pyx_t_1 = __Pyx_Import(((PyObject *)__pyx_n_s__numpy), 0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 12; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
+  __pyx_t_1 = __Pyx_Import(((PyObject *)__pyx_n_s__numpy), 0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 11; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
   __Pyx_GOTREF(__pyx_t_1);
-  if (PyObject_SetAttr(__pyx_m, __pyx_n_s__np, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 12; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
+  if (PyObject_SetAttr(__pyx_m, __pyx_n_s__np, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 11; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
   __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
 
-  /* "H:\workspace\pandas\pandas\lib\src\common.pyx":13
+  /* "H:\workspace\pandas\pandas\lib\src\common.pyx":12
  * 
  * import numpy as np
  * isnan = np.isnan             # <<<<<<<<<<<<<<
  * cdef double NaN = <double> np.NaN
  * 
  */
-  __pyx_t_1 = __Pyx_GetName(__pyx_m, __pyx_n_s__np); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 13; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
+  __pyx_t_1 = __Pyx_GetName(__pyx_m, __pyx_n_s__np); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 12; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
   __Pyx_GOTREF(__pyx_t_1);
-  __pyx_t_2 = PyObject_GetAttr(__pyx_t_1, __pyx_n_s__isnan); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 13; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
+  __pyx_t_2 = PyObject_GetAttr(__pyx_t_1, __pyx_n_s__isnan); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 12; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
   __Pyx_GOTREF(__pyx_t_2);
   __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
-  if (PyObject_SetAttr(__pyx_m, __pyx_n_s__isnan, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 13; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
+  if (PyObject_SetAttr(__pyx_m, __pyx_n_s__isnan, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 12; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
   __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
 
-  /* "H:\workspace\pandas\pandas\lib\src\common.pyx":14
+  /* "H:\workspace\pandas\pandas\lib\src\common.pyx":13
  * import numpy as np
  * isnan = np.isnan
  * cdef double NaN = <double> np.NaN             # <<<<<<<<<<<<<<
  * 
  * from datetime import datetime as pydatetime
  */
-  __pyx_t_2 = __Pyx_GetName(__pyx_m, __pyx_n_s__np); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 14; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
+  __pyx_t_2 = __Pyx_GetName(__pyx_m, __pyx_n_s__np); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 13; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
   __Pyx_GOTREF(__pyx_t_2);
-  __pyx_t_1 = PyObject_GetAttr(__pyx_t_2, __pyx_n_s__NaN); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 14; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
+  __pyx_t_1 = PyObject_GetAttr(__pyx_t_2, __pyx_n_s__NaN); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 13; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
   __Pyx_GOTREF(__pyx_t_1);
   __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
-  __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 14; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
+  __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 13; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
   __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
   __pyx_v_7tseries_NaN = ((double)__pyx_t_3);
 
-  /* "H:\workspace\pandas\pandas\lib\src\common.pyx":16
+  /* "H:\workspace\pandas\pandas\lib\src\common.pyx":15
  * cdef double NaN = <double> np.NaN
  * 
  * from datetime import datetime as pydatetime             # <<<<<<<<<<<<<<
  * 
  * cdef inline object trycall(object func, object arg):
  */
-  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 16; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
+  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 15; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
   __Pyx_GOTREF(((PyObject *)__pyx_t_1));
   __Pyx_INCREF(((PyObject *)__pyx_n_s__datetime));
   PyList_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_n_s__datetime));
   __Pyx_GIVEREF(((PyObject *)__pyx_n_s__datetime));
-  __pyx_t_2 = __Pyx_Import(((PyObject *)__pyx_n_s__datetime), ((PyObject *)__pyx_t_1)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 16; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
+  __pyx_t_2 = __Pyx_Import(((PyObject *)__pyx_n_s__datetime), ((PyObject *)__pyx_t_1)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 15; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
   __Pyx_GOTREF(__pyx_t_2);
   __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
-  __pyx_t_1 = PyObject_GetAttr(__pyx_t_2, __pyx_n_s__datetime); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 16; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
+  __pyx_t_1 = PyObject_GetAttr(__pyx_t_2, __pyx_n_s__datetime); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 15; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
   __Pyx_GOTREF(__pyx_t_1);
-  if (PyObject_SetAttr(__pyx_m, __pyx_n_s__pydatetime, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 16; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
+  if (PyObject_SetAttr(__pyx_m, __pyx_n_s__pydatetime, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 15; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
   __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
   __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
 
-  /* "H:\workspace\pandas\pandas\lib\src\common.pyx":88
+  /* "H:\workspace\pandas\pandas\lib\src\common.pyx":80
+ * 
+ * # import datetime C API
+ * PyDateTime_IMPORT             # <<<<<<<<<<<<<<
+ * 
+ * # initialize numpy
+ */
+  PyDateTime_IMPORT;
+
+  /* "H:\workspace\pandas\pandas\lib\src\common.pyx":83
  * 
  * # initialize numpy
  * import_array()             # <<<<<<<<<<<<<<
  * 
+ * cpdef map_indices(ndarray index):
  */
   import_array();
 
@@ -20181,7 +20492,7 @@ PyMODINIT_FUNC PyInit_tseries(void)
  */
   __pyx_v_7tseries_NEGINF = (-__pyx_v_7tseries_INF);
 
-  /* "C:\Python25\lib\site-packages\cython-0.12.1-py2.5-win32.egg\Cython\Includes\python_dict.pxd":1
+  /* "C:\Python25\lib\site-packages\cython-0.11.3-py2.5.egg\Cython\Includes\python_dict.pxd":1
  * from python_ref cimport PyObject             # <<<<<<<<<<<<<<
  * 
  * cdef extern from "Python.h":
@@ -20218,7 +20529,6 @@ static const char *__pyx_filenames[] = {
   "operators.pyx",
   "numpy.pxd",
   "tseries.pyx",
-  "datetime.pxi",
 };
 
 /* Runtime support code */
@@ -20273,145 +20583,9 @@ bad:
 }
 
 
-static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type) {
-    if (unlikely(!type)) {
-        PyErr_Format(PyExc_SystemError, "Missing type object");
-        return 0;
-    }
-    if (likely(PyObject_TypeCheck(obj, type)))
-        return 1;
-    PyErr_Format(PyExc_TypeError, "Cannot convert %.200s to %.200s",
-                 Py_TYPE(obj)->tp_name, type->tp_name);
-    return 0;
-}
-
-static void __Pyx_RaiseDoubleKeywordsError(
-    const char* func_name,
-    PyObject* kw_name)
-{
-    PyErr_Format(PyExc_TypeError,
-        #if PY_MAJOR_VERSION >= 3
-        "%s() got multiple values for keyword argument '%U'", func_name, kw_name);
-        #else
-        "%s() got multiple values for keyword argument '%s'", func_name,
-        PyString_AS_STRING(kw_name));
-        #endif
-}
-
-static void __Pyx_RaiseArgtupleInvalid(
-    const char* func_name,
-    int exact,
-    Py_ssize_t num_min,
-    Py_ssize_t num_max,
-    Py_ssize_t num_found)
-{
-    Py_ssize_t num_expected;
-    const char *number, *more_or_less;
-
-    if (num_found < num_min) {
-        num_expected = num_min;
-        more_or_less = "at least";
-    } else {
-        num_expected = num_max;
-        more_or_less = "at most";
-    }
-    if (exact) {
-        more_or_less = "exactly";
-    }
-    number = (num_expected == 1) ? "" : "s";
-    PyErr_Format(PyExc_TypeError,
-        #if PY_VERSION_HEX < 0x02050000
-            "%s() takes %s %d positional argument%s (%d given)",
-        #else
-            "%s() takes %s %zd positional argument%s (%zd given)",
-        #endif
-        func_name, more_or_less, num_expected, number, num_found);
-}
-
-static int __Pyx_ParseOptionalKeywords(
-    PyObject *kwds,
-    PyObject **argnames[],
-    PyObject *kwds2,
-    PyObject *values[],
-    Py_ssize_t num_pos_args,
-    const char* function_name)
-{
-    PyObject *key = 0, *value = 0;
-    Py_ssize_t pos = 0;
-    PyObject*** name;
-    PyObject*** first_kw_arg = argnames + num_pos_args;
-
-    while (PyDict_Next(kwds, &pos, &key, &value)) {
-        name = first_kw_arg;
-        while (*name && (**name != key)) name++;
-        if (*name) {
-            values[name-argnames] = value;
-        } else {
-            #if PY_MAJOR_VERSION < 3
-            if (unlikely(!PyString_CheckExact(key)) && unlikely(!PyString_Check(key))) {
-            #else
-            if (unlikely(!PyUnicode_CheckExact(key)) && unlikely(!PyUnicode_Check(key))) {
-            #endif
-                goto invalid_keyword_type;
-            } else {
-                for (name = first_kw_arg; *name; name++) {
-                    #if PY_MAJOR_VERSION >= 3
-                    if (PyUnicode_GET_SIZE(**name) == PyUnicode_GET_SIZE(key) &&
-                        PyUnicode_Compare(**name, key) == 0) break;
-                    #else
-                    if (PyString_GET_SIZE(**name) == PyString_GET_SIZE(key) &&
-                        _PyString_Eq(**name, key)) break;
-                    #endif
-                }
-                if (*name) {
-                    values[name-argnames] = value;
-                } else {
-                    /* unexpected keyword found */
-                    for (name=argnames; name != first_kw_arg; name++) {
-                        if (**name == key) goto arg_passed_twice;
-                        #if PY_MAJOR_VERSION >= 3
-                        if (PyUnicode_GET_SIZE(**name) == PyUnicode_GET_SIZE(key) &&
-                            PyUnicode_Compare(**name, key) == 0) goto arg_passed_twice;
-                        #else
-                        if (PyString_GET_SIZE(**name) == PyString_GET_SIZE(key) &&
-                            _PyString_Eq(**name, key)) goto arg_passed_twice;
-                        #endif
-                    }
-                    if (kwds2) {
-                        if (unlikely(PyDict_SetItem(kwds2, key, value))) goto bad;
-                    } else {
-                        goto invalid_keyword;
-                    }
-                }
-            }
-        }
-    }
-    return 0;
-arg_passed_twice:
-    __Pyx_RaiseDoubleKeywordsError(function_name, **name);
-    goto bad;
-invalid_keyword_type:
-    PyErr_Format(PyExc_TypeError,
-        "%s() keywords must be strings", function_name);
-    goto bad;
-invalid_keyword:
-    PyErr_Format(PyExc_TypeError,
-    #if PY_MAJOR_VERSION < 3
-        "%s() got an unexpected keyword argument '%s'",
-        function_name, PyString_AsString(key));
-    #else
-        "%s() got an unexpected keyword argument '%U'",
-        function_name, key);
-    #endif
-bad:
-    return -1;
-}
-
-
-
-static CYTHON_INLINE int __Pyx_IsLittleEndian(void) {
-  unsigned int n = 1;
-  return *(unsigned char*)(&n) != 0;
+static CYTHON_INLINE int __Pyx_IsLittleEndian(void) {
+  unsigned int n = 1;
+  return *(unsigned char*)(&n) != 0;
 }
 
 typedef struct {
@@ -20852,12 +21026,6 @@ static CYTHON_INLINE void __Pyx_SafeReleaseBuffer(Py_buffer* info) {
   if (info->suboffsets == __Pyx_minusones) info->suboffsets = NULL;
   __Pyx_ReleaseBuffer(info);
 }
-
-static void __Pyx_RaiseBufferFallbackError(void) {
-  PyErr_Format(PyExc_ValueError,
-     "Buffer acquisition failed on assignment; and then reacquiring the old buffer failed too!");
-}
-
 static void __Pyx_RaiseBufferIndexError(int axis) {
   PyErr_Format(PyExc_IndexError,
      "Out of bounds on buffer access (axis %d)", axis);
@@ -20891,6 +21059,148 @@ static CYTHON_INLINE void __Pyx_ErrFetch(PyObject **type, PyObject **value, PyOb
 }
 
 
+static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type) {
+    if (unlikely(!type)) {
+        PyErr_Format(PyExc_SystemError, "Missing type object");
+        return 0;
+    }
+    if (likely(PyObject_TypeCheck(obj, type)))
+        return 1;
+    PyErr_Format(PyExc_TypeError, "Cannot convert %.200s to %.200s",
+                 Py_TYPE(obj)->tp_name, type->tp_name);
+    return 0;
+}
+
+static void __Pyx_RaiseDoubleKeywordsError(
+    const char* func_name,
+    PyObject* kw_name)
+{
+    PyErr_Format(PyExc_TypeError,
+        #if PY_MAJOR_VERSION >= 3
+        "%s() got multiple values for keyword argument '%U'", func_name, kw_name);
+        #else
+        "%s() got multiple values for keyword argument '%s'", func_name,
+        PyString_AS_STRING(kw_name));
+        #endif
+}
+
+static void __Pyx_RaiseArgtupleInvalid(
+    const char* func_name,
+    int exact,
+    Py_ssize_t num_min,
+    Py_ssize_t num_max,
+    Py_ssize_t num_found)
+{
+    Py_ssize_t num_expected;
+    const char *number, *more_or_less;
+
+    if (num_found < num_min) {
+        num_expected = num_min;
+        more_or_less = "at least";
+    } else {
+        num_expected = num_max;
+        more_or_less = "at most";
+    }
+    if (exact) {
+        more_or_less = "exactly";
+    }
+    number = (num_expected == 1) ? "" : "s";
+    PyErr_Format(PyExc_TypeError,
+        #if PY_VERSION_HEX < 0x02050000
+            "%s() takes %s %d positional argument%s (%d given)",
+        #else
+            "%s() takes %s %zd positional argument%s (%zd given)",
+        #endif
+        func_name, more_or_less, num_expected, number, num_found);
+}
+
+static int __Pyx_ParseOptionalKeywords(
+    PyObject *kwds,
+    PyObject **argnames[],
+    PyObject *kwds2,
+    PyObject *values[],
+    Py_ssize_t num_pos_args,
+    const char* function_name)
+{
+    PyObject *key = 0, *value = 0;
+    Py_ssize_t pos = 0;
+    PyObject*** name;
+    PyObject*** first_kw_arg = argnames + num_pos_args;
+
+    while (PyDict_Next(kwds, &pos, &key, &value)) {
+        name = first_kw_arg;
+        while (*name && (**name != key)) name++;
+        if (*name) {
+            values[name-argnames] = value;
+        } else {
+            #if PY_MAJOR_VERSION < 3
+            if (unlikely(!PyString_CheckExact(key)) && unlikely(!PyString_Check(key))) {
+            #else
+            if (unlikely(!PyUnicode_CheckExact(key)) && unlikely(!PyUnicode_Check(key))) {
+            #endif
+                goto invalid_keyword_type;
+            } else {
+                for (name = first_kw_arg; *name; name++) {
+                    #if PY_MAJOR_VERSION >= 3
+                    if (PyUnicode_GET_SIZE(**name) == PyUnicode_GET_SIZE(key) &&
+                        PyUnicode_Compare(**name, key) == 0) break;
+                    #else
+                    if (PyString_GET_SIZE(**name) == PyString_GET_SIZE(key) &&
+                        _PyString_Eq(**name, key)) break;
+                    #endif
+                }
+                if (*name) {
+                    values[name-argnames] = value;
+                } else {
+                    /* unexpected keyword found */
+                    for (name=argnames; name != first_kw_arg; name++) {
+                        if (**name == key) goto arg_passed_twice;
+                        #if PY_MAJOR_VERSION >= 3
+                        if (PyUnicode_GET_SIZE(**name) == PyUnicode_GET_SIZE(key) &&
+                            PyUnicode_Compare(**name, key) == 0) goto arg_passed_twice;
+                        #else
+                        if (PyString_GET_SIZE(**name) == PyString_GET_SIZE(key) &&
+                            _PyString_Eq(**name, key)) goto arg_passed_twice;
+                        #endif
+                    }
+                    if (kwds2) {
+                        if (unlikely(PyDict_SetItem(kwds2, key, value))) goto bad;
+                    } else {
+                        goto invalid_keyword;
+                    }
+                }
+            }
+        }
+    }
+    return 0;
+arg_passed_twice:
+    __Pyx_RaiseDoubleKeywordsError(function_name, **name);
+    goto bad;
+invalid_keyword_type:
+    PyErr_Format(PyExc_TypeError,
+        "%s() keywords must be strings", function_name);
+    goto bad;
+invalid_keyword:
+    PyErr_Format(PyExc_TypeError,
+    #if PY_MAJOR_VERSION < 3
+        "%s() got an unexpected keyword argument '%s'",
+        function_name, PyString_AsString(key));
+    #else
+        "%s() got an unexpected keyword argument '%U'",
+        function_name, key);
+    #endif
+bad:
+    return -1;
+}
+
+
+
+static void __Pyx_RaiseBufferFallbackError(void) {
+  PyErr_Format(PyExc_ValueError,
+     "Buffer acquisition failed on assignment; and then reacquiring the old buffer failed too!");
+}
+
+
 static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void) {
     PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
 }
