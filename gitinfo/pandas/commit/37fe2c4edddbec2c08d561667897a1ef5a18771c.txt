commit 37fe2c4edddbec2c08d561667897a1ef5a18771c
Author: Ben Thayer <benthayer2365@gmail.com>
Date:   Thu Mar 2 08:16:48 2017 -0500

    ENH: Added FrozenList difference setop
    
    closes #15475
    
    Author: Ben Thayer <benthayer2365@gmail.com>
    Author: bthayer2365 <bthayer2365@users.noreply.github.com>
    
    Closes #15506 from bthayer2365/frozen-index and squashes the following commits:
    
    428a1b3 [Ben Thayer] Added __iadd__ test, fixed whatsnew
    84ba405 [Ben Thayer] Merge branch 'master' of github.com:pandas-dev/pandas into frozen-index
    8dbde1e [Ben Thayer] Rebased to upstream/master
    6f6c140 [Ben Thayer] Added docstrings, depricated __iadd__, changed __add__ to use self.union()
    66b3b91 [Ben Thayer] Fixed issue number
    3d6cee5 [Ben Thayer] Depricated __add__ in favor of union
    ccd75c7 [Ben Thayer] Changed __sub__ to difference
    cd7de26 [Ben Thayer] Added versionadded tag in docs and renamed test_inplace to test_inplace_add for consistency
    0ea8d21 [Ben Thayer] Added __isub__ and groupby example to docs
    79dd958 [Ben Thayer] Updated whatsnew to reflect changes
    0fc7e19 [Ben Thayer] Removed whitespace
    73564ab [Ben Thayer] Added FrozenList subtraction
    fee7a7d [bthayer2365] Merge branch 'master' into frozen-index
    6a2b48d [Ben Thayer] Added docstrings, depricated __iadd__, changed __add__ to use self.union()
    2ab85cb [Ben Thayer] Fixed issue number
    cb95089 [Ben Thayer] Depricated __add__ in favor of union
    2e43849 [Ben Thayer] Changed __sub__ to difference
    fdcfbbb [Ben Thayer] Added versionadded tag in docs and renamed test_inplace to test_inplace_add for consistency
    2fad2f7 [Ben Thayer] Added __isub__ and groupby example to docs
    cd73faa [Ben Thayer] Updated whatsnew to reflect changes
    f6381a8 [Ben Thayer] Removed whitespace
    ada7cda [Ben Thayer] Added FrozenList subtraction

diff --git a/doc/source/groupby.rst b/doc/source/groupby.rst
index 8484ccd69..2d406de7c 100644
--- a/doc/source/groupby.rst
+++ b/doc/source/groupby.rst
@@ -126,6 +126,16 @@ We could naturally group by either the ``A`` or ``B`` columns or both:
    grouped = df.groupby('A')
    grouped = df.groupby(['A', 'B'])
 
+.. versionadded:: 0.20
+
+If we also have a MultiIndex on columns ``A`` and ``B``, we can group by all
+but the specified columns.
+
+.. ipython:: python
+
+   df2 = df.set_index(['A', 'B'])
+   grouped = df2.groupby(level=df2.index.names.difference(['B'])
+
 These will split the DataFrame on its index (rows). We could also split by the
 columns:
 
diff --git a/doc/source/whatsnew/v0.20.0.txt b/doc/source/whatsnew/v0.20.0.txt
index dc8420080..cc33a4a7c 100644
--- a/doc/source/whatsnew/v0.20.0.txt
+++ b/doc/source/whatsnew/v0.20.0.txt
@@ -28,6 +28,7 @@ New features
 
 - Integration with the ``feather-format``, including a new top-level ``pd.read_feather()`` and ``DataFrame.to_feather()`` method, see :ref:`here <io.feather>`.
 - ``.str.replace`` now accepts a callable, as replacement, which is passed to ``re.sub`` (:issue:`15055`)
+- ``FrozenList`` has gained the ``.difference()`` setop method (:issue:`15475`)
 
 
 
@@ -534,6 +535,7 @@ Deprecations
 - ``Series.sortlevel`` and ``DataFrame.sortlevel`` have been deprecated in favor of ``Series.sort_index`` and ``DataFrame.sort_index`` (:issue:`15099`)
 - importing ``concat`` from ``pandas.tools.merge`` has been deprecated in favor of imports from the ``pandas`` namespace. This should only affect explict imports (:issue:`15358`)
 - ``Series/DataFrame/Panel.consolidate()`` been deprecated as a public method. (:issue:`15483`)
+- ``FrozenList`` addition (new object and inplace) have been deprecated in favor of the ``.union()`` method. (:issue: `15475`)
 
 .. _whatsnew_0200.prior_deprecations:
 
diff --git a/pandas/indexes/frozen.py b/pandas/indexes/frozen.py
index e043ba64b..47e255733 100644
--- a/pandas/indexes/frozen.py
+++ b/pandas/indexes/frozen.py
@@ -13,6 +13,8 @@ from pandas.core.base import PandasObject
 from pandas.types.cast import _coerce_indexer_dtype
 from pandas.formats.printing import pprint_thing
 
+import warnings
+
 
 class FrozenList(PandasObject, list):
 
@@ -25,11 +27,14 @@ class FrozenList(PandasObject, list):
     #           typechecks
 
     def __add__(self, other):
+        warnings.warn("__add__ is deprecated, use union(...)", FutureWarning)
+        return self.union(other)
+
+    def __iadd__(self, other):
+        warnings.warn("__iadd__ is deprecated, use union(...)", FutureWarning)
         if isinstance(other, tuple):
             other = list(other)
-        return self.__class__(super(FrozenList, self).__add__(other))
-
-    __iadd__ = __add__
+        return super(FrozenList, self).__iadd__(other)
 
     # Python 2 compat
     def __getslice__(self, i, j):
@@ -80,6 +85,19 @@ class FrozenList(PandasObject, list):
     __setitem__ = __setslice__ = __delitem__ = __delslice__ = _disabled
     pop = append = extend = remove = sort = insert = _disabled
 
+    def union(self, other):
+        """Returns a FrozenList with other concatenated to the end of self"""
+        if isinstance(other, tuple):
+            other = list(other)
+        return self.__class__(super(FrozenList, self).__add__(other))
+
+    def difference(self, other):
+        """Returns a FrozenList with the same elements as self, but with elements
+        that are also in other removed."""
+        other = set(other)
+        temp = [x for x in self if x not in other]
+        return self.__class__(temp)
+
 
 class FrozenNDArray(PandasObject, np.ndarray):
 
diff --git a/pandas/tests/indexes/test_frozen.py b/pandas/tests/indexes/test_frozen.py
index a82409fbf..a5fbf066a 100644
--- a/pandas/tests/indexes/test_frozen.py
+++ b/pandas/tests/indexes/test_frozen.py
@@ -15,20 +15,35 @@ class TestFrozenList(CheckImmutable, CheckStringMixin, tm.TestCase):
         self.klass = FrozenList
 
     def test_add(self):
-        result = self.container + (1, 2, 3)
+        q = FrozenList([1])
+        with tm.assert_produces_warning(FutureWarning,
+                                        check_stacklevel=False):
+            q = q + [2, 3]
+        expected = FrozenList([1, 2, 3])
+        self.check_result(q, expected)
+
+    def test_iadd(self):
+        q = FrozenList([1])
+        with tm.assert_produces_warning(FutureWarning,
+                                        check_stacklevel=False):
+            q += [2, 3]
+        expected = FrozenList([1, 2, 3])
+        self.check_result(q, expected)
+
+    def test_union(self):
+        result = self.container.union((1, 2, 3))
         expected = FrozenList(self.lst + [1, 2, 3])
         self.check_result(result, expected)
 
-        result = (1, 2, 3) + self.container
-        expected = FrozenList([1, 2, 3] + self.lst)
+    def test_difference(self):
+        result = self.container.difference([2])
+        expected = FrozenList([1, 3, 4, 5])
         self.check_result(result, expected)
 
-    def test_inplace(self):
-        q = r = self.container
-        q += [5]
-        self.check_result(q, self.lst + [5])
-        # other shouldn't be mutated
-        self.check_result(r, self.lst)
+    def test_difference_dupe(self):
+        result = FrozenList([1, 2, 3, 2]).difference([2])
+        expected = FrozenList([1, 3])
+        self.check_result(result, expected)
 
 
 class TestFrozenNDArray(CheckImmutable, CheckStringMixin, tm.TestCase):
