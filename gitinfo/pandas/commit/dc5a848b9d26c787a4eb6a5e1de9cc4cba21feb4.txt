commit dc5a848b9d26c787a4eb6a5e1de9cc4cba21feb4
Author: Wenhuan <lixx0880@gmail.com>
Date:   Wed Jul 10 05:29:22 2019 +0800

    TST: add tests to validate margin results for pivot (#25815) (#27245)
    
    thanks @peterpanmj

diff --git a/pandas/tests/reshape/test_pivot.py b/pandas/tests/reshape/test_pivot.py
index d3300ffb0..be82e7f59 100644
--- a/pandas/tests/reshape/test_pivot.py
+++ b/pandas/tests/reshape/test_pivot.py
@@ -286,6 +286,32 @@ class TestPivotTable:
         expected = DataFrame({"B": 1}, index=Index(interval_values.unique(), name="A"))
         tm.assert_frame_equal(result, expected)
 
+    def test_pivot_with_interval_index_margins(self):
+        # GH 25815
+        ordered_cat = pd.IntervalIndex.from_arrays([0, 0, 1, 1], [1, 1, 2, 2])
+        df = DataFrame(
+            {
+                "A": np.arange(4, 0, -1, dtype=np.intp),
+                "B": ["a", "b", "a", "b"],
+                "C": pd.Categorical(ordered_cat, ordered=True).sort_values(
+                    ascending=False
+                ),
+            }
+        )
+
+        pivot_tab = pd.pivot_table(
+            df, index="C", columns="B", values="A", aggfunc="sum", margins=True
+        )
+
+        result = pivot_tab["All"]
+        expected = Series(
+            [3, 7, 10],
+            index=Index([pd.Interval(0, 1), pd.Interval(1, 2), "All"], name="C"),
+            name="All",
+            dtype=np.intp,
+        )
+        tm.assert_series_equal(result, expected)
+
     def test_pass_array(self):
         result = self.data.pivot_table("D", index=self.data.A, columns=self.data.C)
         expected = self.data.pivot_table("D", index="A", columns="C")
