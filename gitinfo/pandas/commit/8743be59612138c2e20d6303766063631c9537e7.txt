commit 8743be59612138c2e20d6303766063631c9537e7
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Wed Sep 12 21:22:43 2012 -0400

    BUG: treat nobs=1 >= min_periods case in rolling_std/variance as 0 trivially. close #1884

diff --git a/RELEASE.rst b/RELEASE.rst
index d8bd960e1..7b6aa9920 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -154,6 +154,8 @@ pandas 0.9.0
   - Respect passed color keyword argument in Series.plot (#1890)
   - Fix rolling_min/max when the window is larger than the size of the input
     array. Check other malformed inputs (#1899, #1897)
+  - Rolling variance / standard deviation with only a single observation in
+    window (#1884)
 
 pandas 0.8.1
 ============
diff --git a/pandas/src/moments.pyx b/pandas/src/moments.pyx
index aee9935b2..05d71311d 100644
--- a/pandas/src/moments.pyx
+++ b/pandas/src/moments.pyx
@@ -11,7 +11,7 @@
 
 def _check_minp(win, minp, N):
     if minp > win:
-        raise ValueError('min_periods %d must be <= window %d'
+        raise ValueError('min_periods (%d) must be <= window (%d)'
                         % (minp, win))
     elif minp > N:
         minp = N + 1
@@ -382,6 +382,11 @@ def roll_var(ndarray[double_t] input, int win, int minp, int ddof=1):
             sum_xx += val * val
 
         if nobs >= minp:
+            # pathological case
+            if nobs == 1:
+                output[i] = 0
+                continue
+
             output[i] = (nobs * sum_xx - sum_x * sum_x) / (nobs * (nobs - ddof))
         else:
             output[i] = NaN
diff --git a/pandas/stats/moments.py b/pandas/stats/moments.py
index 81013575e..5e7552d61 100644
--- a/pandas/stats/moments.py
+++ b/pandas/stats/moments.py
@@ -447,9 +447,9 @@ rolling_median = _rolling_func(lib.roll_median_cython, 'Moving median')
 
 _ts_std = lambda *a, **kw: _zsqrt(lib.roll_var(*a, **kw))
 rolling_std = _rolling_func(_ts_std, 'Unbiased moving standard deviation',
-                            check_minp=_require_min_periods(2))
+                            check_minp=_require_min_periods(1))
 rolling_var = _rolling_func(lib.roll_var, 'Unbiased moving variance',
-                            check_minp=_require_min_periods(2))
+                            check_minp=_require_min_periods(1))
 rolling_skew = _rolling_func(lib.roll_skew, 'Unbiased moving skewness',
                              check_minp=_require_min_periods(3))
 rolling_kurt = _rolling_func(lib.roll_kurt, 'Unbiased moving kurtosis',
diff --git a/pandas/stats/tests/test_moments.py b/pandas/stats/tests/test_moments.py
index 8ea145c7d..ff5fd621e 100644
--- a/pandas/stats/tests/test_moments.py
+++ b/pandas/stats/tests/test_moments.py
@@ -112,6 +112,17 @@ class TestMoments(unittest.TestCase):
         self._check_moment_func(functools.partial(mom.rolling_std, ddof=0),
                                 lambda x: np.std(x, ddof=0))
 
+    def test_rolling_std_1obs(self):
+        result = mom.rolling_std(np.array([1.,2.,3.,4.,5.]),
+                                 1, min_periods=1)
+        expected = np.zeros(5)
+
+        assert_almost_equal(result, expected)
+
+        result = mom.rolling_std(np.array([np.nan,np.nan,3.,4.,5.]),
+                                 3, min_periods=2)
+        self.assert_(np.isnan(result[2]))
+
     def test_rolling_std_neg_sqrt(self):
         # unit test from Bottleneck
 
