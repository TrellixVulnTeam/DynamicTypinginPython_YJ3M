commit e147e0ff076967e1d822b26c9e495e6d5c7868b4
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Thu Jul 12 10:42:35 2012 -0400

    BUG: logical error in DatetimeIndex.intersection with irregular indexes close #1551

diff --git a/RELEASE.rst b/RELEASE.rst
index 7b4ba071f..081f42a43 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -65,6 +65,7 @@ pandas 0.8.1
   - Work around numpy.concatenate use/bug in Series.set_value (#1561)
   - Ensure Series/DataFrame are sorted before resampling (#1580)
   - Fix unhandled IndexError when indexing very large time series (#1562)
+  - Fix DatetimeIndex intersection logic error with irregular indexes (#1551)
 
 pandas 0.8.0
 ============
diff --git a/pandas/tseries/index.py b/pandas/tseries/index.py
index ae212902f..086a73fb6 100644
--- a/pandas/tseries/index.py
+++ b/pandas/tseries/index.py
@@ -815,8 +815,9 @@ class DatetimeIndex(Int64Index):
                     result.offset = to_offset(result.inferred_freq)
             return result
 
-        elif other.offset != self.offset or (not self.is_monotonic or
-                                             not other.is_monotonic):
+        elif (other.offset is None or self.offset is None or
+              other.offset != self.offset or
+              (not self.is_monotonic or not other.is_monotonic)):
             result = Index.intersection(self, other)
             if isinstance(result, DatetimeIndex):
                 if result.freq is None:
diff --git a/pandas/tseries/tests/test_timeseries.py b/pandas/tseries/tests/test_timeseries.py
index a91db2de0..079eb0f61 100644
--- a/pandas/tseries/tests/test_timeseries.py
+++ b/pandas/tseries/tests/test_timeseries.py
@@ -1802,6 +1802,15 @@ class TestSeriesDatetime64(unittest.TestCase):
         df = DataFrame({'s1' : s1, 's2' : s2})
         self.assert_(df.index.values.dtype == np.dtype('M8[ns]'))
 
+    def test_intersection(self):
+        rng = date_range('6/1/2000', '6/15/2000', freq='D')
+        rng = rng.delete(5)
+
+        rng2 = date_range('5/15/2000', '6/20/2000', freq='D')
+        rng2 = DatetimeIndex(rng2.values)
+
+        result = rng.intersection(rng2)
+        self.assert_(result.equals(rng))
 
 class TestTimestamp(unittest.TestCase):
 
