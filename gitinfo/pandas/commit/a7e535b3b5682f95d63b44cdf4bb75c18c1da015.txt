commit a7e535b3b5682f95d63b44cdf4bb75c18c1da015
Author: Phillip Cloud <cpcloud@gmail.com>
Date:   Sat Jun 7 17:29:17 2014 -0400

    BUG: ix should return a Series for duplicate indices (GH7150)

diff --git a/doc/source/v0.14.1.txt b/doc/source/v0.14.1.txt
index 1cb6aadf3..586e47ff4 100644
--- a/doc/source/v0.14.1.txt
+++ b/doc/source/v0.14.1.txt
@@ -164,7 +164,7 @@ Bug Fixes
 
 
 
-
+- Bug in ``.ix`` getitem should always return a Series (:issue:`7150`)
 
 
 
diff --git a/pandas/core/indexing.py b/pandas/core/indexing.py
index 68e581075..45262575d 100644
--- a/pandas/core/indexing.py
+++ b/pandas/core/indexing.py
@@ -35,7 +35,6 @@ IndexSlice = _IndexSlice()
 class IndexingError(Exception):
     pass
 
-
 class _NDFrameIndexer(object):
     _valid_types = None
     _exception = KeyError
@@ -61,7 +60,9 @@ class _NDFrameIndexer(object):
     def __getitem__(self, key):
         if type(key) is tuple:
             try:
-                return self.obj.get_value(*key)
+                values = self.obj.get_value(*key)
+                if np.isscalar(values):
+                    return values
             except Exception:
                 pass
 
@@ -1101,8 +1102,6 @@ class _IXIndexer(_NDFrameIndexer):
     """ A primarily location based indexer, with integer fallback """
 
     def _has_valid_type(self, key, axis):
-        ax = self.obj._get_axis(axis)
-
         if isinstance(key, slice):
             return True
 
diff --git a/pandas/tests/test_indexing.py b/pandas/tests/test_indexing.py
index 96c67f2ff..7610ccc6c 100644
--- a/pandas/tests/test_indexing.py
+++ b/pandas/tests/test_indexing.py
@@ -3570,8 +3570,14 @@ class TestIndexing(tm.TestCase):
                                          'a': [10] * 10}),
                               df)
 
+    def test_duplicate_ix_returns_series(self):
+        df = DataFrame(np.random.randn(3, 3), index=[0.1, 0.2, 0.2],
+                       columns=list('abc'))
+        r = df.ix[0.2, 'a']
+        e = df.loc[0.2, 'a']
+        tm.assert_series_equal(r, e)
+
 
 if __name__ == '__main__':
-    import nose
     nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
                    exit=False)
