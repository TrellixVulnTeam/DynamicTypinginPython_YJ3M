commit a72149f0748d22f50e3bc938ad4028ab91dce3f4
Author: jreback <jeff@reback.net>
Date:   Wed Oct 29 18:07:00 2014 -0400

    TST: fix up for 32-bit indexers w.r.t. (GH8669)

diff --git a/pandas/core/internals.py b/pandas/core/internals.py
index 6dd123996..9b95aff46 100644
--- a/pandas/core/internals.py
+++ b/pandas/core/internals.py
@@ -551,29 +551,31 @@ class Block(PandasObject):
         try:
 
             def _is_scalar_indexer(indexer):
-                # treat a len 0 array like a scalar
                 # return True if we are all scalar indexers
 
                 if arr_value.ndim == 1:
                     if not isinstance(indexer, tuple):
                         indexer = tuple([indexer])
+                    return all([ np.isscalar(idx) for idx in indexer ])
+                return False
 
-                    def _is_ok(idx):
-
-                        if np.isscalar(idx):
-                            return True
-                        elif isinstance(idx, slice):
-                            return False
-                        return len(idx) == 0
+            def _is_empty_indexer(indexer):
+                # return a boolean if we have an empty indexer
 
-                    return all([ _is_ok(idx) for idx in indexer ])
+                if arr_value.ndim == 1:
+                    if not isinstance(indexer, tuple):
+                        indexer = tuple([indexer])
+                    return all([ isinstance(idx, np.ndarray) and len(idx) == 0 for idx in indexer ])
                 return False
 
+            # empty indexers
+            # 8669 (empty)
+            if _is_empty_indexer(indexer):
+                pass
 
             # setting a single element for each dim and with a rhs that could be say a list
-            # or empty indexers (so no astyping)
-            # GH 6043, 8669 (empty)
-            if _is_scalar_indexer(indexer):
+            # GH 6043
+            elif _is_scalar_indexer(indexer):
                 values[indexer] = value
 
             # if we are an exact match (ex-broadcasting),
