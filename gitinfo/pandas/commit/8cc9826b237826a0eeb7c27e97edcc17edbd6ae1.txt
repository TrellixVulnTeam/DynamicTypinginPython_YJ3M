commit 8cc9826b237826a0eeb7c27e97edcc17edbd6ae1
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Sun Jul 15 19:24:35 2012 -0400

    BUG: period quarterly -> annual resampling bug, close #1622

diff --git a/RELEASE.rst b/RELEASE.rst
index 171fdbd6c..7e8f5d9ae 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -84,6 +84,7 @@ pandas 0.8.1
   - Fix .ix indexing bugs in duplicate DataFrame index (#1201)
   - Better handle errors with non-existing objects in HDFStore (#1254)
   - Don't copy int64 array data in DatetimeIndex when copy=False (#1624)
+  - Fix resampling of conforming periods quarterly to annual (#1622)
 
 pandas 0.8.0
 ============
diff --git a/pandas/tseries/frequencies.py b/pandas/tseries/frequencies.py
index 08d50c962..e64eebc15 100644
--- a/pandas/tseries/frequencies.py
+++ b/pandas/tseries/frequencies.py
@@ -921,6 +921,9 @@ def is_subperiod(source, target):
     target = target.upper()
     source = source.upper()
     if _is_annual(target):
+        if _is_quarterly(source):
+            return _quarter_months_conform(_get_rule_month(source),
+                                           _get_rule_month(target))
         return source in ['D', 'B', 'M', 'H', 'T', 'S']
     elif _is_quarterly(target):
         return source in ['D', 'B', 'M', 'H', 'T', 'S']
diff --git a/pandas/tseries/tests/test_resample.py b/pandas/tseries/tests/test_resample.py
index 14a05aaf4..1b20ec534 100644
--- a/pandas/tseries/tests/test_resample.py
+++ b/pandas/tseries/tests/test_resample.py
@@ -1,3 +1,5 @@
+# pylint: disable=E1101
+
 from datetime import datetime, timedelta
 
 import numpy as np
@@ -772,6 +774,13 @@ class TestResamplePeriodIndex(unittest.TestCase):
         self.assert_(result.index.equals(ex_index))
         assert_series_equal(result, exp)
 
+    def test_quarterly_resampling(self):
+        rng = period_range('2000Q1', periods=10, freq='Q-DEC')
+        ts = Series(np.arange(10), index=rng)
+
+        result = ts.resample('A')
+        exp = ts.to_timestamp().resample('A').to_period()
+        assert_series_equal(result, exp)
 
 class TestTimeGrouper(unittest.TestCase):
 
