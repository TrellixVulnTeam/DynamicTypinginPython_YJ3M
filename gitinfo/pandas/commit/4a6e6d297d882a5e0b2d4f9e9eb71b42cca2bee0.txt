commit 4a6e6d297d882a5e0b2d4f9e9eb71b42cca2bee0
Author: Chang She <chang@lambdafoundry.com>
Date:   Mon Nov 19 18:18:35 2012 -0500

    ENH: DataFrame.from_records takes iterator #1794

diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 14b435e0a..218c04b6f 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -872,7 +872,7 @@ class DataFrame(NDFrame):
 
     @classmethod
     def from_records(cls, data, index=None, exclude=None, columns=None,
-                     coerce_float=False):
+                     coerce_float=False, nrows=None):
         """
         Convert structured or record ndarray to DataFrame
 
@@ -906,6 +906,33 @@ class DataFrame(NDFrame):
                 raise ValueError('Non-unique columns not yet supported in '
                                  'from_records')
 
+        if com.is_iterator(data):
+            if nrows == 0:
+                return DataFrame()
+
+            try:
+                first_row = data.next()
+            except StopIteration:
+                return DataFrame(index=index, columns=columns)
+
+            dtype = None
+            if hasattr(first_row, 'dtype') and first_row.dtype.names:
+                dtype = first_row.dtype
+
+            values = [first_row]
+
+            i = 1
+            for row in data:
+                values.append(row)
+                i += 1
+                if i >= nrows:
+                    break
+
+            if dtype is not None:
+                data = np.array(values, dtype=dtype)
+            else:
+                data = values
+
         if isinstance(data, (np.ndarray, DataFrame, dict)):
             keys, sdict = _rec_to_dict(data)
             if columns is None:
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index 042c744ef..fea84f5a8 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -2639,6 +2639,19 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
         df = DataFrame.from_records(tuples, columns=['a', 'b', 'c', 'd'])
         self.assert_(np.isnan(df['c'][0]))
 
+    def test_from_records_iterator(self):
+        arr = np.array([(1.0, 2), (3.0, 4), (5., 6), (7., 8)],
+                       dtype=[('x', float), ('y', int)])
+        df = DataFrame.from_records(iter(arr), nrows=2)
+        xp = DataFrame({'x' : np.array([1.0, 3.0], dtype=float),
+                        'y' : np.array([2, 4], dtype=int)})
+        assert_frame_equal(df, xp)
+
+        arr = [(1.0, 2), (3.0, 4), (5., 6), (7., 8)]
+        df = DataFrame.from_records(iter(arr), columns=['x', 'y'],
+                                    nrows=2)
+        assert_frame_equal(df, xp)
+
     def test_from_records_columns_not_modified(self):
         tuples = [(1, 2, 3),
                   (1, 2, 3),
