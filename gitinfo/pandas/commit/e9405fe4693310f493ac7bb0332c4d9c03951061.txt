commit e9405fe4693310f493ac7bb0332c4d9c03951061
Author: Adam Klein <adamklein@gmail.com>
Date:   Tue Jan 3 14:08:46 2012 -0500

    more on boxplot docs

diff --git a/doc/source/visualization.rst b/doc/source/visualization.rst
index b7cc8a564..68a8bb005 100644
--- a/doc/source/visualization.rst
+++ b/doc/source/visualization.rst
@@ -146,6 +146,32 @@ a uniform random variable on [0,1).
    df = DataFrame(np.random.rand(10,5))
    plt.figure();
 
-   @savefig box_blot_ex.png width=4.5in
+   @savefig box_plot_ex.png width=4.5in
    df.boxplot()
 
+You can create a stratified boxplot using the ``by`` keyword argument to create
+groupings.  For instance,
+
+.. ipython:: python
+
+   df = DataFrame(np.random.rand(10,2), columns=['Col1', 'Col2'] )
+   df['X'] = Series(['A','A','A','A','A','B','B','B','B','B'])
+
+   plot.figure();
+
+   @savefig box_plot_ex2.png width=4.5in
+   df.boxplot(by='X')
+
+You can also pass a subset of columns to plot, as well as group by multiple
+columns:
+
+.. ipython:: python
+
+   df = DataFrame(np.random.rand(10,3), columns=['Col1', 'Col2', 'Col3'])
+   df['X'] = Series(['A','A','A','A','A','B','B','B','B','B'])
+   df['Y'] = Series(['A','B','A','B','A','B','A','B','A','B'])
+
+   plot.figure();
+
+   @savefig box_plot_ex3.png width=4.5in
+   df.boxplot(column=['Col1','Col2'], by=['X','Y'])
diff --git a/pandas/tools/plotting.py b/pandas/tools/plotting.py
index 84f9d86fc..abb3e37a0 100644
--- a/pandas/tools/plotting.py
+++ b/pandas/tools/plotting.py
@@ -66,7 +66,7 @@ def boxplot(data, column=None, by=None, ax=None, fontsize=None,
         ax.set_xticklabels(keys, rotation=rot, fontsize=fontsize)
         ax.grid(grid)
 
-    plt.subplots_adjust(bottom=0.15, top=0.9, left=0.1, right=0.9, wspace=0.1)
+    plt.subplots_adjust(bottom=0.15, top=0.9, left=0.1, right=0.9, wspace=0.2)
     return ax
 
 def _stringify(x):
@@ -145,6 +145,7 @@ def _grouped_plot_by_column(plotf, data, columns=None, by=None,
         gp_col = grouped[col]
         plotf(gp_col, ax)
         ax.set_title(col)
+        ax.set_xlabel(str(by))
         ax.grid(grid)
 
     byline = by[0] if len(by) == 1 else by
