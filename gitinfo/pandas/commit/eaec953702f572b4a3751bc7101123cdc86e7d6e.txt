commit eaec953702f572b4a3751bc7101123cdc86e7d6e
Author: jreback <jeff@reback.net>
Date:   Thu Jun 6 10:36:38 2013 -0400

    BUG: (GH3481) revised, fix concat to allow a passed generator as the single arg
    
         (also list/tuple/dict)

diff --git a/RELEASE.rst b/RELEASE.rst
index 8da3b4760..982715680 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -214,6 +214,7 @@ pandas 0.11.1
   - Groupby transform with item-by-item not upcasting correctly (GH3740_)
   - Incorrectly read a HDFStore multi-index Frame witha column specification (GH3748_)
   - ``read_html`` now correctly skips tests (GH3741_)
+  - Fix incorrect arguments passed to concat that are not list-like (e.g. concat(df1,df2)) (GH3481_)
 
 .. _GH3164: https://github.com/pydata/pandas/issues/3164
 .. _GH2786: https://github.com/pydata/pandas/issues/2786
@@ -225,6 +226,7 @@ pandas 0.11.1
 .. _GH3251: https://github.com/pydata/pandas/issues/3251
 .. _GH3379: https://github.com/pydata/pandas/issues/3379
 .. _GH3480: https://github.com/pydata/pandas/issues/3480
+.. _GH3481: https://github.com/pydata/pandas/issues/3481
 .. _GH2852: https://github.com/pydata/pandas/issues/2852
 .. _GH3100: https://github.com/pydata/pandas/issues/3100
 .. _GH3454: https://github.com/pydata/pandas/issues/3454
diff --git a/pandas/tools/merge.py b/pandas/tools/merge.py
index b19d09979..9cdddc47a 100644
--- a/pandas/tools/merge.py
+++ b/pandas/tools/merge.py
@@ -4,7 +4,7 @@ SQL-style merge routines
 
 import itertools
 import numpy as np
-
+import types
 from pandas.core.categorical import Categorical
 from pandas.core.frame import DataFrame, _merge_doc
 from pandas.core.generic import NDFrame
@@ -888,11 +888,11 @@ class _Concatenator(object):
     def __init__(self, objs, axis=0, join='outer', join_axes=None,
                  keys=None, levels=None, names=None,
                  ignore_index=False, verify_integrity=False):
-        if not isinstance(objs, (tuple, list, dict)):
-            raise AssertionError('first argument must be a list of pandas '
+        if not isinstance(objs, (list,tuple,types.GeneratorType,dict)):
+            raise AssertionError('first argument must be a list-like of pandas '
                                  'objects, you passed an object of type '
                                  '"{0}"'.format(type(objs).__name__))
-
+        
         if join == 'outer':
             self.intersect = False
         elif join == 'inner':
diff --git a/pandas/tools/tests/test_merge.py b/pandas/tools/tests/test_merge.py
index e230a5b2d..1c020353e 100644
--- a/pandas/tools/tests/test_merge.py
+++ b/pandas/tools/tests/test_merge.py
@@ -1709,6 +1709,9 @@ class TestConcatenate(unittest.TestCase):
         df2 = mkdf(10, 2)
         self.assertRaises(AssertionError, concat, df1, df2)
 
+        # generator ok though
+        concat(DataFrame(np.random.rand(5,5)) for _ in range(3))
+
 class TestOrderedMerge(unittest.TestCase):
 
     def setUp(self):
