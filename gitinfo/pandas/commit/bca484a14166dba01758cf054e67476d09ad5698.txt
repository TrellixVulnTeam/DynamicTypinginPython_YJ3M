commit bca484a14166dba01758cf054e67476d09ad5698
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Fri May 25 12:35:19 2012 -0400

    ENH: get rid of dummy names in groupby indexes, close #1291

diff --git a/RELEASE.rst b/RELEASE.rst
index ae03d3b25..afd6250a1 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -152,6 +152,7 @@ pandas 0.7.3
   - Calling apply on grouped Series, e.g. describe(), will no longer yield
     DataFrame by default. Will have to call unstack() to get prior behavior
   - NA handling in non-numeric comparisons has been tightened up (#933, #953)
+  - No longer assign dummy names key_0, key_1, etc. to groupby index (#1291)
 
 **Bug fixes**
 
diff --git a/pandas/core/groupby.py b/pandas/core/groupby.py
index e9b2107a5..f9f41bd2f 100644
--- a/pandas/core/groupby.py
+++ b/pandas/core/groupby.py
@@ -1099,8 +1099,6 @@ def _get_grouper(obj, key=None, axis=0, level=None, sort=True):
             name = gpr
             gpr = obj[gpr]
         ping = Grouping(group_axis, gpr, name=name, level=level, sort=sort)
-        if ping.name is None:
-            ping.name = 'key_%d' % i
         groupings.append(ping)
 
     if len(groupings) == 0:
diff --git a/pandas/tests/test_groupby.py b/pandas/tests/test_groupby.py
index 86b7a0b99..368edee6d 100644
--- a/pandas/tests/test_groupby.py
+++ b/pandas/tests/test_groupby.py
@@ -1826,6 +1826,15 @@ class TestGroupBy(unittest.TestCase):
         _check_all(self.df.groupby('A'))
         _check_all(self.df.groupby(['A', 'B']))
 
+    def test_no_dummy_key_names(self):
+        # GH #1291
+
+        result = self.df.groupby(self.df['A'].values).sum()
+        self.assert_(result.index.name is None)
+
+        result = self.df.groupby([self.df['A'].values,
+                                  self.df['B'].values]).sum()
+        self.assert_(result.index.names == [None, None])
 
 def _check_groupby(df, result, keys, field, f=lambda x: x.sum()):
     tups = map(tuple, df[keys].values)
