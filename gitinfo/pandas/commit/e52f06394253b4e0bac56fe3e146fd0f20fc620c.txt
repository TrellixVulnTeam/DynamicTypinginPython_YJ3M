commit e52f06394253b4e0bac56fe3e146fd0f20fc620c
Author: Nicholas Musolino <n.musolino@gmail.com>
Date:   Thu Feb 28 08:35:01 2019 -0500

    Fix minor error in dynamic load function (#25256)

diff --git a/scripts/tests/test_validate_docstrings.py b/scripts/tests/test_validate_docstrings.py
index bb5844984..09fb5a30c 100644
--- a/scripts/tests/test_validate_docstrings.py
+++ b/scripts/tests/test_validate_docstrings.py
@@ -4,6 +4,8 @@ import string
 import textwrap
 import pytest
 import numpy as np
+import pandas as pd
+
 import validate_docstrings
 validate_one = validate_docstrings.validate_one
 
@@ -1004,6 +1006,32 @@ class TestApiItems(object):
         assert result[idx][3] == subsection
 
 
+class TestDocstringClass(object):
+    @pytest.mark.parametrize('name, expected_obj',
+                             [('pandas.isnull', pd.isnull),
+                              ('pandas.DataFrame', pd.DataFrame),
+                              ('pandas.Series.sum', pd.Series.sum)])
+    def test_resolves_class_name(self, name, expected_obj):
+        d = validate_docstrings.Docstring(name)
+        assert d.obj is expected_obj
+
+    @pytest.mark.parametrize('invalid_name', ['panda', 'panda.DataFrame'])
+    def test_raises_for_invalid_module_name(self, invalid_name):
+        msg = 'No module can be imported from "{}"'.format(invalid_name)
+        with pytest.raises(ImportError, match=msg):
+            validate_docstrings.Docstring(invalid_name)
+
+    @pytest.mark.parametrize('invalid_name',
+                             ['pandas.BadClassName',
+                              'pandas.Series.bad_method_name'])
+    def test_raises_for_invalid_attribute_name(self, invalid_name):
+        name_components = invalid_name.split('.')
+        obj_name, invalid_attr_name = name_components[-2], name_components[-1]
+        msg = "'{}' has no attribute '{}'".format(obj_name, invalid_attr_name)
+        with pytest.raises(AttributeError, match=msg):
+            validate_docstrings.Docstring(invalid_name)
+
+
 class TestMainFunction(object):
     def test_exit_status_for_validate_one(self, monkeypatch):
         monkeypatch.setattr(
diff --git a/scripts/validate_docstrings.py b/scripts/validate_docstrings.py
index bce33f7e7..20f32124a 100755
--- a/scripts/validate_docstrings.py
+++ b/scripts/validate_docstrings.py
@@ -267,7 +267,7 @@ class Docstring(object):
             else:
                 continue
 
-        if 'module' not in locals():
+        if 'obj' not in locals():
             raise ImportError('No module can be imported '
                               'from "{}"'.format(name))
 
