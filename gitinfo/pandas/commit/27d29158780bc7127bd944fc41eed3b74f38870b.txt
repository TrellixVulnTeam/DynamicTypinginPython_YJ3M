commit 27d29158780bc7127bd944fc41eed3b74f38870b
Author: yui-knk <spiketeika@gmail.com>
Date:   Tue Jul 12 22:14:09 2016 -0400

    CLN: Fix compile time warnings
    
    This commit suppresses these warnings
    
    warning: comparison of constant -1 with expression\
    of type 'PANDAS_DATETIMEUNIT' is always true\
    [-Wtautological-constant-out-of-range-compare]
    
    Author: yui-knk <spiketeika@gmail.com>
    
    Closes #13607 from yui-knk/fix_c_warning and squashes the following commits:
    
    e9eee1d [yui-knk] CLN: Fix compile time warnings

diff --git a/doc/source/whatsnew/v0.19.0.txt b/doc/source/whatsnew/v0.19.0.txt
index f457b8d4b..fb09f99f2 100644
--- a/doc/source/whatsnew/v0.19.0.txt
+++ b/doc/source/whatsnew/v0.19.0.txt
@@ -536,6 +536,7 @@ Bug Fixes
 - Bug in ``Peirod`` and ``Series`` or ``Index`` comparison raises ``TypeError`` (:issue:`13200`)
 - Bug in ``pd.set_eng_float_format()`` that would prevent NaN's from formatting (:issue:`11981`)
 - Bug in ``.unstack`` with ``Categorical`` dtype resets ``.ordered`` to ``True`` (:issue:`13249`)
+- Clean some compile time warnings in datetime parsing (:issue:`13607`)
 
 
 - Bug in ``Series`` comparison operators when dealing with zero dim NumPy arrays (:issue:`13006`)
diff --git a/pandas/src/datetime/np_datetime_strings.c b/pandas/src/datetime/np_datetime_strings.c
index 3a1d37f86..b633d6cde 100644
--- a/pandas/src/datetime/np_datetime_strings.c
+++ b/pandas/src/datetime/np_datetime_strings.c
@@ -460,7 +460,7 @@ parse_iso_8601_datetime(char *str, int len,
         }
 
         /* Check the casting rule */
-        if (unit != -1 && !can_cast_datetime64_units(bestunit, unit,
+        if (!can_cast_datetime64_units(bestunit, unit,
                                                      casting)) {
             PyErr_Format(PyExc_TypeError, "Cannot parse \"%s\" as unit "
                          "'%s' using casting rule %s",
@@ -503,7 +503,7 @@ parse_iso_8601_datetime(char *str, int len,
         }
 
         /* Check the casting rule */
-        if (unit != -1 && !can_cast_datetime64_units(bestunit, unit,
+        if (!can_cast_datetime64_units(bestunit, unit,
                                                      casting)) {
             PyErr_Format(PyExc_TypeError, "Cannot parse \"%s\" as unit "
                          "'%s' using casting rule %s",
@@ -975,7 +975,7 @@ finish:
     }
 
     /* Check the casting rule */
-    if (unit != -1 && !can_cast_datetime64_units(bestunit, unit,
+    if (!can_cast_datetime64_units(bestunit, unit,
                                                  casting)) {
         PyErr_Format(PyExc_TypeError, "Cannot parse \"%s\" as unit "
                      "'%s' using casting rule %s",
@@ -1005,11 +1005,6 @@ get_datetime_iso_8601_strlen(int local, PANDAS_DATETIMEUNIT base)
 {
     int len = 0;
 
-    /* If no unit is provided, return the maximum length */
-    if (base == -1) {
-        return PANDAS_DATETIME_MAX_ISO8601_STRLEN;
-    }
-
     switch (base) {
         /* Generic units can only be used to represent NaT */
         /*case PANDAS_FR_GENERIC:*/
@@ -1146,28 +1141,13 @@ make_iso_8601_datetime(pandas_datetimestruct *dts, char *outstr, int outlen,
         local = 0;
     }
 
-    /* Automatically detect a good unit */
-    if (base == -1) {
-        base = lossless_unit_from_datetimestruct(dts);
-        /*
-         * If there's a timezone, use at least minutes precision,
-         * and never split up hours and minutes by default
-         */
-        if ((base < PANDAS_FR_m && local) || base == PANDAS_FR_h) {
-            base = PANDAS_FR_m;
-        }
-        /* Don't split up dates by default */
-        else if (base < PANDAS_FR_D) {
-            base = PANDAS_FR_D;
-        }
-    }
     /*
      * Print weeks with the same precision as days.
      *
      * TODO: Could print weeks with YYYY-Www format if the week
      *       epoch is a Monday.
      */
-    else if (base == PANDAS_FR_W) {
+    if (base == PANDAS_FR_W) {
         base = PANDAS_FR_D;
     }
 
diff --git a/pandas/src/ujson/python/objToJSON.c b/pandas/src/ujson/python/objToJSON.c
index 925c18cd2..1080e9548 100644
--- a/pandas/src/ujson/python/objToJSON.c
+++ b/pandas/src/ujson/python/objToJSON.c
@@ -450,7 +450,7 @@ static void *PyUnicodeToUTF8(JSOBJ _obj, JSONTypeContext *tc, void *outValue, si
 
 static void *PandasDateTimeStructToJSON(pandas_datetimestruct *dts, JSONTypeContext *tc, void *outValue, size_t *_outLen)
 {
-  int base = ((PyObjectEncoder*) tc->encoder)->datetimeUnit;
+  PANDAS_DATETIMEUNIT base = ((PyObjectEncoder*) tc->encoder)->datetimeUnit;
 
   if (((PyObjectEncoder*) tc->encoder)->datetimeIso)
   {
