commit 2160b409789ca6535b61f4ed1b60f4bd6f36bce3
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Thu Sep 20 15:37:15 2012 -0400

    BUG: let selecting multiple columns in DataFrame.__getitem__ work when there are duplicates. close #1943

diff --git a/RELEASE.rst b/RELEASE.rst
index eafb72fba..e7bfcb032 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -201,6 +201,8 @@ pandas 0.9.0
     size cutoff (#1821)
   - Handle list keys in addition to tuples in DataFrame.xs when
     partial-indexing a hierarchically-indexed DataFrame (#1796)
+  - Support multiple column selection in DataFrame.__getitem__ with duplicate
+    columns (#1943)
 
 pandas 0.8.1
 ============
diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 01f9f3630..3f5963134 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -1707,14 +1707,18 @@ class DataFrame(NDFrame):
             inds, = key.nonzero()
             return self.take(inds)
         else:
-            indexer = self.columns.get_indexer(key)
-            mask = indexer == -1
-            if mask.any():
-                raise KeyError("No column(s) named: %s" % str(key[mask]))
-            result = self.reindex(columns=key)
-            if result.columns.name is None:
-                result.columns.name = self.columns.name
-            return result
+            if self.columns.is_unique:
+                indexer = self.columns.get_indexer(key)
+                mask = indexer == -1
+                if mask.any():
+                    raise KeyError("No column(s) named: %s" % str(key[mask]))
+                result = self.reindex(columns=key)
+                if result.columns.name is None:
+                    result.columns.name = self.columns.name
+                return result
+            else:
+                mask = self.columns.isin(key)
+                return self.take(mask.nonzero()[0], axis=1)
 
     def _slice(self, slobj, axis=0):
         if axis == 0:
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index c9fee27c3..f5d373b8f 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -1076,6 +1076,17 @@ class CheckIndexing(object):
         exp = df[df[0] > 0]
         assert_frame_equal(result, exp)
 
+    def test_getitem_list_duplicates(self):
+        # #1943
+        df = DataFrame(np.random.randn(4,4), columns=list('AABC'))
+        df.columns.name = 'foo'
+
+        result = df[['B', 'C']]
+        self.assert_(result.columns.name == 'foo')
+
+        expected = df.ix[:, 2:]
+        assert_frame_equal(result, expected)
+
     def test_get_value(self):
         for idx in self.frame.index:
             for col in self.frame.columns:
