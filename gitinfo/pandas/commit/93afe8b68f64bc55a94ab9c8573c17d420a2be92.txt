commit 93afe8b68f64bc55a94ab9c8573c17d420a2be92
Author: Chang She <changshe@gmail.com>
Date:   Mon Oct 8 13:07:58 2012 -0400

    BUG: fix bad ISO8601 datetime parsing #2018

diff --git a/pandas/src/datetime.pyx b/pandas/src/datetime.pyx
index 33e20d44e..8c497bf5f 100644
--- a/pandas/src/datetime.pyx
+++ b/pandas/src/datetime.pyx
@@ -817,6 +817,7 @@ def array_to_datetime(ndarray[object] values, raise_=False, dayfirst=False,
                     _string_to_dts(val, &dts)
                     iresult[i] = pandas_datetimestruct_to_datetime(PANDAS_FR_ns,
                                                                    &dts)
+                    _check_dts_bounds(iresult[i], &dts)
                 except ValueError:
                     try:
                         result[i] = parse(val, dayfirst=dayfirst)
@@ -824,7 +825,7 @@ def array_to_datetime(ndarray[object] values, raise_=False, dayfirst=False,
                         raise TypeError
                     pandas_datetime_to_datetimestruct(iresult[i], PANDAS_FR_ns,
                                                       &dts)
-                _check_dts_bounds(iresult[i], &dts)
+                    _check_dts_bounds(iresult[i], &dts)
         return result
     except TypeError:
         oresult = np.empty(n, dtype=object)
diff --git a/pandas/tseries/tests/test_timeseries.py b/pandas/tseries/tests/test_timeseries.py
index e116822b7..559e35831 100644
--- a/pandas/tseries/tests/test_timeseries.py
+++ b/pandas/tseries/tests/test_timeseries.py
@@ -621,6 +621,10 @@ class TestTimeSeries(unittest.TestCase):
         exp = Timestamp("2012-01-01 00:00:00")
         self.assert_(result[0] == exp)
 
+        result = to_datetime(['20121001']) # bad iso 8601
+        exp = Timestamp('2012-10-01')
+        self.assert_(result[0] == exp)
+
     def test_nat_vector_field_access(self):
         idx = DatetimeIndex(['1/1/2000', None, None, '1/4/2000'])
 
