commit b1da6d9d5e6baece96eda6e90c5777151ea4de77
Author: Chang She <changshe@gmail.com>
Date:   Wed Dec 26 13:29:07 2012 -0500

    BUG: DatetimeEngine does not handle pydatetime with tz #2575

diff --git a/pandas/index.pyx b/pandas/index.pyx
index 75d6140d1..f3d177340 100644
--- a/pandas/index.pyx
+++ b/pandas/index.pyx
@@ -18,7 +18,6 @@ from hashtable cimport *
 from . import algos, tslib, hashtable as _hash
 from .tslib import Timestamp
 
-
 from datetime cimport (get_datetime64_value, _pydatetime_to_dts,
                        pandas_datetimestruct)
 
@@ -30,6 +29,13 @@ cdef extern from "datetime.h":
 
 cdef int64_t iNaT = util.get_nat()
 
+try:
+    from dateutil.tz import tzutc as _du_utc
+    import pytz
+    UTC = pytz.utc
+    have_pytz = True
+except:
+    have_pytz = False
 
 PyDateTime_IMPORT
 
@@ -497,6 +503,13 @@ cdef inline _to_i8(object val):
         if util.is_datetime64_object(val):
             return get_datetime64_value(val)
         elif PyDateTime_Check(val):
-            return _pydatetime_to_dts(val, &dts)
+            tzinfo = getattr(val, 'tzinfo', None)
+            val = _pydatetime_to_dts(val, &dts)
+            if tzinfo is not None and not _is_utc(tzinfo):
+                offset = tslib._get_utcoffset(tzinfo, val)
+                val -= tslib._delta_to_nanoseconds(offset)
+
         return val
 
+cdef inline bint _is_utc(object tz):
+    return tz is UTC or isinstance(tz, _du_utc)
diff --git a/pandas/tseries/tests/test_timezones.py b/pandas/tseries/tests/test_timezones.py
index 2087bc5ab..4fe3fcd72 100644
--- a/pandas/tseries/tests/test_timezones.py
+++ b/pandas/tseries/tests/test_timezones.py
@@ -3,10 +3,10 @@ from datetime import datetime, time, timedelta, tzinfo
 import sys
 import os
 import unittest
-
 import nose
 
 import numpy as np
+import pytz
 
 from pandas import (Index, Series, TimeSeries, DataFrame, isnull,
                     date_range, Timestamp)
@@ -558,6 +558,16 @@ class TestTimeZoneSupport(unittest.TestCase):
         # it works! #2443
         repr(series.index[0])
 
+    def test_getitem_pydatetime_tz(self):
+        index = date_range(start='2012-12-24 16:00',
+                           end='2012-12-24 18:00', freq='H',
+                           tz='Europe/Berlin')
+        ts = Series(index=index, data=index.hour)
+        time_pandas = Timestamp('2012-12-24 17:00', tz='Europe/Berlin')
+        time_datetime = datetime(2012,12,24,17,00,
+                                 tzinfo=pytz.timezone('Europe/Berlin'))
+        self.assertEqual(ts[time_pandas], ts[time_datetime])
+
 
 class TestTimeZones(unittest.TestCase):
     _multiprocess_can_split_ = True
