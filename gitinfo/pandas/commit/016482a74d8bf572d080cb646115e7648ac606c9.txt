commit 016482a74d8bf572d080cb646115e7648ac606c9
Author: Martin Winkel <martin.winkel.pps@gmail.com>
Date:   Sat Feb 22 21:59:05 2020 +0100

    Turned class based tests into function based tests (#32184)

diff --git a/pandas/tests/series/test_validate.py b/pandas/tests/series/test_validate.py
index c4311f507..511d24ca7 100644
--- a/pandas/tests/series/test_validate.py
+++ b/pandas/tests/series/test_validate.py
@@ -1,20 +1,18 @@
 import pytest
 
 
-class TestSeriesValidate:
+@pytest.mark.parametrize(
+    "func",
+    ["reset_index", "_set_name", "sort_values", "sort_index", "rename", "dropna"],
+)
+@pytest.mark.parametrize("inplace", [1, "True", [1, 2, 3], 5.0])
+def test_validate_bool_args(string_series, func, inplace):
     """Tests for error handling related to data types of method arguments."""
+    msg = 'For argument "inplace" expected type bool'
+    kwargs = dict(inplace=inplace)
 
-    @pytest.mark.parametrize(
-        "func",
-        ["reset_index", "_set_name", "sort_values", "sort_index", "rename", "dropna"],
-    )
-    @pytest.mark.parametrize("inplace", [1, "True", [1, 2, 3], 5.0])
-    def test_validate_bool_args(self, string_series, func, inplace):
-        msg = 'For argument "inplace" expected type bool'
-        kwargs = dict(inplace=inplace)
+    if func == "_set_name":
+        kwargs["name"] = "hello"
 
-        if func == "_set_name":
-            kwargs["name"] = "hello"
-
-        with pytest.raises(ValueError, match=msg):
-            getattr(string_series, func)(**kwargs)
+    with pytest.raises(ValueError, match=msg):
+        getattr(string_series, func)(**kwargs)
