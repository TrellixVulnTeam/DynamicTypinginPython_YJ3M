commit 011e2c5ef62c9880ce99ec4e141b8c8dab57b1cc
Author: y-p <yoval@gmx.com>
Date:   Thu Dec 19 23:01:12 2013 +0200

    CLN: Use correct exception types in config.py machinery

diff --git a/pandas/core/config.py b/pandas/core/config.py
index 4bec02985..96d89e960 100644
--- a/pandas/core/config.py
+++ b/pandas/core/config.py
@@ -124,13 +124,13 @@ def _set_option(*args, **kwargs):
     # must at least 1 arg deal with constraints later
     nargs = len(args)
     if not nargs or nargs % 2 != 0:
-        raise AssertionError("Must provide an even number of non-keyword "
+        raise ValueError("Must provide an even number of non-keyword "
                              "arguments")
 
     # must be 0 or 1 kwargs
     nkwargs = len(kwargs)
     if nkwargs not in (0, 1):
-        raise AssertionError("The can only be 0 or 1 keyword arguments")
+        raise ValueError("The can only be 0 or 1 keyword arguments")
 
     # if 1 kwarg then it must be silent=True or silent=False
     if nkwargs:
@@ -365,7 +365,7 @@ class option_context(object):
 
     def __init__(self, *args):
         if not (len(args) % 2 == 0 and len(args) >= 2):
-            raise AssertionError(
+            raise ValueError(
                 'Need to invoke as'
                 'option_context(pat, val, [(pat, val), ...)).'
             )
diff --git a/pandas/tests/test_config.py b/pandas/tests/test_config.py
index 80a3fe9be..2c00a0928 100644
--- a/pandas/tests/test_config.py
+++ b/pandas/tests/test_config.py
@@ -170,14 +170,14 @@ class TestConfig(unittest.TestCase):
 
 
     def test_set_option_empty_args(self):
-        self.assertRaises(AssertionError, self.cf.set_option)
+        self.assertRaises(ValueError, self.cf.set_option)
 
     def test_set_option_uneven_args(self):
-        self.assertRaises(AssertionError, self.cf.set_option, 'a.b', 2, 'b.c')
+        self.assertRaises(ValueError, self.cf.set_option, 'a.b', 2, 'b.c')
 
 
     def test_set_option_2_kwargs(self):
-        self.assertRaises(AssertionError, self.cf.set_option, 'a.b', 2,
+        self.assertRaises(ValueError, self.cf.set_option, 'a.b', 2,
                           silenadf=2, asdf=2)
 
     def test_set_option_invalid_kwargs_key(self):
@@ -189,7 +189,7 @@ class TestConfig(unittest.TestCase):
                           silent=2)
 
     def test_set_option_invalid_single_argument_type(self):
-        self.assertRaises(AssertionError, self.cf.set_option, 2)
+        self.assertRaises(ValueError, self.cf.set_option, 2)
 
     def test_set_option_multiple(self):
         self.cf.register_option('a', 1, 'doc')
