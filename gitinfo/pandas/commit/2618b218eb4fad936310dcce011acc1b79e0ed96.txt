commit 2618b218eb4fad936310dcce011acc1b79e0ed96
Author: jbrockmendel <jbrockmendel@gmail.com>
Date:   Sun Mar 24 11:34:10 2019 -0700

    Move core.config to _config.config (#25793)

diff --git a/pandas/__init__.py b/pandas/__init__.py
index 427157acb..cdf7dafba 100644
--- a/pandas/__init__.py
+++ b/pandas/__init__.py
@@ -36,6 +36,9 @@ except ImportError as e:  # pragma: no cover
 
 from datetime import datetime
 
+from pandas._config import (get_option, set_option, reset_option,
+                            describe_option, option_context, options)
+
 # let init-time option registration happen
 import pandas.core.config_init
 
diff --git a/pandas/_config/__init__.py b/pandas/_config/__init__.py
index 52150f526..78434876b 100644
--- a/pandas/_config/__init__.py
+++ b/pandas/_config/__init__.py
@@ -2,3 +2,9 @@
 pandas._config is considered explicitly upstream of everything else in pandas,
 should have no intra-pandas dependencies.
 """
+__all__ = ["config", "get_option", "set_option", "reset_option",
+           "describe_option", "option_context", "options"]
+from pandas._config import config
+from pandas._config.config import (
+    describe_option, get_option, option_context, options, reset_option,
+    set_option)
diff --git a/pandas/core/config.py b/pandas/_config/config.py
similarity index 99%
rename from pandas/core/config.py
rename to pandas/_config/config.py
index 306311dc8..688080311 100644
--- a/pandas/core/config.py
+++ b/pandas/_config/config.py
@@ -695,7 +695,7 @@ def config_prefix(prefix):
 
     Example:
 
-    import pandas.core.config as cf
+    import pandas._config.config as cf
     with cf.config_prefix("display.font"):
         cf.register_option("color", "red")
         cf.register_option("size", " 5 pt")
diff --git a/pandas/_libs/tslibs/parsing.pyx b/pandas/_libs/tslibs/parsing.pyx
index 7759e165b..70b0f9c05 100644
--- a/pandas/_libs/tslibs/parsing.pyx
+++ b/pandas/_libs/tslibs/parsing.pyx
@@ -30,6 +30,8 @@ from dateutil.relativedelta import relativedelta
 from dateutil.parser import DEFAULTPARSER
 from dateutil.parser import parse as du_parse
 
+from pandas._config import get_option
+
 from pandas._libs.tslibs.ccalendar import MONTH_NUMBERS
 from pandas._libs.tslibs.nattype import nat_strings, NaT
 
@@ -51,20 +53,6 @@ cdef:
 
 # ----------------------------------------------------------------------
 
-_get_option = None
-
-
-def get_option(param):
-    """ Defer import of get_option to break an import cycle that caused
-    significant performance degradation in Period construction. See
-    GH#24118 for details
-    """
-    global _get_option
-    if _get_option is None:
-        from pandas.core.config import get_option
-        _get_option = get_option
-    return _get_option(param)
-
 
 def parse_datetime_string(date_string, freq=None, dayfirst=False,
                           yearfirst=False, **kwargs):
diff --git a/pandas/core/api.py b/pandas/core/api.py
index 8c92287e2..09ca0c823 100644
--- a/pandas/core/api.py
+++ b/pandas/core/api.py
@@ -48,9 +48,6 @@ from pandas.tseries.offsets import DateOffset
 from pandas.core.tools.datetimes import to_datetime
 from pandas.core.tools.timedeltas import to_timedelta
 
-from pandas.core.config import (get_option, set_option, reset_option,
-                                describe_option, option_context, options)
-
 
 # Deprecation: xref gh-16747
 class TimeGrouper(object):
diff --git a/pandas/core/arrays/categorical.py b/pandas/core/arrays/categorical.py
index 48a8f6f6b..2a6cc6c74 100644
--- a/pandas/core/arrays/categorical.py
+++ b/pandas/core/arrays/categorical.py
@@ -5,6 +5,8 @@ from warnings import warn
 
 import numpy as np
 
+from pandas._config import get_option
+
 from pandas._libs import algos as libalgos, lib
 import pandas.compat as compat
 from pandas.compat import lzip
@@ -32,7 +34,6 @@ import pandas.core.algorithms as algorithms
 from pandas.core.algorithms import factorize, take, take_1d, unique1d
 from pandas.core.base import NoNewAttributesMixin, PandasObject, _shared_docs
 import pandas.core.common as com
-from pandas.core.config import get_option
 from pandas.core.missing import interpolate_2d
 from pandas.core.sorting import nargsort
 
diff --git a/pandas/core/arrays/interval.py b/pandas/core/arrays/interval.py
index 1e671c7bd..7b20c7e1b 100644
--- a/pandas/core/arrays/interval.py
+++ b/pandas/core/arrays/interval.py
@@ -3,6 +3,8 @@ import textwrap
 
 import numpy as np
 
+from pandas._config import get_option
+
 from pandas._libs.interval import (
     Interval, IntervalMixin, intervals_to_interval_bounds)
 from pandas.compat import add_metaclass
@@ -24,7 +26,6 @@ from pandas.core.arrays.base import (
     ExtensionArray, _extension_array_shared_docs)
 from pandas.core.arrays.categorical import Categorical
 import pandas.core.common as com
-from pandas.core.config import get_option
 from pandas.core.indexes.base import Index, ensure_index
 
 _VALID_CLOSED = {'left', 'right', 'both', 'neither'}
diff --git a/pandas/core/base.py b/pandas/core/base.py
index 60ab13ac4..5adf01a62 100644
--- a/pandas/core/base.py
+++ b/pandas/core/base.py
@@ -66,7 +66,7 @@ class StringMixin(object):
         Invoked by bytes(obj) in py3 only.
         Yields a bytestring in both py2/py3.
         """
-        from pandas.core.config import get_option
+        from pandas._config import get_option
 
         encoding = get_option("display.encoding")
         return self.__unicode__().encode(encoding, 'replace')
diff --git a/pandas/core/computation/expressions.py b/pandas/core/computation/expressions.py
index a91ef7592..f293b3b33 100644
--- a/pandas/core/computation/expressions.py
+++ b/pandas/core/computation/expressions.py
@@ -10,11 +10,12 @@ import warnings
 
 import numpy as np
 
+from pandas._config import get_option
+
 from pandas.core.dtypes.generic import ABCDataFrame
 
 import pandas.core.common as com
 from pandas.core.computation.check import _NUMEXPR_INSTALLED
-from pandas.core.config import get_option
 
 if _NUMEXPR_INSTALLED:
     import numexpr as ne
diff --git a/pandas/core/config_init.py b/pandas/core/config_init.py
index d42a1ab72..19af321f3 100644
--- a/pandas/core/config_init.py
+++ b/pandas/core/config_init.py
@@ -9,8 +9,8 @@ If you need to make sure options are available even before a certain
 module is imported, register them here rather then in the module.
 
 """
-import pandas.core.config as cf
-from pandas.core.config import (
+import pandas._config.config as cf
+from pandas._config.config import (
     is_bool, is_callable, is_instance_factory, is_int, is_one_of_factory,
     is_text)
 
diff --git a/pandas/core/dtypes/dtypes.py b/pandas/core/dtypes/dtypes.py
index b3d46b7dc..b1fe2940f 100644
--- a/pandas/core/dtypes/dtypes.py
+++ b/pandas/core/dtypes/dtypes.py
@@ -138,7 +138,7 @@ class PandasExtensionDtype(_DtypeOpsMixin):
         Invoked by bytes(obj) in py3 only.
         Yields a bytestring in both py2/py3.
         """
-        from pandas.core.config import get_option
+        from pandas._config import get_option
 
         encoding = get_option("display.encoding")
         return self.__unicode__().encode(encoding, 'replace')
diff --git a/pandas/core/dtypes/missing.py b/pandas/core/dtypes/missing.py
index 697c58a36..94efab1f9 100644
--- a/pandas/core/dtypes/missing.py
+++ b/pandas/core/dtypes/missing.py
@@ -172,7 +172,7 @@ def _use_inf_as_na(key):
     * http://stackoverflow.com/questions/4859217/
       programmatically-creating-variables-in-python/4859312#4859312
     """
-    from pandas.core.config import get_option
+    from pandas._config import get_option
     flag = get_option(key)
     if flag:
         globals()['_isna'] = _isna_old
diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index f43c8a8b3..8aa294d42 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -24,6 +24,8 @@ from typing import List, Union
 import numpy as np
 import numpy.ma as ma
 
+from pandas._config import get_option
+
 from pandas._libs import lib, algos as libalgos
 
 from pandas.util._decorators import (Appender, Substitution,
@@ -84,7 +86,6 @@ from pandas.core.arrays import Categorical, ExtensionArray
 from pandas.core.arrays.datetimelike import (
     DatetimeLikeArrayMixin as DatetimeLikeArray
 )
-from pandas.core.config import get_option
 from pandas.core.generic import NDFrame, _shared_docs
 from pandas.core.index import (Index, MultiIndex, ensure_index,
                                ensure_index_from_sequences)
diff --git a/pandas/core/generic.py b/pandas/core/generic.py
index 1717b0066..e76ef9474 100644
--- a/pandas/core/generic.py
+++ b/pandas/core/generic.py
@@ -11,6 +11,8 @@ import weakref
 
 import numpy as np
 
+from pandas._config import config
+
 from pandas._libs import Timestamp, iNaT, properties
 import pandas.compat as compat
 from pandas.compat import (
@@ -34,7 +36,7 @@ from pandas.core.dtypes.inference import is_hashable
 from pandas.core.dtypes.missing import isna, notna
 
 import pandas as pd
-from pandas.core import config, missing, nanops
+from pandas.core import missing, nanops
 import pandas.core.algorithms as algos
 from pandas.core.base import PandasObject, SelectionMixin
 import pandas.core.common as com
diff --git a/pandas/core/groupby/groupby.py b/pandas/core/groupby/groupby.py
index a57b2cb96..3d9431596 100644
--- a/pandas/core/groupby/groupby.py
+++ b/pandas/core/groupby/groupby.py
@@ -17,6 +17,8 @@ import warnings
 
 import numpy as np
 
+from pandas._config.config import option_context
+
 from pandas._libs import Timestamp, groupby as libgroupby
 import pandas.compat as compat
 from pandas.compat import set_function_name
@@ -37,7 +39,6 @@ import pandas.core.algorithms as algorithms
 from pandas.core.base import (
     DataError, GroupByError, PandasObject, SelectionMixin, SpecificationError)
 import pandas.core.common as com
-from pandas.core.config import option_context
 from pandas.core.frame import DataFrame
 from pandas.core.generic import NDFrame
 from pandas.core.groupby import base
diff --git a/pandas/core/indexes/category.py b/pandas/core/indexes/category.py
index b494c41c3..4493136e3 100644
--- a/pandas/core/indexes/category.py
+++ b/pandas/core/indexes/category.py
@@ -3,6 +3,8 @@ import warnings
 
 import numpy as np
 
+from pandas._config import get_option
+
 from pandas._libs import index as libindex
 import pandas.compat as compat
 from pandas.compat.numpy import function as nv
@@ -19,7 +21,6 @@ from pandas.core import accessor
 from pandas.core.algorithms import take_1d
 from pandas.core.arrays.categorical import Categorical, contains
 import pandas.core.common as com
-from pandas.core.config import get_option
 import pandas.core.indexes.base as ibase
 from pandas.core.indexes.base import Index, _index_shared_docs
 import pandas.core.missing as missing
diff --git a/pandas/core/indexes/interval.py b/pandas/core/indexes/interval.py
index 2c63fe33c..077bfb6a8 100644
--- a/pandas/core/indexes/interval.py
+++ b/pandas/core/indexes/interval.py
@@ -4,6 +4,8 @@ import warnings
 
 import numpy as np
 
+from pandas._config import get_option
+
 from pandas._libs import Timedelta, Timestamp
 from pandas._libs.interval import Interval, IntervalMixin, IntervalTree
 from pandas.compat import add_metaclass
@@ -21,7 +23,6 @@ from pandas.core.dtypes.missing import isna
 
 from pandas.core.arrays.interval import IntervalArray, _interval_shared_docs
 import pandas.core.common as com
-from pandas.core.config import get_option
 import pandas.core.indexes.base as ibase
 from pandas.core.indexes.base import (
     Index, _index_shared_docs, default_pprint, ensure_index)
diff --git a/pandas/core/indexes/multi.py b/pandas/core/indexes/multi.py
index 79c39c72b..e9373c914 100644
--- a/pandas/core/indexes/multi.py
+++ b/pandas/core/indexes/multi.py
@@ -6,6 +6,8 @@ import warnings
 
 import numpy as np
 
+from pandas._config import get_option
+
 from pandas._libs import (
     Timestamp, algos as libalgos, index as libindex, lib, tslibs)
 import pandas.compat as compat
@@ -24,7 +26,6 @@ from pandas.core.dtypes.missing import array_equivalent, isna
 
 import pandas.core.algorithms as algos
 import pandas.core.common as com
-from pandas.core.config import get_option
 import pandas.core.indexes.base as ibase
 from pandas.core.indexes.base import (
     Index, InvalidIndexError, _index_shared_docs, ensure_index)
diff --git a/pandas/core/nanops.py b/pandas/core/nanops.py
index 86c3c3806..5e762325d 100644
--- a/pandas/core/nanops.py
+++ b/pandas/core/nanops.py
@@ -6,6 +6,8 @@ import warnings
 
 import numpy as np
 
+from pandas._config import get_option
+
 from pandas._libs import iNaT, lib, tslibs
 import pandas.compat as compat
 
@@ -19,7 +21,6 @@ from pandas.core.dtypes.dtypes import DatetimeTZDtype
 from pandas.core.dtypes.missing import isna, na_value_for_dtype, notna
 
 import pandas.core.common as com
-from pandas.core.config import get_option
 
 _BOTTLENECK_INSTALLED = False
 _MIN_BOTTLENECK_VERSION = '1.0.0'
diff --git a/pandas/core/series.py b/pandas/core/series.py
index efad1c984..eeeea182e 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -9,6 +9,8 @@ import warnings
 
 import numpy as np
 
+from pandas._config import get_option
+
 from pandas._libs import iNaT, index as libindex, lib, tslibs
 import pandas.compat as compat
 from pandas.compat import PY36, StringIO
@@ -33,7 +35,6 @@ from pandas.core.arrays import ExtensionArray, SparseArray
 from pandas.core.arrays.categorical import Categorical, CategoricalAccessor
 from pandas.core.arrays.sparse import SparseAccessor
 import pandas.core.common as com
-from pandas.core.config import get_option
 from pandas.core.index import (
     Float64Index, Index, InvalidIndexError, MultiIndex, ensure_index)
 from pandas.core.indexes.accessors import CombinedDatetimelikeProperties
diff --git a/pandas/io/excel/_base.py b/pandas/io/excel/_base.py
index e8a2e45a9..a7955bdb5 100644
--- a/pandas/io/excel/_base.py
+++ b/pandas/io/excel/_base.py
@@ -5,6 +5,8 @@ import os
 from textwrap import fill
 import warnings
 
+from pandas._config import config
+
 import pandas.compat as compat
 from pandas.compat import add_metaclass, string_types
 from pandas.errors import EmptyDataError
@@ -13,7 +15,6 @@ from pandas.util._decorators import Appender, deprecate_kwarg
 from pandas.core.dtypes.common import (
     is_bool, is_float, is_integer, is_list_like)
 
-from pandas.core import config
 from pandas.core.frame import DataFrame
 
 from pandas.io.common import _NA_VALUES, _stringify_path, _validate_header_arg
diff --git a/pandas/io/formats/console.py b/pandas/io/formats/console.py
index ad63b3efd..0a035b52d 100644
--- a/pandas/io/formats/console.py
+++ b/pandas/io/formats/console.py
@@ -69,7 +69,7 @@ def get_console_size():
         if in_ipython_frontend():
             # sane defaults for interactive non-shell terminal
             # match default for width,height in config_init
-            from pandas.core.config import get_default_val
+            from pandas._config.config import get_default_val
             terminal_width = get_default_val('display.width')
             terminal_height = get_default_val('display.max_rows')
         else:
diff --git a/pandas/io/formats/format.py b/pandas/io/formats/format.py
index edbef1191..f69678ca0 100644
--- a/pandas/io/formats/format.py
+++ b/pandas/io/formats/format.py
@@ -10,6 +10,8 @@ from functools import partial
 
 import numpy as np
 
+from pandas._config.config import get_option, set_option
+
 from pandas._libs import lib
 from pandas._libs.tslib import format_array_from_datetime
 from pandas._libs.tslibs import NaT, Timedelta, Timestamp, iNaT
@@ -27,7 +29,6 @@ from pandas.core.dtypes.missing import isna, notna
 from pandas import compat
 from pandas.core.base import PandasObject
 import pandas.core.common as com
-from pandas.core.config import get_option, set_option
 from pandas.core.index import Index, ensure_index
 from pandas.core.indexes.datetimes import DatetimeIndex
 
diff --git a/pandas/io/formats/html.py b/pandas/io/formats/html.py
index 07b835007..4c235fed3 100644
--- a/pandas/io/formats/html.py
+++ b/pandas/io/formats/html.py
@@ -8,12 +8,13 @@ from __future__ import print_function
 from collections import OrderedDict
 from textwrap import dedent
 
+from pandas._config import get_option
+
 from pandas.compat import lzip, unichr
 
 from pandas.core.dtypes.generic import ABCMultiIndex
 
 from pandas import compat, option_context
-from pandas.core.config import get_option
 
 from pandas.io.common import _is_url
 from pandas.io.formats.format import TableFormatter, get_level_lengths
diff --git a/pandas/io/formats/printing.py b/pandas/io/formats/printing.py
index ebd011345..70457e0bf 100644
--- a/pandas/io/formats/printing.py
+++ b/pandas/io/formats/printing.py
@@ -4,10 +4,11 @@ printing tools
 
 import sys
 
+from pandas._config import get_option
+
 from pandas.core.dtypes.inference import is_sequence
 
 from pandas import compat
-from pandas.core.config import get_option
 
 
 def adjoin(space, *lists, **kwargs):
diff --git a/pandas/io/formats/style.py b/pandas/io/formats/style.py
index 970d1b4b5..11d30f6b1 100644
--- a/pandas/io/formats/style.py
+++ b/pandas/io/formats/style.py
@@ -12,6 +12,8 @@ from uuid import uuid1
 
 import numpy as np
 
+from pandas._config import get_option
+
 from pandas.util._decorators import Appender
 
 from pandas.core.dtypes.common import is_float, is_string_like
@@ -20,7 +22,6 @@ from pandas.core.dtypes.generic import ABCSeries
 import pandas as pd
 from pandas.api.types import is_dict_like, is_list_like
 import pandas.core.common as com
-from pandas.core.config import get_option
 from pandas.core.generic import _shared_docs
 from pandas.core.indexing import _maybe_numeric_slice, _non_reducing_slice
 
diff --git a/pandas/io/pytables.py b/pandas/io/pytables.py
index 1fc51a675..b0c0727c6 100644
--- a/pandas/io/pytables.py
+++ b/pandas/io/pytables.py
@@ -15,6 +15,8 @@ import warnings
 
 import numpy as np
 
+from pandas._config import config, get_option
+
 from pandas._libs import lib, writers as libwriters
 from pandas._libs.tslibs import timezones
 from pandas.compat import PY3, lrange, string_types
@@ -29,13 +31,11 @@ from pandas import (
     DataFrame, DatetimeIndex, Index, Int64Index, MultiIndex, PeriodIndex,
     Series, SparseDataFrame, SparseSeries, TimedeltaIndex, compat, concat,
     isna, to_datetime)
-from pandas.core import config
 from pandas.core.arrays.categorical import Categorical
 from pandas.core.arrays.sparse import BlockIndex, IntIndex
 from pandas.core.base import StringMixin
 import pandas.core.common as com
 from pandas.core.computation.pytables import Expr, maybe_expression
-from pandas.core.config import get_option
 from pandas.core.index import ensure_index
 from pandas.core.internals import BlockManager, _block_shape, make_block
 
diff --git a/pandas/plotting/_core.py b/pandas/plotting/_core.py
index 5ed6c2f4e..358de30b6 100644
--- a/pandas/plotting/_core.py
+++ b/pandas/plotting/_core.py
@@ -9,6 +9,8 @@ import warnings
 
 import numpy as np
 
+from pandas._config import get_option
+
 import pandas.compat as compat
 from pandas.compat import lrange, string_types
 from pandas.errors import AbstractMethodError
@@ -22,7 +24,6 @@ from pandas.core.dtypes.missing import isna, notna, remove_na_arraylike
 
 from pandas.core.base import PandasObject
 import pandas.core.common as com
-from pandas.core.config import get_option
 from pandas.core.generic import _shared_doc_kwargs, _shared_docs
 
 from pandas.io.formats.printing import pprint_thing
diff --git a/pandas/tests/arrays/categorical/test_repr.py b/pandas/tests/arrays/categorical/test_repr.py
index b71eadb4a..e9ff0f1a7 100644
--- a/pandas/tests/arrays/categorical/test_repr.py
+++ b/pandas/tests/arrays/categorical/test_repr.py
@@ -3,9 +3,8 @@
 import numpy as np
 
 from pandas import (
-    Categorical, CategoricalIndex, Series, date_range, period_range,
-    timedelta_range)
-from pandas.core.config import option_context
+    Categorical, CategoricalIndex, Series, date_range, option_context,
+    period_range, timedelta_range)
 from pandas.tests.arrays.categorical.common import TestCategorical
 
 
diff --git a/pandas/tests/test_config.py b/pandas/tests/config/test_config.py
similarity index 99%
rename from pandas/tests/test_config.py
rename to pandas/tests/config/test_config.py
index 3e1df3e9c..639d4adb3 100644
--- a/pandas/tests/test_config.py
+++ b/pandas/tests/config/test_config.py
@@ -3,8 +3,10 @@ import warnings
 
 import pytest
 
+from pandas._config import config as cf
+from pandas._config.config import OptionError
+
 import pandas as pd
-from pandas.core.config import OptionError
 
 
 class TestConfig(object):
@@ -13,7 +15,7 @@ class TestConfig(object):
     def setup_class(cls):
         from copy import deepcopy
 
-        cls.cf = pd.core.config
+        cls.cf = cf
         cls.gc = deepcopy(getattr(cls.cf, '_global_config'))
         cls.do = deepcopy(getattr(cls.cf, '_deprecated_options'))
         cls.ro = deepcopy(getattr(cls.cf, '_registered_options'))
diff --git a/pandas/tests/dtypes/test_missing.py b/pandas/tests/dtypes/test_missing.py
index 372be27b5..1f774b2c0 100644
--- a/pandas/tests/dtypes/test_missing.py
+++ b/pandas/tests/dtypes/test_missing.py
@@ -7,6 +7,8 @@ from warnings import catch_warnings, filterwarnings
 import numpy as np
 import pytest
 
+from pandas._config import config as cf
+
 from pandas._libs import missing as libmissing
 from pandas._libs.tslibs import iNaT, is_null_datetimelike
 
@@ -19,7 +21,6 @@ from pandas.core.dtypes.missing import (
 import pandas as pd
 from pandas import (
     DatetimeIndex, Float64Index, NaT, Series, TimedeltaIndex, date_range)
-from pandas.core import config as cf
 from pandas.util import testing as tm
 
 
diff --git a/pandas/tests/groupby/test_transform.py b/pandas/tests/groupby/test_transform.py
index b645073fc..ff0dd6b67 100644
--- a/pandas/tests/groupby/test_transform.py
+++ b/pandas/tests/groupby/test_transform.py
@@ -10,7 +10,6 @@ from pandas.core.dtypes.common import ensure_platform_int, is_timedelta64_dtype
 
 import pandas as pd
 from pandas import DataFrame, MultiIndex, Series, Timestamp, concat, date_range
-from pandas.core.config import option_context
 from pandas.core.groupby.groupby import DataError
 from pandas.util import testing as tm
 from pandas.util.testing import assert_frame_equal, assert_series_equal
@@ -445,7 +444,7 @@ def test_transform_mixed_type():
     assert result['d'].dtype == np.float64
 
     # this is by definition a mutating operation!
-    with option_context('mode.chained_assignment', None):
+    with pd.option_context('mode.chained_assignment', None):
         for key, group in grouped:
             res = f(group)
             assert_frame_equal(res, result.loc[key])
diff --git a/pandas/tests/indexes/multi/test_format.py b/pandas/tests/indexes/multi/test_format.py
index 61fa9c039..922ee87c8 100644
--- a/pandas/tests/indexes/multi/test_format.py
+++ b/pandas/tests/indexes/multi/test_format.py
@@ -52,7 +52,7 @@ def test_format_sparse_display():
 
 
 def test_repr_with_unicode_data():
-    with pd.core.config.option_context("display.encoding", 'UTF-8'):
+    with pd.option_context("display.encoding", 'UTF-8'):
         d = {"a": ["\u05d0", 2, 3], "b": [4, 5, 6], "c": [7, 8, 9]}
         index = pd.DataFrame(d).set_index(["a", "b"]).index
         assert "\\u" not in repr(index)  # we don't want unicode-escaped
diff --git a/pandas/tests/indexes/test_base.py b/pandas/tests/indexes/test_base.py
index a0c41ab4b..e937e55d3 100644
--- a/pandas/tests/indexes/test_base.py
+++ b/pandas/tests/indexes/test_base.py
@@ -10,6 +10,8 @@ import sys
 import numpy as np
 import pytest
 
+import pandas._config.config as cf
+
 from pandas._libs.tslib import Timestamp
 from pandas.compat import PY36, StringIO, lrange, lzip
 from pandas.compat.numpy import np_datetime64_compat
@@ -22,7 +24,6 @@ from pandas import (
     CategoricalIndex, DataFrame, DatetimeIndex, Float64Index, Int64Index,
     PeriodIndex, RangeIndex, Series, TimedeltaIndex, UInt64Index, date_range,
     isna, period_range)
-import pandas.core.config as cf
 from pandas.core.index import _get_combined_index, ensure_index_from_sequences
 from pandas.core.indexes.api import Index, MultiIndex
 from pandas.core.sorting import safe_sort
diff --git a/pandas/tests/indexes/test_category.py b/pandas/tests/indexes/test_category.py
index 871a9c197..3058b6f1a 100644
--- a/pandas/tests/indexes/test_category.py
+++ b/pandas/tests/indexes/test_category.py
@@ -3,13 +3,14 @@
 import numpy as np
 import pytest
 
+import pandas._config.config as cf
+
 from pandas._libs import index as libindex
 
 from pandas.core.dtypes.dtypes import CategoricalDtype
 
 import pandas as pd
 from pandas import Categorical, IntervalIndex
-import pandas.core.config as cf
 from pandas.core.indexes.api import CategoricalIndex, Index
 import pandas.util.testing as tm
 from pandas.util.testing import assert_almost_equal
diff --git a/pandas/tests/io/formats/test_format.py b/pandas/tests/io/formats/test_format.py
index 388903bad..309b653e1 100644
--- a/pandas/tests/io/formats/test_format.py
+++ b/pandas/tests/io/formats/test_format.py
@@ -26,9 +26,8 @@ from pandas.compat import (
 
 import pandas as pd
 from pandas import (
-    DataFrame, Index, MultiIndex, NaT, Series, Timestamp, date_range, read_csv)
-from pandas.core.config import (
-    get_option, option_context, reset_option, set_option)
+    DataFrame, Index, MultiIndex, NaT, Series, Timestamp, date_range,
+    get_option, option_context, read_csv, reset_option, set_option)
 import pandas.util.testing as tm
 
 import pandas.io.formats.format as fmt
diff --git a/pandas/tests/io/formats/test_printing.py b/pandas/tests/io/formats/test_printing.py
index 67ff68ac4..a8de784da 100644
--- a/pandas/tests/io/formats/test_printing.py
+++ b/pandas/tests/io/formats/test_printing.py
@@ -2,9 +2,10 @@
 import numpy as np
 import pytest
 
+import pandas._config.config as cf
+
 import pandas as pd
 from pandas import compat
-import pandas.core.config as cf
 
 import pandas.io.formats.format as fmt
 import pandas.io.formats.printing as printing
diff --git a/pandas/tests/io/test_excel.py b/pandas/tests/io/test_excel.py
index 26caddf50..75b84bf17 100644
--- a/pandas/tests/io/test_excel.py
+++ b/pandas/tests/io/test_excel.py
@@ -14,8 +14,7 @@ from pandas.compat import PY36, BytesIO, iteritems
 import pandas.util._test_decorators as td
 
 import pandas as pd
-from pandas import DataFrame, Index, MultiIndex, Series
-from pandas.core.config import get_option, set_option
+from pandas import DataFrame, Index, MultiIndex, Series, get_option, set_option
 import pandas.util.testing as tm
 from pandas.util.testing import ensure_clean, makeCustomDataframe as mkdf
 
diff --git a/pandas/tests/plotting/test_converter.py b/pandas/tests/plotting/test_converter.py
index 957517520..7143ffff9 100644
--- a/pandas/tests/plotting/test_converter.py
+++ b/pandas/tests/plotting/test_converter.py
@@ -5,10 +5,11 @@ import sys
 import numpy as np
 import pytest
 
+import pandas._config.config as cf
+
 from pandas.compat.numpy import np_datetime64_compat
 
 from pandas import Index, Period, Series, Timestamp, date_range
-import pandas.core.config as cf
 import pandas.util.testing as tm
 
 from pandas.tseries.offsets import Day, Micro, Milli, Second
diff --git a/pandas/tests/sparse/test_format.py b/pandas/tests/sparse/test_format.py
index 63018f952..036d3401d 100644
--- a/pandas/tests/sparse/test_format.py
+++ b/pandas/tests/sparse/test_format.py
@@ -6,7 +6,7 @@ import numpy as np
 from pandas.compat import is_platform_32bit, is_platform_windows
 
 import pandas as pd
-from pandas.core.config import option_context
+from pandas import option_context
 import pandas.util.testing as tm
 
 use_32bit_repr = is_platform_windows() or is_platform_32bit()
