commit 57071253d5603f31796da352ea586321319cb334
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Thu Jan 19 23:23:48 2012 -0500

    ENH: don't try to autofmt_xdate if sharex=False in DataFrame.plot

diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 6728d98d1..4baa385d1 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -3628,11 +3628,11 @@ class DataFrame(NDFrame):
             self._bar_plot(axes, subplots=subplots, grid=grid, rot=rot,
                            legend=legend)
 
-        # try to make things prettier
-        try:
-            fig.autofmt_xdate()
-        except Exception:  # pragma: no cover
-            pass
+        if not subplots or (subplots and sharex):
+            try:
+                fig.autofmt_xdate()
+            except Exception:  # pragma: no cover
+                pass
 
         plt.draw_if_interactive()
         if subplots:
diff --git a/pandas/core/series.py b/pandas/core/series.py
index f026e98d1..5a99d456a 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -1781,6 +1781,7 @@ copy : boolean, default False
         Intended to be used in ipython --pylab mode
         """
         import matplotlib.pyplot as plt
+        import pandas.tools.plotting as gfx
 
         if label is not None:
             kwds = kwds.copy()
@@ -1801,6 +1802,7 @@ copy : boolean, default False
                 ax.semilogy(x, self.values.astype(float), style, **kwds)
             else:
                 ax.plot(x, self.values.astype(float), style, **kwds)
+            gfx.format_date_labels(ax)
         elif kind == 'bar':
             xinds = np.arange(N) + 0.25
             ax.bar(xinds, self.values.astype(float), 0.5,
@@ -1815,14 +1817,6 @@ copy : boolean, default False
             ax.set_xticklabels(self.index, rotation=rot, fontsize=fontsize)
 
         ax.grid(grid)
-
-        # try to make things prettier
-        try:
-            fig = plt.gcf()
-            fig.autofmt_xdate()
-        except Exception:  # pragma: no cover
-            pass
-
         plt.draw_if_interactive()
 
         return ax
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index b2d314ce5..4ddc88c16 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -841,6 +841,13 @@ class CheckIndexing(object):
         expected = df.ix[:, 8:14]
         assert_frame_equal(result, expected)
 
+    def test_iget_value(self):
+        for i, row in enumerate(self.frame.index):
+            for j, col in enumerate(self.frame.columns):
+                result = self.frame.iget_value(i, j)
+                expected = self.frame.get_value(row, col)
+                assert_almost_equal(result, expected)
+
 _seriesd = tm.getSeriesData()
 _tsd = tm.getTimeSeriesData()
 
diff --git a/pandas/tools/plotting.py b/pandas/tools/plotting.py
index fd486d835..d0b029c15 100644
--- a/pandas/tools/plotting.py
+++ b/pandas/tools/plotting.py
@@ -99,6 +99,18 @@ def _stringify(x):
     else:
         return str(x)
 
+def format_date_labels(ax):
+    # mini version of autofmt_xdate
+    try:
+        for label in ax.get_xticklabels():
+            label.set_ha('right')
+            label.set_rotation(30)
+        fig = ax.get_figure()
+        fig.subplots_adjust(bottom=0.2)
+    except Exception: # pragma: no cover
+        pass
+
+
 def scatter_plot(data, x, y, by=None, ax=None, figsize=None):
     """
 
