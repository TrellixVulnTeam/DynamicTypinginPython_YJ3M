commit 85d9e5418942bc223c09bc9dec04c5e430a934d8
Author: jbrockmendel <jbrockmendel@gmail.com>
Date:   Mon Dec 30 05:21:20 2019 -0800

    TST: fix maybe_promote dt64tz case, 323 xfails (#30506)

diff --git a/pandas/core/dtypes/cast.py b/pandas/core/dtypes/cast.py
index 946070f8f..fa7b45ec4 100644
--- a/pandas/core/dtypes/cast.py
+++ b/pandas/core/dtypes/cast.py
@@ -6,6 +6,7 @@ import numpy as np
 
 from pandas._libs import lib, tslib, tslibs
 from pandas._libs.tslibs import NaT, OutOfBoundsDatetime, Period, iNaT
+from pandas._libs.tslibs.timezones import tz_compare
 from pandas.util._validators import validate_bool_kwarg
 
 from .common import (
@@ -409,6 +410,14 @@ def maybe_promote(dtype, fill_value=np.nan):
     elif is_datetime64tz_dtype(dtype):
         if isna(fill_value):
             fill_value = NaT
+        elif not isinstance(fill_value, datetime):
+            dtype = np.dtype(np.object_)
+        elif fill_value.tzinfo is None:
+            dtype = np.dtype(np.object_)
+        elif not tz_compare(fill_value.tzinfo, dtype.tz):
+            # TODO: sure we want to cast here?
+            dtype = np.dtype(np.object_)
+
     elif is_extension_array_dtype(dtype) and isna(fill_value):
         fill_value = dtype.na_value
 
diff --git a/pandas/tests/dtypes/cast/test_promote.py b/pandas/tests/dtypes/cast/test_promote.py
index 0939e35bd..69f8f4635 100644
--- a/pandas/tests/dtypes/cast/test_promote.py
+++ b/pandas/tests/dtypes/cast/test_promote.py
@@ -8,7 +8,6 @@ import numpy as np
 import pytest
 
 from pandas._libs.tslibs import NaT
-from pandas.compat import is_platform_windows
 
 from pandas.core.dtypes.cast import maybe_promote
 from pandas.core.dtypes.common import (
@@ -406,7 +405,6 @@ def test_maybe_promote_any_with_datetime64(
     _check_promote(dtype, fill_value, expected_dtype, exp_val_for_scalar)
 
 
-@pytest.mark.xfail(reason="Fails to upcast to object")
 def test_maybe_promote_datetimetz_with_any_numpy_dtype(
     tz_aware_fixture, any_numpy_dtype_reduced
 ):
@@ -427,11 +425,6 @@ def test_maybe_promote_datetimetz_with_datetimetz(tz_aware_fixture, tz_aware_fix
     dtype = DatetimeTZDtype(tz=tz_aware_fixture)
     fill_dtype = DatetimeTZDtype(tz=tz_aware_fixture2)
 
-    from dateutil.tz import tzlocal
-
-    if is_platform_windows() and tz_aware_fixture2 == tzlocal():
-        pytest.xfail("Cannot process fill_value with this dtype, see GH 24310")
-
     # create array of given dtype; casts "1" to correct dtype
     fill_value = pd.Series([10 ** 9], dtype=fill_dtype)[0]
 
@@ -441,7 +434,6 @@ def test_maybe_promote_datetimetz_with_datetimetz(tz_aware_fixture, tz_aware_fix
         expected_dtype = dtype
     else:
         expected_dtype = np.dtype(object)
-        pytest.xfail("fails to cast to object")
 
     _check_promote(dtype, fill_value, expected_dtype, exp_val_for_scalar)
 
