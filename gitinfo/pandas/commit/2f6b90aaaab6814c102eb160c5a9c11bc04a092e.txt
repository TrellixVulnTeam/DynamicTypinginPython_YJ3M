commit 2f6b90aaaab6814c102eb160c5a9c11bc04a092e
Author: Scott Talbert <swt@techie.net>
Date:   Tue Apr 9 13:28:19 2019 -0400

    BUG: Fix loading files from S3 with # characters in URL (GH25945) (#25992)

diff --git a/doc/source/whatsnew/v0.25.0.rst b/doc/source/whatsnew/v0.25.0.rst
index fe047b4a1..c441244b4 100644
--- a/doc/source/whatsnew/v0.25.0.rst
+++ b/doc/source/whatsnew/v0.25.0.rst
@@ -361,6 +361,7 @@ I/O
 - Bug in ``read_csv`` which would not raise ``ValueError`` if a column index in ``usecols`` was out of bounds (:issue:`25623`)
 - Improved the explanation for the failure when value labels are repeated in Stata dta files and suggested work-arounds (:issue:`25772`)
 - Improved :meth:`pandas.read_stata` and :class:`pandas.io.stata.StataReader` to read incorrectly formatted 118 format files saved by Stata (:issue:`25960`)
+- Fixed bug in loading objects from S3 that contain ``#`` characters in the URL (:issue:`25945`)
 
 Plotting
 ^^^^^^^^
diff --git a/pandas/io/s3.py b/pandas/io/s3.py
index f127bb4c8..607eae270 100644
--- a/pandas/io/s3.py
+++ b/pandas/io/s3.py
@@ -10,7 +10,7 @@ from urllib.parse import urlparse as parse_url
 
 def _strip_schema(url):
     """Returns the url without the s3:// part"""
-    result = parse_url(url)
+    result = parse_url(url, allow_fragments=False)
     return result.netloc + result.path
 
 
diff --git a/pandas/tests/io/conftest.py b/pandas/tests/io/conftest.py
index af6f7ac4e..a4e778a68 100644
--- a/pandas/tests/io/conftest.py
+++ b/pandas/tests/io/conftest.py
@@ -59,6 +59,7 @@ def s3_resource(tips_file, jsonl_file):
         moto = pytest.importorskip('moto')
 
         test_s3_files = [
+            ('tips#1.csv', tips_file),
             ('tips.csv', tips_file),
             ('tips.csv.gz', tips_file + '.gz'),
             ('tips.csv.bz2', tips_file + '.bz2'),
diff --git a/pandas/tests/io/parser/test_network.py b/pandas/tests/io/parser/test_network.py
index b36508d89..c8cace611 100644
--- a/pandas/tests/io/parser/test_network.py
+++ b/pandas/tests/io/parser/test_network.py
@@ -198,3 +198,8 @@ class TestS3(object):
             read_csv("s3://pandas-test/large-file.csv", nrows=5)
             # log of fetch_range (start, stop)
             assert ((0, 5505024) in {x.args[-2:] for x in caplog.records})
+
+    def test_read_s3_with_hash_in_key(self, tips_df):
+        # GH 25945
+        result = read_csv('s3://pandas-test/tips#1.csv')
+        tm.assert_frame_equal(tips_df, result)
