commit cb00e5da147af12bf5e7ca9ac9f8acf8d50946f9
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Fri Dec 23 14:49:16 2011 -0500

    TST: some hacking around #538

diff --git a/pandas/core/index.py b/pandas/core/index.py
index 86117a4b9..71a0d3091 100644
--- a/pandas/core/index.py
+++ b/pandas/core/index.py
@@ -709,8 +709,13 @@ class Index(np.ndarray):
     def copy(self, order='C'):
         """
         Overridden ndarray.copy to copy over attributes
+
+        Returns
+        -------
+        cp : Index
+            Returns view on same base ndarray
         """
-        cp = self.view(np.ndarray).copy(order).view(type(self))
+        cp = self.view(np.ndarray).view(type(self))
         cp.__dict__.update(self.__dict__)
         return cp
 
diff --git a/pandas/core/internals.py b/pandas/core/internals.py
index 0f0499c75..aafbfe550 100644
--- a/pandas/core/internals.py
+++ b/pandas/core/internals.py
@@ -441,7 +441,8 @@ class BlockManager(object):
         copy : BlockManager
         """
         copy_blocks = [block.copy(deep=deep) for block in self.blocks]
-        copy_axes = [ax.copy() for ax in self.axes]
+        # copy_axes = [ax.copy() for ax in self.axes]
+        copy_axes = self.axes
         return BlockManager(copy_blocks, copy_axes)
 
     def as_matrix(self, items=None):
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index c03967dd2..75c57d876 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -2254,6 +2254,16 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
         copy = self.mixed_frame.copy()
         self.assert_(copy._data is not self.mixed_frame._data)
 
+    # def test_copy_index_name_checking(self):
+    #     # don't want to be able to modify the index stored elsewhere after
+    #     # making a copy
+
+    #     self.frame.columns.name = None
+    #     cp = self.frame.copy()
+    #     cp.columns.name = 'foo'
+
+    #     self.assert_(self.frame.columns.name is None)
+
     def test_corr(self):
         self.frame['A'][:5] = nan
         self.frame['B'][:10] = nan
diff --git a/pandas/tests/test_series.py b/pandas/tests/test_series.py
index 3d7af6f04..9b1228880 100644
--- a/pandas/tests/test_series.py
+++ b/pandas/tests/test_series.py
@@ -33,6 +33,15 @@ class CheckNameIntegration(object):
         result = self.ts.copy()
         self.assertEquals(result.name, self.ts.name)
 
+    # def test_copy_index_name_checking(self):
+    #     # don't want to be able to modify the index stored elsewhere after
+    #     # making a copy
+
+    #     self.ts.index.name = None
+    #     cp = self.ts.copy()
+    #     cp.index.name = 'foo'
+    #     self.assert_(self.ts.index.name is None)
+
     def test_append_preserve_name(self):
         result = self.ts[:5].append(self.ts[5:])
         self.assertEquals(result.name, self.ts.name)
@@ -1379,10 +1388,14 @@ class TestSeries(unittest.TestCase, CheckNameIntegration):
         self.assert_((b[:2] == 5).all())
 
     def test_align_sameindex(self):
-        a, b = self.ts.align(self.ts)
+        a, b = self.ts.align(self.ts, copy=False)
         self.assert_(a.index is self.ts.index)
         self.assert_(b.index is self.ts.index)
 
+        # a, b = self.ts.align(self.ts, copy=True)
+        # self.assert_(a.index is not self.ts.index)
+        # self.assert_(b.index is not self.ts.index)
+
     def test_reindex(self):
         identity = self.series.reindex(self.series.index)
         self.assertEqual(id(self.series.index), id(identity.index))
