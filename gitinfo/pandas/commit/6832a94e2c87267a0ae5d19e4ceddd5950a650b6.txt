commit 6832a94e2c87267a0ae5d19e4ceddd5950a650b6
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Mon Jun 25 17:44:34 2012 -0400

    ENH: experimental lreshape function

diff --git a/pandas/core/api.py b/pandas/core/api.py
index df164575e..8cf3b7f4c 100644
--- a/pandas/core/api.py
+++ b/pandas/core/api.py
@@ -15,7 +15,8 @@ from pandas.core.series import Series, TimeSeries
 from pandas.core.frame import DataFrame
 from pandas.core.panel import Panel
 from pandas.core.groupby import groupby
-from pandas.core.reshape import pivot_simple as pivot, get_dummies
+from pandas.core.reshape import (pivot_simple as pivot, get_dummies,
+                                 lreshape)
 
 WidePanel = Panel
 
diff --git a/pandas/core/common.py b/pandas/core/common.py
index 7d94e55c6..4db15c6c6 100644
--- a/pandas/core/common.py
+++ b/pandas/core/common.py
@@ -914,3 +914,15 @@ else:
             self.stream.write(data)
             # empty queue
             self.queue.truncate(0)
+
+
+_NS_DTYPE = np.dtype('M8[ns]')
+
+def _concat_compat(to_concat):
+    if all(x.dtype == _NS_DTYPE for x in to_concat):
+        # work around NumPy 1.6 bug
+        new_values = np.concatenate([x.view(np.int64) for x in to_concat])
+        return new_values.view(_NS_DTYPE)
+    else:
+        return np.concatenate(to_concat)
+
diff --git a/pandas/core/reshape.py b/pandas/core/reshape.py
index 08d45ddf6..8703de4b3 100644
--- a/pandas/core/reshape.py
+++ b/pandas/core/reshape.py
@@ -12,6 +12,7 @@ from pandas.core.categorical import Categorical
 from pandas.core.common import notnull, _ensure_platform_int
 from pandas.core.groupby import (get_group_index, _compress_group_index,
                                  decons_group_index)
+import pandas.core.common as com
 import pandas.lib as lib
 
 
@@ -559,6 +560,56 @@ def melt(frame, id_vars=None, value_vars=None):
     mdata['variable'] = np.asarray(frame.columns).repeat(N)
     return DataFrame(mdata, columns=mcolumns)
 
+
+def lreshape(data, groups, dropna=True, label=None):
+    """
+    Reshape long-format data to wide. Generalized inverse of DataFrame.pivot
+
+    Parameters
+    ----------
+    data :
+    groups : dict
+    na_action :
+
+    Returns
+    -------
+    reshaped : DataFrame
+    """
+    if isinstance(groups, dict):
+        keys = groups.keys()
+        values = groups.values()
+    else:
+        keys, values = zip(*groups)
+
+    all_cols = list(set.union(*[set(x) for x in values]))
+    id_cols = list(data.columns.diff(all_cols))
+
+    K = len(values[0])
+
+    for seq in values:
+        if len(seq) != K:
+            raise ValueError('All column lists must be same length')
+
+    mdata = {}
+    pivot_cols = []
+
+    for target, names in zip(keys, values):
+        mdata[target] = com._concat_compat([data[col].values for col in names])
+        pivot_cols.append(target)
+
+    for col in id_cols:
+        mdata[col] = np.tile(data[col].values, K)
+
+    if dropna:
+        mask = np.ones(len(mdata[pivot_cols[0]]), dtype=bool)
+        for c in pivot_cols:
+            mask &= notnull(mdata[c])
+        if not mask.all():
+            mdata = dict((k, v[mask]) for k, v in mdata.iteritems())
+
+    return DataFrame(mdata, columns=id_cols + pivot_cols)
+
+
 def convert_dummies(data, cat_variables, prefix_sep='_'):
     """
     Compute DataFrame with specified columns converted to dummy variables (0 /
diff --git a/pandas/tests/test_reshape.py b/pandas/tests/test_reshape.py
index 036ee8677..e37fd13b5 100644
--- a/pandas/tests/test_reshape.py
+++ b/pandas/tests/test_reshape.py
@@ -1,8 +1,20 @@
+# pylint: disable-msg=W0612,E1101
+from copy import deepcopy
+from datetime import datetime, timedelta
+from StringIO import StringIO
+import cPickle as pickle
+import operator
+import os
+import unittest
+
+import nose
+
 from pandas import DataFrame
 
+from numpy import nan
 import numpy as np
 
-from pandas.core.reshape import melt, convert_dummies
+from pandas.core.reshape import melt, convert_dummies, lreshape
 import pandas.util.testing as tm
 
 def test_melt():
@@ -38,8 +50,80 @@ def test_convert_dummies():
     tm.assert_frame_equal(result, expected)
     tm.assert_frame_equal(result2, expected2)
 
+class Test_lreshape(unittest.TestCase):
+
+    def test_pairs(self):
+        data = {'birthdt': ['08jan2009', '20dec2008', '30dec2008',
+                            '21dec2008', '11jan2009'],
+                'birthwt': [1766, 3301, 1454, 3139, 4133],
+                'id': [101, 102, 103, 104, 105],
+                'sex': ['Male', 'Female', 'Female', 'Female', 'Female'],
+                'visitdt1': ['11jan2009', '22dec2008', '04jan2009',
+                             '29dec2008', '20jan2009'],
+                'visitdt2': ['21jan2009', nan, '22jan2009', '31dec2008', '03feb2009'],
+                'visitdt3': ['05feb2009', nan, nan, '02jan2009', '15feb2009'],
+                'wt1': [1823, 3338, 1549, 3298, 4306],
+                'wt2': [2011.0, nan, 1892.0, 3338.0, 4575.0],
+                'wt3': [2293.0, nan, nan, 3377.0, 4805.0]}
+
+        df = DataFrame(data)
+
+        spec = {'visitdt': ['visitdt%d' % i for i in range(1, 4)],
+                'wt': ['wt%d' % i for i in range(1, 4)]}
+        result = lreshape(df, spec)
+
+        exp_data = {'birthdt': ['08jan2009', '20dec2008', '30dec2008',
+                                '21dec2008', '11jan2009', '08jan2009',
+                                '30dec2008', '21dec2008', '11jan2009',
+                                '08jan2009', '21dec2008', '11jan2009'],
+                    'birthwt': [1766, 3301, 1454, 3139, 4133, 1766,
+                                1454, 3139, 4133, 1766, 3139, 4133],
+                    'id': [101, 102, 103, 104, 105, 101,
+                           103, 104, 105, 101, 104, 105],
+                    'sex': ['Male', 'Female', 'Female', 'Female', 'Female',
+                            'Male', 'Female', 'Female', 'Female', 'Male',
+                            'Female', 'Female'],
+                    'visitdt': ['11jan2009', '22dec2008', '04jan2009', '29dec2008',
+                                '20jan2009', '21jan2009', '22jan2009', '31dec2008',
+                                '03feb2009', '05feb2009', '02jan2009', '15feb2009'],
+                    'wt': [1823.0, 3338.0, 1549.0, 3298.0, 4306.0, 2011.0,
+                           1892.0, 3338.0, 4575.0, 2293.0, 3377.0, 4805.0]}
+        exp = DataFrame(exp_data, columns=result.columns)
+        tm.assert_frame_equal(result, exp)
+
+        result = lreshape(df, spec, dropna=False)
+        exp_data = {'birthdt': ['08jan2009', '20dec2008', '30dec2008',
+                                '21dec2008', '11jan2009',
+                                '08jan2009', '20dec2008', '30dec2008',
+                                '21dec2008', '11jan2009',
+                                '08jan2009', '20dec2008', '30dec2008',
+                                '21dec2008', '11jan2009'],
+                    'birthwt': [1766, 3301, 1454, 3139, 4133,
+                                1766, 3301, 1454, 3139, 4133,
+                                1766, 3301, 1454, 3139, 4133],
+                    'id': [101, 102, 103, 104, 105,
+                           101, 102, 103, 104, 105,
+                           101, 102, 103, 104, 105],
+                    'sex': ['Male', 'Female', 'Female', 'Female', 'Female',
+                            'Male', 'Female', 'Female', 'Female', 'Female',
+                            'Male', 'Female', 'Female', 'Female', 'Female'],
+                    'visitdt': ['11jan2009', '22dec2008', '04jan2009',
+                                '29dec2008', '20jan2009',
+                                '21jan2009', nan, '22jan2009',
+                                '31dec2008', '03feb2009',
+                                '05feb2009', nan, nan, '02jan2009', '15feb2009'],
+                    'wt': [1823.0, 3338.0, 1549.0, 3298.0, 4306.0, 2011.0,
+                           nan, 1892.0, 3338.0, 4575.0, 2293.0, nan, nan,
+                           3377.0, 4805.0]}
+        exp = DataFrame(exp_data, columns=result.columns)
+        tm.assert_frame_equal(result, exp)
+
+        spec = {'visitdt': ['visitdt%d' % i for i in range(1, 3)],
+                'wt': ['wt%d' % i for i in range(1, 4)]}
+        self.assertRaises(ValueError, lreshape, df, spec)
+
+
 if __name__ == '__main__':
-    import nose
     nose.runmodule(argv=[__file__,'-vvs','-x','--pdb', '--pdb-failure'],
                    exit=False)
 
