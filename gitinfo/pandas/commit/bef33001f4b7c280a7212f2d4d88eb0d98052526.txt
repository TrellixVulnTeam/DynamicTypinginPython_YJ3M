commit bef33001f4b7c280a7212f2d4d88eb0d98052526
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Wed May 9 09:01:33 2012 -0400

    ENH: always sort pivot table columns per #1181

diff --git a/pandas/tools/pivot.py b/pandas/tools/pivot.py
index 770859376..146cba827 100644
--- a/pandas/tools/pivot.py
+++ b/pandas/tools/pivot.py
@@ -1,6 +1,7 @@
 # pylint: disable=E1103
 
 from pandas import Series, DataFrame
+from pandas.core.index import MultiIndex
 from pandas.core.reshape import _unstack_multiple
 from pandas.tools.merge import concat
 import pandas.core.common as com
@@ -103,6 +104,12 @@ def pivot_table(data, values=None, rows=None, cols=None, aggfunc='mean',
 
     table = agged.unstack(to_unstack)
 
+    if isinstance(table, DataFrame):
+        if isinstance(table.columns, MultiIndex):
+            table = table.sortlevel(axis=1)
+        else:
+            table = table.sort_index(axis=1)
+
     if fill_value is not None:
         table = table.fillna(value=fill_value)
 
diff --git a/pandas/tools/tests/test_pivot.py b/pandas/tools/tests/test_pivot.py
index bb3143737..423fae8eb 100644
--- a/pandas/tools/tests/test_pivot.py
+++ b/pandas/tools/tests/test_pivot.py
@@ -171,6 +171,53 @@ class TestPivotTable(unittest.TestCase):
         expected = grouped.unstack('b').unstack('c').dropna(axis=1, how='all')
         tm.assert_frame_equal(table, expected)
 
+    def test_pivot_columns_lexsorted(self):
+        import datetime
+        import numpy as np
+        import pandas
+
+        n = 10000
+
+        dtype = np.dtype([
+            ("Index", object),
+            ("Symbol", object),
+            ("Year", int),
+            ("Month", int),
+            ("Day", int),
+            ("Quantity", int),
+            ("Price", float),
+        ])
+
+        products = np.array([
+            ('SP500', 'ADBE'),
+            ('SP500', 'NVDA'),
+            ('SP500', 'ORCL'),
+            ('NDQ100', 'AAPL'),
+            ('NDQ100', 'MSFT'),
+            ('NDQ100', 'GOOG'),
+            ('FTSE', 'DGE.L'),
+            ('FTSE', 'TSCO.L'),
+            ('FTSE', 'GSK.L'),
+        ], dtype=[('Index', object), ('Symbol', object)])
+        items = np.empty(n, dtype=dtype)
+        iproduct = np.random.randint(0, len(products), n)
+        items['Index'] = products['Index'][iproduct]
+        items['Symbol'] = products['Symbol'][iproduct]
+        dr = pandas.date_range(datetime.date(2000, 1, 1),
+                               datetime.date(2010, 12, 31))
+        dates = dr[np.random.randint(0, len(dr), n)]
+        items['Year'] = dates.year
+        items['Month'] = dates.month
+        items['Day'] = dates.day
+        items['Price'] = np.random.lognormal(4.0, 2.0, n)
+
+        df = DataFrame(items)
+
+        pivoted = df.pivot_table('Price', rows=['Month', 'Day'],
+                                 cols=['Index', 'Symbol', 'Year'],
+                                 aggfunc='mean')
+
+        self.assert_(pivoted.columns.is_monotonic)
 
 class TestCrosstab(unittest.TestCase):
 
