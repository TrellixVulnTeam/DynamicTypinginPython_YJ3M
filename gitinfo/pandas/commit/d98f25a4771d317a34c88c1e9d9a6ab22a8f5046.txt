commit d98f25a4771d317a34c88c1e9d9a6ab22a8f5046
Author: Licht Takeuchi <licht-t@outlook.jp>
Date:   Tue May 8 19:35:10 2018 +0900

    BUG: Fix wrong khash method definition (#20966)

diff --git a/doc/source/whatsnew/v0.23.0.txt b/doc/source/whatsnew/v0.23.0.txt
index c1f588b00..c6991bc01 100644
--- a/doc/source/whatsnew/v0.23.0.txt
+++ b/doc/source/whatsnew/v0.23.0.txt
@@ -1255,6 +1255,7 @@ Indexing
 - Bug in partial string indexing on a ``Series/DataFrame`` with a monotonic decreasing ``DatetimeIndex`` (:issue:`19362`)
 - Bug in performing in-place operations on a ``DataFrame`` with a duplicate ``Index`` (:issue:`17105`)
 - Bug in :meth:`IntervalIndex.get_loc` and :meth:`IntervalIndex.get_indexer` when used with an :class:`IntervalIndex` containing a single interval (:issue:`17284`, :issue:`20921`)
+- Bug in ``.loc`` with a ``uint64`` indexer (:issue:`20722`)
 
 MultiIndex
 ^^^^^^^^^^
diff --git a/pandas/_libs/khash.pxd b/pandas/_libs/khash.pxd
index b1d965c36..4c00e273b 100644
--- a/pandas/_libs/khash.pxd
+++ b/pandas/_libs/khash.pxd
@@ -84,9 +84,9 @@ cdef extern from "khash_python.h":
     kh_uint64_t* kh_init_uint64() nogil
     void kh_destroy_uint64(kh_uint64_t*) nogil
     void kh_clear_uint64(kh_uint64_t*) nogil
-    khint_t kh_get_uint64(kh_uint64_t*, int64_t) nogil
+    khint_t kh_get_uint64(kh_uint64_t*, uint64_t) nogil
     void kh_resize_uint64(kh_uint64_t*, khint_t) nogil
-    khint_t kh_put_uint64(kh_uint64_t*, int64_t, int*) nogil
+    khint_t kh_put_uint64(kh_uint64_t*, uint64_t, int*) nogil
     void kh_del_uint64(kh_uint64_t*, khint_t) nogil
 
     bint kh_exist_uint64(kh_uint64_t*, khiter_t) nogil
diff --git a/pandas/tests/indexing/test_loc.py b/pandas/tests/indexing/test_loc.py
index 6ccff7e89..2e52154d7 100644
--- a/pandas/tests/indexing/test_loc.py
+++ b/pandas/tests/indexing/test_loc.py
@@ -784,3 +784,22 @@ Region_1,Site_2,3977723089,A,5/20/2015 8:33,5/20/2015 9:09,Yes,No"""
             index=pd.MultiIndex.from_product(keys))
 
         tm.assert_series_equal(result, expected)
+
+    def test_loc_uint64(self):
+        # GH20722
+        # Test whether loc accept uint64 max value as index.
+        s = pd.Series([1, 2],
+                      index=[np.iinfo('uint64').max - 1,
+                             np.iinfo('uint64').max])
+
+        result = s.loc[np.iinfo('uint64').max - 1]
+        expected = s.iloc[0]
+        assert result == expected
+
+        result = s.loc[[np.iinfo('uint64').max - 1]]
+        expected = s.iloc[[0]]
+        tm.assert_series_equal(result, expected)
+
+        result = s.loc[[np.iinfo('uint64').max - 1,
+                       np.iinfo('uint64').max]]
+        tm.assert_series_equal(result, s)
