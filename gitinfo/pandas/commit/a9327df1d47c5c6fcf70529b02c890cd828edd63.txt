commit a9327df1d47c5c6fcf70529b02c890cd828edd63
Author: rjfs <rafajfsantos@gmail.com>
Date:   Fri Jul 10 14:53:59 2020 +0100

    BUG: fix read_excel error for header=None and index_col as list #31783 (#35035)

diff --git a/doc/source/whatsnew/v1.1.0.rst b/doc/source/whatsnew/v1.1.0.rst
index 5dff6d729..798a3d838 100644
--- a/doc/source/whatsnew/v1.1.0.rst
+++ b/doc/source/whatsnew/v1.1.0.rst
@@ -1053,6 +1053,7 @@ I/O
 - Bug in :meth:`~HDFStore.create_table` now raises an error when `column` argument was not specified in `data_columns` on input (:issue:`28156`)
 - :meth:`read_json` now could read line-delimited json file from a file url while `lines` and `chunksize` are set.
 - Bug in :meth:`DataFrame.to_sql` when reading DataFrames with ``-np.inf`` entries with MySQL now has a more explicit ``ValueError`` (:issue:`34431`)
+- Bug in :meth:`read_excel` that was raising a ``TypeError`` when ``header=None`` and ``index_col`` given as list (:issue:`31783`)
 - Bug in "meth"`read_excel` where datetime values are used in the header in a `MultiIndex` (:issue:`34748`)
 
 Plotting
diff --git a/pandas/io/excel/_base.py b/pandas/io/excel/_base.py
index 4fa4f158e..2a12f7792 100644
--- a/pandas/io/excel/_base.py
+++ b/pandas/io/excel/_base.py
@@ -468,7 +468,9 @@ class _BaseExcelReader(metaclass=abc.ABCMeta):
 
             if is_list_like(index_col):
                 # Forward fill values for MultiIndex index.
-                if not is_list_like(header):
+                if header is None:
+                    offset = 0
+                elif not is_list_like(header):
                     offset = 1 + header
                 else:
                     offset = 1 + max(header)
diff --git a/pandas/tests/io/excel/test_readers.py b/pandas/tests/io/excel/test_readers.py
index ddc631532..b610c5ec3 100644
--- a/pandas/tests/io/excel/test_readers.py
+++ b/pandas/tests/io/excel/test_readers.py
@@ -968,6 +968,19 @@ class TestReaders:
 
         pd.read_excel("test1" + read_ext)
 
+    def test_no_header_with_list_index_col(self, read_ext):
+        # GH 31783
+        file_name = "testmultiindex" + read_ext
+        data = [("B", "B"), ("key", "val"), (3, 4), (3, 4)]
+        idx = pd.MultiIndex.from_tuples(
+            [("A", "A"), ("key", "val"), (1, 2), (1, 2)], names=(0, 1)
+        )
+        expected = pd.DataFrame(data, index=idx, columns=(2, 3))
+        result = pd.read_excel(
+            file_name, sheet_name="index_col_none", index_col=[0, 1], header=None
+        )
+        tm.assert_frame_equal(expected, result)
+
 
 class TestExcelFileRead:
     @pytest.fixture(autouse=True)
