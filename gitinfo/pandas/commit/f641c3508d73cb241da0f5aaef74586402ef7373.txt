commit f641c3508d73cb241da0f5aaef74586402ef7373
Author: alimcmaster1 <alimcmaster1@gmail.com>
Date:   Sun Jan 13 18:58:59 2019 +0000

    CLN: More isort (#24745)

diff --git a/pandas/tests/computation/test_compat.py b/pandas/tests/computation/test_compat.py
index c25ef4bf3..7cc373d06 100644
--- a/pandas/tests/computation/test_compat.py
+++ b/pandas/tests/computation/test_compat.py
@@ -1,11 +1,11 @@
-import pytest
 from distutils.version import LooseVersion
 
-import pandas as pd
+import pytest
 
+import pandas as pd
+from pandas.core.computation.check import _MIN_NUMEXPR_VERSION
 from pandas.core.computation.engines import _engines
 import pandas.core.computation.expr as expr
-from pandas.core.computation.check import _MIN_NUMEXPR_VERSION
 
 
 def test_compat():
diff --git a/pandas/tests/computation/test_eval.py b/pandas/tests/computation/test_eval.py
index 1649c9938..c1ba15f42 100644
--- a/pandas/tests/computation/test_eval.py
+++ b/pandas/tests/computation/test_eval.py
@@ -1,39 +1,34 @@
-import warnings
-import operator
 from distutils.version import LooseVersion
 from itertools import product
+import operator
+import warnings
 
+import numpy as np
+from numpy.random import rand, randint, randn
 import pytest
 
-from numpy.random import randn, rand, randint
-import numpy as np
+from pandas.compat import PY3, reduce
+from pandas.errors import PerformanceWarning
+import pandas.util._test_decorators as td
 
 from pandas.core.dtypes.common import is_bool, is_list_like, is_scalar
-import pandas as pd
-from pandas.errors import PerformanceWarning
-from pandas import DataFrame, Series, Panel, date_range
-from pandas.util.testing import makeCustomDataframe as mkdf
 
+import pandas as pd
+from pandas import DataFrame, Panel, Series, date_range
 from pandas.core.computation import pytables
 from pandas.core.computation.check import _NUMEXPR_VERSION
-from pandas.core.computation.engines import _engines, NumExprClobberingError
-from pandas.core.computation.expr import PythonExprVisitor, PandasExprVisitor
+from pandas.core.computation.engines import NumExprClobberingError, _engines
+import pandas.core.computation.expr as expr
+from pandas.core.computation.expr import PandasExprVisitor, PythonExprVisitor
 from pandas.core.computation.expressions import (
-    _USE_NUMEXPR, _NUMEXPR_INSTALLED)
+    _NUMEXPR_INSTALLED, _USE_NUMEXPR)
 from pandas.core.computation.ops import (
-    _binary_ops_dict,
-    _special_case_arith_ops_syms,
-    _arith_ops_syms, _bool_ops_syms,
-    _unary_math_ops, _binary_math_ops)
-
-import pandas.core.computation.expr as expr
+    _arith_ops_syms, _binary_math_ops, _binary_ops_dict, _bool_ops_syms,
+    _special_case_arith_ops_syms, _unary_math_ops)
 import pandas.util.testing as tm
-import pandas.util._test_decorators as td
-from pandas.util.testing import (assert_frame_equal, randbool,
-                                 assert_numpy_array_equal, assert_series_equal,
-                                 assert_produces_warning)
-from pandas.compat import PY3, reduce
-
+from pandas.util.testing import (
+    assert_frame_equal, assert_numpy_array_equal, assert_produces_warning,
+    assert_series_equal, makeCustomDataframe as mkdf, randbool)
 
 _series_frame_incompatible = _bool_ops_syms
 _scalar_skip = 'in', 'not in'
diff --git a/pandas/tests/extension/arrow/test_bool.py b/pandas/tests/extension/arrow/test_bool.py
index 2ace0fadc..15ceb6adf 100644
--- a/pandas/tests/extension/arrow/test_bool.py
+++ b/pandas/tests/extension/arrow/test_bool.py
@@ -2,12 +2,12 @@ import numpy as np
 import pytest
 
 import pandas as pd
-import pandas.util.testing as tm
 from pandas.tests.extension import base
+import pandas.util.testing as tm
 
 pytest.importorskip('pyarrow', minversion="0.10.0")
 
-from .bool import ArrowBoolArray, ArrowBoolDtype
+from .bool import ArrowBoolArray, ArrowBoolDtype  # isort:skip
 
 
 @pytest.fixture
diff --git a/pandas/tests/extension/test_sparse.py b/pandas/tests/extension/test_sparse.py
index 39a138ed5..21dbf9524 100644
--- a/pandas/tests/extension/test_sparse.py
+++ b/pandas/tests/extension/test_sparse.py
@@ -1,11 +1,12 @@
 import numpy as np
 import pytest
 
+from pandas.errors import PerformanceWarning
+
 import pandas as pd
-import pandas.util.testing as tm
 from pandas import SparseArray, SparseDtype
-from pandas.errors import PerformanceWarning
 from pandas.tests.extension import base
+import pandas.util.testing as tm
 
 
 def make_data(fill_value):
diff --git a/pandas/tests/internals/test_internals.py b/pandas/tests/internals/test_internals.py
index 7147761d2..fe0706efd 100644
--- a/pandas/tests/internals/test_internals.py
+++ b/pandas/tests/internals/test_internals.py
@@ -1,32 +1,29 @@
 # -*- coding: utf-8 -*-
 # pylint: disable=W0102
 
-from datetime import datetime, date
+from datetime import date, datetime
+from distutils.version import LooseVersion
+import itertools
 import operator
+import re
 import sys
-import pytest
+
 import numpy as np
+import pytest
 
-import re
-from distutils.version import LooseVersion
-import itertools
-from pandas import (Index, MultiIndex, DataFrame, DatetimeIndex,
-                    Series, Categorical, SparseArray)
-
-from pandas.compat import OrderedDict, lrange
-from pandas.core.arrays import (
-    DatetimeArray,
-    TimedeltaArray,
-)
-from pandas.core.internals import (SingleBlockManager,
-                                   make_block, BlockManager)
+from pandas._libs.internals import BlockPlacement
+from pandas.compat import OrderedDict, lrange, u, zip
+
+import pandas as pd
+from pandas import (
+    Categorical, DataFrame, DatetimeIndex, Index, MultiIndex, Series,
+    SparseArray)
 import pandas.core.algorithms as algos
+from pandas.core.arrays import DatetimeArray, TimedeltaArray
+from pandas.core.internals import BlockManager, SingleBlockManager, make_block
 import pandas.util.testing as tm
-import pandas as pd
-from pandas._libs.internals import BlockPlacement
-from pandas.util.testing import (assert_almost_equal, assert_frame_equal,
-                                 randn, assert_series_equal)
-from pandas.compat import zip, u
+from pandas.util.testing import (
+    assert_almost_equal, assert_frame_equal, assert_series_equal, randn)
 
 # in 3.6.1 a c-api slicing function changed, see src/compat_helper.h
 PY361 = LooseVersion(sys.version) >= LooseVersion('3.6.1')
diff --git a/pandas/tests/tools/test_numeric.py b/pandas/tests/tools/test_numeric.py
index a0a1364f4..537881f3a 100644
--- a/pandas/tests/tools/test_numeric.py
+++ b/pandas/tests/tools/test_numeric.py
@@ -1,12 +1,12 @@
-import pytest
 import decimal
 
 import numpy as np
+from numpy import iinfo
+import pytest
+
 import pandas as pd
 from pandas import to_numeric
-
 from pandas.util import testing as tm
-from numpy import iinfo
 
 
 class TestToNumeric(object):
diff --git a/setup.cfg b/setup.cfg
index 3b7d1da9a..48c56caa0 100644
--- a/setup.cfg
+++ b/setup.cfg
@@ -115,16 +115,6 @@ force_sort_within_sections=True
 skip=
     pandas/core/api.py,
     pandas/core/frame.py,
-    pandas/tests/api/test_types.py,
-    pandas/tests/api/test_api.py,
-    pandas/tests/tools/test_numeric.py,
-    pandas/tests/internals/test_internals.py,
-    pandas/tests/extension/test_sparse.py,
-    pandas/tests/extension/base/reduce.py,
-    pandas/tests/computation/test_compat.py,
-    pandas/tests/computation/test_eval.py,
-    pandas/types/common.py,
-    pandas/tests/extension/arrow/test_bool.py,
     doc/source/conf.py,
     asv_bench/benchmarks/algorithms.py,
     asv_bench/benchmarks/attrs_caching.py,
