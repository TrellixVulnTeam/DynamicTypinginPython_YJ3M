commit c7e3cdbb66ad73518b93e63852971cdee96b59ab
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Mon Oct 24 22:20:10 2011 -0400

    BLD: docstring fixes to suppress 2to3 warnings

diff --git a/RELEASE.rst b/RELEASE.rst
index 4e3f0e3c9..8492aa873 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -203,6 +203,7 @@ feedback on the library.
   - Various int32 -> int64 platform-specific issues
   - Don't be too aggressive converting to integer when parsing file with
     MultiIndex (GH #285)
+  - Fix bug when slicing Series with negative indices before beginning
 
 Thanks
 ------
diff --git a/pandas/core/common.py b/pandas/core/common.py
index 13b80c1d8..329648855 100644
--- a/pandas/core/common.py
+++ b/pandas/core/common.py
@@ -394,15 +394,15 @@ class EngFormatter(object):
         """ Formats a number in engineering notation, appending a letter
         representing the power of 1000 of the original number. Some examples:
 
-        >>> format_eng(0)       for self.precision = 0
+        >>> format_eng(0)      # for self.precision = 0
         '0'
 
-        >>> format_eng(1000000) for self.precision = 1,
-                                    self.use_eng_prefix = True
+        >>> format_eng(1000000) # for self.precision = 1,
+                                #     self.use_eng_prefix = True
         '1.0M'
 
-        >>> format_eng("-1e-6") for self.precision = 2
-                                    self.use_eng_prefix = False
+        >>> format_eng("-1e-6") # for self.precision = 2
+                                #     self.use_eng_prefix = False
         '-1.00E-06'
 
         @param num: the value to represent
diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 747d271b6..062b18e20 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -133,7 +133,7 @@ class DataFrame(NDFrame):
         >>> df = DataFrame(data=d, index=index)
         >>> df2 = DataFrame(np.random.randn(10, 5))
         >>> df3 = DataFrame(np.random.randn(10, 5),
-                            columns=['a', 'b', 'c', 'd', 'e'])
+        ...                 columns=['a', 'b', 'c', 'd', 'e'])
         """
 
         if data is None:
@@ -1959,7 +1959,7 @@ class DataFrame(NDFrame):
 
         Examples
         --------
-        >>> df.apply(numpy.sqrt) --> DataFrame
+        >>> df.apply(numpy.sqrt) # returns DataFrame
         >>> df.apply(numpy.sum, axis=0) # equiv to df.sum(0)
         >>> df.apply(numpy.sum, axis=1) # equiv to df.sum(1)
 
diff --git a/pandas/core/groupby.py b/pandas/core/groupby.py
index 99eaad9ca..78d2c9f4e 100644
--- a/pandas/core/groupby.py
+++ b/pandas/core/groupby.py
@@ -669,7 +669,7 @@ class SeriesGroupBy(GroupBy):
         q  3.5   0.5  7
 
         >>> grouped.agg({'result' : lambda x: x.mean() / x.std(),
-                         'total' : np.sum})
+        ...              'total' : np.sum})
            result  total
         b  2.121   3
         q  4.95    7
diff --git a/pandas/tools/pivot.py b/pandas/tools/pivot.py
index 070fddb8f..980405969 100644
--- a/pandas/tools/pivot.py
+++ b/pandas/tools/pivot.py
@@ -35,7 +35,7 @@ def pivot_table(data, values=None, rows=None, cols=None, aggfunc=np.mean,
     8  bar two large  7
 
     >>> table = pivot_table(df, values='D', rows=['A, 'B'],
-                            cols=['C'], aggfunc=np.sum)
+    ...                     cols=['C'], aggfunc=np.sum)
     >>> table
               small  large
     foo  one  1      4
