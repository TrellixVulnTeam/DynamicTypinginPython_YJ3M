commit 7b7c0a0fbcaaf65818baaa84e45607a0dacc8c00
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Wed Jun 13 22:45:44 2012 -0400

    TST: unit test for #1459

diff --git a/pandas/core/series.py b/pandas/core/series.py
index 8e8116c03..2f525ebb7 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -2562,6 +2562,50 @@ copy : boolean, default False
     def weekday(self):
         return Series([d.weekday() for d in self.index], index=self.index)
 
+    def tz_convert(self, tz, copy=True):
+        """
+        Convert TimeSeries to target time zone
+
+        Parameters
+        ----------
+        tz : string or pytz.timezone object
+        copy : boolean, default True
+            Also make a copy of the underlying data
+
+        Returns
+        -------
+        converted : TimeSeries
+        """
+        new_index = self.index.tz_convert(tz)
+
+        new_values = self.values
+        if copy:
+            new_values = new_values.copy()
+
+        return Series(new_values, index=new_index, name=self.name)
+
+    def tz_localize(self, tz, copy=True):
+        """
+        Localize tz-naive TimeSeries to target time zone
+
+        Parameters
+        ----------
+        tz : string or pytz.timezone object
+        copy : boolean, default True
+            Also make a copy of the underlying data
+
+        Returns
+        -------
+        localized : TimeSeries
+        """
+        new_index = self.index.tz_localize(tz)
+
+        new_values = self.values
+        if copy:
+            new_values = new_values.copy()
+
+        return Series(new_values, index=new_index, name=self.name)
+
 
 _INDEX_TYPES = ndarray, Index, list, tuple
 
@@ -2766,50 +2810,6 @@ class TimeSeries(Series):
                                    include_start=include_start,
                                    include_end=include_end)
 
-    def tz_convert(self, tz, copy=True):
-        """
-        Convert TimeSeries to target time zone
-
-        Parameters
-        ----------
-        tz : string or pytz.timezone object
-        copy : boolean, default True
-            Also make a copy of the underlying data
-
-        Returns
-        -------
-        converted : TimeSeries
-        """
-        new_index = self.index.tz_convert(tz)
-
-        new_values = self.values
-        if copy:
-            new_values = new_values.copy()
-
-        return Series(new_values, index=new_index, name=self.name)
-
-    def tz_localize(self, tz, copy=True):
-        """
-        Localize tz-naive TimeSeries to target time zone
-
-        Parameters
-        ----------
-        tz : string or pytz.timezone object
-        copy : boolean, default True
-            Also make a copy of the underlying data
-
-        Returns
-        -------
-        localized : TimeSeries
-        """
-        new_index = self.index.tz_localize(tz)
-
-        new_values = self.values
-        if copy:
-            new_values = new_values.copy()
-
-        return Series(new_values, index=new_index, name=self.name)
-
     def to_timestamp(self, freq=None, how='start', copy=True):
         """
         Cast to datetimeindex of timestamps, at *beginning* of period
diff --git a/pandas/tseries/index.py b/pandas/tseries/index.py
index 94ae6fbf3..5f577fe3f 100644
--- a/pandas/tseries/index.py
+++ b/pandas/tseries/index.py
@@ -1154,7 +1154,16 @@ class DatetimeIndex(Int64Index):
             except:
                 return False
 
-        return self.tz == other.tz and np.array_equal(self.asi8, other.asi8)
+        if self.tz is not None:
+            if other.tz is None:
+                return False
+            same_zone = self.tz.zone == other.tz.zone
+        else:
+            if other.tz is not None:
+                return False
+            same_zone = True
+
+        return same_zone and np.array_equal(self.asi8, other.asi8)
 
     def insert(self, loc, item):
         """
diff --git a/pandas/tseries/tests/test_resample.py b/pandas/tseries/tests/test_resample.py
index c292b4110..139676410 100644
--- a/pandas/tseries/tests/test_resample.py
+++ b/pandas/tseries/tests/test_resample.py
@@ -18,6 +18,14 @@ import pandas.util.testing as tm
 
 bday = BDay()
 
+
+def _skip_if_no_pytz():
+    try:
+        import pytz
+    except ImportError:
+        raise nose.SkipTest
+
+
 class TestResample(unittest.TestCase):
 
     def setUp(self):
@@ -421,6 +429,7 @@ class TestResample(unittest.TestCase):
         expected = ts.resample('W-SUN')
         assert_series_equal(resampled, expected)
 
+
 def _simple_ts(start, end, freq='D'):
     rng = date_range(start, end, freq=freq)
     return Series(np.random.randn(len(rng)), index=rng)
@@ -634,6 +643,22 @@ class TestResamplePeriodIndex(unittest.TestCase):
         expected = ts.asfreq('W-THU', method='ffill')
         assert_series_equal(result, expected)
 
+    def test_resample_tz_localized(self):
+        dr = date_range(start='2012-4-13', end='2012-5-1')
+        ts = Series(range(len(dr)), dr)
+
+        ts_utc = ts.tz_localize('UTC')
+        ts_local = ts_utc.tz_convert('America/Los_Angeles')
+
+        result = ts_local.resample('W')
+
+        ts_local_naive = ts_local.copy()
+        ts_local_naive.index = [x.replace(tzinfo=None)
+                                for x in ts_local_naive.index.to_pydatetime()]
+
+        exp = ts_local_naive.resample('W').tz_localize('America/Los_Angeles')
+
+        assert_series_equal(result, exp)
 
 class TestTimeGrouper(unittest.TestCase):
 
