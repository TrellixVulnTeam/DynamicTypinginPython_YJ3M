commit 8d847fb8e52d7aea8f608f8957a13beaf8f5eea6
Author: Chang She <changshe@gmail.com>
Date:   Thu Dec 13 22:41:45 2012 -0500

    BUG: DataFrame.from_dict does not work with dict of sequence and orient=index #2496

diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 3788e10d4..6c1fe5839 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -883,19 +883,19 @@ class DataFrame(NDFrame):
         -------
         DataFrame
         """
+        index, columns = None, None
         orient = orient.lower()
         if orient == 'index':
-            # TODO: this should be seriously cythonized
-            new_data = OrderedDict()
-            for index, s in data.iteritems():
-                for col, v in s.iteritems():
-                    new_data[col]= new_data.get(col,OrderedDict())
-                    new_data[col][index] = v
-            data = new_data
+            if len(data) > 0:
+                #TODO speed up Series case
+                if isinstance(data.values()[0], (Series, dict)):
+                    data = _from_nested_dict(data)
+                else:
+                    data, index = data.values(), data.keys()
         elif orient != 'columns':  # pragma: no cover
             raise ValueError('only recognize index or columns for orient')
 
-        return DataFrame(data, dtype=dtype)
+        return DataFrame(data, index=index, columns=columns, dtype=dtype)
 
     def to_dict(self, outtype='dict'):
         """
@@ -5522,6 +5522,14 @@ def _homogenize(data, index, dtype=None):
 
     return homogenized
 
+def _from_nested_dict(data):
+    # TODO: this should be seriously cythonized
+    new_data = OrderedDict()
+    for index, s in data.iteritems():
+        for col, v in s.iteritems():
+            new_data[col]= new_data.get(col,OrderedDict())
+            new_data[col][index] = v
+    return new_data
 
 def _put_str(s, space):
     return ('%s' % s)[:space].ljust(space)
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index 0c5ca5533..a52fb9944 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -2329,6 +2329,13 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
         expected = self.mixed_frame.sort_index()
         assert_frame_equal(recons, expected)
 
+        # dict of sequence
+        a = {'hi': [32, 3, 3],
+             'there': [3, 5, 3]}
+        rs = DataFrame.from_dict(a, orient='index')
+        xp = DataFrame.from_dict(a).T.reindex(a.keys())
+        assert_frame_equal(rs, xp)
+
     def test_constructor_Series_named(self):
         a = Series([1, 2, 3], index=['a', 'b', 'c'], name='x')
         df = DataFrame(a)
