commit 1e245f1e915907bd4c7be42ea888f069714a8b7a
Author: jbrockmendel <jbrockmendel@gmail.com>
Date:   Tue Apr 7 09:24:07 2020 -0700

    TST: implement test_setitem for Series (#33348)

diff --git a/pandas/tests/indexes/datetimes/test_indexing.py b/pandas/tests/indexes/datetimes/test_indexing.py
index 58e2afc86..0df8f7f47 100644
--- a/pandas/tests/indexes/datetimes/test_indexing.py
+++ b/pandas/tests/indexes/datetimes/test_indexing.py
@@ -477,7 +477,7 @@ class TestGetLoc:
 
 
 class TestContains:
-    def test_index_dupes_contains(self):
+    def test_dti_contains_with_duplicates(self):
         d = datetime(2011, 12, 5, 20, 30)
         ix = DatetimeIndex([d, d])
         assert d in ix
diff --git a/pandas/tests/series/indexing/test_datetime.py b/pandas/tests/series/indexing/test_datetime.py
index 18c11f2b9..cf91d1fed 100644
--- a/pandas/tests/series/indexing/test_datetime.py
+++ b/pandas/tests/series/indexing/test_datetime.py
@@ -684,21 +684,6 @@ test NaT support
 """
 
 
-def test_set_none_nan():
-    series = Series(date_range("1/1/2000", periods=10))
-    series[3] = None
-    assert series[3] is NaT
-
-    series[3:5] = None
-    assert series[4] is NaT
-
-    series[5] = np.nan
-    assert series[5] is NaT
-
-    series[5:7] = np.nan
-    assert series[6] is NaT
-
-
 def test_setitem_tuple_with_datetimetz():
     # GH 20441
     arr = date_range("2017", periods=4, tz="US/Eastern")
diff --git a/pandas/tests/series/indexing/test_setitem.py b/pandas/tests/series/indexing/test_setitem.py
new file mode 100644
index 000000000..3463de25a
--- /dev/null
+++ b/pandas/tests/series/indexing/test_setitem.py
@@ -0,0 +1,19 @@
+import numpy as np
+
+from pandas import NaT, Series, date_range
+
+
+class TestSetitemDT64Values:
+    def test_setitem_none_nan(self):
+        series = Series(date_range("1/1/2000", periods=10))
+        series[3] = None
+        assert series[3] is NaT
+
+        series[3:5] = None
+        assert series[4] is NaT
+
+        series[5] = np.nan
+        assert series[5] is NaT
+
+        series[5:7] = np.nan
+        assert series[6] is NaT
