commit f8b0b9fa2b5811a8c49d7096dbe47254e341054e
Author: Inevitable-Marzipan <43890311+Inevitable-Marzipan@users.noreply.github.com>
Date:   Thu Jun 27 19:16:27 2019 +0100

    BUG/TST:  fillna limit checks and tests (#27077)

diff --git a/doc/source/whatsnew/v0.25.0.rst b/doc/source/whatsnew/v0.25.0.rst
index e697c34c8..0853a5962 100644
--- a/doc/source/whatsnew/v0.25.0.rst
+++ b/doc/source/whatsnew/v0.25.0.rst
@@ -693,6 +693,7 @@ Missing
 
 - Fixed misleading exception message in :meth:`Series.interpolate` if argument ``order`` is required, but omitted (:issue:`10633`, :issue:`24014`).
 - Fixed class type displayed in exception message in :meth:`DataFrame.dropna` if invalid ``axis`` parameter passed (:issue:`25555`)
+- A ``ValueError`` will now be thrown by :meth:`DataFrame.fillna` when ``limit`` is not a positive integer (:issue:`27042`)
 -
 
 MultiIndex
diff --git a/pandas/core/internals/blocks.py b/pandas/core/internals/blocks.py
index c6be56df7..0b2af9391 100644
--- a/pandas/core/internals/blocks.py
+++ b/pandas/core/internals/blocks.py
@@ -344,12 +344,6 @@ class Block(PandasObject):
         """
         inplace = validate_bool_kwarg(inplace, 'inplace')
 
-        if not self._can_hold_na:
-            if inplace:
-                return self
-            else:
-                return self.copy()
-
         mask = isna(self.values)
         if limit is not None:
             if not is_integer(limit):
@@ -361,6 +355,12 @@ class Block(PandasObject):
                                           "is currently limited to 2")
             mask[mask.cumsum(self.ndim - 1) > limit] = False
 
+        if not self._can_hold_na:
+            if inplace:
+                return self
+            else:
+                return self.copy()
+
         # fillna, but if we cannot coerce, then try again as an ObjectBlock
         try:
             values, _ = self._try_coerce_args(self.values, value)
diff --git a/pandas/tests/frame/test_missing.py b/pandas/tests/frame/test_missing.py
index a1dbeba36..c72951ac4 100644
--- a/pandas/tests/frame/test_missing.py
+++ b/pandas/tests/frame/test_missing.py
@@ -516,6 +516,22 @@ class TestDataFrameMissingData:
         # it works!
         df.fillna(np.nan)
 
+    @pytest.mark.parametrize("type", [int, float])
+    def test_fillna_positive_limit(self, type):
+        df = DataFrame(np.random.randn(10, 4)).astype(type)
+
+        msg = "Limit must be greater than 0"
+        with pytest.raises(ValueError, match=msg):
+            df.fillna(0, limit=-5)
+
+    @pytest.mark.parametrize("type", [int, float])
+    def test_fillna_integer_limit(self, type):
+        df = DataFrame(np.random.randn(10, 4)).astype(type)
+
+        msg = "Limit must be an integer"
+        with pytest.raises(ValueError, match=msg):
+            df.fillna(0, limit=0.5)
+
     def test_fillna_inplace(self):
         df = DataFrame(np.random.randn(10, 4))
         df[1][:4] = np.nan
