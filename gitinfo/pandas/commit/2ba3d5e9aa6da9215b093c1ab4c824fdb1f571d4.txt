commit 2ba3d5e9aa6da9215b093c1ab4c824fdb1f571d4
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Sun Jan 10 02:42:23 2010 +0000

    fixed unit tests
    
    git-svn-id: http://pandas.googlecode.com/svn/trunk@110 d5231056-7de3-11de-ac95-d976489f1ece

diff --git a/pandas/stats/moments.py b/pandas/stats/moments.py
new file mode 100644
index 000000000..8b1378917
--- /dev/null
+++ b/pandas/stats/moments.py
@@ -0,0 +1 @@
+
diff --git a/pandas/stats/tests/test_fama_macbeth.py b/pandas/stats/tests/test_fama_macbeth.py
index dd035e0b4..f91b71b0d 100644
--- a/pandas/stats/tests/test_fama_macbeth.py
+++ b/pandas/stats/tests/test_fama_macbeth.py
@@ -3,7 +3,7 @@ from pandas.stats.tests.common import assert_almost_equal, BaseTest
 
 class TestFamaMacBeth(BaseTest):
     def testFamaMacBethRolling(self):
-        self.checkFamaMacBethExtended(ROLLING, self.panel_x, self.panel_y)
+        self.checkFamaMacBethExtended('rolling', self.panel_x, self.panel_y)
 
     def checkFamaMacBethExtended(self, window_type, x, y, **kwds):
         window = 25
@@ -15,7 +15,7 @@ class TestFamaMacBeth(BaseTest):
         time = len(index)
 
         for i in xrange(time - window + 1):
-            if window_type == ROLLING:
+            if window_type == 'rolling':
                 start = index[i]
             else:
                 start = index[0]
diff --git a/pandas/stats/tests/test_ols.py b/pandas/stats/tests/test_ols.py
index 59b6bfdaf..e5f875488 100644
--- a/pandas/stats/tests/test_ols.py
+++ b/pandas/stats/tests/test_ols.py
@@ -57,12 +57,12 @@ class TestOLS(BaseTest):
         self.checkOLS(exog, endog, x, y)
 
         if not skip_moving:
-            self.checkMovingOLS(ROLLING, x, y)
-            self.checkMovingOLS(ROLLING, x, y, nw_lags=0)
-            self.checkMovingOLS(EXPANDING, x, y, nw_lags=0)
-            self.checkMovingOLS(ROLLING, x, y, nw_lags=1)
-            self.checkMovingOLS(EXPANDING, x, y, nw_lags=1)
-            self.checkMovingOLS(EXPANDING, x, y, nw_lags=1, nw_overlap=True)
+            self.checkMovingOLS('rolling', x, y)
+            self.checkMovingOLS('rolling', x, y, nw_lags=0)
+            self.checkMovingOLS('expanding', x, y, nw_lags=0)
+            self.checkMovingOLS('rolling', x, y, nw_lags=1)
+            self.checkMovingOLS('expanding', x, y, nw_lags=1)
+            self.checkMovingOLS('expanding', x, y, nw_lags=1, nw_overlap=True)
 
     def checkOLS(self, exog, endog, x, y):
         reference = sm.OLS(endog, sm.add_constant(exog)).fit()
@@ -95,7 +95,7 @@ class TestOLS(BaseTest):
             index = moving.y.major_axis
 
         for n, i in enumerate(moving._valid_indices):
-            if window_type == ROLLING and i >= window:
+            if window_type == 'rolling' and i >= window:
                 prior_date = index[i - window + 1]
             else:
                 prior_date = index[0]
@@ -347,31 +347,32 @@ class TestPanelOLS(BaseTest):
 
     def testRollingWithEntityCluster(self):
         self.checkMovingOLS(self.panel_x, self.panel_y,
-                            cluster=ENTITY)
+                            cluster='entity')
 
     def testRollingWithTimeEffectsAndEntityCluster(self):
         self.checkMovingOLS(self.panel_x, self.panel_y,
-                            time_effects=True, cluster=ENTITY)
+                            time_effects=True, cluster='entity')
 
     def testRollingWithTimeCluster(self):
         self.checkMovingOLS(self.panel_x, self.panel_y,
-                            cluster=TIME)
+                            cluster='time')
 
     def testRollingWithNeweyWestAndEntityCluster(self):
         self.checkMovingOLS(self.panel_x, self.panel_y,
-                            nw_lags=1, cluster=ENTITY)
+                            nw_lags=1, cluster='entity')
 
     def testRollingWithNeweyWestAndTimeEffectsAndEntityCluster(self):
         self.checkMovingOLS(self.panel_x, self.panel_y,
-                            nw_lags=1, cluster=ENTITY, time_effects=True)
+                            nw_lags=1, cluster='entity',
+                            time_effects=True)
 
     def testExpanding(self):
-        self.checkMovingOLS(self.panel_x, self.panel_y, window_type=EXPANDING)
+        self.checkMovingOLS(self.panel_x, self.panel_y, window_type='expanding')
 
     def testNonPooled(self):
         self.checkNonPooled(y=self.panel_y, x=self.panel_x)
         self.checkNonPooled(y=self.panel_y, x=self.panel_x,
-                            window_type=ROLLING, window=25, min_periods=10)
+                            window_type='rolling', window=25, min_periods=10)
 
     def checkNonPooled(self, x, y, **kwds):
         # For now, just check that it doesn't crash
@@ -381,7 +382,7 @@ class TestPanelOLS(BaseTest):
         for attr in NonPooledPanelOLS.ATTRIBUTES:
             _check_repr(getattr(result, attr))
 
-    def checkMovingOLS(self, x, y, window_type=ROLLING, **kwds):
+    def checkMovingOLS(self, x, y, window_type='rolling', **kwds):
         window = 25  # must be larger than rank of x
 
         moving = ols(y=y, x=x, window_type=window_type,
@@ -393,7 +394,7 @@ class TestPanelOLS(BaseTest):
             index = moving.y.major_axis
 
         for n, i in enumerate(moving._valid_indices):
-            if window_type == ROLLING and i >= window:
+            if window_type == 'rolling' and i >= window:
                 prior_date = index[i - window + 1]
             else:
                 prior_date = index[0]
