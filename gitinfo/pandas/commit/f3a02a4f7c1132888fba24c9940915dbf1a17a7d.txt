commit f3a02a4f7c1132888fba24c9940915dbf1a17a7d
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Sat Jan 19 21:45:37 2013 -0500

    BUG: don't lose time zone in DatetimeIndex.drop. close #2621

diff --git a/RELEASE.rst b/RELEASE.rst
index c5c5bbf0c..d68deeab3 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -91,6 +91,7 @@ pandas 0.10.1
     but empty record list (GH2633_)
   - Fix C parser-tokenizer bug with trailing fields. (GH2668_)
   - Don't exclude non-numeric data from GroupBy.max/min (GH2700_)
+  - Don't lose time zone when calling DatetimeIndex.drop (GH2621_)
 
 **API Changes**
 
@@ -108,6 +109,7 @@ pandas 0.10.1
 .. _GH2604: https://github.com/pydata/pandas/issues/2604
 .. _GH2576: https://github.com/pydata/pandas/issues/2576
 .. _GH2616: https://github.com/pydata/pandas/issues/2616
+.. _GH2621: https://github.com/pydata/pandas/issues/2621
 .. _GH2625: https://github.com/pydata/pandas/issues/2625
 .. _GH2643: https://github.com/pydata/pandas/issues/2643
 .. _GH2631: https://github.com/pydata/pandas/issues/2631
diff --git a/pandas/tseries/index.py b/pandas/tseries/index.py
index 891d7a1b5..e45c21084 100644
--- a/pandas/tseries/index.py
+++ b/pandas/tseries/index.py
@@ -1346,6 +1346,17 @@ class DatetimeIndex(Int64Index):
                                     self[loc:].asi8))
         return DatetimeIndex(new_index, freq='infer')
 
+    def delete(self, loc):
+        """
+        Make new DatetimeIndex with passed location deleted
+
+        Returns
+        -------
+        new_index : DatetimeIndex
+        """
+        arr = np.delete(self.values, loc)
+        return DatetimeIndex(arr, tz=self.tz)
+
     def _view_like(self, ndarray):
         result = ndarray.view(type(self))
         result.offset = self.offset
diff --git a/pandas/tseries/tests/test_timezones.py b/pandas/tseries/tests/test_timezones.py
index afba12dd0..5b5c79f8a 100644
--- a/pandas/tseries/tests/test_timezones.py
+++ b/pandas/tseries/tests/test_timezones.py
@@ -589,6 +589,12 @@ class TestTimeZoneSupport(unittest.TestCase):
                                  tzinfo=pytz.timezone('Europe/Berlin'))
         self.assertEqual(ts[time_pandas], ts[time_datetime])
 
+    def test_index_drop_dont_lose_tz(self):
+        # #2621
+        ind = date_range("2012-12-01", periods=10, tz="utc")
+        ind = ind.drop(ind[-1])
+
+        self.assertTrue(ind.tz is not None)
 
 class TestTimeZones(unittest.TestCase):
     _multiprocess_can_split_ = True
