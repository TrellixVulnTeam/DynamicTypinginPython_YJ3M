commit bceac8eb717729bf7771b40c572a5dc4d3674f23
Author: jbrockmendel <jbrockmendel@gmail.com>
Date:   Thu Nov 14 05:26:30 2019 -0800

    CLN: no longer need to catch AttributeError, IndexError (#29591)

diff --git a/pandas/_libs/reduction.pyx b/pandas/_libs/reduction.pyx
index eadb8003b..3df26cbcf 100644
--- a/pandas/_libs/reduction.pyx
+++ b/pandas/_libs/reduction.pyx
@@ -221,6 +221,7 @@ cdef class SeriesBinGrouper(_BaseGrouper):
     def __init__(self, object series, object f, object bins, object dummy):
 
         assert dummy is not None  # always obj[:0]
+        assert len(bins) > 0  # otherwise we get IndexError in get_result
 
         self.bins = bins
         self.f = f
diff --git a/pandas/core/groupby/generic.py b/pandas/core/groupby/generic.py
index 8f0b8a1e3..dec9a33c7 100644
--- a/pandas/core/groupby/generic.py
+++ b/pandas/core/groupby/generic.py
@@ -257,10 +257,7 @@ class SeriesGroupBy(GroupBy):
 
             try:
                 return self._python_agg_general(func, *args, **kwargs)
-            except (ValueError, KeyError, AttributeError, IndexError):
-                # TODO: IndexError can be removed here following GH#29106
-                # TODO: AttributeError is caused by _index_data hijinx in
-                #  libreduction, can be removed after GH#29160
+            except (ValueError, KeyError):
                 # TODO: KeyError is raised in _python_agg_general,
                 #  see see test_groupby.test_basic
                 result = self._aggregate_named(func, *args, **kwargs)
diff --git a/pandas/core/groupby/ops.py b/pandas/core/groupby/ops.py
index 2d5576761..754d67d32 100644
--- a/pandas/core/groupby/ops.py
+++ b/pandas/core/groupby/ops.py
@@ -721,6 +721,10 @@ class BinGrouper(BaseGrouper):
         self.mutated = mutated
         self.indexer = indexer
 
+        # These lengths must match, otherwise we could call agg_series
+        #  with empty self.bins, which would raise in libreduction.
+        assert len(self.binlabels) == len(self.bins)
+
     @cache_readonly
     def groups(self):
         """ dict {group name -> group labels} """
@@ -828,6 +832,7 @@ class BinGrouper(BaseGrouper):
     def agg_series(self, obj: Series, func):
         # Caller is responsible for checking ngroups != 0
         assert self.ngroups != 0
+        assert len(self.bins) > 0  # otherwise we'd get IndexError in get_result
 
         if is_extension_array_dtype(obj.dtype):
             # pre-empt SeriesBinGrouper from raising TypeError
diff --git a/pandas/core/resample.py b/pandas/core/resample.py
index d980d5ba0..79c808cb3 100644
--- a/pandas/core/resample.py
+++ b/pandas/core/resample.py
@@ -187,6 +187,7 @@ class Resampler(_GroupBy, ShallowMixin):
         """
 
         binner, bins, binlabels = self._get_binner_for_time()
+        assert len(bins) == len(binlabels)
         bin_grouper = BinGrouper(bins, binlabels, indexer=self.groupby.indexer)
         return binner, bin_grouper
 
