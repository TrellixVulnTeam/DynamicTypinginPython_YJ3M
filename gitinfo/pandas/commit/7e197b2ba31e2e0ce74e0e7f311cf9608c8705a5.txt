commit 7e197b2ba31e2e0ce74e0e7f311cf9608c8705a5
Author: Chang She <chang@lambdafoundry.com>
Date:   Tue May 29 20:01:22 2012 -0400

    BUG: parser with multiple date col and multiple index col #1344

diff --git a/pandas/io/parsers.py b/pandas/io/parsers.py
index 2176a37e1..0942b9800 100644
--- a/pandas/io/parsers.py
+++ b/pandas/io/parsers.py
@@ -611,8 +611,9 @@ class TextParser(object):
 
     _implicit_index = False
 
-    def _get_index_name(self):
-        columns = self.columns
+    def _get_index_name(self, columns=None):
+        if columns is None:
+            columns = self.columns
 
         try:
             line = self._next_line()
@@ -747,7 +748,7 @@ class TextParser(object):
         df = DataFrame(data=data, columns=columns, index=index)
         if self._has_complex_date_col and self.index_col is not None:
             if not self._name_processed:
-                self.index_name = self._get_index_name()
+                self.index_name = self._get_index_name(list(columns))
                 self._name_processed = True
             data = dict(((k, v) for k, v in df.iteritems()))
             index = self._get_complex_date_index(data, col_names=columns,
@@ -845,24 +846,6 @@ class TextParser(object):
             index = MultiIndex.from_arrays(arrays, names=self.index_name)
         return index
 
-    def _find_line_number(self, exp_len, chunk_len, chunk_i):
-        if exp_len is None:
-            prev_pos = 0
-        else:
-            prev_pos = self.pos - exp_len
-
-        # add in skip rows in this chunk appearing before chunk_i
-        if self.skiprows is not None and len(self.skiprows) > 0:
-            skipped = Index(self.skiprows)
-            skipped = skipped[skipped > prev_pos & skipped < self.pos]
-
-
-        row_num = prev_pos + chunk_i
-
-        # add in comments in this chunk appearing before chunk_i
-
-        return row_num
-
     def _should_parse_dates(self, i):
         if isinstance(self.parse_dates, bool):
             return self.parse_dates
diff --git a/pandas/io/tests/test_parsers.py b/pandas/io/tests/test_parsers.py
index 17e43d201..092b7b198 100644
--- a/pandas/io/tests/test_parsers.py
+++ b/pandas/io/tests/test_parsers.py
@@ -239,6 +239,35 @@ KORD6,19990127, 23:00:00, 22:56:00, -0.5900, 1.7100, 4.6000, 0.0000, 280.0000"""
         assert_frame_equal(chunks[1], df[2:4])
         assert_frame_equal(chunks[2], df[4:])
 
+    def test_multiple_date_col_multiple_index(self):
+        df = read_csv(StringIO(self.ts_data), parse_dates={'nominal' : [1, 2]},
+                      index_col=['nominal', 'ID'])
+        xp = read_csv(StringIO(self.ts_data), parse_dates={'nominal' : [1, 2]})
+        assert_frame_equal(xp.set_index(['nominal', 'ID']), df)
+
+    def test_multiple_date_col_name_collision(self):
+        self.assertRaises(ValueError, read_csv, StringIO(self.ts_data),
+                          parse_dates={'ID' : [1, 2]})
+
+        data = """\
+date_NominalTime,date,NominalTime,ActualTime,TDew,TAir,Windspeed,Precip,WindDir
+KORD1,19990127, 19:00:00, 18:56:00, 0.8100, 2.8100, 7.2000, 0.0000, 280.0000
+KORD2,19990127, 20:00:00, 19:56:00, 0.0100, 2.2100, 7.2000, 0.0000, 260.0000
+KORD3,19990127, 21:00:00, 20:56:00, -0.5900, 2.2100, 5.7000, 0.0000, 280.0000
+KORD4,19990127, 21:00:00, 21:18:00, -0.9900, 2.0100, 3.6000, 0.0000, 270.0000
+KORD5,19990127, 22:00:00, 21:56:00, -0.5900, 1.7100, 5.1000, 0.0000, 290.0000
+KORD6,19990127, 23:00:00, 22:56:00, -0.5900, 1.7100, 4.6000, 0.0000, 280.0000"""
+
+        self.assertRaises(ValueError, read_csv, StringIO(data),
+                          parse_dates=[[1, 2]])
+
+    def test_multiple_date_col_named_components(self):
+        xp = read_csv(StringIO(self.ts_data), parse_dates={'nominal': [1,2]},
+                      index_col='nominal')
+        colspec = {'nominal' : ['date', 'nominalTime']}
+        df = read_csv(StringIO(self.ts_data), parse_dates=colspec,
+                      index_col='nominal')
+        assert_frame_equal(df, xp)
 
     def test_index_col_named(self):
         no_header = """\
