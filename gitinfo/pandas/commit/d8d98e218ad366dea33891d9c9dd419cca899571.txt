commit d8d98e218ad366dea33891d9c9dd419cca899571
Author: Adam Klein <adamklein@gmail.com>
Date:   Thu Mar 8 15:05:53 2012 -0500

    ENH: added keyword constructors to Interval

diff --git a/pandas/core/datetools.py b/pandas/core/datetools.py
index 9bbe7cde1..d88714471 100644
--- a/pandas/core/datetools.py
+++ b/pandas/core/datetools.py
@@ -145,11 +145,36 @@ for k, v in _interval_freq_map.iteritems():
     _reverse_interval_map[v] = k
 
 class Interval:
-    def __init__(self, ival, freq=None):
+    def __init__(self, value=None, freq=None,
+                 year=None, month=1, quarter=None, day=1,
+                 hour=0, minute=0, second=0):
+
+        self.freq = None
         self.ordinal = None
 
-        if isinstance(ival, basestring):
-            dt, parsed, reso = parse_time_string(ival)
+        if freq is not None:
+            if isinstance(freq, basestring):
+                self.freq = _interval_freq_map[freq]
+            else:
+                self.freq = freq
+
+        if value is None:
+            if self.freq is None:
+                raise ValueError("If value is None, freq cannot be None")
+
+            if year is None:
+                raise ValueError("If value is None, year cannot be None")
+
+            if quarter is not None:
+                month = (quarter - 1) * 3 + 1
+
+            self.ordinal = lib.skts_ordinal(year, month, day, hour,
+                                            minute, second, self.freq)
+
+            return
+
+        if isinstance(value, basestring):
+            dt, parsed, reso = parse_time_string(value)
 
             if freq is None:
                 if reso == 'year':
@@ -168,18 +193,13 @@ class Interval:
                     raise ValueError("Could not infer frequency for interval")
             else:
                 self.freq = _interval_freq_map[freq]
-        elif isinstance(ival, datetime):
-            dt = ival
-        elif isinstance(ival, int):
-            self.ordinal = ival
+        elif isinstance(value, datetime):
+            dt = value
+        elif isinstance(value, int):
+            self.ordinal = value
         else:
             raise ValueError("Value must be string or datetime")
 
-        if freq is not None:
-            if isinstance(freq, basestring):
-                self.freq = _interval_freq_map[freq]
-            else:
-                self.freq = freq
 
         if self.ordinal is None:
             self.ordinal = lib.skts_ordinal(dt.year, dt.month, dt.day, dt.hour,
diff --git a/pandas/src/skts.c b/pandas/src/skts.c
index 746781b43..335a25132 100644
--- a/pandas/src/skts.c
+++ b/pandas/src/skts.c
@@ -970,8 +970,8 @@ onError:
 
 /* generate an ordinal in skts space */
 long get_skts_ordinal(int year, int month, int day,
-                     int hour, int minute, int second,
-                     int freq)
+                      int hour, int minute, int second,
+                      int freq)
 {
     int freq_group = get_freq_group(freq);
     int quarter=((month-1)/3)+1;
diff --git a/pandas/tests/test_datetime64.py b/pandas/tests/test_datetime64.py
index 6522ae2fc..8dd1361d1 100644
--- a/pandas/tests/test_datetime64.py
+++ b/pandas/tests/test_datetime64.py
@@ -585,6 +585,22 @@ class TestDatetime64(unittest.TestCase):
         i2 = Interval('3/12/12', freq='D')
         self.assertEquals(i1, i2.asfreq('B'))
 
+        i1 = Interval(year=2005, quarter=1, freq='Q')
+        i2 = Interval('1/1/2005', freq='Q')
+        self.assertEquals(i1, i2)
+
+        i1 = Interval(year=2005, quarter=3, freq='Q')
+        i2 = Interval('9/1/2005', freq='Q')
+        self.assertEquals(i1, i2)
+
+        i1 = Interval(year=2005, month=3, day=1, freq='D')
+        i2 = Interval('3/1/2005', freq='D')
+        self.assertEquals(i1, i2)
+
+        i1 = Interval(year=2012, month=3, day=10, freq='B')
+        i2 = Interval('3/12/12', freq='B')
+        self.assertEquals(i1, i2)
+
     def test_interval_asfreq(self):
         # need a whole bunch of tests here ...
         # D to B conversion exception, was failing silently before
