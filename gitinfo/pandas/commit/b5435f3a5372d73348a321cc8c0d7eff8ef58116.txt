commit b5435f3a5372d73348a321cc8c0d7eff8ef58116
Author: Thomas Kluyver <takowl@gmail.com>
Date:   Wed Oct 12 22:38:17 2011 +0100

    Minor updates to docs on missing values.

diff --git a/doc/source/missing_data.rst b/doc/source/missing_data.rst
index c4df50b16..272ad9ec6 100644
--- a/doc/source/missing_data.rst
+++ b/doc/source/missing_data.rst
@@ -64,13 +64,15 @@ not ``NaN``, I think you will find this is a worthwhile trade-off (Zen of
 Python: "practicality beats purity").
 
 To make detecting missing values easier (and across different array dtypes),
-pandas provides the ``isnull`` and ``notnull`` functions:
+pandas provides the :func:`~pandas.core.common.isnull` and
+:func:`~pandas.core.common.notnull` functions, which are also methods on
+``Series`` objects:
 
 .. ipython:: python
 
    df2['one']
    isnull(df2['one'])
-   notnull(df2['four'])
+   df2['four'].notnull()
 
 **Summary:** ``NaN``, ``inf``, ``-inf``, and ``None`` (in object arrays) are
 all considered missing by the ``isnull`` and ``notnull`` functions.
@@ -125,8 +127,6 @@ Cleaning / filling missing data
 pandas objects are equipped with various data manipulation methods for dealing
 with missing data.
 
-dropna:
-
 .. _missing_data.fillna:
 
 Filling missing values: fillna
@@ -165,6 +165,8 @@ To remind you, these are the available filling methods:
 With time series data, using pad/ffill is extremely common so that the "last
 known value" is available at every time point.
 
+.. _missing_data.dropna:
+
 Dropping axis labels with missing data: dropna
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 
