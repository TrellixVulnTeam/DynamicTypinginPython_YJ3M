commit 5c0da7dd4034427745038381e8e2b77ac8c59d08
Author: steveayers124 <46000954+steveayers124@users.noreply.github.com>
Date:   Sat Aug 24 04:32:54 2019 -0500

    DOC: Fix GL01 and GL02 errors in the docstrings (#27988)

diff --git a/pandas/conftest.py b/pandas/conftest.py
index 2cf7bf6a6..b032e14d8 100644
--- a/pandas/conftest.py
+++ b/pandas/conftest.py
@@ -123,18 +123,22 @@ def ip():
 
 @pytest.fixture(params=[True, False, None])
 def observed(request):
-    """ pass in the observed keyword to groupby for [True, False]
+    """
+    Pass in the observed keyword to groupby for [True, False]
     This indicates whether categoricals should return values for
     values which are not in the grouper [False / None], or only values which
     appear in the grouper [True]. [None] is supported for future compatibility
     if we decide to change the default (and would need to warn if this
-    parameter is not passed)"""
+    parameter is not passed).
+    """
     return request.param
 
 
 @pytest.fixture(params=[True, False, None])
 def ordered_fixture(request):
-    """Boolean 'ordered' parameter for Categorical."""
+    """
+    Boolean 'ordered' parameter for Categorical.
+    """
     return request.param
 
 
@@ -234,7 +238,8 @@ def cython_table_items(request):
 
 
 def _get_cython_table_params(ndframe, func_names_and_expected):
-    """combine frame, functions from SelectionMixin._cython_table
+    """
+    Combine frame, functions from SelectionMixin._cython_table
     keys and expected result.
 
     Parameters
@@ -242,7 +247,7 @@ def _get_cython_table_params(ndframe, func_names_and_expected):
     ndframe : DataFrame or Series
     func_names_and_expected : Sequence of two items
         The first item is a name of a NDFrame method ('sum', 'prod') etc.
-        The second item is the expected return value
+        The second item is the expected return value.
 
     Returns
     -------
@@ -341,7 +346,8 @@ def strict_data_files(pytestconfig):
 
 @pytest.fixture
 def datapath(strict_data_files):
-    """Get the path to a data file.
+    """
+    Get the path to a data file.
 
     Parameters
     ----------
@@ -375,7 +381,9 @@ def datapath(strict_data_files):
 
 @pytest.fixture
 def iris(datapath):
-    """The iris dataset as a DataFrame."""
+    """
+    The iris dataset as a DataFrame.
+    """
     return pd.read_csv(datapath("data", "iris.csv"))
 
 
@@ -504,7 +512,8 @@ ALL_NUMPY_DTYPES = (
 
 @pytest.fixture(params=STRING_DTYPES)
 def string_dtype(request):
-    """Parametrized fixture for string dtypes.
+    """
+    Parametrized fixture for string dtypes.
 
     * str
     * 'str'
@@ -515,7 +524,8 @@ def string_dtype(request):
 
 @pytest.fixture(params=BYTES_DTYPES)
 def bytes_dtype(request):
-    """Parametrized fixture for bytes dtypes.
+    """
+    Parametrized fixture for bytes dtypes.
 
     * bytes
     * 'bytes'
@@ -525,7 +535,8 @@ def bytes_dtype(request):
 
 @pytest.fixture(params=OBJECT_DTYPES)
 def object_dtype(request):
-    """Parametrized fixture for object dtypes.
+    """
+    Parametrized fixture for object dtypes.
 
     * object
     * 'object'
@@ -535,7 +546,8 @@ def object_dtype(request):
 
 @pytest.fixture(params=DATETIME64_DTYPES)
 def datetime64_dtype(request):
-    """Parametrized fixture for datetime64 dtypes.
+    """
+    Parametrized fixture for datetime64 dtypes.
 
     * 'datetime64[ns]'
     * 'M8[ns]'
@@ -545,7 +557,8 @@ def datetime64_dtype(request):
 
 @pytest.fixture(params=TIMEDELTA64_DTYPES)
 def timedelta64_dtype(request):
-    """Parametrized fixture for timedelta64 dtypes.
+    """
+    Parametrized fixture for timedelta64 dtypes.
 
     * 'timedelta64[ns]'
     * 'm8[ns]'
diff --git a/pandas/io/html.py b/pandas/io/html.py
index 9d2647f22..490c57446 100644
--- a/pandas/io/html.py
+++ b/pandas/io/html.py
@@ -1,4 +1,5 @@
-""":mod:`pandas.io.html` is a module containing functionality for dealing with
+"""
+:mod:`pandas.io.html` is a module containing functionality for dealing with
 HTML IO.
 
 """
@@ -58,7 +59,8 @@ _RE_WHITESPACE = re.compile(r"[\r\n]+|\s{2,}")
 
 
 def _remove_whitespace(s, regex=_RE_WHITESPACE):
-    """Replace extra whitespace inside of a string with a single space.
+    """
+    Replace extra whitespace inside of a string with a single space.
 
     Parameters
     ----------
@@ -77,7 +79,8 @@ def _remove_whitespace(s, regex=_RE_WHITESPACE):
 
 
 def _get_skiprows(skiprows):
-    """Get an iterator given an integer, slice or container.
+    """
+    Get an iterator given an integer, slice or container.
 
     Parameters
     ----------
@@ -107,7 +110,8 @@ def _get_skiprows(skiprows):
 
 
 def _read(obj):
-    """Try to read from a url, file or string.
+    """
+    Try to read from a url, file or string.
 
     Parameters
     ----------
@@ -136,7 +140,8 @@ def _read(obj):
 
 
 class _HtmlFrameParser:
-    """Base class for parsers that parse HTML into DataFrames.
+    """
+    Base class for parsers that parse HTML into DataFrames.
 
     Parameters
     ----------
@@ -515,7 +520,8 @@ class _HtmlFrameParser:
 
 
 class _BeautifulSoupHtml5LibFrameParser(_HtmlFrameParser):
-    """HTML to DataFrame parser that uses BeautifulSoup under the hood.
+    """
+    HTML to DataFrame parser that uses BeautifulSoup under the hood.
 
     See Also
     --------
@@ -622,7 +628,8 @@ _valid_schemes = "http", "file", "ftp"
 
 
 class _LxmlFrameParser(_HtmlFrameParser):
-    """HTML to DataFrame parser that uses lxml under the hood.
+    """
+    HTML to DataFrame parser that uses lxml under the hood.
 
     Warning
     -------
@@ -937,7 +944,8 @@ def read_html(
     keep_default_na=True,
     displayed_only=True,
 ):
-    r"""Read HTML tables into a ``list`` of ``DataFrame`` objects.
+    r"""
+    Read HTML tables into a ``list`` of ``DataFrame`` objects.
 
     Parameters
     ----------
