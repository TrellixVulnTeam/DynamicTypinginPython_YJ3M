commit 8b77ace96423f18ace2e9a4dd961956e8c156974
Author: jreback <jeff@reback.net>
Date:   Fri Feb 8 10:19:38 2013 -0500

    BUG: provide backwards compatibility to DataFrame.clip if arguments are reversed

diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index cdb3f22fb..d625fb87e 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -5042,6 +5042,11 @@ class DataFrame(NDFrame):
         -------
         clipped : DataFrame
         """
+
+        # GH 2747 (arguments were reversed)
+        if lower is not None and upper is not None:
+            lower, upper = min(lower,upper), max(lower,upper)
+            
         return self.apply(lambda x: x.clip(lower=lower, upper=upper))
 
     def clip_upper(self, threshold):
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index 2318d25fa..d55e7a7b6 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -6472,18 +6472,19 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
 
     def test_dataframe_clip(self):
 
-        lb = -1
-        ub =  1
-
         # GH #2747
         df = DataFrame(np.random.randn(1000,2))
-        lb_mask = df.values <= lb
-        ub_mask = df.values >= ub
-        mask = ~lb_mask & ~ub_mask
-        clipped_df = df.clip(lb, ub)
-        self.assert_((clipped_df.values[lb_mask] == lb).all() == True)
-        self.assert_((clipped_df.values[ub_mask] == ub).all() == True)
-        self.assert_((clipped_df.values[mask] == df.values[mask]).all() == True)
+
+        for lb, ub in [(-1,1),(1,-1)]:
+            clipped_df = df.clip(lb, ub)
+
+            lb, ub = min(lb,ub), max(ub,lb)
+            lb_mask = df.values <= lb
+            ub_mask = df.values >= ub
+            mask = ~lb_mask & ~ub_mask
+            self.assert_((clipped_df.values[lb_mask] == lb).all() == True)
+            self.assert_((clipped_df.values[ub_mask] == ub).all() == True)
+            self.assert_((clipped_df.values[mask] == df.values[mask]).all() == True)
         
     def test_get_X_columns(self):
         # numeric and object columns
