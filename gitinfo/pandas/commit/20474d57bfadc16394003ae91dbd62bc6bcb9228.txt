commit 20474d57bfadc16394003ae91dbd62bc6bcb9228
Author: Linxiao Wu <linxiaow@umich.edu>
Date:   Fri Apr 10 16:37:16 2020 +0800

    BUG: fix boolean array skipna=False for .any() and .all() (#33284)
    
    Co-authored-by: Joris Van den Bossche <jorisvandenbossche@gmail.com>

diff --git a/doc/source/whatsnew/v1.1.0.rst b/doc/source/whatsnew/v1.1.0.rst
index 5c3937789..83989002c 100644
--- a/doc/source/whatsnew/v1.1.0.rst
+++ b/doc/source/whatsnew/v1.1.0.rst
@@ -452,7 +452,7 @@ Missing
 ^^^^^^^
 
 - Calling :meth:`fillna` on an empty Series now correctly returns a shallow copied object. The behaviour is now consistent with :class:`Index`, :class:`DataFrame` and a non-empty :class:`Series` (:issue:`32543`).
-
+- Bug in :meth:`~Series.any` and :meth:`~Series.all` incorrectly returning ``<NA>`` for all ``False`` or all ``True`` values using the nulllable boolean dtype and with ``skipna=False`` (:issue:`33253`)
 
 MultiIndex
 ^^^^^^^^^^
diff --git a/pandas/core/arrays/boolean.py b/pandas/core/arrays/boolean.py
index e85534def..7ffbd0d59 100644
--- a/pandas/core/arrays/boolean.py
+++ b/pandas/core/arrays/boolean.py
@@ -520,7 +520,7 @@ class BooleanArray(BaseMaskedArray):
         if skipna:
             return result
         else:
-            if result or len(self) == 0:
+            if result or len(self) == 0 or not self._mask.any():
                 return result
             else:
                 return self.dtype.na_value
@@ -587,7 +587,7 @@ class BooleanArray(BaseMaskedArray):
         if skipna:
             return result
         else:
-            if not result or len(self) == 0:
+            if not result or len(self) == 0 or not self._mask.any():
                 return result
             else:
                 return self.dtype.na_value
diff --git a/pandas/tests/arrays/boolean/test_reduction.py b/pandas/tests/arrays/boolean/test_reduction.py
index ce50266c7..5dd562016 100644
--- a/pandas/tests/arrays/boolean/test_reduction.py
+++ b/pandas/tests/arrays/boolean/test_reduction.py
@@ -19,6 +19,9 @@ def data():
         ([False, pd.NA], False, False, pd.NA, False),
         ([pd.NA], False, True, pd.NA, pd.NA),
         ([], False, True, False, True),
+        # GH-33253: all True / all False values buggy with skipna=False
+        ([True, True], True, True, True, True),
+        ([False, False], False, False, False, False),
     ],
 )
 def test_any_all(values, exp_any, exp_all, exp_any_noskip, exp_all_noskip):
diff --git a/pandas/tests/reductions/test_reductions.py b/pandas/tests/reductions/test_reductions.py
index 8fb035e08..fa62d5d8c 100644
--- a/pandas/tests/reductions/test_reductions.py
+++ b/pandas/tests/reductions/test_reductions.py
@@ -891,6 +891,30 @@ class TestSeriesReductions:
         with pytest.raises(NotImplementedError):
             s.all(bool_only=True)
 
+    def test_all_any_boolean(self):
+        # Check skipna, with boolean type
+        s1 = Series([pd.NA, True], dtype="boolean")
+        s2 = Series([pd.NA, False], dtype="boolean")
+        assert s1.all(skipna=False) is pd.NA  # NA && True => NA
+        assert s1.all(skipna=True)
+        assert s2.any(skipna=False) is pd.NA  # NA || False => NA
+        assert not s2.any(skipna=True)
+
+        # GH-33253: all True / all False values buggy with skipna=False
+        s3 = Series([True, True], dtype="boolean")
+        s4 = Series([False, False], dtype="boolean")
+        assert s3.all(skipna=False)
+        assert not s4.any(skipna=False)
+
+        # Check level TODO(GH-33449) result should also be boolean
+        s = pd.Series(
+            [False, False, True, True, False, True],
+            index=[0, 0, 1, 1, 2, 2],
+            dtype="boolean",
+        )
+        tm.assert_series_equal(s.all(level=0), Series([False, True, False]))
+        tm.assert_series_equal(s.any(level=0), Series([False, True, True]))
+
     def test_timedelta64_analytics(self):
 
         # index min/max
