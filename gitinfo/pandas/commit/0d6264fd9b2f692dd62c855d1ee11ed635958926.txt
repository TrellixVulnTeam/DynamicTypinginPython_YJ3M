commit 0d6264fd9b2f692dd62c855d1ee11ed635958926
Author: onesandzeroes <onesandzeroes@github.com>
Date:   Wed Sep 10 19:29:33 2014 +1000

    BUG: DataFrame.to_string ignores col_space when header=False
    
    Add test case for when header=False
    
    Make col_space the minimum width of each col
    
    Update release notes

diff --git a/doc/source/v0.15.0.txt b/doc/source/v0.15.0.txt
index 029a38507..c24d6dcb1 100644
--- a/doc/source/v0.15.0.txt
+++ b/doc/source/v0.15.0.txt
@@ -102,7 +102,7 @@ API changes
     2     6
     3   NaN
     dtype: float64
-  
+
   New behavior (note final value is ``5 = sum([2, 3, NaN])``):
 
   .. ipython:: python
@@ -139,7 +139,7 @@ API changes
 	4    1.571429
 	5    2.189189
 	dtype: float64
-  
+
   New behavior (note values start at index ``4``, the location of the 2nd (since ``min_periods=2``) non-empty value):
 
   .. ipython:: python
@@ -761,3 +761,5 @@ Bug Fixes
 
 - Bug in interpolation methods with the ``limit`` keyword when no values
 needed interpolating (:issue:`7173`).
+- Bug where ``col_space`` was ignored in ``DataFrame.to_string()`` when ``header=False``
+  (:issue:`8230`).
diff --git a/pandas/core/format.py b/pandas/core/format.py
index 339cd9344..265841035 100644
--- a/pandas/core/format.py
+++ b/pandas/core/format.py
@@ -391,7 +391,8 @@ class DataFrameFormatter(TableFormatter):
             for i, c in enumerate(frame):
                 formatter = self._get_formatter(i)
                 fmt_values = self._format_col(i)
-                fmt_values = _make_fixed_width(fmt_values, self.justify)
+                fmt_values = _make_fixed_width(fmt_values, self.justify,
+                                               minimum=(self.col_space or 0))
 
                 stringified.append(fmt_values)
 
diff --git a/pandas/tests/test_format.py b/pandas/tests/test_format.py
index aa1986534..d07065aed 100644
--- a/pandas/tests/test_format.py
+++ b/pandas/tests/test_format.py
@@ -385,6 +385,13 @@ class TestDataFrameFormatting(tm.TestCase):
         c30 = len(df.to_string(col_space=30).split("\n")[1])
         self.assertTrue(c10 < c20 < c30)
 
+        # GH 8230
+        # col_space wasn't being applied with header=False
+        with_header = df.to_string(col_space=20)
+        with_header_row1 = with_header.splitlines()[1]
+        no_header = df.to_string(col_space=20, header=False)
+        self.assertEqual(len(with_header_row1), len(no_header))
+
     def test_to_string_truncate_indices(self):
         for index in [ tm.makeStringIndex, tm.makeUnicodeIndex, tm.makeIntIndex,
                        tm.makeDateIndex, tm.makePeriodIndex ]:
