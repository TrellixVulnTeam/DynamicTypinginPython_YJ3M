commit 53f76f38b602090658dec1f7e3ce5604c8eebf0b
Author: y-p <yoval@gmx.com>
Date:   Sat Oct 12 03:39:52 2013 +0300

    DOC: cleanups

diff --git a/doc/source/basics.rst b/doc/source/basics.rst
index 0e3b66715..e6bb084fc 100644
--- a/doc/source/basics.rst
+++ b/doc/source/basics.rst
@@ -1361,7 +1361,7 @@ and so passing in a substring will work - as long as it is unambiguous :
    get_option("display.max_rows")
 
 
-The following will **not work** because it matches multiple option names, e.g.``display.max_colwidth``, ``display.max_rows``, ``display.max_columns``:
+The following will **not work** because it matches multiple option names, e.g. ``display.max_colwidth``, ``display.max_rows``, ``display.max_columns``:
 
 .. ipython:: python
    :okexcept:
@@ -1372,12 +1372,18 @@ The following will **not work** because it matches multiple option names, e.g.``
        print(e)
 
 
-**Note:** Using this form of convenient shorthand may make your code break if new options with similar names are added in future versions.
+**Note:** Using this form of shorthand may cause your code to break if new options with similar names are added in future versions.
 
 
 You can get a list of available options and their descriptions with ``describe_option``. When called
 with no argument ``describe_option`` will print out the descriptions for all available options.
 
+.. ipython:: python
+   :suppress:
+
+   reset_option("all")
+
+
 .. ipython:: python
 
    describe_option()
@@ -1407,11 +1413,11 @@ All options also have a default value, and you can use the ``reset_option`` to d
    get_option("display.max_rows")
 
 
-It's also possible to reset multiple options at once:
+It's also possible to reset multiple options at once (using a regex):
 
 .. ipython:: python
 
-   reset_option("^display\.")
+   reset_option("^display")
 
 
 
