commit 46fdbb728e5ee527d99bf912d4e359e5617a8443
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Mon Sep 17 12:09:18 2012 -0400

    BUG: fix regression in drop_duplicates when passing single string column close #1917

diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 7f414b8ee..512284b13 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -2682,7 +2682,7 @@ class DataFrame(NDFrame):
         if cols is None:
             values = list(_m8_to_i8(self.values.T))
         else:
-            if np.iterable(cols):
+            if np.iterable(cols) and not isinstance(cols, basestring):
                 values = [_m8_to_i8(self[x].values) for x in cols]
             else:
                 values = [self[cols]]
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index 91dfe3367..9374887c6 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -3945,7 +3945,7 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
         self.assertRaises(ValueError, self.frame.dropna, how=None)
 
     def test_drop_duplicates(self):
-        df = DataFrame({'A' : ['foo', 'bar', 'foo', 'bar',
+        df = DataFrame({'AAA' : ['foo', 'bar', 'foo', 'bar',
                                'foo', 'bar', 'bar', 'foo'],
                         'B' : ['one', 'one', 'two', 'two',
                                'two', 'two', 'one', 'two'],
@@ -3953,35 +3953,35 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
                         'D' : range(8)})
 
         # single column
-        result = df.drop_duplicates('A')
+        result = df.drop_duplicates('AAA')
         expected = df[:2]
         assert_frame_equal(result, expected)
 
-        result = df.drop_duplicates('A', take_last=True)
+        result = df.drop_duplicates('AAA', take_last=True)
         expected = df.ix[[6, 7]]
         assert_frame_equal(result, expected)
 
         # multi column
         expected = df.ix[[0, 1, 2, 3]]
-        result = df.drop_duplicates(np.array(['A', 'B']))
+        result = df.drop_duplicates(np.array(['AAA', 'B']))
         assert_frame_equal(result, expected)
-        result = df.drop_duplicates(['A', 'B'])
+        result = df.drop_duplicates(['AAA', 'B'])
         assert_frame_equal(result, expected)
 
-        result = df.drop_duplicates(('A', 'B'), take_last=True)
+        result = df.drop_duplicates(('AAA', 'B'), take_last=True)
         expected = df.ix[[0, 5, 6, 7]]
         assert_frame_equal(result, expected)
 
         # consider everything
-        df2 = df.ix[:, ['A', 'B', 'C']]
+        df2 = df.ix[:, ['AAA', 'B', 'C']]
 
         result = df2.drop_duplicates()
         # in this case only
-        expected = df2.drop_duplicates(['A', 'B'])
+        expected = df2.drop_duplicates(['AAA', 'B'])
         assert_frame_equal(result, expected)
 
         result = df2.drop_duplicates(take_last=True)
-        expected = df2.drop_duplicates(['A', 'B'], take_last=True)
+        expected = df2.drop_duplicates(['AAA', 'B'], take_last=True)
         assert_frame_equal(result, expected)
 
     def test_drop_duplicates_NA(self):
