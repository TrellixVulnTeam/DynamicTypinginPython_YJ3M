commit ca3e23653fab42a0228746c9a28c5cbe264c57a7
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Thu Feb 18 20:30:52 2010 +0000

    fixed r-squared calculation when response variable is assumed to be zero-mean (no intercept used)
    
    git-svn-id: http://pandas.googlecode.com/svn/trunk@124 d5231056-7de3-11de-ac95-d976489f1ece

diff --git a/pandas/stats/ols.py b/pandas/stats/ols.py
index 8313a8d9f..c99a8987a 100644
--- a/pandas/stats/ols.py
+++ b/pandas/stats/ols.py
@@ -231,7 +231,10 @@ class OLS(object):
     @cache_readonly
     def _r2_raw(self):
         """Returns the raw r-squared values."""
-        return self.sm_ols.rsquared
+        if self._intercept:
+            return self.sm_ols.rsquared
+        else:
+            return 1 - self.sm_ols.ssr / self.sm_ols.uncentered_tss
 
     @cache_readonly
     def r2(self):
@@ -812,11 +815,13 @@ class MovingOLS(OLS):
 
     @cache_readonly
     def _resid_stats(self):
+        uncentered_sst = []
         sst = []
         sse = []
 
-        Y = self._y_trans
-        X = self._x_trans
+        Y = self._y
+        X = self._x
+
         dates = self._index
         window = self._window
         for n, index in enumerate(self._valid_indices):
@@ -832,19 +837,19 @@ class MovingOLS(OLS):
             Y_slice = _y_converter(Y.truncate(before=prior_date, after=date))
 
             resid = Y_slice - np.dot(X_slice, beta)
-            SS_err = (resid ** 2).sum()
 
+            SS_err = (resid ** 2).sum()
             SS_total = ((Y_slice - Y_slice.mean()) ** 2).sum()
+            SST_uncentered = (Y_slice ** 2).sum()
 
             sse.append(SS_err)
             sst.append(SS_total)
-
-        sse = np.array(sse)
-        sst = np.array(sst)
+            uncentered_sst.append(SST_uncentered)
 
         return {
-            'sse' : sse,
-            'sst' : sst,
+            'sse' : np.array(sse),
+            'centered_tss' : np.array(sst),
+            'uncentered_tss' : np.array(uncentered_sst),
         }
 
     @cache_readonly
@@ -855,7 +860,11 @@ class MovingOLS(OLS):
     @cache_readonly
     def _r2_raw(self):
         rs = self._resid_stats
-        return 1 - rs['sse'] / rs['sst']
+
+        if self._intercept:
+            return 1 - rs['sse'] / rs['centered_tss']
+        else:
+            return 1 - rs['sse'] / rs['uncentered_tss']
 
     @cache_readonly
     def _r2_adj_raw(self):
diff --git a/pandas/stats/plm.py b/pandas/stats/plm.py
index a1037e965..21b9a263a 100644
--- a/pandas/stats/plm.py
+++ b/pandas/stats/plm.py
@@ -706,45 +706,6 @@ class MovingPanelOLS(MovingOLS, PanelOLS):
 
         return np.array(results)
 
-    @cache_readonly
-    def _resid_stats(self):
-        Y = self._y
-        X = self._x
-        dates = self._index
-        window = self._window
-
-        sst = []
-        sse = []
-
-        for n, i in enumerate(self._valid_indices):
-            if self._is_rolling and i >= window:
-                prior_date = dates[i - window + 1]
-            else:
-                prior_date = dates[0]
-
-            date = dates[i]
-
-            X_slice = X.truncate(prior_date, date).values
-            Y_slice = Y.truncate(prior_date, date).values.squeeze()
-
-            beta_slice = self._beta_raw[n]
-
-            resid = Y_slice - np.dot(X_slice, beta_slice)
-            SS_err = (resid ** 2).sum()
-
-            SS_total = ((Y_slice - Y_slice.mean()) ** 2).sum()
-
-            sse.append(SS_err)
-            sst.append(SS_total)
-
-        sse = np.array(sse)
-        sst = np.array(sst)
-
-        return {
-            'sse' : sse,
-            'sst' : sst,
-        }
-
     @cache_readonly
     def _resid_raw(self):
         beta_matrix = self._beta_matrix(lag=0)
