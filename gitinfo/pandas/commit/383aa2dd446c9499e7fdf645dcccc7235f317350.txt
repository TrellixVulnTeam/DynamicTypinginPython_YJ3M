commit 383aa2dd446c9499e7fdf645dcccc7235f317350
Author: y-p <yoval@gmx.com>
Date:   Wed Mar 20 22:38:03 2013 +0200

    CLN: eliminate py2.5 workaround from setup.py (cython caching)

diff --git a/setup.py b/setup.py
index ffe32caa3..7dc050ed0 100755
--- a/setup.py
+++ b/setup.py
@@ -387,41 +387,6 @@ class CompilationCacheMixin(object):
         except:
             raise NotImplementedError("You must override this method")
 
-    # this is missing in 2.5, mro will do the right thing
-    def get_ext_fullpath(self, ext_name):
-        """Returns the path of the filename for a given extension.
-
-        The file is located in `build_lib` or directly in the package
-        (inplace option).
-        """
-        import string
-        # makes sure the extension name is only using dots
-        all_dots = string.maketrans('/' + os.sep, '..')
-        ext_name = ext_name.translate(all_dots)
-
-        fullname = self.get_ext_fullname(ext_name)
-        modpath = fullname.split('.')
-        filename = self.get_ext_filename(ext_name)
-        filename = os.path.split(filename)[-1]
-
-        if not self.inplace:
-            # no further work needed
-            # returning :
-            #   build_dir/package/path/filename
-            filename = os.path.join(*modpath[:-1] + [filename])
-            return os.path.join(self.build_lib, filename)
-
-        # the inplace option requires to find the package directory
-        # using the build_py command for that
-        package = '.'.join(modpath[0:-1])
-        build_py = self.get_finalized_command('build_py')
-        package_dir = os.path.abspath(build_py.get_package_dir(package))
-
-        # returning
-        #   package_dir/filename
-        return os.path.join(package_dir, filename)
-
-
 class CompilationCacheExtMixin(CompilationCacheMixin):
     def __init__(self, *args, **kwds):
         CompilationCacheMixin.__init__(self, *args, **kwds)
