commit 14a38a64c054ff1c2b21e3687e544048044f9c38
Author: Chris Catalfo <ccatalfo@users.noreply.github.com>
Date:   Wed Feb 28 03:14:23 2018 -0500

    DOC: fixes pipe example in basics.rst due to statsmodel changes (#19923)

diff --git a/doc/source/basics.rst b/doc/source/basics.rst
index e1b36a6ac..8d09f1fc0 100644
--- a/doc/source/basics.rst
+++ b/doc/source/basics.rst
@@ -746,7 +746,7 @@ What if the function you wish to apply takes its data as, say, the second argume
 In this case, provide ``pipe`` with a tuple of ``(callable, data_keyword)``.
 ``.pipe`` will route the ``DataFrame`` to the argument specified in the tuple.
 
-For example, we can fit a regression using statsmodels. Their API expects a formula first and a ``DataFrame`` as the second argument, ``data``. We pass in the function, keyword pair ``(sm.poisson, 'data')`` to ``pipe``:
+For example, we can fit a regression using statsmodels. Their API expects a formula first and a ``DataFrame`` as the second argument, ``data``. We pass in the function, keyword pair ``(sm.ols, 'data')`` to ``pipe``:
 
 .. ipython:: python
 
@@ -756,7 +756,7 @@ For example, we can fit a regression using statsmodels. Their API expects a form
 
    (bb.query('h > 0')
       .assign(ln_h = lambda df: np.log(df.h))
-      .pipe((sm.poisson, 'data'), 'hr ~ ln_h + year + g + C(lg)')
+      .pipe((sm.ols, 'data'), 'hr ~ ln_h + year + g + C(lg)')
       .fit()
       .summary()
    )
diff --git a/doc/source/whatsnew/v0.16.2.txt b/doc/source/whatsnew/v0.16.2.txt
index bfe44290e..91ec0c303 100644
--- a/doc/source/whatsnew/v0.16.2.txt
+++ b/doc/source/whatsnew/v0.16.2.txt
@@ -63,10 +63,10 @@ of ``(function, keyword)`` indicating where the DataFrame should flow. For examp
 
    bb = pd.read_csv('data/baseball.csv', index_col='id')
 
-   # sm.poisson takes (formula, data)
+   # sm.ols takes (formula, data)
    (bb.query('h > 0')
       .assign(ln_h = lambda df: np.log(df.h))
-      .pipe((sm.poisson, 'data'), 'hr ~ ln_h + year + g + C(lg)')
+      .pipe((sm.ols, 'data'), 'hr ~ ln_h + year + g + C(lg)')
       .fit()
       .summary()
    )
