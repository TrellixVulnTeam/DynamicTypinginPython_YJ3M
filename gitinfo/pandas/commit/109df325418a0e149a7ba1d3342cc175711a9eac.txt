commit 109df325418a0e149a7ba1d3342cc175711a9eac
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Fri Dec 23 14:32:16 2011 -0500

    BUG: Index.insert / MultiIndex.insert discarded names, GH #527

diff --git a/RELEASE.rst b/RELEASE.rst
index 575263b8a..893eeb780 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -82,6 +82,8 @@ pandas 0.6.2
   - Handle improper dtype casting in ``set_value`` methods
   - Unary '-' / __neg__ operator on DataFrame was returning integer values
   - Unbox 0-dim ndarrays from certain operators like all, any in Series
+  - Fix handling of missing columns (was combine_first-specific) in
+    DataFrame.combine for general case (GH #529)
 
 Thanks
 ------
diff --git a/pandas/core/index.py b/pandas/core/index.py
index 6a667e98d..86117a4b9 100644
--- a/pandas/core/index.py
+++ b/pandas/core/index.py
@@ -685,7 +685,7 @@ class Index(np.ndarray):
         # because numpy is fussy with tuples
         item_idx = Index([item])
         new_index = np.concatenate((index[:loc], item_idx, index[loc:]))
-        return Index(new_index)
+        return Index(new_index, name=self.name)
 
     def drop(self, labels):
         """
@@ -1648,7 +1648,7 @@ class MultiIndex(Index):
             new_levels.append(level)
             new_labels.append(np.insert(labels, loc, lev_loc))
 
-        return MultiIndex(levels=new_levels, labels=new_labels)
+        return MultiIndex(levels=new_levels, labels=new_labels, names=self.names)
 
     def delete(self, loc):
         """
diff --git a/pandas/core/internals.py b/pandas/core/internals.py
index d4e034687..0f0499c75 100644
--- a/pandas/core/internals.py
+++ b/pandas/core/internals.py
@@ -441,7 +441,8 @@ class BlockManager(object):
         copy : BlockManager
         """
         copy_blocks = [block.copy(deep=deep) for block in self.blocks]
-        return BlockManager(copy_blocks, self.axes)
+        copy_axes = [ax.copy() for ax in self.axes]
+        return BlockManager(copy_blocks, copy_axes)
 
     def as_matrix(self, items=None):
         if len(self.blocks) == 0:
diff --git a/pandas/stats/plm.py b/pandas/stats/plm.py
index 4d7e77e4c..60bf00b7b 100644
--- a/pandas/stats/plm.py
+++ b/pandas/stats/plm.py
@@ -97,8 +97,8 @@ class PanelOLS(OLS):
             y_regressor = y
 
         if weights is not None:
-            assert(y_regressor.index is weights.index)
-            assert(x_regressor.index is weights.index)
+            assert(y_regressor.index.equals(weights.index))
+            assert(x_regressor.index.equals(weights.index))
 
             rt_weights = np.sqrt(weights)
             y_regressor = y_regressor * rt_weights
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index 4859d708b..c03967dd2 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -1689,6 +1689,11 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
         self.assertRaises(Exception, df.insert, 1, 'a', df['b'])
         self.assertRaises(Exception, df.insert, 1, 'c', df['b'])
 
+        df.columns.name = 'some_name'
+        # preserve columns name field
+        df.insert(0, 'baz', df['c'])
+        self.assertEqual(df.columns.name, 'some_name')
+
     def test_delitem(self):
         del self.frame['A']
         self.assert_('A' not in self.frame)
@@ -3795,6 +3800,11 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
         self.assert_(np.array_equal(deleveled.index,
                                     np.arange(len(deleveled))))
 
+        # preserve column names
+        self.frame.columns.name = 'columns'
+        resetted = self.frame.reset_index()
+        self.assertEqual(resetted.columns.name, 'columns')
+
     #----------------------------------------------------------------------
     # Tests to cope with refactored internals
 
