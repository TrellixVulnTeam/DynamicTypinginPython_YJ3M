commit ff6bd5702e3577f543cfcc4af7b1eb4fb024c0c8
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Thu Dec 13 16:46:25 2012 -0500

    BUG: fix python 3 zip usage

diff --git a/pandas/tests/test_format.py b/pandas/tests/test_format.py
index 92b866e8b..e5046dc84 100644
--- a/pandas/tests/test_format.py
+++ b/pandas/tests/test_format.py
@@ -16,6 +16,7 @@ from numpy.random import randn
 import numpy as np
 
 from pandas import DataFrame, Series, Index
+from pandas.util.py3compat import lzip
 import pandas.core.format as fmt
 import pandas.util.testing as tm
 import pandas
@@ -178,7 +179,7 @@ class TestDataFrameFormatting(unittest.TestCase):
                       ('float', lambda x: '[% 4.1f]' % x),
                       ('object', lambda x: '-%s-' % str(x))]
         result = df.to_string(formatters=dict(formatters))
-        result2 = df.to_string(formatters=zip(*formatters)[1])
+        result2 = df.to_string(formatters=lzip(*formatters)[1])
         self.assertEqual(result, ('  int  float    object\n'
                                   '0 0x1 [ 1.0]  -(1, 2)-\n'
                                   '1 0x2 [ 2.0]    -True-\n'
diff --git a/pandas/util/py3compat.py b/pandas/util/py3compat.py
index 0b00e5211..cb1876b4c 100644
--- a/pandas/util/py3compat.py
+++ b/pandas/util/py3compat.py
@@ -12,6 +12,7 @@ if PY3:
     def bytes_to_str(b, encoding='utf-8'):
         return b.decode(encoding)
 
+    lzip = lambda *args: list(zip(*args))
 else:
     # Python 2
     import re
@@ -26,6 +27,8 @@ else:
     def bytes_to_str(b, encoding='ascii'):
         return b
 
+    lzip = zip
+
 try:
     from cStringIO import StringIO
 except:
@@ -35,3 +38,5 @@ try:
     from io import BytesIO
 except:
     from cStringIO import StringIO as BytesIO
+
+
