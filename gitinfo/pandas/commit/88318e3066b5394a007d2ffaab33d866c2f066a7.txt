commit 88318e3066b5394a007d2ffaab33d866c2f066a7
Author: Kara de la Marck <karadelamarck@gmail.com>
Date:   Mon Feb 4 12:56:02 2019 +0000

    DOC: Fix validation type error RT04 (#25107) (#25129)

diff --git a/ci/code_checks.sh b/ci/code_checks.sh
index f71d2ce68..353583064 100755
--- a/ci/code_checks.sh
+++ b/ci/code_checks.sh
@@ -240,8 +240,8 @@ fi
 ### DOCSTRINGS ###
 if [[ -z "$CHECK" || "$CHECK" == "docstrings" ]]; then
 
-    MSG='Validate docstrings (GL06, GL07, GL09, SS04, PR03, PR05, EX04)' ; echo $MSG
-    $BASE_DIR/scripts/validate_docstrings.py --format=azure --errors=GL06,GL07,GL09,SS04,PR03,PR05,EX04
+    MSG='Validate docstrings (GL06, GL07, GL09, SS04, PR03, PR05, EX04, RT04)' ; echo $MSG
+    $BASE_DIR/scripts/validate_docstrings.py --format=azure --errors=GL06,GL07,GL09,SS04,PR03,PR05,EX04,RT04
     RET=$(($RET + $?)) ; echo $MSG "DONE"
 
 fi
diff --git a/pandas/core/algorithms.py b/pandas/core/algorithms.py
index b473a7aef..02f33c49c 100644
--- a/pandas/core/algorithms.py
+++ b/pandas/core/algorithms.py
@@ -289,9 +289,9 @@ def unique(values):
     Returns
     -------
     unique values.
-      - If the input is an Index, the return is an Index
-      - If the input is a Categorical dtype, the return is a Categorical
-      - If the input is a Series/ndarray, the return will be an ndarray
+      If the input is an Index, the return is an Index
+      If the input is a Categorical dtype, the return is a Categorical
+      If the input is a Series/ndarray, the return will be an ndarray
 
     See Also
     --------
diff --git a/pandas/core/dtypes/common.py b/pandas/core/dtypes/common.py
index e9bf0f870..0379a3d3e 100644
--- a/pandas/core/dtypes/common.py
+++ b/pandas/core/dtypes/common.py
@@ -139,7 +139,8 @@ def is_object_dtype(arr_or_dtype):
 
     Returns
     -------
-    boolean : Whether or not the array-like or dtype is of the object dtype.
+    boolean
+        Whether or not the array-like or dtype is of the object dtype.
 
     Examples
     --------
@@ -230,8 +231,8 @@ def is_scipy_sparse(arr):
 
     Returns
     -------
-    boolean : Whether or not the array-like is a
-              scipy.sparse.spmatrix instance.
+    boolean
+        Whether or not the array-like is a scipy.sparse.spmatrix instance.
 
     Notes
     -----
@@ -270,7 +271,8 @@ def is_categorical(arr):
 
     Returns
     -------
-    boolean : Whether or not the array-like is of a Categorical instance.
+    boolean
+        Whether or not the array-like is of a Categorical instance.
 
     Examples
     --------
@@ -305,8 +307,9 @@ def is_datetimetz(arr):
 
     Returns
     -------
-    boolean : Whether or not the array-like is a datetime array-like with
-              a timezone component in its dtype.
+    boolean
+        Whether or not the array-like is a datetime array-like with a
+        timezone component in its dtype.
 
     Examples
     --------
@@ -347,7 +350,8 @@ def is_offsetlike(arr_or_obj):
 
     Returns
     -------
-    boolean : Whether the object is a DateOffset or listlike of DatetOffsets
+    boolean
+        Whether the object is a DateOffset or listlike of DatetOffsets
 
     Examples
     --------
@@ -381,7 +385,8 @@ def is_period(arr):
 
     Returns
     -------
-    boolean : Whether or not the array-like is a periodical index.
+    boolean
+        Whether or not the array-like is a periodical index.
 
     Examples
     --------
@@ -411,8 +416,8 @@ def is_datetime64_dtype(arr_or_dtype):
 
     Returns
     -------
-    boolean : Whether or not the array-like or dtype is of
-              the datetime64 dtype.
+    boolean
+        Whether or not the array-like or dtype is of the datetime64 dtype.
 
     Examples
     --------
@@ -442,8 +447,8 @@ def is_datetime64tz_dtype(arr_or_dtype):
 
     Returns
     -------
-    boolean : Whether or not the array-like or dtype is of
-              a DatetimeTZDtype dtype.
+    boolean
+        Whether or not the array-like or dtype is of a DatetimeTZDtype dtype.
 
     Examples
     --------
@@ -480,8 +485,8 @@ def is_timedelta64_dtype(arr_or_dtype):
 
     Returns
     -------
-    boolean : Whether or not the array-like or dtype is
-              of the timedelta64 dtype.
+    boolean
+        Whether or not the array-like or dtype is of the timedelta64 dtype.
 
     Examples
     --------
@@ -511,7 +516,8 @@ def is_period_dtype(arr_or_dtype):
 
     Returns
     -------
-    boolean : Whether or not the array-like or dtype is of the Period dtype.
+    boolean
+        Whether or not the array-like or dtype is of the Period dtype.
 
     Examples
     --------
@@ -544,8 +550,8 @@ def is_interval_dtype(arr_or_dtype):
 
     Returns
     -------
-    boolean : Whether or not the array-like or dtype is
-              of the Interval dtype.
+    boolean
+        Whether or not the array-like or dtype is of the Interval dtype.
 
     Examples
     --------
@@ -580,8 +586,8 @@ def is_categorical_dtype(arr_or_dtype):
 
     Returns
     -------
-    boolean : Whether or not the array-like or dtype is
-              of the Categorical dtype.
+    boolean
+        Whether or not the array-like or dtype is of the Categorical dtype.
 
     Examples
     --------
@@ -613,7 +619,8 @@ def is_string_dtype(arr_or_dtype):
 
     Returns
     -------
-    boolean : Whether or not the array or dtype is of the string dtype.
+    boolean
+        Whether or not the array or dtype is of the string dtype.
 
     Examples
     --------
@@ -647,8 +654,9 @@ def is_period_arraylike(arr):
 
     Returns
     -------
-    boolean : Whether or not the array-like is a periodical
-              array-like or PeriodIndex instance.
+    boolean
+        Whether or not the array-like is a periodical array-like or
+        PeriodIndex instance.
 
     Examples
     --------
@@ -678,8 +686,9 @@ def is_datetime_arraylike(arr):
 
     Returns
     -------
-    boolean : Whether or not the array-like is a datetime
-              array-like or DatetimeIndex.
+    boolean
+        Whether or not the array-like is a datetime array-like or
+        DatetimeIndex.
 
     Examples
     --------
@@ -713,7 +722,8 @@ def is_datetimelike(arr):
 
     Returns
     -------
-    boolean : Whether or not the array-like is a datetime-like array-like.
+    boolean
+        Whether or not the array-like is a datetime-like array-like.
 
     Examples
     --------
@@ -754,7 +764,8 @@ def is_dtype_equal(source, target):
 
     Returns
     ----------
-    boolean : Whether or not the two dtypes are equal.
+    boolean
+        Whether or not the two dtypes are equal.
 
     Examples
     --------
@@ -794,7 +805,8 @@ def is_dtype_union_equal(source, target):
 
     Returns
     ----------
-    boolean : Whether or not the two dtypes are equal.
+    boolean
+        Whether or not the two dtypes are equal.
 
     >>> is_dtype_equal("int", int)
     True
@@ -835,7 +847,8 @@ def is_any_int_dtype(arr_or_dtype):
 
     Returns
     -------
-    boolean : Whether or not the array or dtype is of an integer dtype.
+    boolean
+        Whether or not the array or dtype is of an integer dtype.
 
     Examples
     --------
@@ -883,8 +896,9 @@ def is_integer_dtype(arr_or_dtype):
 
     Returns
     -------
-    boolean : Whether or not the array or dtype is of an integer dtype
-              and not an instance of timedelta64.
+    boolean
+        Whether or not the array or dtype is of an integer dtype and
+        not an instance of timedelta64.
 
     Examples
     --------
@@ -938,8 +952,9 @@ def is_signed_integer_dtype(arr_or_dtype):
 
     Returns
     -------
-    boolean : Whether or not the array or dtype is of a signed integer dtype
-              and not an instance of timedelta64.
+    boolean
+        Whether or not the array or dtype is of a signed integer dtype
+        and not an instance of timedelta64.
 
     Examples
     --------
@@ -993,8 +1008,8 @@ def is_unsigned_integer_dtype(arr_or_dtype):
 
     Returns
     -------
-    boolean : Whether or not the array or dtype is of an
-              unsigned integer dtype.
+    boolean
+        Whether or not the array or dtype is of an unsigned integer dtype.
 
     Examples
     --------
@@ -1036,7 +1051,8 @@ def is_int64_dtype(arr_or_dtype):
 
     Returns
     -------
-    boolean : Whether or not the array or dtype is of the int64 dtype.
+    boolean
+        Whether or not the array or dtype is of the int64 dtype.
 
     Notes
     -----
@@ -1086,7 +1102,8 @@ def is_datetime64_any_dtype(arr_or_dtype):
 
     Returns
     -------
-    boolean : Whether or not the array or dtype is of the datetime64 dtype.
+    boolean
+        Whether or not the array or dtype is of the datetime64 dtype.
 
     Examples
     --------
@@ -1126,7 +1143,8 @@ def is_datetime64_ns_dtype(arr_or_dtype):
 
     Returns
     -------
-    boolean : Whether or not the array or dtype is of the datetime64[ns] dtype.
+    boolean
+        Whether or not the array or dtype is of the datetime64[ns] dtype.
 
     Examples
     --------
@@ -1178,8 +1196,8 @@ def is_timedelta64_ns_dtype(arr_or_dtype):
 
     Returns
     -------
-    boolean : Whether or not the array or dtype is of the
-              timedelta64[ns] dtype.
+    boolean
+        Whether or not the array or dtype is of the timedelta64[ns] dtype.
 
     Examples
     --------
@@ -1207,8 +1225,9 @@ def is_datetime_or_timedelta_dtype(arr_or_dtype):
 
     Returns
     -------
-    boolean : Whether or not the array or dtype is of a
-              timedelta64, or datetime64 dtype.
+    boolean
+        Whether or not the array or dtype is of a timedelta64,
+        or datetime64 dtype.
 
     Examples
     --------
@@ -1248,7 +1267,8 @@ def _is_unorderable_exception(e):
 
     Returns
     -------
-    boolean : Whether or not the exception raised is an unorderable exception.
+    boolean
+        Whether or not the exception raised is an unorderable exception.
     """
 
     if PY36:
@@ -1275,8 +1295,8 @@ def is_numeric_v_string_like(a, b):
 
     Returns
     -------
-    boolean : Whether we return a comparing a string-like
-              object to a numeric array.
+    boolean
+        Whether we return a comparing a string-like object to a numeric array.
 
     Examples
     --------
@@ -1332,8 +1352,8 @@ def is_datetimelike_v_numeric(a, b):
 
     Returns
     -------
-    boolean : Whether we return a comparing a datetime-like
-              to a numeric object.
+    boolean
+        Whether we return a comparing a datetime-like to a numeric object.
 
     Examples
     --------
@@ -1388,8 +1408,8 @@ def is_datetimelike_v_object(a, b):
 
     Returns
     -------
-    boolean : Whether we return a comparing a datetime-like
-              to an object instance.
+    boolean
+        Whether we return a comparing a datetime-like to an object instance.
 
     Examples
     --------
@@ -1442,7 +1462,8 @@ def needs_i8_conversion(arr_or_dtype):
 
     Returns
     -------
-    boolean : Whether or not the array or dtype should be converted to int64.
+    boolean
+        Whether or not the array or dtype should be converted to int64.
 
     Examples
     --------
@@ -1480,7 +1501,8 @@ def is_numeric_dtype(arr_or_dtype):
 
     Returns
     -------
-    boolean : Whether or not the array or dtype is of a numeric dtype.
+    boolean
+        Whether or not the array or dtype is of a numeric dtype.
 
     Examples
     --------
@@ -1524,7 +1546,8 @@ def is_string_like_dtype(arr_or_dtype):
 
     Returns
     -------
-    boolean : Whether or not the array or dtype is of the string dtype.
+    boolean
+        Whether or not the array or dtype is of the string dtype.
 
     Examples
     --------
@@ -1555,7 +1578,8 @@ def is_float_dtype(arr_or_dtype):
 
     Returns
     -------
-    boolean : Whether or not the array or dtype is of a float dtype.
+    boolean
+        Whether or not the array or dtype is of a float dtype.
 
     Examples
     --------
@@ -1586,7 +1610,8 @@ def is_bool_dtype(arr_or_dtype):
 
     Returns
     -------
-    boolean : Whether or not the array or dtype is of a boolean dtype.
+    boolean
+        Whether or not the array or dtype is of a boolean dtype.
 
     Notes
     -----
@@ -1655,8 +1680,8 @@ def is_extension_type(arr):
 
     Returns
     -------
-    boolean : Whether or not the array-like is of a pandas
-              extension class instance.
+    boolean
+        Whether or not the array-like is of a pandas extension class instance.
 
     Examples
     --------
@@ -1760,7 +1785,8 @@ def is_complex_dtype(arr_or_dtype):
 
     Returns
     -------
-    boolean : Whether or not the array or dtype is of a compex dtype.
+    boolean
+        Whether or not the array or dtype is of a compex dtype.
 
     Examples
     --------
diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 152d2741e..be125983c 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -7767,10 +7767,10 @@ class DataFrame(NDFrame):
         -------
         quantiles : Series or DataFrame
 
-            - If ``q`` is an array, a DataFrame will be returned where the
+            If ``q`` is an array, a DataFrame will be returned where the
               index is ``q``, the columns are the columns of self, and the
               values are the quantiles.
-            - If ``q`` is a float, a Series will be returned where the
+            If ``q`` is a float, a Series will be returned where the
               index is the columns of self and the values are the quantiles.
 
         See Also
diff --git a/pandas/core/generic.py b/pandas/core/generic.py
index 0312ed6ec..60079e06d 100644
--- a/pandas/core/generic.py
+++ b/pandas/core/generic.py
@@ -4951,10 +4951,10 @@ class NDFrame(PandasObject, SelectionMixin):
     Returns
     -------
     DataFrame, Series or scalar
-        if DataFrame.agg is called with a single function, returns a Series
-        if DataFrame.agg is called with several functions, returns a DataFrame
-        if Series.agg is called with single function, returns a scalar
-        if Series.agg is called with several functions, returns a Series
+        If DataFrame.agg is called with a single function, returns a Series
+        If DataFrame.agg is called with several functions, returns a DataFrame
+        If Series.agg is called with single function, returns a scalar
+        If Series.agg is called with several functions, returns a Series
 
     %(see_also)s
 
@@ -6878,10 +6878,10 @@ class NDFrame(PandasObject, SelectionMixin):
         -------
         scalar, Series, or DataFrame
 
-           * scalar : when `self` is a Series and `where` is a scalar
-           * Series: when `self` is a Series and `where` is an array-like,
+           Scalar : when `self` is a Series and `where` is a scalar
+           Series: when `self` is a Series and `where` is an array-like,
              or when `self` is a DataFrame and `where` is a scalar
-           * DataFrame : when `self` is a DataFrame and `where` is an
+           DataFrame : when `self` is a DataFrame and `where` is an
              array-like
 
         See Also
diff --git a/pandas/core/indexes/accessors.py b/pandas/core/indexes/accessors.py
index c43469d3c..602e11a08 100644
--- a/pandas/core/indexes/accessors.py
+++ b/pandas/core/indexes/accessors.py
@@ -140,7 +140,7 @@ class DatetimeProperties(Properties):
         Returns
         -------
         numpy.ndarray
-            object dtype array containing native Python datetime objects.
+            Object dtype array containing native Python datetime objects.
 
         See Also
         --------
@@ -208,7 +208,7 @@ class TimedeltaProperties(Properties):
         Returns
         -------
         a : numpy.ndarray
-            1D array containing data with `datetime.timedelta` type.
+            Array of 1D containing data with `datetime.timedelta` type.
 
         See Also
         --------
diff --git a/pandas/core/indexes/base.py b/pandas/core/indexes/base.py
index 2fa034670..d0b44db84 100644
--- a/pandas/core/indexes/base.py
+++ b/pandas/core/indexes/base.py
@@ -4259,7 +4259,7 @@ class Index(IndexOpsMixin, PandasObject):
         Returns
         -------
         pandas.Index
-            shifted index
+            Shifted index
 
         See Also
         --------
diff --git a/pandas/core/indexes/multi.py b/pandas/core/indexes/multi.py
index 14975dbbe..e2237afbc 100644
--- a/pandas/core/indexes/multi.py
+++ b/pandas/core/indexes/multi.py
@@ -1391,7 +1391,7 @@ class MultiIndex(Index):
         Returns
         -------
         values : Index
-            ``values`` is a level of this MultiIndex converted to
+            Values is a level of this MultiIndex converted to
             a single :class:`Index` (or subclass thereof).
 
         Examples
diff --git a/pandas/core/panel.py b/pandas/core/panel.py
index 540192d1a..8dd604fb5 100644
--- a/pandas/core/panel.py
+++ b/pandas/core/panel.py
@@ -802,7 +802,7 @@ class Panel(NDFrame):
         Returns
         -------
         y : DataFrame
-            index -> minor axis, columns -> items
+            Index -> minor axis, columns -> items
 
         Notes
         -----
@@ -826,7 +826,7 @@ class Panel(NDFrame):
         Returns
         -------
         y : DataFrame
-            index -> major axis, columns -> items
+            Index -> major axis, columns -> items
 
         Notes
         -----
diff --git a/pandas/core/series.py b/pandas/core/series.py
index e8c6cf909..427da96c5 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -2025,7 +2025,7 @@ class Series(base.IndexOpsMixin, generic.NDFrame):
         Returns
         -------
         quantile : float or Series
-            if ``q`` is an array, a Series will be returned where the
+            If ``q`` is an array, a Series will be returned where the
             index is ``q`` and the values are the quantiles.
 
         See Also
diff --git a/pandas/io/formats/style.py b/pandas/io/formats/style.py
index 61862ee00..790cff958 100644
--- a/pandas/io/formats/style.py
+++ b/pandas/io/formats/style.py
@@ -433,7 +433,7 @@ class Styler(object):
         Returns
         -------
         rendered : str
-            the rendered HTML
+            The rendered HTML
 
         Notes
         -----
@@ -1223,7 +1223,7 @@ class Styler(object):
         Returns
         -------
         MyStyler : subclass of Styler
-            has the correct ``env`` and ``template`` class attributes set.
+            Has the correct ``env`` and ``template`` class attributes set.
         """
         loader = ChoiceLoader([
             FileSystemLoader(searchpath),
