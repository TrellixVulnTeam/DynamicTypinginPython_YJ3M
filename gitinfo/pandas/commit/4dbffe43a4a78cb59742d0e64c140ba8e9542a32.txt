commit 4dbffe43a4a78cb59742d0e64c140ba8e9542a32
Author: Chang She <chang@lambdafoundry.com>
Date:   Fri Apr 20 13:32:29 2012 -0400

    BUG: _nanvar may return small negative if given a constant array

diff --git a/pandas/core/nanops.py b/pandas/core/nanops.py
index 3dae9d094..1237d7314 100644
--- a/pandas/core/nanops.py
+++ b/pandas/core/nanops.py
@@ -117,7 +117,7 @@ def _nanvar(values, axis=None, skipna=True, ddof=1):
 
     X = _ensure_numeric(values.sum(axis))
     XX = _ensure_numeric((values ** 2).sum(axis))
-    return (XX - X ** 2 / count) / (count - ddof)
+    return np.fabs((XX - X ** 2 / count) / (count - ddof))
 
 def _nanmin(values, axis=None, skipna=True):
     mask = isnull(values)
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index 142374887..a132d296f 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -16,6 +16,7 @@ import numpy as np
 import numpy.ma as ma
 
 import pandas as pan
+import pandas.core.nanops as nanops
 import pandas.core.common as com
 import pandas.core.format as fmt
 import pandas.core.datetools as datetools
@@ -4412,6 +4413,15 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
         expected = self.tsframe.apply(lambda x: x.var(ddof=4))
         assert_almost_equal(result, expected)
 
+        arr = np.repeat(np.random.random((1, 1000)), 1000, 0)
+        result = nanops.nanvar(arr, axis=0)
+        self.assertFalse((result < 0).any())
+        if nanops._USE_BOTTLENECK:
+            nanops._USE_BOTTLENECK = False
+            result = nanops.nanvar(arr, axis=0)
+            self.assertFalse((result < 0).any())
+            nanops._USE_BOTTLENECK = True
+
     def test_skew(self):
         from scipy.stats import skew
 
