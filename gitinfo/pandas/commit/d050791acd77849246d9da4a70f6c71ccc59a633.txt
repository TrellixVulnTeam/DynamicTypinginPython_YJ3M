commit d050791acd77849246d9da4a70f6c71ccc59a633
Author: Matthew Roeschke <emailformattr@gmail.com>
Date:   Fri Jun 28 21:36:20 2019 -0500

    DEPR: Change current DeprecationWarnings to FutureWarnings (#27113)
    
    * Change current DeprecationWarnings to FutureWarnings in prep for removal in 0.25.0
    
    * Change RangeIndex.start/stop/step back to DeprecationWarning
    
    * Change one test warning

diff --git a/pandas/core/internals/blocks.py b/pandas/core/internals/blocks.py
index a131509a4..f0128b70d 100644
--- a/pandas/core/internals/blocks.py
+++ b/pandas/core/internals/blocks.py
@@ -220,7 +220,7 @@ class Block(PandasObject):
         if dtype is not None:
             # issue 19431 fastparquet is passing this
             warnings.warn("dtype argument is deprecated, will be removed "
-                          "in a future release.", DeprecationWarning)
+                          "in a future release.", FutureWarning)
         if placement is None:
             placement = self.mgr_locs
         return make_block(values, placement=placement, ndim=ndim,
@@ -1794,7 +1794,7 @@ class ExtensionBlock(NonConsolidatableMixIn, Block):
                 "'ExtensionArray._formatting_values' is deprecated. "
                 "Specify 'ExtensionArray._formatter' instead."
             )
-            warnings.warn(msg, DeprecationWarning, stacklevel=10)
+            warnings.warn(msg, FutureWarning, stacklevel=10)
             return self.values._formatting_values()
 
         return self.values
@@ -3056,7 +3056,7 @@ def make_block(values, placement, klass=None, ndim=None, dtype=None,
     if fastpath is not None:
         # GH#19265 pyarrow is passing this
         warnings.warn("fastpath argument is deprecated, will be removed "
-                      "in a future release.", DeprecationWarning)
+                      "in a future release.", FutureWarning)
     if klass is None:
         dtype = dtype or values.dtype
         klass = get_block_type(values, dtype)
diff --git a/pandas/tests/extension/decimal/test_decimal.py b/pandas/tests/extension/decimal/test_decimal.py
index ecef835a9..4625c79e1 100644
--- a/pandas/tests/extension/decimal/test_decimal.py
+++ b/pandas/tests/extension/decimal/test_decimal.py
@@ -397,6 +397,6 @@ def test_formatting_values_deprecated():
 
     ser = pd.Series(DecimalArray2([decimal.Decimal('1.0')]))
 
-    with tm.assert_produces_warning(DeprecationWarning,
+    with tm.assert_produces_warning(FutureWarning,
                                     check_stacklevel=False):
         repr(ser)
diff --git a/pandas/tests/indexes/test_range.py b/pandas/tests/indexes/test_range.py
index 3f474b016..5f7f10e88 100644
--- a/pandas/tests/indexes/test_range.py
+++ b/pandas/tests/indexes/test_range.py
@@ -171,12 +171,12 @@ class TestRangeIndex(Numeric):
         assert index.stop == stop
         assert index.step == step
 
-    def test_deprecated_start_stop_step_attrs(self):
+    @pytest.mark.parametrize('attr_name', ['_start', '_stop', '_step'])
+    def test_deprecated_start_stop_step_attrs(self, attr_name):
         # GH 26581
         idx = self.create_index()
-        for attr_name in ['_start', '_stop', '_step']:
-            with tm.assert_produces_warning(DeprecationWarning):
-                getattr(idx, attr_name)
+        with tm.assert_produces_warning(DeprecationWarning):
+            getattr(idx, attr_name)
 
     def test_copy(self):
         i = RangeIndex(5, name='Foo')
diff --git a/pandas/tests/internals/test_internals.py b/pandas/tests/internals/test_internals.py
index b997e2b6e..697c0b528 100644
--- a/pandas/tests/internals/test_internals.py
+++ b/pandas/tests/internals/test_internals.py
@@ -287,7 +287,7 @@ class TestBlock:
     def test_make_block_same_class(self):
         # issue 19431
         block = create_block('M8[ns, US/Eastern]', [3])
-        with tm.assert_produces_warning(DeprecationWarning,
+        with tm.assert_produces_warning(FutureWarning,
                                         check_stacklevel=False):
             block.make_block_same_class(block.values,
                                         dtype=block.values.dtype)
@@ -1254,7 +1254,7 @@ def test_holder(typestr, holder):
 def test_deprecated_fastpath():
     # GH#19265
     values = np.random.rand(3, 3)
-    with tm.assert_produces_warning(DeprecationWarning,
+    with tm.assert_produces_warning(FutureWarning,
                                     check_stacklevel=False):
         make_block(values, placement=np.arange(3), fastpath=True)
 
