commit 030e374940a93b7920c0c2ac5c950668564c3703
Author: huashuai <huashuai@users.noreply.github.com>
Date:   Sat Sep 30 12:33:52 2017 -0700

    BUG: Fix series rename called with str altering name rather index (GH17407) (#17654)
    
    * BUG: Fix series rename called with str altering the name. GH17407
    
    * add whatsnew for the fix for #17407
    
    * Fix typo in whatsnew
    
    * remove whitespace
    
    * Update code after @jreback's comments
    
    * Change `or` to `and` for checking iterable
    
    * Only check against Iterable in is_list_like and add test for `str`
    
    * Update v0.21.0.txt

diff --git a/doc/source/whatsnew/v0.21.0.txt b/doc/source/whatsnew/v0.21.0.txt
index 4a3122a78..e0e0c1805 100644
--- a/doc/source/whatsnew/v0.21.0.txt
+++ b/doc/source/whatsnew/v0.21.0.txt
@@ -589,6 +589,7 @@ Indexing
 - Bug in intersection of ``RangeIndex`` with negative step (:issue:`17296`)
 - Bug in ``IntervalIndex`` where performing a scalar lookup fails for included right endpoints of non-overlapping monotonic decreasing indexes (:issue:`16417`, :issue:`17271`)
 - Bug in :meth:`DataFrame.first_valid_index` and :meth:`DataFrame.last_valid_index` when no valid entry (:issue:`17400`)
+- Bug in :func:`Series.rename` when called with a `callable`, incorrectly alters the name of the `Series`, rather than the name of the `Index`. (:issue:`17407`)
 
 I/O
 ^^^
diff --git a/pandas/core/dtypes/inference.py b/pandas/core/dtypes/inference.py
index ff7e21595..de769c69f 100644
--- a/pandas/core/dtypes/inference.py
+++ b/pandas/core/dtypes/inference.py
@@ -3,6 +3,7 @@
 import collections
 import re
 import numpy as np
+from collections import Iterable
 from numbers import Number
 from pandas.compat import (PY2, string_types, text_type,
                            string_and_binary_types)
@@ -262,7 +263,7 @@ def is_list_like(obj):
     False
     """
 
-    return (hasattr(obj, '__iter__') and
+    return (isinstance(obj, Iterable) and
             not isinstance(obj, string_and_binary_types))
 
 
diff --git a/pandas/tests/dtypes/test_inference.py b/pandas/tests/dtypes/test_inference.py
index dbde7ae50..857f7a283 100644
--- a/pandas/tests/dtypes/test_inference.py
+++ b/pandas/tests/dtypes/test_inference.py
@@ -58,7 +58,7 @@ def test_is_sequence():
 def test_is_list_like():
     passes = ([], [1], (1, ), (1, 2), {'a': 1}, set([1, 'a']), Series([1]),
               Series([]), Series(['a']).str)
-    fails = (1, '2', object())
+    fails = (1, '2', object(), str)
 
     for p in passes:
         assert inference.is_list_like(p)
diff --git a/pandas/tests/series/test_indexing.py b/pandas/tests/series/test_indexing.py
index 2182e3fbf..83d6a09d3 100644
--- a/pandas/tests/series/test_indexing.py
+++ b/pandas/tests/series/test_indexing.py
@@ -2188,6 +2188,16 @@ class TestSeriesIndexing(TestData):
         expected = Series([False, True, False], index=[1, 2, 3])
         assert_series_equal(result, expected)
 
+    def test_rename(self):
+
+        # GH 17407
+        s = Series(range(1, 6), index=pd.Index(range(2, 7), name='IntIndex'))
+        result = s.rename(str)
+        expected = s.rename(lambda i: str(i))
+        assert_series_equal(result, expected)
+
+        assert result.name == expected.name
+
     def test_select(self):
         n = len(self.ts)
         result = self.ts.select(lambda x: x >= self.ts.index[n // 2])
