commit 5e806bff9f4220f4f65570b8ee964e37728cad03
Author: Phillip Cloud <cpcloud@gmail.com>
Date:   Wed Sep 11 23:03:33 2013 -0400

    DOC: doc build fixes

diff --git a/doc/source/timeseries.rst b/doc/source/timeseries.rst
index 1175fe1c5..11f4ac9f4 100644
--- a/doc/source/timeseries.rst
+++ b/doc/source/timeseries.rst
@@ -678,7 +678,7 @@ strongly recommended that you switch to using the new offset aliases.
     "A\@DEC", "BA\-DEC"
     "min", "T"
     "ms", "L"
-    "us": "U"
+    "us", "U"
 
 As you can see, legacy quarterly and annual frequencies are business quarter
 and business year ends. Please also note the legacy time rule for milliseconds
diff --git a/pandas/core/series.py b/pandas/core/series.py
index 577e0a8b5..4516fcfba 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -2731,9 +2731,9 @@ class Series(generic.NDFrame):
 
     def isin(self, values):
         """
-        Return a boolean :ref:`~pandas.Series` showing whether each element in
-        the ref:`~pandas.Series` is exactly contained in the passed sequence of
-        ``values``.
+        Return a boolean :class:`~pandas.Series` showing whether each element
+        in the :class:`~pandas.Series` is exactly contained in the passed
+        sequence of ``values``.
 
         Parameters
         ----------
diff --git a/pandas/io/json.py b/pandas/io/json.py
index 0c4f193ad..737ec1941 100644
--- a/pandas/io/json.py
+++ b/pandas/io/json.py
@@ -101,34 +101,37 @@ def read_json(path_or_buf=None, orient=None, typ='frame', dtype=True,
               convert_axes=True, convert_dates=True, keep_default_dates=True,
               numpy=False, precise_float=False, date_unit=None):
     """
-    Convert JSON string to pandas object
+    Convert a JSON string to pandas object
 
     Parameters
     ----------
-    filepath_or_buffer : a VALID JSON string or file handle / StringIO. The
-        string could be a URL. Valid URL schemes include http, ftp, s3, and
+    filepath_or_buffer : a valid JSON string or file-like
+        The string could be a URL. Valid URL schemes include http, ftp, s3, and
         file. For file URLs, a host is expected. For instance, a local file
-        could be file ://localhost/path/to/table.json
-    orient :
-        Series :
-          default is 'index'
-          allowed values are: {'split','records','index'}
-          The Series index must be unique for orient 'index'.
-
-        DataFrame :
-          default is 'columns'
-          allowed values are: {'split','records','index','columns','values'}
-          The DataFrame index must be unique for orients 'index' and 'columns'.
-          The DataFrame columns must be unique for orients 'index', 'columns',
-          and 'records'.
-
-        The format of the JSON string
-          split : dict like
-            {index -> [index], columns -> [columns], data -> [values]}
-          records : list like [{column -> value}, ... , {column -> value}]
-          index : dict like {index -> {column -> value}}
-          columns : dict like {column -> {index -> value}}
-          values : just the values array
+        could be ``file://localhost/path/to/table.json``
+
+    orient
+
+        * `Series`
+
+          - default is ``'index'``
+          - allowed values are: ``{'split','records','index'}``
+          - The Series index must be unique for orient ``'index'``.
+
+        * `DataFrame`
+
+          - default is ``'columns'``
+          - allowed values are: {'split','records','index','columns','values'}
+          - The DataFrame index must be unique for orients 'index' and 'columns'.
+          - The DataFrame columns must be unique for orients 'index', 'columns', and 'records'.
+
+        * The format of the JSON string
+
+          - split : dict like ``{index -> [index], columns -> [columns], data -> [values]}``
+          - records : list like ``[{column -> value}, ... , {column -> value}]``
+          - index : dict like ``{index -> {column -> value}}``
+          - columns : dict like ``{column -> {index -> value}}``
+          - values : just the values array
 
     typ : type of object to recover (series or frame), default 'frame'
     dtype : boolean or dict, default True
