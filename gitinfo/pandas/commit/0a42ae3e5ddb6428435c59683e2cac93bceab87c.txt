commit 0a42ae3e5ddb6428435c59683e2cac93bceab87c
Author: Juraj Niznan <jurajniznan@gmail.com>
Date:   Sun Jun 16 11:04:34 2013 +0200

    ENH: DataFrame.corr(method=spearman) related minor improvements.

diff --git a/doc/source/v0.11.1.txt b/doc/source/v0.11.1.txt
index 76ae85a53..8dbf2e86e 100644
--- a/doc/source/v0.11.1.txt
+++ b/doc/source/v0.11.1.txt
@@ -295,6 +295,8 @@ Enhancements
   - DatetimeIndexes no longer try to convert mixed-integer indexes during join
     operations (GH3877_)
 
+  - DataFrame corr method (spearman) is now cythonized.
+
 
 Bug Fixes
 ~~~~~~~~~
diff --git a/pandas/algos.pyx b/pandas/algos.pyx
index e30e69df6..08ec707b0 100644
--- a/pandas/algos.pyx
+++ b/pandas/algos.pyx
@@ -1002,7 +1002,7 @@ def nancorr(ndarray[float64_t, ndim=2] mat, cov=False, minp=None):
 
 @cython.boundscheck(False)
 @cython.wraparound(False)
-def nancorr_spearman(ndarray[float64_t, ndim=2] mat, minp=None):
+def nancorr_spearman(ndarray[float64_t, ndim=2] mat, Py_ssize_t minp=1):
     cdef:
         Py_ssize_t i, j, xi, yi, N, K
         ndarray[float64_t, ndim=2] result
@@ -1014,9 +1014,6 @@ def nancorr_spearman(ndarray[float64_t, ndim=2] mat, minp=None):
 
     N, K = (<object> mat).shape
 
-    if minp is None:
-        minp = 1
-
     result = np.empty((K, K), dtype=np.float64)
     mask = np.isfinite(mat).view(np.uint8)
 
diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 5a5ad2019..f01453643 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -4711,7 +4711,7 @@ class DataFrame(NDFrame):
     #----------------------------------------------------------------------
     # Statistical methods, etc.
 
-    def corr(self, method='pearson', min_periods=None):
+    def corr(self, method='pearson', min_periods=1):
         """
         Compute pairwise correlation of columns, excluding NA/null values
 
diff --git a/vb_suite/stat_ops.py b/vb_suite/stat_ops.py
index 86e879d0b..f01a867ea 100644
--- a/vb_suite/stat_ops.py
+++ b/vb_suite/stat_ops.py
@@ -82,3 +82,12 @@ arr = np.random.randn(100000)
 
 stats_rolling_mean = Benchmark('rolling_mean(arr, 100)', setup,
                                start_date=datetime(2011, 6, 1))
+
+# spearman correlation
+
+setup = common_setup + """
+df = DataFrame(np.random.randn(1000, 300))
+"""
+
+stats_corr_spearman = Benchmark("df.corr(method='spearman')", setup,
+                                start_date=datetime(2011, 12, 4))
