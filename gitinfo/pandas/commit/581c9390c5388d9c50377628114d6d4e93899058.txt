commit 581c9390c5388d9c50377628114d6d4e93899058
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Fri Jan 20 16:06:18 2012 -0500

    BUG: enable DataFrame column creation from a list of tuples

diff --git a/RELEASE.rst b/RELEASE.rst
index 5f4c1f647..99b7faa84 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -219,6 +219,7 @@ pandas 0.7.0
   - Add support for legacy WidePanel objects to be read from HDFStore
   - Fix out-of-bounds segfault in pad_object and backfill_object methods when
     either source or target array are empty
+  - Could not create a new column in a DataFrame from a list of tuples
 
 Thanks
 ------
diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 4baa385d1..6be4ab01f 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -1427,9 +1427,7 @@ class DataFrame(NDFrame):
                 assert(len(value) == len(self.index))
 
                 if not isinstance(value, np.ndarray):
-                    value = np.array(value)
-                    if value.dtype.type == np.str_:
-                        value = np.array(value, dtype=object)
+                    value = com._asarray_tuplesafe(value)
                 else:
                     value = value.copy()
         else:
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index 4ddc88c16..f58923d9b 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -91,6 +91,14 @@ class CheckIndexing(object):
         self.frame[['A', 'B']] = data
         assert_almost_equal(self.frame[['A', 'B']].values, data)
 
+    def test_setitem_list_of_tuples(self):
+        tuples = zip(self.frame['A'], self.frame['B'])
+        self.frame['tuples'] = tuples
+
+        result = self.frame['tuples']
+        expected = Series(tuples, index=self.frame.index)
+        assert_series_equal(result, expected)
+
     def test_getitem_boolean(self):
         # boolean indexing
         d = self.tsframe.index[10]
@@ -1713,6 +1721,7 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
 
         com.set_printoptions(max_rows=10, max_columns=2)
         repr(self.frame)
+        com.reset_printoptions()
 
     def test_repr_embedded_ndarray(self):
         arr = np.empty(10, dtype=[('err', object)])
