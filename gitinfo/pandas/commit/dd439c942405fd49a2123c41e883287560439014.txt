commit dd439c942405fd49a2123c41e883287560439014
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Sat Jan 19 18:55:16 2013 -0500

    BUG: DataFrame.from_records bug with index column and empty record list. close #2633

diff --git a/RELEASE.rst b/RELEASE.rst
index 1a51d2348..c7b2ffadb 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -82,6 +82,8 @@ pandas 0.10.1
     results (GH2599_)
   - Fix groupby summing performance issue on boolean data (GH2692_)
   - Don't bork Series containing datetime64 values with to_datetime (GH2699_)
+  - Fix DataFrame.from_records corner case when passed columns, index column,
+    but empty record list (GH2633_)
 
 **API Changes**
 
@@ -101,6 +103,7 @@ pandas 0.10.1
 .. _GH2616: https://github.com/pydata/pandas/issues/2616
 .. _GH2625: https://github.com/pydata/pandas/issues/2625
 .. _GH2643: https://github.com/pydata/pandas/issues/2643
+.. _GH2633: https://github.com/pydata/pandas/issues/2633
 .. _GH2637: https://github.com/pydata/pandas/issues/2637
 .. _GH2690: https://github.com/pydata/pandas/issues/2690
 .. _GH2692: https://github.com/pydata/pandas/issues/2692
diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index e84bc3d91..fb717a369 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -1030,7 +1030,10 @@ class DataFrame(NDFrame):
                     not hasattr(index, "__iter__")):
                 i = columns.get_loc(index)
                 exclude.add(index)
-                result_index = Index(arrays[i], name=index)
+                if len(arrays) > 0:
+                    result_index = Index(arrays[i], name=index)
+                else:
+                    result_index = Index([], name=index)
             else:
                 try:
                     to_remove = [arr_columns.get_loc(field) for field in index]
@@ -1043,9 +1046,11 @@ class DataFrame(NDFrame):
                     result_index = index
 
         if any(exclude):
-            to_remove = [arr_columns.get_loc(col) for col in exclude]
+            arr_exclude = [x for x in exclude if x in arr_columns]
+            to_remove = [arr_columns.get_loc(col) for col in arr_exclude]
             arrays = [v for i, v in enumerate(arrays) if i not in to_remove]
-            arr_columns = arr_columns.drop(exclude)
+
+            arr_columns = arr_columns.drop(arr_exclude)
             columns = columns.drop(exclude)
 
         mgr = _arrays_to_mgr(arrays, arr_columns, result_index,
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index f53e149de..5e2c0c817 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -2928,6 +2928,15 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
         expected = DataFrame.from_records(tups)
         assert_frame_equal(result, expected)
 
+    def test_from_records_len0_with_columns(self):
+        # #2633
+        result = DataFrame.from_records([], index='foo',
+                                        columns=['foo', 'bar'])
+
+        self.assertTrue(np.array_equal(result.columns, ['bar']))
+        self.assertEqual(len(result), 0)
+        self.assertEqual(result.index.name, 'foo')
+
     def test_get_agg_axis(self):
         cols = self.frame._get_agg_axis(0)
         self.assert_(cols is self.frame.columns)
