commit f1e5e8e280af561cd8277b53a26492fdb10e3901
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Sat Dec 11 01:10:28 2010 -0500

    fixed GH issue 7

diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 2798d6265..5cffca81f 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -77,6 +77,11 @@ class DataFrame(Picklable, Groupable):
                                                         columns, dtype)
         elif isinstance(data, DataFrame):
             self._series = data._series.copy()
+
+            if dtype is not None:
+                self._series = dict((k, v.astype(dtype))
+                                    for k, v in self._series.iteritems())
+
             self.index = data.index
         elif data is None:
             if index is None:
diff --git a/pandas/core/matrix.py b/pandas/core/matrix.py
index c2bd40b9a..1bd8a51f1 100644
--- a/pandas/core/matrix.py
+++ b/pandas/core/matrix.py
@@ -64,6 +64,10 @@ class DataMatrix(DataFrame):
             if not isinstance(data, DataMatrix):
                 data = data.toDataMatrix()
             values = data.values
+
+            if dtype is not None:
+                values = values.astype(dtype)
+
             index = data.index
             columns = data.columns
             objects = data.objects
diff --git a/pandas/core/tests/test_frame.py b/pandas/core/tests/test_frame.py
index 4ac914b2c..0a28e193f 100644
--- a/pandas/core/tests/test_frame.py
+++ b/pandas/core/tests/test_frame.py
@@ -72,9 +72,6 @@ class TestDataFrame(unittest.TestCase):
         df = self.klass(data={})
         self.assert_(len(df.index) == 0)
 
-        df = self.klass(self.frame)
-        assert_frame_equal(df, self.frame)
-
     def test_constructor_mixed(self):
         index, data = common.getMixedTypeDict()
 
@@ -199,6 +196,13 @@ class TestDataFrame(unittest.TestCase):
         frame = self.klass(np.empty((3, 0)))
         self.assert_(len(frame.cols()) == 0)
 
+    def test_constructor_DataFrame(self):
+        df = self.klass(self.frame)
+        assert_frame_equal(df, self.frame)
+
+        df_casted = self.klass(self.frame, dtype=int)
+        self.assert_(df_casted.values.dtype == np.int_)
+
     def test_array_interface(self):
         result = np.sqrt(self.frame)
         self.assert_(type(result) is type(self.frame))
