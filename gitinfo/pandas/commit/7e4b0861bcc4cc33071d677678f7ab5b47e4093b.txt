commit 7e4b0861bcc4cc33071d677678f7ab5b47e4093b
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Mon Mar 12 23:42:45 2012 -0400

    ENH: can set existing columns via attributes as convenience, close #883

diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index b1345a7b9..cd7cd6b64 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -1479,6 +1479,23 @@ class DataFrame(NDFrame):
         raise AttributeError("'%s' object has no attribute '%s'" %
                              (type(self).__name__, name))
 
+    def __setattr__(self, name, value):
+        """After regular attribute access, try looking up the name of a column.
+        This allows simpler access to columns for interactive use."""
+        if name == '_data':
+            super(DataFrame, self).__setattr__(name, value)
+        else:
+            try:
+                existing = getattr(self, name)
+                if isinstance(existing, Index):
+                    super(DataFrame, self).__setattr__(name, value)
+                elif name in self.columns:
+                    self[name] = value
+                else:
+                    object.__setattr__(self, name, value)
+            except (AttributeError, TypeError):
+                object.__setattr__(self, name, value)
+
     def __setitem__(self, key, value):
         # support boolean setting with DataFrame input, e.g.
         # df[df > df2] = 0
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index ee0a9cf1f..073c4d323 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -149,6 +149,12 @@ class CheckIndexing(object):
         self.assertRaises(AttributeError, getattr, self.frame,
                           'NONEXISTENT_NAME')
 
+    def test_setattr_column(self):
+        df = DataFrame({'foobar' : 1}, index=range(10))
+
+        df.foobar = 5
+        self.assert_((df.foobar == 5).all())
+
     def test_setitem(self):
         # not sure what else to do here
         series = self.frame['A'][::2]
