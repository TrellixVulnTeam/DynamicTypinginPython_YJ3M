commit 90e515fa1dae5ed195bbd398ec589f7e890d14bf
Author: Phillip Cloud <cpcloud@gmail.com>
Date:   Thu Jun 6 13:33:02 2013 -0400

    DOC: document the pitfalls of different byte orders

diff --git a/doc/source/faq.rst b/doc/source/faq.rst
index 37639b901..534ad576d 100644
--- a/doc/source/faq.rst
+++ b/doc/source/faq.rst
@@ -246,3 +246,22 @@ interval (``'start'`` or ``'end'``) convention:
    data = Series(np.random.randn(50), index=rng)
    resampled = data.resample('A', kind='timestamp', convention='end')
    resampled.index
+
+
+Byte-Ordering Issues
+--------------------
+Occasionally you may have to deal with data that were created on a machine with
+a different byte order than the one on which you are running Python. To deal
+with this issue you should convert the underlying NumPy array to the native
+system byte order *before* passing it to Series/DataFrame/Panel constructors
+using something similar to the following:
+
+.. ipython:: python
+
+   x = np.array(range(10), '>i4') # big endian
+   newx = x.byteswap().newbyteorder() # force native byteorder
+   s = Series(newx)
+
+See `the NumPy documentation on byte order
+<http://docs.scipy.org/doc/numpy/user/basics.byteswapping.html>`__ for more
+details.
diff --git a/doc/source/gotchas.rst b/doc/source/gotchas.rst
index 422e3cec5..45369cb7d 100644
--- a/doc/source/gotchas.rst
+++ b/doc/source/gotchas.rst
@@ -453,3 +453,22 @@ parse HTML tables in the top-level pandas io function ``read_html``.
 
 .. |Anaconda| replace:: **Anaconda**
 .. _Anaconda: https://store.continuum.io/cshop/anaconda
+
+
+Byte-Ordering Issues
+--------------------
+Occasionally you may have to deal with data that were created on a machine with
+a different byte order than the one on which you are running Python. To deal
+with this issue you should convert the underlying NumPy array to the native
+system byte order *before* passing it to Series/DataFrame/Panel constructors
+using something similar to the following:
+
+.. ipython:: python
+
+   x = np.array(range(10), '>i4') # big endian
+   newx = x.byteswap().newbyteorder() # force native byteorder
+   s = Series(newx)
+
+See `the NumPy documentation on byte order
+<http://docs.scipy.org/doc/numpy/user/basics.byteswapping.html>`__ for more
+details.
