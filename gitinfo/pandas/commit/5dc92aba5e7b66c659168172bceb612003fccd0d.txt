commit 5dc92aba5e7b66c659168172bceb612003fccd0d
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Sun Jul 22 15:13:15 2012 -0400

    DOC: doc fixes and what's new in 0.8.1, vectorized string methods

diff --git a/doc/source/basics.rst b/doc/source/basics.rst
index b8b9040e1..b74547b17 100644
--- a/doc/source/basics.rst
+++ b/doc/source/basics.rst
@@ -835,6 +835,74 @@ For instance,
 
    for r in df2.itertuples(): print r
 
+.. _basics.string_methods:
+
+Vectorized string methods
+-------------------------
+
+Series is equipped (as of pandas 0.8.1) with a set of string processing methods
+that make it easy to operate on each element of the array. Perhaps most
+importantly, these methods exclude missing/NA values automatically. These are
+accessed via the Series's ``str`` attribute and generally have names matching
+the equivalent (scalar) build-in string methods:
+
+.. ipython:: python
+
+   s = Series(['A', 'B', 'C', 'Aaba', 'Baca', np.nan, 'CABA', 'dog', 'cat'])
+   s.str.lower()
+   s.str.upper()
+   s.str.len()
+
+Methods like ``split`` return a Series of lists:
+
+.. ipython:: python
+
+   s2 = Series(['a_b_c', 'c_d_e', np.nan, 'f_g_h'])
+   s2.str.split('_')
+
+Elements in the split lists can be accessed using ``get`` or ``[]`` notation:
+
+.. ipython:: python
+
+   s2.str.split('_').str.get(1)
+   s2.str.split('_').str[1]
+
+Methods like ``replace`` and ``findall`` take regular expressions, too:
+
+.. ipython:: python
+
+   s3 = Series(['A', 'B', 'C', 'Aaba', 'Baca',
+               '', np.nan, 'CABA', 'dog', 'cat'])
+   s3
+   s3.str.replace('^.a|dog', 'XX-XX ', case=False)
+
+.. csv-table::
+    :header: "Method", "Description"
+    :widths: 20, 80
+
+    ``cat``,Concatenate strings
+    ``split``,Split strings on delimiter
+    ``get``,Index into each element (retrieve i-th element)
+    ``join``,Join strings in each element of the Series with passed separator
+    ``contains``,Return boolean array if each string contains pattern/regex
+    ``replace``,Replace occurrences of pattern/regex with some other string
+    ``repeat``,Duplicate values (``s.str.repeat(3)`` equivalent to ``x * 3``)
+    ``pad``,"Add whitespace to left, right, or both sides of strings"
+    ``center``,Equivalent to ``pad(side='both')``
+    ``slice``,Slice each string in the Series
+    ``slice_replace``,Replace slice in each string with passed value
+    ``count``,Count occurrences of pattern
+    ``startswith``,Equivalent to ``str.startswith(pat)`` for each element
+    ``endswidth``,Equivalent to ``str.endswith(pat)`` for each element
+    ``findall``,Compute list of all occurrences of pattern/regex for each string
+    ``match``,"Call ``re.match`` on each element, returning matched groups as list"
+    ``len``,Compute string lengths
+    ``strip``,Equivalent to ``str.strip``
+    ``rstrip``,Equivalent to ``str.rstrip``
+    ``lstrip``,Equivalent to ``str.lstrip``
+    ``lower``,Equivalent to ``str.lower``
+    ``upper``,Equivalent to ``str.upper``
+
 .. _basics.sorting:
 
 Sorting by index and value
diff --git a/doc/source/dsintro.rst b/doc/source/dsintro.rst
index 23f603a82..87fdd2628 100644
--- a/doc/source/dsintro.rst
+++ b/doc/source/dsintro.rst
@@ -32,6 +32,13 @@ between labels and data will not be broken unless done so explicitly by you.
 We'll give a brief intro to the data structures, then consider all of the broad
 categories of functionality and methods in separate sections.
 
+When using pandas, we recommend the following import convention:
+
+.. code-block:: python
+
+   import pandas as pd
+
+
 .. _basics.series:
 
 Series
diff --git a/doc/source/indexing.rst b/doc/source/indexing.rst
index 9dc87edbe..28fa9a697 100644
--- a/doc/source/indexing.rst
+++ b/doc/source/indexing.rst
@@ -9,6 +9,7 @@
    import random
    np.random.seed(123456)
    from pandas import *
+   import pandas as pd
    randn = np.random.randn
    randint = np.random.randint
    np.set_printoptions(precision=4, suppress=True)
@@ -665,6 +666,14 @@ can find yourself working with hierarchically-indexed data without creating a
 ``MultiIndex`` explicitly yourself. However, when loading data from a file, you
 may wish to generate your own ``MultiIndex`` when preparing the data set.
 
+Note that how the index is displayed by be controlled using the
+``multi_sparse`` option in ``pandas.set_printoptions``:
+
+.. ipython:: python
+
+   pd.set_printoptions(multi_sparse=False)
+   df
+   pd.set_printoptions(multi_sparse=True)
 
 Reconstructing the level labels
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
diff --git a/doc/source/v0.8.1.txt b/doc/source/v0.8.1.txt
index da05b74d0..2a5f28054 100644
--- a/doc/source/v0.8.1.txt
+++ b/doc/source/v0.8.1.txt
@@ -1,27 +1,46 @@
 .. _whatsnew_0801:
 
-v.0.8.1 (July 23, 2012)
----------------------------
+v0.8.1 (July 22, 2012)
+----------------------
 
-This release includes a few new features and addresses over a dozen bugs in
-0.8.0, most notably NA friendly string processing functionality and a series of
-new plot types and options.
+This release includes a few new features, performance enhancements, and over 30
+bug fixes from 0.8.0.  New features include notably NA friendly string
+processing functionality and a series of new plot types and options.
 
 New features
 ~~~~~~~~~~~~
 
-  - Add string processing methods accesible via Series.str (GH620_)
+  - Add `vectorized string processing methods <basics.string_methods>`__
+    accessible via Series.str (GH620_)
   - Add option to disable adjustment in EWMA (GH1584_)
-  - Radviz plot (GH1566_)
+  - `Radviz plot <visualization.radviz>`__ (GH1566_)
+  - `Parallel coordinates plot <visualization.parallel_coordinates>`__
+  - `Bootstrap plot <visualization.bootstrap>`__
   - Per column styles and secondary y-axis plotting (GH1559_)
   - New datetime converters millisecond plotting  (GH1599_)
+  - Add option to disable "sparse" display of hierarchical indexes (GH1538_)
+  - Series/DataFrame's ``set_index`` method can `append levels
+    <indexing.set_index>`__ to an existing Index/MultiIndex (GH1569_, GH1577_)
 
 Performance improvements
 ~~~~~~~~~~~~~~~~~~~~~~~~
 
-  - Improved implementation of rolling min and max
-  - Set logic performance for primitives
+  - Improved implementation of rolling min and max (thanks to `Bottleneck
+    <http://berkeleyanalytics.com/bottleneck/>`__ !)
+  - Add accelerated ``'median'`` GroupBy option (GH1358_)
+  - Significantly improve the performance of parsing ISO8601-format date
+    strings with ``DatetimeIndex`` or ``to_datetime`` (GH1571_)
+  - Improve the performance of GroupBy on single-key aggregations and use with
+    Categorical types
   - Significant datetime parsing performance improvments
 
-.. _GH561: https://github.com/pydata/pandas/issues/561
-.. _GH50: https://github.com/pydata/pandas/issues/50
+.. _GH620: https://github.com/pydata/pandas/issues/620
+.. _GH1358: https://github.com/pydata/pandas/issues/1358
+.. _GH1538: https://github.com/pydata/pandas/issues/1538
+.. _GH1559: https://github.com/pydata/pandas/issues/1559
+.. _GH1584: https://github.com/pydata/pandas/issues/1584
+.. _GH1566: https://github.com/pydata/pandas/issues/1566
+.. _GH1569: https://github.com/pydata/pandas/issues/1569
+.. _GH1571: https://github.com/pydata/pandas/issues/1571
+.. _GH1577: https://github.com/pydata/pandas/issues/1577
+.. _GH1599: https://github.com/pydata/pandas/issues/1599
diff --git a/doc/source/visualization.rst b/doc/source/visualization.rst
index 5078b960b..3e7fa2980 100644
--- a/doc/source/visualization.rst
+++ b/doc/source/visualization.rst
@@ -339,6 +339,8 @@ of the same class will usually be closer together and form larger structures.
    @savefig andrews_curves.png width=6in
    andrews_curves(data, 'Name')
 
+.. _visualization.parallel_coordinates:
+
 Parallel Coordinates
 ~~~~~~~~~~~~~~~~~~~~
 
@@ -402,6 +404,8 @@ confidence band.
    @savefig autocorrelation_plot.png width=6in
    autocorrelation_plot(data)
 
+.. _visualization.bootstrap:
+
 Bootstrap Plot
 ~~~~~~~~~~~~~~
 
@@ -420,6 +424,8 @@ are what constitutes the bootstrap plot.
    @savefig bootstrap_plot.png width=8in
    bootstrap_plot(data, size=50, samples=500, color='grey')
 
+.. _visualization.radviz:
+
 RadViz
 ~~~~~~
 
diff --git a/doc/source/whatsnew.rst b/doc/source/whatsnew.rst
index e60baa378..7dc47e6a8 100644
--- a/doc/source/whatsnew.rst
+++ b/doc/source/whatsnew.rst
@@ -16,6 +16,8 @@ What's New
 
 These are new features and improvements of note in each release.
 
+.. include:: v0.8.1.txt
+
 .. include:: v0.8.0.txt
 
 .. include:: v0.7.3.txt
