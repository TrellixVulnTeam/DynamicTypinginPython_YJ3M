commit 6cae4455cf6ef68b99328cdc83bdd59caa9b8bd9
Author: jreback <jeff@reback.net>
Date:   Sun Feb 10 16:56:01 2013 -0500

    TST: added addtl datetimes test in construction (ref GH #2809/2810)

diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index f4d3efe3f..c106044a5 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -8039,6 +8039,26 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
         expected = Series({'int64': 1, 'float64' : 1, 'datetime64[ns]': 1, 'object' : 1})
         assert_series_equal(result, expected)
 
+        # GH 2809
+        from pandas import date_range
+        ind = date_range(start="2000-01-01", freq="D", periods=10)
+        datetimes = [ts.to_pydatetime() for ts in ind]
+        datetime_s = Series(datetimes)
+        self.assert_(datetime_s.dtype == 'M8[ns]')
+        df = DataFrame({'datetime_s':datetime_s})
+        result = df.get_dtype_counts()
+        expected = Series({ 'datetime64[ns]' : 1 })
+        assert_series_equal(result, expected)
+
+        # GH 2810
+        ind = date_range(start="2000-01-01", freq="D", periods=10)
+        datetimes = [ts.to_pydatetime() for ts in ind]
+        dates = [ts.date() for ts in ind]
+        df = DataFrame({'datetimes': datetimes, 'dates':dates})
+        result = df.get_dtype_counts()
+        expected = Series({ 'datetime64[ns]' : 1, 'object' : 1 })
+        assert_series_equal(result, expected)
+
     def test_constructor_frame_copy(self):
         cop = DataFrame(self.frame, copy=True)
         cop['A'] = 5
diff --git a/pandas/tseries/tests/test_timezones.py b/pandas/tseries/tests/test_timezones.py
index adf0d630d..4b637e0ff 100644
--- a/pandas/tseries/tests/test_timezones.py
+++ b/pandas/tseries/tests/test_timezones.py
@@ -491,11 +491,20 @@ class TestTimeZoneSupport(unittest.TestCase):
         self.assert_(result.tz is pytz.utc)
 
     def test_frame_no_datetime64_dtype(self):
+
         dr = date_range('2011/1/1', '2012/1/1', freq='W-FRI')
         dr_tz = dr.tz_localize('US/Eastern')
         e = DataFrame({'A': 'foo', 'B': dr_tz}, index=dr)
         self.assert_(e['B'].dtype == 'M8[ns]')
 
+        # GH 2810 (with timezones)
+        datetimes_naive   = [ ts.to_pydatetime() for ts in dr ]
+        datetimes_with_tz = [ ts.to_pydatetime() for ts in dr_tz ]
+        df = DataFrame({'dr' : dr, 'dr_tz' : dr_tz, 'datetimes_naive': datetimes_naive, 'datetimes_with_tz' : datetimes_with_tz })
+        result = df.get_dtype_counts()
+        expected = Series({ 'datetime64[ns]' : 3, 'object' : 1 })
+        assert_series_equal(result, expected)
+
     def test_hongkong_tz_convert(self):
         # #1673
         dr = date_range(
