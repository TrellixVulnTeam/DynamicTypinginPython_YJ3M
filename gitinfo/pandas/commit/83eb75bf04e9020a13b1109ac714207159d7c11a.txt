commit 83eb75bf04e9020a13b1109ac714207159d7c11a
Author: ianzur <33916505+ianzur@users.noreply.github.com>
Date:   Wed Sep 25 10:50:31 2019 -0500

    Datetime mergeasof tolerance (#28241)
    
    * whatsnew
    
    * :bug::wrench:
    
    * BUG: convert datetime.timedelta to nanoseconds to fix (#28098)
    
    * BUG: mergeasof() now accepts datetime.timedelta as tolerance kwarg (#28098)
    
    * BUG: mergeasof() now accepts datetime.timedelta as tolerance kwarg (#28098)
    
    * BUG: mergeasof() now accepts datetime.timedelta as tolerance kwarg (#28098)
    
    * BUG: mergeasof() now accepts datetime.timedelta as tolerance kwarg (#28098)
    
    * don't change this file
    
    * CLN: sort imports
    
    * BUG: (#28098) changes
    
    * BUG (#28098) some more changes
    
    * update whatsnew
    
    * BUG: pass timedelta and datetime.timedelta to timedelta

diff --git a/doc/source/whatsnew/v1.0.0.rst b/doc/source/whatsnew/v1.0.0.rst
index 7ca93d7d7..a3d75d69e 100644
--- a/doc/source/whatsnew/v1.0.0.rst
+++ b/doc/source/whatsnew/v1.0.0.rst
@@ -279,6 +279,7 @@ Reshaping
 
 - Bug in :meth:`DataFrame.apply` that caused incorrect output with empty :class:`DataFrame` (:issue:`28202`, :issue:`21959`)
 - Bug in :meth:`DataFrame.stack` not handling non-unique indexes correctly when creating MultiIndex (:issue: `28301`)
+- Bug :func:`merge_asof` could not use :class:`datetime.timedelta` for ``tolerance`` kwarg (:issue:`28098`)
 
 Sparse
 ^^^^^^
diff --git a/pandas/core/reshape/merge.py b/pandas/core/reshape/merge.py
index d7fbe464c..62a30073a 100644
--- a/pandas/core/reshape/merge.py
+++ b/pandas/core/reshape/merge.py
@@ -3,6 +3,7 @@ SQL-style merge routines
 """
 
 import copy
+import datetime
 from functools import partial
 import string
 import warnings
@@ -1619,7 +1620,7 @@ class _AsOfMerge(_OrderedMerge):
                     )
                 raise MergeError(msg)
 
-        # validate tolerance; must be a Timedelta if we have a DTI
+        # validate tolerance; datetime.timedelta or Timedelta if we have a DTI
         if self.tolerance is not None:
 
             if self.left_index:
@@ -1635,7 +1636,7 @@ class _AsOfMerge(_OrderedMerge):
             )
 
             if is_datetimelike(lt):
-                if not isinstance(self.tolerance, Timedelta):
+                if not isinstance(self.tolerance, datetime.timedelta):
                     raise MergeError(msg)
                 if self.tolerance < Timedelta(0):
                     raise MergeError("tolerance must be positive")
@@ -1705,6 +1706,7 @@ class _AsOfMerge(_OrderedMerge):
             left_values = left_values.view("i8")
             right_values = right_values.view("i8")
             if tolerance is not None:
+                tolerance = Timedelta(tolerance)
                 tolerance = tolerance.value
 
         # a "by" parameter requires special handling
diff --git a/pandas/tests/reshape/merge/test_merge_asof.py b/pandas/tests/reshape/merge/test_merge_asof.py
index 7412b1de6..caf2539a9 100644
--- a/pandas/tests/reshape/merge/test_merge_asof.py
+++ b/pandas/tests/reshape/merge/test_merge_asof.py
@@ -592,13 +592,7 @@ class TestAsOfMerge:
 
     @pytest.mark.parametrize(
         "tolerance",
-        [
-            Timedelta("1day"),
-            pytest.param(
-                datetime.timedelta(days=1),
-                marks=pytest.mark.xfail(reason="not implemented", strict=True),
-            ),
-        ],
+        [Timedelta("1day"), datetime.timedelta(days=1)],
         ids=["pd.Timedelta", "datetime.timedelta"],
     )
     def test_tolerance(self, tolerance):
