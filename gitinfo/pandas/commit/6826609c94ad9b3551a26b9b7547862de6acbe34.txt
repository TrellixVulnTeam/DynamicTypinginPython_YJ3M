commit 6826609c94ad9b3551a26b9b7547862de6acbe34
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Tue Dec 11 16:00:34 2012 -0500

    BUG: more helpful error when sorting by duplicate column. close #2488

diff --git a/RELEASE.rst b/RELEASE.rst
index d7954e1b0..26f326502 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -229,6 +229,8 @@ pandas 0.10.0
   - Fix exception when Timestamp.to_datetime is called on a Timestamp with tzoffset (#2471)
   - Fixed unintentional conversion of datetime64 to long in groupby.first() (#2133)
   - Union of empty DataFrames now return empty with concatenated index (#2307)
+  - DataFrame.sort_index raises more helpful exception if sorting by column
+    with duplicates (#2488)
 
 pandas 0.9.1
 ============
diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 79027f304..95b5f397a 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -3101,11 +3101,23 @@ class DataFrame(NDFrame):
             if axis != 0:
                 raise AssertionError('Axis must be 0')
             if isinstance(by, (tuple, list)):
+                keys = []
+                for x in by:
+                    k = self[x].values
+                    if k.ndim == 2:
+                        raise ValueError('Cannot sort by duplicate column %s'
+                                         % str(x))
+                    keys.append(k)
+
                 keys = [self[x].values for x in by]
                 indexer = _lexsort_indexer(keys, orders=ascending)
                 indexer = com._ensure_platform_int(indexer)
             else:
-                indexer = self[by].values.argsort()
+                k = self[by].values
+                if k.ndim == 2:
+                    raise ValueError('Cannot sort by duplicate column %s'
+                                     % str(by))
+                indexer = k.argsort()
                 if not ascending:
                     indexer = indexer[::-1]
         elif isinstance(labels, MultiIndex):
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index d7f6dbcc7..ba312f768 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -6112,6 +6112,19 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
         expected = frame.sort_index(by=['A', 'B'], ascending=False)
         assert_frame_equal(sorted_df, expected)
 
+    def test_sort_index_duplicates(self):
+        df = DataFrame([[1, 2], [3, 4]], columns=['a', 'a'])
+
+        try:
+            df.sort_index(by='a')
+        except Exception, e:
+            self.assertTrue('duplicate' in str(e))
+
+        try:
+            df.sort_index(by=['a'])
+        except Exception, e:
+            self.assertTrue('duplicate' in str(e))
+
     def test_frame_column_inplace_sort_exception(self):
         s = self.frame['A']
         self.assertRaises(Exception, s.sort)
