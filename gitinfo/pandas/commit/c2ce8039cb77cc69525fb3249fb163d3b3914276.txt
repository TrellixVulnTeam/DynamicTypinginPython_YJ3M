commit c2ce8039cb77cc69525fb3249fb163d3b3914276
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Thu Dec 29 13:16:53 2011 -0500

    BUG: flip left<->right in Index._join_level, GH #547

diff --git a/pandas/core/index.py b/pandas/core/index.py
index da30360e2..32fea98c3 100644
--- a/pandas/core/index.py
+++ b/pandas/core/index.py
@@ -637,6 +637,7 @@ class Index(np.ndarray):
         flip_order = not isinstance(self, MultiIndex)
         if flip_order:
             left, right = right, left
+            how = {'right': 'left', 'left': 'right'}.get(how, how)
 
         level = left._get_level_number(level)
 
@@ -1860,4 +1861,4 @@ def _ensure_index(index_like):
 
 def _validate_join_method(method):
     if method not in ['left', 'right', 'inner', 'outer']:
-        raise Exception('do not recognize join method %s' % how)
+        raise Exception('do not recognize join method %s' % method)
diff --git a/pandas/tests/test_index.py b/pandas/tests/test_index.py
index fb6ca0159..85b273fe9 100644
--- a/pandas/tests/test_index.py
+++ b/pandas/tests/test_index.py
@@ -1164,15 +1164,7 @@ class TestMultiIndex(unittest.TestCase):
                                                 level='second',
                                                 return_indexers=True)
 
-            join_index2, ridx2, lidx2 = self.index.join(other, how=how,
-                                                        level='second',
-                                                        return_indexers=True)
-
-            self.assert_(join_index.equals(join_index2))
-            self.assert_(np.array_equal(lidx, lidx2))
-            self.assert_(np.array_equal(ridx, ridx2))
-
-            exp_level = self.index.levels[1].join(other, how=how)
+            exp_level = other.join(self.index.levels[1], how=how)
             self.assert_(join_index.levels[0].equals(self.index.levels[0]))
             self.assert_(join_index.levels[1].equals(exp_level))
 
@@ -1180,7 +1172,16 @@ class TestMultiIndex(unittest.TestCase):
             mask = np.array([x[1] in exp_level for x in self.index], dtype=bool)
             exp_values = self.index.values[mask]
             self.assert_(np.array_equal(join_index.values, exp_values))
-            self.assert_(np.array_equal(join_index2.values, exp_values))
+
+            if how in ('outer', 'inner'):
+                join_index2, ridx2, lidx2 = \
+                    self.index.join(other, how=how, level='second',
+                                    return_indexers=True)
+
+                self.assert_(join_index.equals(join_index2))
+                self.assert_(np.array_equal(lidx, lidx2))
+                self.assert_(np.array_equal(ridx, ridx2))
+                self.assert_(np.array_equal(join_index2.values, exp_values))
 
         def _check_all(other):
             _check_how(other, 'outer')
