commit de39bfc5e5c6483cb2669773fa10ddc2e32ca111
Author: Alexander Ponomaroff <33966871+alexander-ponomaroff@users.noreply.github.com>
Date:   Wed Oct 31 09:04:49 2018 -0400

    Partialy fix issue #23334 - isort pandas/core/dtypes directory (#23336)

diff --git a/pandas/core/dtypes/api.py b/pandas/core/dtypes/api.py
index 7bf3912b0..760217055 100644
--- a/pandas/core/dtypes/api.py
+++ b/pandas/core/dtypes/api.py
@@ -1,59 +1,14 @@
 # flake8: noqa
 
-from .common import (pandas_dtype,
-                     is_dtype_equal,
-                     is_extension_type,
-
-                     # categorical
-                     is_categorical,
-                     is_categorical_dtype,
-
-                     # interval
-                     is_interval,
-                     is_interval_dtype,
-
-                     # datetimelike
-                     is_datetimetz,
-                     is_datetime64_dtype,
-                     is_datetime64tz_dtype,
-                     is_datetime64_any_dtype,
-                     is_datetime64_ns_dtype,
-                     is_timedelta64_dtype,
-                     is_timedelta64_ns_dtype,
-                     is_period,
-                     is_period_dtype,
-
-                     # string-like
-                     is_string_dtype,
-                     is_object_dtype,
-
-                     # sparse
-                     is_sparse,
-
-                     # numeric types
-                     is_scalar,
-                     is_sparse,
-                     is_bool,
-                     is_integer,
-                     is_float,
-                     is_complex,
-                     is_number,
-                     is_integer_dtype,
-                     is_int64_dtype,
-                     is_numeric_dtype,
-                     is_float_dtype,
-                     is_bool_dtype,
-                     is_complex_dtype,
-                     is_signed_integer_dtype,
-                     is_unsigned_integer_dtype,
-
-                     # like
-                     is_re,
-                     is_re_compilable,
-                     is_dict_like,
-                     is_iterator,
-                     is_file_like,
-                     is_array_like,
-                     is_list_like,
-                     is_hashable,
-                     is_named_tuple)
+from .common import (
+    is_array_like, is_bool, is_bool_dtype, is_categorical,
+    is_categorical_dtype, is_complex, is_complex_dtype,
+    is_datetime64_any_dtype, is_datetime64_dtype, is_datetime64_ns_dtype,
+    is_datetime64tz_dtype, is_datetimetz, is_dict_like, is_dtype_equal,
+    is_extension_type, is_file_like, is_float, is_float_dtype, is_hashable,
+    is_int64_dtype, is_integer, is_integer_dtype, is_interval,
+    is_interval_dtype, is_iterator, is_list_like, is_named_tuple, is_number,
+    is_numeric_dtype, is_object_dtype, is_period, is_period_dtype, is_re,
+    is_re_compilable, is_scalar, is_signed_integer_dtype, is_sparse,
+    is_string_dtype, is_timedelta64_dtype, is_timedelta64_ns_dtype,
+    is_unsigned_integer_dtype, pandas_dtype)
diff --git a/pandas/core/dtypes/base.py b/pandas/core/dtypes/base.py
index ac4d6d159..df0e89cce 100644
--- a/pandas/core/dtypes/base.py
+++ b/pandas/core/dtypes/base.py
@@ -1,10 +1,12 @@
 """Extend pandas with custom array types"""
 import numpy as np
 
-from pandas import compat
-from pandas.core.dtypes.generic import ABCSeries, ABCIndexClass, ABCDataFrame
 from pandas.errors import AbstractMethodError
 
+from pandas.core.dtypes.generic import ABCDataFrame, ABCIndexClass, ABCSeries
+
+from pandas import compat
+
 
 class _DtypeOpsMixin(object):
     # Not all of pandas' extension dtypes are compatibile with
diff --git a/pandas/core/dtypes/cast.py b/pandas/core/dtypes/cast.py
index 47e17c986..c7c6f89eb 100644
--- a/pandas/core/dtypes/cast.py
+++ b/pandas/core/dtypes/cast.py
@@ -4,36 +4,25 @@ from datetime import datetime, timedelta
 
 import numpy as np
 
-from pandas._libs import tslib, lib, tslibs
-from pandas._libs.tslibs import iNaT, OutOfBoundsDatetime, Period
-from pandas.compat import string_types, text_type, PY3
-from .common import (ensure_object, is_bool, is_integer, is_float,
-                     is_complex, is_datetimetz, is_categorical_dtype,
-                     is_datetimelike,
-                     is_extension_type,
-                     is_extension_array_dtype,
-                     is_object_dtype,
-                     is_datetime64tz_dtype, is_datetime64_dtype,
-                     is_datetime64_ns_dtype,
-                     is_timedelta64_dtype, is_timedelta64_ns_dtype,
-                     is_dtype_equal,
-                     is_float_dtype, is_complex_dtype,
-                     is_integer_dtype,
-                     is_unsigned_integer_dtype,
-                     is_datetime_or_timedelta_dtype,
-                     is_bool_dtype, is_scalar,
-                     is_string_dtype, _string_dtypes,
-                     pandas_dtype,
-                     ensure_int8, ensure_int16,
-                     ensure_int32, ensure_int64,
-                     _NS_DTYPE, _TD_DTYPE, _INT64_DTYPE,
-                     _POSSIBLY_CAST_DTYPES)
-from .dtypes import (ExtensionDtype, PandasExtensionDtype, DatetimeTZDtype,
-                     PeriodDtype)
-from .generic import (ABCDatetimeIndex, ABCPeriodIndex,
-                      ABCSeries)
-from .missing import isna, notna
+from pandas._libs import lib, tslib, tslibs
+from pandas._libs.tslibs import OutOfBoundsDatetime, Period, iNaT
+from pandas.compat import PY3, string_types, text_type
+
+from .common import (
+    _INT64_DTYPE, _NS_DTYPE, _POSSIBLY_CAST_DTYPES, _TD_DTYPE, _string_dtypes,
+    ensure_int8, ensure_int16, ensure_int32, ensure_int64, ensure_object,
+    is_bool, is_bool_dtype, is_categorical_dtype, is_complex, is_complex_dtype,
+    is_datetime64_dtype, is_datetime64_ns_dtype, is_datetime64tz_dtype,
+    is_datetime_or_timedelta_dtype, is_datetimelike, is_datetimetz,
+    is_dtype_equal, is_extension_array_dtype, is_extension_type, is_float,
+    is_float_dtype, is_integer, is_integer_dtype, is_object_dtype, is_scalar,
+    is_string_dtype, is_timedelta64_dtype, is_timedelta64_ns_dtype,
+    is_unsigned_integer_dtype, pandas_dtype)
+from .dtypes import (
+    DatetimeTZDtype, ExtensionDtype, PandasExtensionDtype, PeriodDtype)
+from .generic import ABCDatetimeIndex, ABCPeriodIndex, ABCSeries
 from .inference import is_list_like
+from .missing import isna, notna
 
 _int8_max = np.iinfo(np.int8).max
 _int16_max = np.iinfo(np.int16).max
diff --git a/pandas/core/dtypes/common.py b/pandas/core/dtypes/common.py
index 938392ebf..94e9b72b0 100644
--- a/pandas/core/dtypes/common.py
+++ b/pandas/core/dtypes/common.py
@@ -1,25 +1,24 @@
 """ common type operations """
 import numpy as np
-from pandas.compat import (string_types, text_type, binary_type,
-                           PY3, PY36)
+
 from pandas._libs import algos, lib
-from pandas._libs.tslibs import conversion, Period, Timestamp
 from pandas._libs.interval import Interval
+from pandas._libs.tslibs import Period, Timestamp, conversion
+from pandas.compat import PY3, PY36, binary_type, string_types, text_type
 
 from pandas.core.dtypes.dtypes import (
-    registry, CategoricalDtype, CategoricalDtypeType, DatetimeTZDtype,
-    PeriodDtype, IntervalDtype,
-    PandasExtensionDtype, ExtensionDtype,
-    _pandas_registry)
+    CategoricalDtype, CategoricalDtypeType, DatetimeTZDtype, ExtensionDtype,
+    IntervalDtype, PandasExtensionDtype, PeriodDtype, _pandas_registry,
+    registry)
 from pandas.core.dtypes.generic import (
-    ABCCategorical, ABCPeriodIndex, ABCDatetimeIndex, ABCSeries,
-    ABCSparseArray, ABCSparseSeries, ABCCategoricalIndex, ABCIndexClass,
-    ABCDateOffset, ABCPeriodArray)
+    ABCCategorical, ABCCategoricalIndex, ABCDateOffset, ABCDatetimeIndex,
+    ABCIndexClass, ABCPeriodArray, ABCPeriodIndex, ABCSeries, ABCSparseArray,
+    ABCSparseSeries)
 from pandas.core.dtypes.inference import (  # noqa:F401
-    is_bool, is_integer, is_float, is_number, is_decimal, is_complex,
-    is_re, is_re_compilable, is_dict_like, is_string_like, is_file_like,
-    is_list_like, is_nested_list_like, is_sequence, is_named_tuple,
-    is_hashable, is_iterator, is_array_like, is_scalar, is_interval)
+    is_array_like, is_bool, is_complex, is_decimal, is_dict_like, is_file_like,
+    is_float, is_hashable, is_integer, is_interval, is_iterator, is_list_like,
+    is_named_tuple, is_nested_list_like, is_number, is_re, is_re_compilable,
+    is_scalar, is_sequence, is_string_like)
 
 _POSSIBLY_CAST_DTYPES = {np.dtype(t).name
                          for t in ['O', 'int8', 'uint8', 'int16', 'uint16',
diff --git a/pandas/core/dtypes/concat.py b/pandas/core/dtypes/concat.py
index 702a0246a..b2999c112 100644
--- a/pandas/core/dtypes/concat.py
+++ b/pandas/core/dtypes/concat.py
@@ -3,25 +3,19 @@ Utility functions related to concat
 """
 
 import numpy as np
+
 from pandas._libs import tslib, tslibs
-from pandas import compat
+
 from pandas.core.dtypes.common import (
-    is_categorical_dtype,
-    is_sparse,
-    is_extension_array_dtype,
-    is_datetimetz,
-    is_datetime64_dtype,
-    is_timedelta64_dtype,
-    is_period_dtype,
-    is_object_dtype,
-    is_bool_dtype,
-    is_interval_dtype,
-    is_dtype_equal,
-    _NS_DTYPE,
-    _TD_DTYPE)
+    _NS_DTYPE, _TD_DTYPE, is_bool_dtype, is_categorical_dtype,
+    is_datetime64_dtype, is_datetimetz, is_dtype_equal,
+    is_extension_array_dtype, is_interval_dtype, is_object_dtype,
+    is_period_dtype, is_sparse, is_timedelta64_dtype)
 from pandas.core.dtypes.generic import (
-    ABCDatetimeIndex, ABCTimedeltaIndex,
-    ABCPeriodIndex, ABCRangeIndex, ABCSparseDataFrame)
+    ABCDatetimeIndex, ABCPeriodIndex, ABCRangeIndex, ABCSparseDataFrame,
+    ABCTimedeltaIndex)
+
+from pandas import compat
 
 
 def get_dtype_kinds(l):
diff --git a/pandas/core/dtypes/dtypes.py b/pandas/core/dtypes/dtypes.py
index 961c8f1db..4dfefdec0 100644
--- a/pandas/core/dtypes/dtypes.py
+++ b/pandas/core/dtypes/dtypes.py
@@ -1,11 +1,15 @@
 """ define extension dtypes """
 
 import re
+
 import numpy as np
-from pandas import compat
-from pandas.core.dtypes.generic import ABCIndexClass, ABCCategoricalIndex
-from pandas._libs.tslibs import Period, NaT, Timestamp
+
 from pandas._libs.interval import Interval
+from pandas._libs.tslibs import NaT, Period, Timestamp
+
+from pandas.core.dtypes.generic import ABCCategoricalIndex, ABCIndexClass
+
+from pandas import compat
 
 from .base import ExtensionDtype, _DtypeOpsMixin
 
diff --git a/pandas/core/dtypes/inference.py b/pandas/core/dtypes/inference.py
index 747049738..d56bd83f0 100644
--- a/pandas/core/dtypes/inference.py
+++ b/pandas/core/dtypes/inference.py
@@ -1,12 +1,15 @@
 """ basic inference routines """
 
+from numbers import Number
 import re
+
 import numpy as np
-from numbers import Number
-from pandas import compat
-from pandas.compat import (PY2, string_types, text_type,
-                           string_and_binary_types, re_type, Set)
+
 from pandas._libs import lib
+from pandas.compat import (
+    PY2, Set, re_type, string_and_binary_types, string_types, text_type)
+
+from pandas import compat
 
 is_bool = lib.is_bool
 
diff --git a/pandas/core/dtypes/missing.py b/pandas/core/dtypes/missing.py
index 1800c32ad..a12985bb7 100644
--- a/pandas/core/dtypes/missing.py
+++ b/pandas/core/dtypes/missing.py
@@ -2,27 +2,19 @@
 missing types & inference
 """
 import numpy as np
+
 from pandas._libs import lib, missing as libmissing
 from pandas._libs.tslibs import NaT, iNaT
-from .generic import (ABCMultiIndex, ABCSeries,
-                      ABCIndexClass, ABCGeneric,
-                      ABCExtensionArray)
-from .common import (is_string_dtype, is_datetimelike,
-                     is_datetimelike_v_numeric, is_float_dtype,
-                     is_datetime64_dtype, is_datetime64tz_dtype,
-                     is_timedelta64_dtype,
-                     is_period_dtype,
-                     is_complex_dtype,
-                     is_string_like_dtype, is_bool_dtype,
-                     is_integer_dtype, is_dtype_equal,
-                     is_extension_array_dtype,
-                     needs_i8_conversion, ensure_object,
-                     pandas_dtype,
-                     is_scalar,
-                     is_object_dtype,
-                     is_integer,
-                     _TD_DTYPE,
-                     _NS_DTYPE)
+
+from .common import (
+    _NS_DTYPE, _TD_DTYPE, ensure_object, is_bool_dtype, is_complex_dtype,
+    is_datetime64_dtype, is_datetime64tz_dtype, is_datetimelike,
+    is_datetimelike_v_numeric, is_dtype_equal, is_extension_array_dtype,
+    is_float_dtype, is_integer, is_integer_dtype, is_object_dtype,
+    is_period_dtype, is_scalar, is_string_dtype, is_string_like_dtype,
+    is_timedelta64_dtype, needs_i8_conversion, pandas_dtype)
+from .generic import (
+    ABCExtensionArray, ABCGeneric, ABCIndexClass, ABCMultiIndex, ABCSeries)
 from .inference import is_list_like
 
 isposinf_scalar = libmissing.isposinf_scalar
diff --git a/setup.cfg b/setup.cfg
index edd3b507c..26269c331 100644
--- a/setup.cfg
+++ b/setup.cfg
@@ -149,14 +149,6 @@ skip=
     pandas/core/tools/numeric.py,
     pandas/core/tools/timedeltas.py,
     pandas/core/tools/datetimes.py,
-    pandas/core/dtypes/concat.py,
-    pandas/core/dtypes/cast.py,
-    pandas/core/dtypes/api.py,
-    pandas/core/dtypes/dtypes.py,
-    pandas/core/dtypes/base.py,
-    pandas/core/dtypes/common.py,
-    pandas/core/dtypes/missing.py,
-    pandas/core/dtypes/inference.py,
     pandas/core/internals/concat.py,
     pandas/core/internals/managers.py,
     pandas/core/internals/blocks.py,
