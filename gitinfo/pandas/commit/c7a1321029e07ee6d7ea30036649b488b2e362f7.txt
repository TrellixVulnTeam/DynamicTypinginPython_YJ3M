commit c7a1321029e07ee6d7ea30036649b488b2e362f7
Author: jbrockmendel <jbrockmendel@gmail.com>
Date:   Wed Jul 31 13:22:12 2019 -0700

    Make interpolate_2d handle datetime64 correctly (#27628)

diff --git a/pandas/core/internals/blocks.py b/pandas/core/internals/blocks.py
index 86db4b0f8..4a8ee8fa2 100644
--- a/pandas/core/internals/blocks.py
+++ b/pandas/core/internals/blocks.py
@@ -1220,7 +1220,6 @@ class Block(PandasObject):
             fill_value=fill_value,
             dtype=self.dtype,
         )
-        values = self._try_coerce_result(values)
 
         blocks = [self.make_block_same_class(values, ndim=self.ndim)]
         return self._maybe_downcast(blocks, downcast)
@@ -2278,13 +2277,6 @@ class DatetimeBlock(DatetimeLikeBlockMixin, Block):
 
         return other
 
-    def _try_coerce_result(self, result):
-        """ reverse of try_coerce_args """
-        if isinstance(result, np.ndarray) and result.dtype.kind == "i":
-            # needed for _interpolate_with_ffill
-            result = result.view("M8[ns]")
-        return result
-
     def to_native_types(
         self, slicer=None, na_rep=None, date_format=None, quoting=None, **kwargs
     ):
diff --git a/pandas/core/missing.py b/pandas/core/missing.py
index 5edf95041..bc81fbb7e 100644
--- a/pandas/core/missing.py
+++ b/pandas/core/missing.py
@@ -463,6 +463,7 @@ def interpolate_2d(
     Perform an actual interpolation of values, values will be make 2-d if
     needed fills inplace, returns the result.
     """
+    orig_values = values
 
     transf = (lambda x: x) if axis == 0 else (lambda x: x.T)
 
@@ -490,6 +491,10 @@ def interpolate_2d(
     if ndim == 1:
         values = values[0]
 
+    if orig_values.dtype.kind == "M":
+        # convert float back to datetime64
+        values = values.astype(orig_values.dtype)
+
     return values
 
 
diff --git a/pandas/tests/resample/test_datetime_index.py b/pandas/tests/resample/test_datetime_index.py
index 929bd1725..fb3d428bc 100644
--- a/pandas/tests/resample/test_datetime_index.py
+++ b/pandas/tests/resample/test_datetime_index.py
@@ -885,7 +885,7 @@ def test_resample_dtype_preservation():
     assert result.val.dtype == np.int32
 
 
-def test_resample_dtype_coerceion():
+def test_resample_dtype_coercion():
 
     pytest.importorskip("scipy.interpolate")
 
diff --git a/pandas/tests/series/test_missing.py b/pandas/tests/series/test_missing.py
index 8f4c89ee7..f1b84acf6 100644
--- a/pandas/tests/series/test_missing.py
+++ b/pandas/tests/series/test_missing.py
@@ -1533,6 +1533,17 @@ class TestSeriesInterpolateData:
         )
         assert_series_equal(result, expected)
 
+    def test_interp_pad_datetime64tz_values(self):
+        # GH#27628 missing.interpolate_2d should handle datetimetz values
+        dti = pd.date_range("2015-04-05", periods=3, tz="US/Central")
+        ser = pd.Series(dti)
+        ser[1] = pd.NaT
+        result = ser.interpolate(method="pad")
+
+        expected = pd.Series(dti)
+        expected[1] = expected[0]
+        tm.assert_series_equal(result, expected)
+
     def test_interp_limit_no_nans(self):
         # GH 7173
         s = pd.Series([1.0, 2.0, 3.0])
