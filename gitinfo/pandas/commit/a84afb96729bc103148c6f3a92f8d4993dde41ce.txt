commit a84afb96729bc103148c6f3a92f8d4993dde41ce
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Sat Oct 15 15:20:49 2011 -0400

    BUG: store Index and Series names in HDFStore

diff --git a/RELEASE.rst b/RELEASE.rst
index 034507ef3..d2edf1b2a 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -113,6 +113,8 @@ leading to some of the minor API changes listed below.
   - Fixed outer join bug with empty DataFrame (GH #238)
   - DataFrame.iteritems was not returning Series with the name attribute
     set. Also neither was DataFrame._series
+  - Can store datetime.date objects in HDFStore (GH #231)
+  - Index and Series names are now stored in HDFStore
 
 pandas 0.4.3
 ============
diff --git a/pandas/io/pytables.py b/pandas/io/pytables.py
index e0e3c3d5f..8b8ac500c 100644
--- a/pandas/io/pytables.py
+++ b/pandas/io/pytables.py
@@ -10,7 +10,7 @@ import time
 
 import numpy as np
 from pandas import (Series, TimeSeries, DataFrame, Panel, LongPanel,
-                    MultiIndex)
+                    Index, MultiIndex)
 from pandas.core.common import adjoin
 import pandas._tseries as lib
 
@@ -331,6 +331,7 @@ class HDFStore(object):
     def _write_series(self, group, series):
         self._write_index(group, 'index', series.index)
         self._write_array(group, 'values', series.values)
+        group._v_attrs.name = series.name
 
     def _write_frame(self, group, df):
         self._write_block_manager(group, df._data)
@@ -440,6 +441,7 @@ class HDFStore(object):
             self._write_array(group, key, converted)
             node = getattr(group, key)
             node._v_attrs.kind = kind
+            node._v_attrs.name = index.name
 
     def _read_index(self, group, key):
         try:
@@ -503,7 +505,10 @@ class HDFStore(object):
         except Exception:
             name = None
 
-        return name, _unconvert_index(data, kind)
+        index = Index(_unconvert_index(data, kind))
+        index.name = name
+
+        return name, index
 
     def _write_array(self, group, key, value):
         if key in group:
@@ -617,7 +622,8 @@ class HDFStore(object):
     def _read_series(self, group, where=None):
         index = self._read_index(group, 'index')
         values = _read_array(group, 'values')
-        return Series(values, index=index)
+        name = getattr(group._v_attrs, 'name', None)
+        return Series(values, index=index, name=name)
 
     def _read_legacy_series(self, group, where=None):
         index = self._read_index_legacy(group, 'index')
diff --git a/pandas/io/tests/test_pytables.py b/pandas/io/tests/test_pytables.py
index 3c76ae606..6d980d8b1 100644
--- a/pandas/io/tests/test_pytables.py
+++ b/pandas/io/tests/test_pytables.py
@@ -232,7 +232,7 @@ class TesttHDFStore(unittest.TestCase):
         self._check_roundtrip(frame.T, tm.assert_frame_equal)
         self._check_roundtrip(frame['A'], tm.assert_series_equal)
 
-        # check that the
+        # check that the names are stored
         try:
             store = HDFStore(self.scratchpath)
             store['frame'] = frame
@@ -242,6 +242,31 @@ class TesttHDFStore(unittest.TestCase):
             store.close()
             os.remove(self.scratchpath)
 
+    def test_store_index_name(self):
+        df = tm.makeDataFrame()
+        df.index.name = 'foo'
+        try:
+            store = HDFStore(self.scratchpath)
+            store['frame'] = df
+            recons = store['frame']
+            assert(recons.index.name == 'foo')
+        finally:
+            store.close()
+            os.remove(self.scratchpath)
+
+    def test_store_series_name(self):
+        df = tm.makeDataFrame()
+        series = df['A']
+
+        try:
+            store = HDFStore(self.scratchpath)
+            store['series'] = series
+            recons = store['series']
+            assert(recons.name == 'A')
+        finally:
+            store.close()
+            os.remove(self.scratchpath)
+
     def test_store_mixed(self):
         def _make_one():
             df = tm.makeDataFrame()
