commit fa5f315a4c67186bd8e1c643ec7d6eeb74ab8406
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Tue Sep 18 12:34:25 2012 -0400

    ENH: DataFrame.dropna can take a tuple/list of axes. close #924

diff --git a/RELEASE.rst b/RELEASE.rst
index 945f1e1da..20835bb34 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -52,6 +52,8 @@ pandas 0.9.0
     methods (#1689)
   - If index_label=False in DataFrame.to_csv, do not print fields/commas in the
     text output. Results in easier importing into R (#1583)
+  - Can pass tuple/list of axes to DataFrame.dropna to simplify repeated calls
+    (dropping both columns and rows) (#924)
 
 **API Changes**
 
diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 82c3c768c..a0d7cc2ab 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -2595,7 +2595,8 @@ class DataFrame(NDFrame):
 
         Parameters
         ----------
-        axis : {0, 1}
+        axis : {0, 1}, or tuple/list thereof
+            Pass tuple or list to drop on multiple axes
         how : {'any', 'all'}
             any : if any NA values are present, drop that label
             all : if all values are NA, drop that label
@@ -2609,6 +2610,13 @@ class DataFrame(NDFrame):
         -------
         dropped : DataFrame
         """
+        if isinstance(axis, (tuple, list)):
+            result = self
+            for ax in axis:
+                result = result.dropna(how=how, thresh=thresh,
+                                       subset=subset, axis=ax)
+            return result
+
         axis_name = self._get_axis_name(axis)
 
         if axis == 0:
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index b99608a70..5ac3fae41 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -3980,6 +3980,19 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
         self.assertRaises(ValueError, self.frame.dropna, how='foo')
         self.assertRaises(ValueError, self.frame.dropna, how=None)
 
+    def test_dropna_multiple_axes(self):
+        df = DataFrame([[1, np.nan, 2, 3],
+                        [4, np.nan, 5, 6],
+                        [np.nan, np.nan, np.nan, np.nan],
+                        [7, np.nan, 8, 9]])
+
+        result = df.dropna(how='all', axis=[0, 1])
+        result2 = df.dropna(how='all', axis=(0, 1))
+        expected = df.dropna(how='all').dropna(how='all', axis=1)
+
+        assert_frame_equal(result, expected)
+        assert_frame_equal(result2, expected)
+
     def test_drop_duplicates(self):
         df = DataFrame({'AAA' : ['foo', 'bar', 'foo', 'bar',
                                'foo', 'bar', 'bar', 'foo'],
