commit 1a62f1a3386a66504a82e586fbe83c06dcf2a501
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Thu Jun 14 10:48:56 2012 -0400

    BUG: fix DatetimeIndex bug causing downstream groupby failure, close #1455

diff --git a/pandas/tseries/index.py b/pandas/tseries/index.py
index 5f577fe3f..255411335 100644
--- a/pandas/tseries/index.py
+++ b/pandas/tseries/index.py
@@ -970,17 +970,16 @@ class DatetimeIndex(Int64Index):
         except KeyError:
             try:
                 return self._get_string_slice(key)
-            except (TypeError, KeyError):
+            except (TypeError, KeyError, ValueError):
                 pass
 
             if isinstance(key, time):
                 return self._indices_at_time(key)
 
-            stamp = Timestamp(key)
             try:
-                return self._engine.get_loc(stamp)
-            except KeyError:
-                raise KeyError(stamp)
+                return self._engine.get_loc(Timestamp(key))
+            except (KeyError, ValueError):
+                raise KeyError(key)
 
     def _indices_at_time(self, key):
         from dateutil.parser import parse
diff --git a/pandas/tseries/tests/test_timeseries.py b/pandas/tseries/tests/test_timeseries.py
index 6ca44124c..c707e402a 100644
--- a/pandas/tseries/tests/test_timeseries.py
+++ b/pandas/tseries/tests/test_timeseries.py
@@ -913,6 +913,21 @@ class TestTimeSeries(unittest.TestCase):
         x[0] = to_datetime(x[0])
         self.assert_(x[0].dtype == np.dtype('M8[ns]'))
 
+    def test_groupby_count_dateparseerror(self):
+        from pandas import *
+
+        dr = date_range(start='1/1/2012', freq='5min', periods=10)
+
+        # BAD Example, datetimes first
+        s = Series(np.arange(10), index=[dr, range(10)])
+        grouped = s.groupby(lambda x: x[1] % 2 == 0)
+        result = grouped.count()
+
+        s = Series(np.arange(10), index=[range(10), dr])
+        grouped = s.groupby(lambda x: x[0] % 2 == 0)
+        expected = grouped.count()
+
+        assert_series_equal(result, expected)
 
 def _simple_ts(start, end, freq='D'):
     rng = date_range(start, end, freq=freq)
