commit 1f812e37f33bf79beacbbfd2b1e0fa38958006e2
Author: Jeff Reback <jeff@reback.net>
Date:   Sun Apr 16 13:01:17 2017 +0000

    CLN: move pandas.formats -> pandas.io.formats (#16013)

diff --git a/MANIFEST.in b/MANIFEST.in
index 31de3466c..8bd83a7d5 100644
--- a/MANIFEST.in
+++ b/MANIFEST.in
@@ -25,4 +25,4 @@ global-exclude *.png
 # recursive-include LICENSES *
 include versioneer.py
 include pandas/_version.py
-include pandas/formats/templates/*.tpl
+include pandas/io/formats/templates/*.tpl
diff --git a/doc/source/whatsnew/v0.20.0.txt b/doc/source/whatsnew/v0.20.0.txt
index 33d80f834..08208973b 100644
--- a/doc/source/whatsnew/v0.20.0.txt
+++ b/doc/source/whatsnew/v0.20.0.txt
@@ -1331,6 +1331,7 @@ If indicated, a deprecation warning will be issued if you reference theses modul
     "pandas.hashtable", "pandas._libs.hashtable", ""
     "pandas.json", "pandas.io.json.libjson", "X"
     "pandas.parser", "pandas.io.libparsers", "X"
+    "pandas.formats", "pandas.io.formats", ""
     "pandas.sparse", "pandas.core.sparse", ""
     "pandas.types", "pandas.core.dtypes", ""
     "pandas.io.sas.saslib", "pandas.io.sas.libsas", ""
diff --git a/pandas/core/api.py b/pandas/core/api.py
index 8e8969e1f..3c739d85d 100644
--- a/pandas/core/api.py
+++ b/pandas/core/api.py
@@ -8,7 +8,7 @@ from pandas.core.algorithms import factorize, unique, value_counts
 from pandas.core.dtypes.missing import isnull, notnull
 from pandas.core.categorical import Categorical
 from pandas.core.groupby import Grouper
-from pandas.formats.format import set_eng_float_format
+from pandas.io.formats.format import set_eng_float_format
 from pandas.core.index import (Index, CategoricalIndex, Int64Index,
                                UInt64Index, RangeIndex, Float64Index,
                                MultiIndex, IntervalIndex)
diff --git a/pandas/core/categorical.py b/pandas/core/categorical.py
index d1f060113..50181486d 100644
--- a/pandas/core/categorical.py
+++ b/pandas/core/categorical.py
@@ -1615,7 +1615,7 @@ class Categorical(PandasObject):
         """ return the base repr for the categories """
         max_categories = (10 if get_option("display.max_categories") == 0 else
                           get_option("display.max_categories"))
-        from pandas.formats import format as fmt
+        from pandas.io.formats import format as fmt
         if len(self.categories) > max_categories:
             num = max_categories // 2
             head = fmt.format_array(self.categories[:num], None)
@@ -1663,7 +1663,7 @@ class Categorical(PandasObject):
         return u('Length: %d\n%s') % (len(self), self._repr_categories_info())
 
     def _get_repr(self, length=True, na_rep='NaN', footer=True):
-        from pandas.formats import format as fmt
+        from pandas.io.formats import format as fmt
         formatter = fmt.CategoricalFormatter(self, length=length,
                                              na_rep=na_rep, footer=footer)
         result = formatter.to_string()
diff --git a/pandas/core/computation/engines.py b/pandas/core/computation/engines.py
index 675a3d5ec..f45d0355e 100644
--- a/pandas/core/computation/engines.py
+++ b/pandas/core/computation/engines.py
@@ -6,7 +6,7 @@ import abc
 
 from pandas import compat
 from pandas.compat import map
-import pandas.formats.printing as printing
+import pandas.io.formats.printing as printing
 from pandas.core.computation.align import _align, _reconstruct_object
 from pandas.core.computation.ops import (
     UndefinedVariableError,
diff --git a/pandas/core/computation/eval.py b/pandas/core/computation/eval.py
index fc3986e31..15e13025a 100644
--- a/pandas/core/computation/eval.py
+++ b/pandas/core/computation/eval.py
@@ -5,7 +5,7 @@
 
 import warnings
 import tokenize
-from pandas.formats.printing import pprint_thing
+from pandas.io.formats.printing import pprint_thing
 from pandas.core.computation import _NUMEXPR_INSTALLED
 from pandas.core.computation.expr import Expr, _parsers, tokenize_string
 from pandas.core.computation.scope import _ensure_scope
diff --git a/pandas/core/computation/expr.py b/pandas/core/computation/expr.py
index 01c5d1f6f..51785ebcd 100644
--- a/pandas/core/computation/expr.py
+++ b/pandas/core/computation/expr.py
@@ -12,7 +12,7 @@ from pandas import compat
 from pandas.compat import StringIO, lmap, zip, reduce, string_types
 from pandas.core.base import StringMixin
 from pandas.core import common as com
-import pandas.formats.printing as printing
+import pandas.io.formats.printing as printing
 from pandas.tools.util import compose
 from pandas.core.computation.ops import (
     _cmp_ops_syms, _bool_ops_syms,
diff --git a/pandas/core/computation/ops.py b/pandas/core/computation/ops.py
index 91c414bbc..7ba2c1653 100644
--- a/pandas/core/computation/ops.py
+++ b/pandas/core/computation/ops.py
@@ -11,7 +11,7 @@ from pandas.core.dtypes.common import is_list_like, is_scalar
 import pandas as pd
 from pandas.compat import PY3, string_types, text_type
 import pandas.core.common as com
-from pandas.formats.printing import pprint_thing, pprint_thing_encoded
+from pandas.io.formats.printing import pprint_thing, pprint_thing_encoded
 from pandas.core.base import StringMixin
 from pandas.core.computation.common import _ensure_decoded, _result_type_many
 from pandas.core.computation.scope import _DEFAULT_GLOBALS
diff --git a/pandas/core/computation/pytables.py b/pandas/core/computation/pytables.py
index 8d0f23e28..285ff3461 100644
--- a/pandas/core/computation/pytables.py
+++ b/pandas/core/computation/pytables.py
@@ -9,7 +9,7 @@ from pandas.core.dtypes.common import is_list_like
 import pandas.core.common as com
 from pandas.compat import u, string_types, DeepChainMap
 from pandas.core.base import StringMixin
-from pandas.formats.printing import pprint_thing, pprint_thing_encoded
+from pandas.io.formats.printing import pprint_thing, pprint_thing_encoded
 from pandas.core.computation import expr, ops
 from pandas.core.computation.ops import is_term, UndefinedVariableError
 from pandas.core.computation.expr import BaseExprVisitor
diff --git a/pandas/core/config.py b/pandas/core/config.py
index 39ed2f954..b406f6724 100644
--- a/pandas/core/config.py
+++ b/pandas/core/config.py
@@ -774,7 +774,7 @@ def is_instance_factory(_type):
     """
     if isinstance(_type, (tuple, list)):
         _type = tuple(_type)
-        from pandas.formats.printing import pprint_thing
+        from pandas.io.formats.printing import pprint_thing
         type_repr = "|".join(map(pprint_thing, _type))
     else:
         type_repr = "'%s'" % _type
@@ -792,7 +792,7 @@ def is_one_of_factory(legal_values):
     legal_values = [c for c in legal_values if not callable(c)]
 
     def inner(x):
-        from pandas.formats.printing import pprint_thing as pp
+        from pandas.io.formats.printing import pprint_thing as pp
         if x not in legal_values:
 
             if not any([c(x) for c in callables]):
diff --git a/pandas/core/config_init.py b/pandas/core/config_init.py
index 7307980c8..f8cbdffa2 100644
--- a/pandas/core/config_init.py
+++ b/pandas/core/config_init.py
@@ -15,7 +15,7 @@ import pandas.core.config as cf
 from pandas.core.config import (is_int, is_bool, is_text, is_instance_factory,
                                 is_one_of_factory, get_default_val,
                                 is_callable)
-from pandas.formats.format import detect_console_encoding
+from pandas.io.formats.format import detect_console_encoding
 
 #
 # options from the "display" namespace
diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 3a5a0e704..732ce7ce6 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -90,8 +90,8 @@ import pandas.core.base as base
 import pandas.core.common as com
 import pandas.core.nanops as nanops
 import pandas.core.ops as ops
-import pandas.formats.format as fmt
-from pandas.formats.printing import pprint_thing
+import pandas.io.formats.format as fmt
+from pandas.io.formats.printing import pprint_thing
 import pandas.plotting._core as gfx
 
 from pandas._libs import lib, algos as libalgos
@@ -636,9 +636,9 @@ class DataFrame(NDFrame):
 
         See Also
         --------
-        pandas.formats.style.Styler
+        pandas.io.formats.style.Styler
         """
-        from pandas.formats.style import Styler
+        from pandas.io.formats.style import Styler
         return Styler(self)
 
     def iteritems(self):
@@ -1724,7 +1724,7 @@ it is assumed to be aliases for the column names.')
             - If False, never show counts.
 
         """
-        from pandas.formats.format import _put_lines
+        from pandas.io.formats.format import _put_lines
 
         if buf is None:  # pragma: no cover
             buf = sys.stdout
diff --git a/pandas/core/generic.py b/pandas/core/generic.py
index 167af8dfc..5f0c65ddf 100644
--- a/pandas/core/generic.py
+++ b/pandas/core/generic.py
@@ -43,8 +43,8 @@ from pandas.core.internals import BlockManager
 import pandas.core.algorithms as algos
 import pandas.core.common as com
 import pandas.core.missing as missing
-from pandas.formats.printing import pprint_thing
-from pandas.formats.format import format_percentiles
+from pandas.io.formats.printing import pprint_thing
+from pandas.io.formats.format import format_percentiles
 from pandas.tseries.frequencies import to_offset
 from pandas import compat
 from pandas.compat.numpy import function as nv
diff --git a/pandas/core/groupby.py b/pandas/core/groupby.py
index 2cbcb9ef6..3fd41f345 100644
--- a/pandas/core/groupby.py
+++ b/pandas/core/groupby.py
@@ -55,7 +55,7 @@ from pandas.core.sorting import (get_group_index_sorter, get_group_index,
                                  decons_obs_group_ids, get_indexer_dict)
 from pandas.util.decorators import (cache_readonly, Substitution,
                                     Appender, make_signature)
-from pandas.formats.printing import pprint_thing
+from pandas.io.formats.printing import pprint_thing
 from pandas.util.validators import validate_kwargs
 
 import pandas.core.algorithms as algorithms
diff --git a/pandas/core/internals.py b/pandas/core/internals.py
index f7d7efd66..c698bcb9f 100644
--- a/pandas/core/internals.py
+++ b/pandas/core/internals.py
@@ -55,7 +55,7 @@ from pandas.core.index import Index, MultiIndex, _ensure_index
 from pandas.core.indexing import maybe_convert_indices, length_of_indexer
 from pandas.core.categorical import Categorical, maybe_to_categorical
 from pandas.tseries.index import DatetimeIndex
-from pandas.formats.printing import pprint_thing
+from pandas.io.formats.printing import pprint_thing
 
 import pandas.core.missing as missing
 from pandas.core.sparse.array import _maybe_to_sparse, SparseArray
@@ -1614,7 +1614,7 @@ class FloatBlock(FloatOrComplexBlock):
             values[mask] = na_rep
             return values
 
-        from pandas.formats.format import FloatArrayFormatter
+        from pandas.io.formats.format import FloatArrayFormatter
         formatter = FloatArrayFormatter(values, na_rep=na_rep,
                                         float_format=float_format,
                                         decimal=decimal, quoting=quoting,
@@ -2328,7 +2328,7 @@ class DatetimeBlock(DatetimeLikeBlockMixin, Block):
         if slicer is not None:
             values = values[..., slicer]
 
-        from pandas.formats.format import _get_format_datetime64_from_values
+        from pandas.io.formats.format import _get_format_datetime64_from_values
         format = _get_format_datetime64_from_values(values, date_format)
 
         result = tslib.format_array_from_datetime(
diff --git a/pandas/core/panel.py b/pandas/core/panel.py
index 76053b3bd..fefe75163 100644
--- a/pandas/core/panel.py
+++ b/pandas/core/panel.py
@@ -26,7 +26,7 @@ from pandas.core.frame import DataFrame
 from pandas.core.generic import NDFrame, _shared_docs
 from pandas.core.index import (Index, MultiIndex, _ensure_index,
                                _get_combined_index)
-from pandas.formats.printing import pprint_thing
+from pandas.io.formats.printing import pprint_thing
 from pandas.core.indexing import maybe_droplevels
 from pandas.core.internals import (BlockManager,
                                    create_block_manager_from_arrays,
diff --git a/pandas/core/series.py b/pandas/core/series.py
index 596dae434..9022bff09 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -67,7 +67,7 @@ import pandas.core.algorithms as algorithms
 
 import pandas.core.common as com
 import pandas.core.nanops as nanops
-import pandas.formats.format as fmt
+import pandas.io.formats.format as fmt
 from pandas.util.decorators import Appender, deprecate_kwarg, Substitution
 from pandas.util.validators import validate_bool_kwarg
 
diff --git a/pandas/core/sparse/array.py b/pandas/core/sparse/array.py
index 74e9be54a..d3fdfe553 100644
--- a/pandas/core/sparse/array.py
+++ b/pandas/core/sparse/array.py
@@ -34,7 +34,7 @@ from pandas.core.sparse.libsparse import SparseIndex, BlockIndex, IntIndex
 from pandas._libs import index as libindex
 import pandas.core.algorithms as algos
 import pandas.core.ops as ops
-import pandas.formats.printing as printing
+import pandas.io.formats.printing as printing
 from pandas.util.decorators import Appender
 from pandas.indexes.base import _index_shared_docs
 
diff --git a/pandas/core/sparse/list.py b/pandas/core/sparse/list.py
index 381a811ac..e69ad6d0a 100644
--- a/pandas/core/sparse/list.py
+++ b/pandas/core/sparse/list.py
@@ -1,7 +1,7 @@
 import warnings
 import numpy as np
 from pandas.core.base import PandasObject
-from pandas.formats.printing import pprint_thing
+from pandas.io.formats.printing import pprint_thing
 
 from pandas.core.dtypes.common import is_scalar
 from pandas.core.sparse.array import SparseArray
diff --git a/pandas/indexes/base.py b/pandas/indexes/base.py
index b0439e122..d88e54dcc 100644
--- a/pandas/indexes/base.py
+++ b/pandas/indexes/base.py
@@ -48,7 +48,7 @@ import pandas.core.common as com
 import pandas.core.dtypes.concat as _concat
 import pandas.core.missing as missing
 import pandas.core.algorithms as algos
-from pandas.formats.printing import pprint_thing
+from pandas.io.formats.printing import pprint_thing
 from pandas.core.ops import _comp_method_OBJECT_ARRAY
 from pandas.core.strings import StringAccessorMixin
 from pandas.core.config import get_option
@@ -831,7 +831,7 @@ class Index(IndexOpsMixin, StringAccessorMixin, PandasObject):
         """
         Return the formatted data as a unicode string
         """
-        from pandas.formats.format import get_console_size, _get_adjustment
+        from pandas.io.formats.format import get_console_size, _get_adjustment
         display_width, _ = get_console_size()
         if display_width is None:
             display_width = get_option('display.width') or 80
@@ -1842,7 +1842,7 @@ class Index(IndexOpsMixin, StringAccessorMixin, PandasObject):
     def _format_with_header(self, header, na_rep='NaN', **kwargs):
         values = self.values
 
-        from pandas.formats.format import format_array
+        from pandas.io.formats.format import format_array
 
         if is_categorical_dtype(values.dtype):
             values = np.array(values)
diff --git a/pandas/indexes/frozen.py b/pandas/indexes/frozen.py
index 19b04319b..3c6b92217 100644
--- a/pandas/indexes/frozen.py
+++ b/pandas/indexes/frozen.py
@@ -11,7 +11,7 @@ These are used for:
 import numpy as np
 from pandas.core.base import PandasObject
 from pandas.core.dtypes.cast import coerce_indexer_dtype
-from pandas.formats.printing import pprint_thing
+from pandas.io.formats.printing import pprint_thing
 
 
 class FrozenList(PandasObject, list):
diff --git a/pandas/indexes/interval.py b/pandas/indexes/interval.py
index 88a2b0ff9..6f68e67d7 100644
--- a/pandas/indexes/interval.py
+++ b/pandas/indexes/interval.py
@@ -921,7 +921,7 @@ class IntervalIndex(IntervalMixin, Index):
 
     def _format_native_types(self, na_rep='', quoting=None, **kwargs):
         """ actually format my specific types """
-        from pandas.formats.format import IntervalArrayFormatter
+        from pandas.io.formats.format import IntervalArrayFormatter
         return IntervalArrayFormatter(values=self,
                                       na_rep=na_rep,
                                       justify='all').get_result()
diff --git a/pandas/indexes/multi.py b/pandas/indexes/multi.py
index f410dbddb..b341bfe7b 100644
--- a/pandas/indexes/multi.py
+++ b/pandas/indexes/multi.py
@@ -31,7 +31,7 @@ from pandas.util.decorators import (Appender, cache_readonly,
 import pandas.core.common as com
 import pandas.core.missing as missing
 import pandas.core.algorithms as algos
-from pandas.formats.printing import pprint_thing
+from pandas.io.formats.printing import pprint_thing
 
 from pandas.core.config import get_option
 
@@ -935,7 +935,7 @@ class MultiIndex(Index):
                                       sentinel=sentinel)
 
         if adjoin:
-            from pandas.formats.format import _get_adjustment
+            from pandas.io.formats.format import _get_adjustment
             adj = _get_adjustment()
             return adj.adjoin(space, *result_levels).split('\n')
         else:
diff --git a/pandas/indexes/numeric.py b/pandas/indexes/numeric.py
index 2f6810152..6b9999239 100644
--- a/pandas/indexes/numeric.py
+++ b/pandas/indexes/numeric.py
@@ -302,7 +302,7 @@ class Float64Index(NumericIndex):
 
     def _format_native_types(self, na_rep='', float_format=None, decimal='.',
                              quoting=None, **kwargs):
-        from pandas.formats.format import FloatArrayFormatter
+        from pandas.io.formats.format import FloatArrayFormatter
         formatter = FloatArrayFormatter(self.values, na_rep=na_rep,
                                         float_format=float_format,
                                         decimal=decimal, quoting=quoting,
diff --git a/pandas/io/api.py b/pandas/io/api.py
index 4744d4147..58c388d30 100644
--- a/pandas/io/api.py
+++ b/pandas/io/api.py
@@ -18,7 +18,7 @@ from pandas.io.pickle import read_pickle, to_pickle
 from pandas.io.packers import read_msgpack, to_msgpack
 from pandas.io.gbq import read_gbq
 try:
-    from pandas.formats.style import Styler
+    from pandas.io.formats.style import Styler
 except ImportError:
     from pandas.compat import add_metaclass as _add_metaclass
     from pandas.util.importing import _UnSubclassable
diff --git a/pandas/io/common.py b/pandas/io/common.py
index 5cd5a9cd3..28f90972f 100644
--- a/pandas/io/common.py
+++ b/pandas/io/common.py
@@ -8,7 +8,7 @@ from contextlib import contextmanager, closing
 
 from pandas.compat import StringIO, BytesIO, string_types, text_type
 from pandas import compat
-from pandas.formats.printing import pprint_thing
+from pandas.io.formats.printing import pprint_thing
 from pandas.core.common import AbstractMethodError
 from pandas.core.dtypes.common import is_number, is_file_like
 
diff --git a/pandas/io/excel.py b/pandas/io/excel.py
index b19837973..637635a64 100644
--- a/pandas/io/excel.py
+++ b/pandas/io/excel.py
@@ -24,7 +24,7 @@ from pandas.io.json import libjson
 from pandas.compat import (map, zip, reduce, range, lrange, u, add_metaclass,
                            string_types, OrderedDict)
 from pandas.core import config
-from pandas.formats.printing import pprint_thing
+from pandas.io.formats.printing import pprint_thing
 import pandas.compat as compat
 import pandas.compat.openpyxl_compat as openpyxl_compat
 from warnings import warn
diff --git a/pandas/formats/__init__.py b/pandas/io/formats/__init__.py
similarity index 100%
rename from pandas/formats/__init__.py
rename to pandas/io/formats/__init__.py
diff --git a/pandas/formats/format.py b/pandas/io/formats/format.py
similarity index 99%
rename from pandas/formats/format.py
rename to pandas/io/formats/format.py
index aad6c1824..20df60eb9 100644
--- a/pandas/formats/format.py
+++ b/pandas/io/formats/format.py
@@ -33,7 +33,7 @@ from pandas.compat import (StringIO, lzip, range, map, zip, reduce, u,
 from pandas.util.terminal import get_terminal_size
 from pandas.core.config import get_option, set_option
 from pandas.io.common import _get_handle, UnicodeWriter, _expand_user
-from pandas.formats.printing import adjoin, justify, pprint_thing
+from pandas.io.formats.printing import adjoin, justify, pprint_thing
 import pandas.core.common as com
 import pandas._libs.lib as lib
 from pandas._libs.tslib import (iNaT, Timestamp, Timedelta,
diff --git a/pandas/formats/printing.py b/pandas/io/formats/printing.py
similarity index 100%
rename from pandas/formats/printing.py
rename to pandas/io/formats/printing.py
diff --git a/pandas/formats/style.py b/pandas/io/formats/style.py
similarity index 99%
rename from pandas/formats/style.py
rename to pandas/io/formats/style.py
index 3ca1d8259..9321c29c9 100644
--- a/pandas/formats/style.py
+++ b/pandas/io/formats/style.py
@@ -107,7 +107,7 @@ class Styler(object):
     --------
     pandas.DataFrame.style
     """
-    loader = PackageLoader("pandas", "formats/templates")
+    loader = PackageLoader("pandas", "io/formats/templates")
     env = Environment(
         loader=loader,
         trim_blocks=True,
diff --git a/pandas/formats/templates/html.tpl b/pandas/io/formats/templates/html.tpl
similarity index 100%
rename from pandas/formats/templates/html.tpl
rename to pandas/io/formats/templates/html.tpl
diff --git a/pandas/io/html.py b/pandas/io/html.py
index 8e5b8def1..2613f26ae 100644
--- a/pandas/io/html.py
+++ b/pandas/io/html.py
@@ -21,7 +21,7 @@ from pandas.compat import (lrange, lmap, u, string_types, iteritems,
                            raise_with_traceback, binary_type)
 from pandas import Series
 from pandas.core.common import AbstractMethodError
-from pandas.formats.printing import pprint_thing
+from pandas.io.formats.printing import pprint_thing
 
 _IMPORTS = False
 _HAS_BS4 = False
diff --git a/pandas/io/json/json.py b/pandas/io/json/json.py
index 19e84c04b..7149ab497 100644
--- a/pandas/io/json/json.py
+++ b/pandas/io/json/json.py
@@ -9,7 +9,7 @@ from pandas import compat, isnull
 from pandas import Series, DataFrame, to_datetime
 from pandas.io.common import get_filepath_or_buffer, _get_handle
 from pandas.core.common import AbstractMethodError
-from pandas.formats.printing import pprint_thing
+from pandas.io.formats.printing import pprint_thing
 from .normalize import _convert_to_line_delimits
 from .table_schema import build_table_schema
 from pandas.core.dtypes.common import is_period_dtype
diff --git a/pandas/io/pytables.py b/pandas/io/pytables.py
index 4771134f3..17bedd016 100644
--- a/pandas/io/pytables.py
+++ b/pandas/io/pytables.py
@@ -32,7 +32,7 @@ from pandas.core import config
 from pandas.io.common import _stringify_path
 from pandas.core.sparse.array import BlockIndex, IntIndex
 from pandas.core.base import StringMixin
-from pandas.formats.printing import adjoin, pprint_thing
+from pandas.io.formats.printing import adjoin, pprint_thing
 from pandas.errors import PerformanceWarning
 from pandas.core.common import _asarray_tuplesafe
 from pandas.core.algorithms import match, unique
diff --git a/pandas/plotting/_core.py b/pandas/plotting/_core.py
index 02f2df494..374244acf 100644
--- a/pandas/plotting/_core.py
+++ b/pandas/plotting/_core.py
@@ -24,7 +24,7 @@ from pandas.core.series import Series, remove_na
 from pandas.tseries.period import PeriodIndex
 from pandas.compat import range, lrange, map, zip, string_types
 import pandas.compat as compat
-from pandas.formats.printing import pprint_thing
+from pandas.io.formats.printing import pprint_thing
 from pandas.util.decorators import Appender
 
 from pandas.plotting._compat import (_mpl_ge_1_3_1,
diff --git a/pandas/plotting/_misc.py b/pandas/plotting/_misc.py
index f09bcef82..93eceba9a 100644
--- a/pandas/plotting/_misc.py
+++ b/pandas/plotting/_misc.py
@@ -7,7 +7,7 @@ import numpy as np
 from pandas.util.decorators import deprecate_kwarg
 from pandas.core.dtypes.missing import notnull
 from pandas.compat import range, lrange, lmap, zip
-from pandas.formats.printing import pprint_thing
+from pandas.io.formats.printing import pprint_thing
 
 
 from pandas.plotting._style import _get_standard_colors
diff --git a/pandas/plotting/_timeseries.py b/pandas/plotting/_timeseries.py
index 7533e417b..f8c7c1ee9 100644
--- a/pandas/plotting/_timeseries.py
+++ b/pandas/plotting/_timeseries.py
@@ -9,7 +9,7 @@ import pandas.tseries.frequencies as frequencies
 from pandas.tseries.index import DatetimeIndex
 from pandas.tseries.period import PeriodIndex
 from pandas.tseries.tdi import TimedeltaIndex
-from pandas.formats.printing import pprint_thing
+from pandas.io.formats.printing import pprint_thing
 import pandas.compat as compat
 
 from pandas.plotting._converter import (TimeSeries_DateLocator,
diff --git a/pandas/tests/api/test_api.py b/pandas/tests/api/test_api.py
index 221458e62..32ed77d94 100644
--- a/pandas/tests/api/test_api.py
+++ b/pandas/tests/api/test_api.py
@@ -31,7 +31,7 @@ class TestPDApi(Base, tm.TestCase):
 
     # top-level sub-packages
     lib = ['api', 'compat', 'core',
-           'indexes', 'formats', 'errors', 'pandas',
+           'indexes', 'errors', 'pandas',
            'plotting', 'test', 'tools', 'tseries',
            'util', 'options', 'io']
 
diff --git a/pandas/tests/frame/test_analytics.py b/pandas/tests/frame/test_analytics.py
index dda52bbc5..e165e30c5 100644
--- a/pandas/tests/frame/test_analytics.py
+++ b/pandas/tests/frame/test_analytics.py
@@ -18,7 +18,7 @@ from pandas import (compat, isnull, notnull, DataFrame, Series,
 import pandas as pd
 import pandas.core.nanops as nanops
 import pandas.core.algorithms as algorithms
-import pandas.formats.printing as printing
+import pandas.io.formats.printing as printing
 
 import pandas.util.testing as tm
 from pandas.tests.frame.common import TestData
diff --git a/pandas/tests/frame/test_operators.py b/pandas/tests/frame/test_operators.py
index 268854fe6..afb26143f 100644
--- a/pandas/tests/frame/test_operators.py
+++ b/pandas/tests/frame/test_operators.py
@@ -15,7 +15,7 @@ from pandas import compat
 from pandas import (DataFrame, Series, MultiIndex, Timestamp,
                     date_range)
 import pandas.core.common as com
-import pandas.formats.printing as printing
+import pandas.io.formats.printing as printing
 import pandas as pd
 
 from pandas.util.testing import (assert_numpy_array_equal,
diff --git a/pandas/tests/frame/test_repr_info.py b/pandas/tests/frame/test_repr_info.py
index 918938c17..740a24f38 100644
--- a/pandas/tests/frame/test_repr_info.py
+++ b/pandas/tests/frame/test_repr_info.py
@@ -11,7 +11,7 @@ import numpy as np
 
 from pandas import (DataFrame, compat, option_context)
 from pandas.compat import StringIO, lrange, u
-import pandas.formats.format as fmt
+import pandas.io.formats.format as fmt
 import pandas as pd
 
 import pandas.util.testing as tm
diff --git a/pandas/tests/groupby/test_aggregate.py b/pandas/tests/groupby/test_aggregate.py
index 2abae97b3..53a92ece5 100644
--- a/pandas/tests/groupby/test_aggregate.py
+++ b/pandas/tests/groupby/test_aggregate.py
@@ -18,7 +18,7 @@ from pandas import (date_range, MultiIndex, DataFrame,
 from pandas.util.testing import assert_frame_equal, assert_series_equal
 from pandas.core.groupby import SpecificationError, DataError
 from pandas.compat import OrderedDict
-from pandas.formats.printing import pprint_thing
+from pandas.io.formats.printing import pprint_thing
 import pandas.util.testing as tm
 
 
diff --git a/pandas/tests/indexing/common.py b/pandas/tests/indexing/common.py
index 51c0889a6..b555a9c1f 100644
--- a/pandas/tests/indexing/common.py
+++ b/pandas/tests/indexing/common.py
@@ -8,7 +8,7 @@ from pandas.compat import lrange
 from pandas.core.dtypes.common import is_scalar
 from pandas import Series, DataFrame, Panel, date_range, UInt64Index
 from pandas.util import testing as tm
-from pandas.formats.printing import pprint_thing
+from pandas.io.formats.printing import pprint_thing
 
 _verbose = False
 
diff --git a/pandas/tests/formats/__init__.py b/pandas/tests/io/formats/__init__.py
similarity index 100%
rename from pandas/tests/formats/__init__.py
rename to pandas/tests/io/formats/__init__.py
diff --git a/pandas/tests/formats/data/unicode_series.csv b/pandas/tests/io/formats/data/unicode_series.csv
similarity index 100%
rename from pandas/tests/formats/data/unicode_series.csv
rename to pandas/tests/io/formats/data/unicode_series.csv
diff --git a/pandas/tests/formats/test_eng_formatting.py b/pandas/tests/io/formats/test_eng_formatting.py
similarity index 99%
rename from pandas/tests/formats/test_eng_formatting.py
rename to pandas/tests/io/formats/test_eng_formatting.py
index d2badd4fc..225a49219 100644
--- a/pandas/tests/formats/test_eng_formatting.py
+++ b/pandas/tests/io/formats/test_eng_formatting.py
@@ -2,7 +2,7 @@ import numpy as np
 import pandas as pd
 from pandas import DataFrame
 from pandas.compat import u
-import pandas.formats.format as fmt
+import pandas.io.formats.format as fmt
 from pandas.util import testing as tm
 
 
diff --git a/pandas/tests/formats/test_format.py b/pandas/tests/io/formats/test_format.py
similarity index 99%
rename from pandas/tests/formats/test_format.py
rename to pandas/tests/io/formats/test_format.py
index 92f6a600a..7c74f8274 100644
--- a/pandas/tests/formats/test_format.py
+++ b/pandas/tests/io/formats/test_format.py
@@ -25,8 +25,8 @@ from pandas.compat import (range, zip, lrange, StringIO, PY3,
                            is_platform_32bit)
 import pandas.compat as compat
 
-import pandas.formats.format as fmt
-import pandas.formats.printing as printing
+import pandas.io.formats.format as fmt
+import pandas.io.formats.printing as printing
 
 import pandas.util.testing as tm
 from pandas.util.terminal import get_terminal_size
@@ -889,7 +889,7 @@ class TestDataFrameFormatting(tm.TestCase):
         fmt.set_option('display.max_rows', 200)
 
     def test_pprint_thing(self):
-        from pandas.formats.printing import pprint_thing as pp_t
+        from pandas.io.formats.printing import pprint_thing as pp_t
 
         if PY3:
             pytest.skip("doesn't work on Python 3")
diff --git a/pandas/tests/formats/test_printing.py b/pandas/tests/io/formats/test_printing.py
similarity index 98%
rename from pandas/tests/formats/test_printing.py
rename to pandas/tests/io/formats/test_printing.py
index cacba2ad3..23aaf4723 100644
--- a/pandas/tests/formats/test_printing.py
+++ b/pandas/tests/io/formats/test_printing.py
@@ -2,8 +2,8 @@
 import pytest
 from pandas import compat
 import pandas as pd
-import pandas.formats.printing as printing
-import pandas.formats.format as fmt
+import pandas.io.formats.printing as printing
+import pandas.io.formats.format as fmt
 import pandas.util.testing as tm
 import pandas.core.config as cf
 
diff --git a/pandas/tests/formats/test_style.py b/pandas/tests/io/formats/test_style.py
similarity index 99%
rename from pandas/tests/formats/test_style.py
rename to pandas/tests/io/formats/test_style.py
index 08f8f2f32..c02d94d89 100644
--- a/pandas/tests/formats/test_style.py
+++ b/pandas/tests/io/formats/test_style.py
@@ -9,7 +9,7 @@ from pandas.util.testing import TestCase
 import pandas.util.testing as tm
 
 jinja2 = pytest.importorskip('jinja2')
-from pandas.formats.style import Styler, _get_level_lengths  # noqa
+from pandas.io.formats.style import Styler, _get_level_lengths  # noqa
 
 
 class TestStyler(TestCase):
diff --git a/pandas/tests/formats/test_to_csv.py b/pandas/tests/io/formats/test_to_csv.py
similarity index 100%
rename from pandas/tests/formats/test_to_csv.py
rename to pandas/tests/io/formats/test_to_csv.py
diff --git a/pandas/tests/formats/test_to_html.py b/pandas/tests/io/formats/test_to_html.py
similarity index 99%
rename from pandas/tests/formats/test_to_html.py
rename to pandas/tests/io/formats/test_to_html.py
index 771c66e84..e90224dcb 100644
--- a/pandas/tests/formats/test_to_html.py
+++ b/pandas/tests/io/formats/test_to_html.py
@@ -11,7 +11,7 @@ import pandas as pd
 from pandas import compat, DataFrame, MultiIndex, option_context, Index
 from pandas.compat import u, lrange, StringIO
 from pandas.util import testing as tm
-import pandas.formats.format as fmt
+import pandas.io.formats.format as fmt
 
 div_style = ''
 try:
diff --git a/pandas/tests/formats/test_to_latex.py b/pandas/tests/io/formats/test_to_latex.py
similarity index 100%
rename from pandas/tests/formats/test_to_latex.py
rename to pandas/tests/io/formats/test_to_latex.py
diff --git a/pandas/tests/io/test_excel.py b/pandas/tests/io/test_excel.py
index d83e26995..2fada4e1d 100644
--- a/pandas/tests/io/test_excel.py
+++ b/pandas/tests/io/test_excel.py
@@ -2006,7 +2006,7 @@ class Openpyxl20Tests(ExcelWriterBase, tm.TestCase):
         self.assertEqual(kw['protection'], protection)
 
     def test_write_cells_merge_styled(self):
-        from pandas.formats.format import ExcelCell
+        from pandas.io.formats.format import ExcelCell
         from openpyxl import styles
 
         sheet_name = 'merge_styled'
@@ -2119,7 +2119,7 @@ class Openpyxl22Tests(ExcelWriterBase, tm.TestCase):
         if not openpyxl_compat.is_compat(major_ver=2):
             pytest.skip('incompatible openpyxl version')
 
-        from pandas.formats.format import ExcelCell
+        from pandas.io.formats.format import ExcelCell
 
         sheet_name = 'merge_styled'
 
diff --git a/pandas/tests/io/test_pytables.py b/pandas/tests/io/test_pytables.py
index 2df8872e2..c6a54211e 100644
--- a/pandas/tests/io/test_pytables.py
+++ b/pandas/tests/io/test_pytables.py
@@ -17,7 +17,7 @@ from pandas import (Series, DataFrame, Panel, Panel4D, MultiIndex, Int64Index,
                     isnull)
 
 from pandas.compat import is_platform_windows, PY3, PY35
-from pandas.formats.printing import pprint_thing
+from pandas.io.formats.printing import pprint_thing
 
 tables = pytest.importorskip('tables')
 from pandas.io.pytables import TableIterator
diff --git a/pandas/tests/plotting/test_frame.py b/pandas/tests/plotting/test_frame.py
index fe07f5b9f..e8ff77f9c 100644
--- a/pandas/tests/plotting/test_frame.py
+++ b/pandas/tests/plotting/test_frame.py
@@ -13,7 +13,7 @@ from pandas import (Series, DataFrame, MultiIndex, PeriodIndex, date_range,
                     bdate_range)
 from pandas.core.dtypes.api import is_list_like
 from pandas.compat import range, lrange, lmap, lzip, u, zip, PY3
-from pandas.formats.printing import pprint_thing
+from pandas.io.formats.printing import pprint_thing
 import pandas.util.testing as tm
 from pandas.util.testing import slow
 
diff --git a/pandas/tests/series/test_api.py b/pandas/tests/series/test_api.py
index 2facbaf1f..3cb1e29bd 100644
--- a/pandas/tests/series/test_api.py
+++ b/pandas/tests/series/test_api.py
@@ -9,7 +9,7 @@ from pandas.tseries.index import Timestamp
 
 from pandas.compat import range
 from pandas import compat
-import pandas.formats.printing as printing
+import pandas.io.formats.printing as printing
 from pandas.util.testing import (assert_series_equal,
                                  ensure_clean)
 import pandas.util.testing as tm
diff --git a/pandas/tests/test_expressions.py b/pandas/tests/test_expressions.py
index b353f73f4..ddbaedc3e 100644
--- a/pandas/tests/test_expressions.py
+++ b/pandas/tests/test_expressions.py
@@ -17,7 +17,7 @@ from pandas import compat, _np_version_under1p11
 from pandas.util.testing import (assert_almost_equal, assert_series_equal,
                                  assert_frame_equal, assert_panel_equal,
                                  assert_panel4d_equal, slow)
-from pandas.formats.printing import pprint_thing
+from pandas.io.formats.printing import pprint_thing
 import pandas.util.testing as tm
 
 
diff --git a/pandas/tests/test_generic.py b/pandas/tests/test_generic.py
index 800592774..a2ded195d 100644
--- a/pandas/tests/test_generic.py
+++ b/pandas/tests/test_generic.py
@@ -16,7 +16,7 @@ from pandas import (Index, Series, DataFrame, Panel, isnull,
                     date_range, period_range, Panel4D)
 from pandas.core.index import MultiIndex
 
-import pandas.formats.printing as printing
+import pandas.io.formats.printing as printing
 
 from pandas.compat import range, zip, PY3
 from pandas import compat
diff --git a/pandas/tests/test_panel.py b/pandas/tests/test_panel.py
index f0e53046e..60173dda5 100644
--- a/pandas/tests/test_panel.py
+++ b/pandas/tests/test_panel.py
@@ -16,7 +16,7 @@ from pandas.core.nanops import nanall, nanany
 from pandas.core.panel import Panel
 from pandas.core.series import remove_na
 
-from pandas.formats.printing import pprint_thing
+from pandas.io.formats.printing import pprint_thing
 from pandas import compat
 from pandas.compat import range, lrange, StringIO, OrderedDict, signature
 
diff --git a/pandas/tseries/base.py b/pandas/tseries/base.py
index cf79cadef..b419aae70 100644
--- a/pandas/tseries/base.py
+++ b/pandas/tseries/base.py
@@ -22,7 +22,7 @@ from pandas.core import common as com, algorithms
 from pandas.core.algorithms import checked_add_with_arr
 from pandas.core.common import AbstractMethodError
 
-import pandas.formats.printing as printing
+import pandas.io.formats.printing as printing
 from pandas._libs import (tslib as libts, lib,
                           Timedelta, Timestamp, iNaT, NaT)
 from pandas._libs.period import Period
diff --git a/pandas/tseries/index.py b/pandas/tseries/index.py
index 95594652e..a964b6d9e 100644
--- a/pandas/tseries/index.py
+++ b/pandas/tseries/index.py
@@ -686,12 +686,12 @@ class DatetimeIndex(DatelikeOps, TimelikeOps, DatetimeIndexOpsMixin,
 
     @cache_readonly
     def _is_dates_only(self):
-        from pandas.formats.format import _is_dates_only
+        from pandas.io.formats.format import _is_dates_only
         return _is_dates_only(self.values)
 
     @property
     def _formatter_func(self):
-        from pandas.formats.format import _get_format_datetime64
+        from pandas.io.formats.format import _get_format_datetime64
         formatter = _get_format_datetime64(is_dates_only=self._is_dates_only)
         return lambda x: "'%s'" % formatter(x, tz=self.tz)
 
@@ -830,7 +830,7 @@ class DatetimeIndex(DatelikeOps, TimelikeOps, DatetimeIndexOpsMixin,
             return self.astype('O') + offset
 
     def _format_native_types(self, na_rep='NaT', date_format=None, **kwargs):
-        from pandas.formats.format import _get_format_datetime64_from_values
+        from pandas.io.formats.format import _get_format_datetime64_from_values
         format = _get_format_datetime64_from_values(self, date_format)
 
         return libts.format_array_from_datetime(self.asi8,
diff --git a/pandas/tseries/tdi.py b/pandas/tseries/tdi.py
index c26f023ea..020b73282 100644
--- a/pandas/tseries/tdi.py
+++ b/pandas/tseries/tdi.py
@@ -290,7 +290,7 @@ class TimedeltaIndex(DatetimeIndexOpsMixin, TimelikeOps, Int64Index):
 
     @property
     def _formatter_func(self):
-        from pandas.formats.format import _get_format_timedelta64
+        from pandas.io.formats.format import _get_format_timedelta64
         return _get_format_timedelta64(self, box=True)
 
     def __setstate__(self, state):
@@ -366,7 +366,7 @@ class TimedeltaIndex(DatetimeIndexOpsMixin, TimelikeOps, Int64Index):
 
     def _format_native_types(self, na_rep=u('NaT'),
                              date_format=None, **kwargs):
-        from pandas.formats.format import Timedelta64Formatter
+        from pandas.io.formats.format import Timedelta64Formatter
         return Timedelta64Formatter(values=self,
                                     nat_rep=na_rep,
                                     justify='all').get_result()
diff --git a/pandas/util/testing.py b/pandas/util/testing.py
index 638a190d8..08323fc0c 100644
--- a/pandas/util/testing.py
+++ b/pandas/util/testing.py
@@ -33,7 +33,7 @@ from pandas.core.dtypes.common import (
     is_interval_dtype,
     is_sequence,
     is_list_like)
-from pandas.formats.printing import pprint_thing
+from pandas.io.formats.printing import pprint_thing
 from pandas.core.algorithms import take_1d
 
 import pandas.compat as compat
diff --git a/setup.py b/setup.py
index b7c4581c4..5a7efa154 100755
--- a/setup.py
+++ b/setup.py
@@ -648,8 +648,8 @@ setup(name=DISTNAME,
                 'pandas.io.json',
                 'pandas.io.sas',
                 'pandas.io.msgpack',
+                'pandas.io.formats',
                 'pandas._libs',
-                'pandas.formats',
                 'pandas.plotting',
                 'pandas.stats',
                 'pandas.util',
@@ -668,9 +668,9 @@ setup(name=DISTNAME,
                 'pandas.tests.io.parser',
                 'pandas.tests.io.sas',
                 'pandas.tests.io.msgpack',
+                'pandas.tests.io.formats',
                 'pandas.tests.groupby',
                 'pandas.tests.series',
-                'pandas.tests.formats',
                 'pandas.tests.scalar',
                 'pandas.tests.tseries',
                 'pandas.tests.tools',
