commit f334fcc681574f5b35b86a6eda17058d6a9505f2
Author: Alex Hall <alex.mojaki@gmail.com>
Date:   Fri Apr 10 21:30:55 2020 +0200

    Properly handle missing attributes in query/eval strings (#32408)

diff --git a/doc/source/whatsnew/v1.1.0.rst b/doc/source/whatsnew/v1.1.0.rst
index 762c6de98..fc5893e40 100644
--- a/doc/source/whatsnew/v1.1.0.rst
+++ b/doc/source/whatsnew/v1.1.0.rst
@@ -585,6 +585,7 @@ Other
 - Bug in :meth:`DataFrame.to_records` incorrectly losing timezone information in timezone-aware ``datetime64`` columns (:issue:`32535`)
 - Fixed :func:`pandas.testing.assert_series_equal` to correctly raise if left object is a different subclass with ``check_series_type=True`` (:issue:`32670`).
 - :meth:`IntegerArray.astype` now supports ``datetime64`` dtype (:issue:32538`)
+- Getting a missing attribute in a query/eval string raises the correct ``AttributeError`` (:issue:`32408`)
 - Fixed bug in :func:`pandas.testing.assert_series_equal` where dtypes were checked for ``Interval`` and ``ExtensionArray`` operands when ``check_dtype`` was ``False`` (:issue:`32747`)
 - Bug in :meth:`Series.map` not raising on invalid ``na_action`` (:issue:`32815`)
 - Bug in :meth:`DataFrame.__dir__` caused a segfault when using unicode surrogates in a column name (:issue:`25509`)
diff --git a/pandas/core/computation/expr.py b/pandas/core/computation/expr.py
index c59952bea..6cd9a15b7 100644
--- a/pandas/core/computation/expr.py
+++ b/pandas/core/computation/expr.py
@@ -635,8 +635,9 @@ class BaseExprVisitor(ast.NodeVisitor):
                 # something like datetime.datetime where scope is overridden
                 if isinstance(value, ast.Name) and value.id == attr:
                     return resolved
+                raise
 
-        raise ValueError(f"Invalid Attribute context {ctx.__name__}")
+        raise ValueError(f"Invalid Attribute context {type(ctx).__name__}")
 
     def visit_Call(self, node, side=None, **kwargs):
 
diff --git a/pandas/tests/frame/test_query_eval.py b/pandas/tests/frame/test_query_eval.py
index bf9eeb532..1a0778046 100644
--- a/pandas/tests/frame/test_query_eval.py
+++ b/pandas/tests/frame/test_query_eval.py
@@ -1165,6 +1165,11 @@ class TestDataFrameQueryBacktickQuoting:
         expect = df[df["  &^ :!â‚¬$?(} >    <++*''  "] > 4]
         tm.assert_frame_equal(res, expect)
 
+    def test_missing_attribute(self, df):
+        message = "module 'pandas' has no attribute 'thing'"
+        with pytest.raises(AttributeError, match=message):
+            df.eval("@pd.thing")
+
     def test_failing_quote(self, df):
         with pytest.raises(SyntaxError):
             df.query("`it's` > `that's`")
