commit 8088fe0f3d6ee964b28b0895660d33b988ee215d
Author: Simon Hawkins <simonjayhawkins@gmail.com>
Date:   Wed Jan 2 17:56:21 2019 +0000

    TST: isort tests/groupby (#24553)

diff --git a/pandas/tests/groupby/aggregate/test_aggregate.py b/pandas/tests/groupby/aggregate/test_aggregate.py
index 52bfee66f..62ec0555f 100644
--- a/pandas/tests/groupby/aggregate/test_aggregate.py
+++ b/pandas/tests/groupby/aggregate/test_aggregate.py
@@ -4,15 +4,15 @@
 test .agg behavior / note that .apply is tested generally in test_groupby.py
 """
 
+import numpy as np
 import pytest
 
-import numpy as np
-import pandas as pd
+from pandas.compat import OrderedDict
 
-from pandas import concat, DataFrame, Index, MultiIndex, Series
-from pandas.core.groupby.grouper import Grouping
+import pandas as pd
+from pandas import DataFrame, Index, MultiIndex, Series, concat
 from pandas.core.base import SpecificationError
-from pandas.compat import OrderedDict
+from pandas.core.groupby.grouper import Grouping
 import pandas.util.testing as tm
 
 
diff --git a/pandas/tests/groupby/aggregate/test_cython.py b/pandas/tests/groupby/aggregate/test_cython.py
index ad5968bca..ad3974d5e 100644
--- a/pandas/tests/groupby/aggregate/test_cython.py
+++ b/pandas/tests/groupby/aggregate/test_cython.py
@@ -6,13 +6,12 @@ test cython .agg behavior
 
 from __future__ import print_function
 
+import numpy as np
 import pytest
 
-import numpy as np
 import pandas as pd
-
-from pandas import (bdate_range, DataFrame, Index, Series, Timestamp,
-                    Timedelta, NaT)
+from pandas import (
+    DataFrame, Index, NaT, Series, Timedelta, Timestamp, bdate_range)
 from pandas.core.groupby.groupby import DataError
 import pandas.util.testing as tm
 
diff --git a/pandas/tests/groupby/aggregate/test_other.py b/pandas/tests/groupby/aggregate/test_other.py
index fca863b4d..b5214b11b 100644
--- a/pandas/tests/groupby/aggregate/test_other.py
+++ b/pandas/tests/groupby/aggregate/test_other.py
@@ -6,22 +6,22 @@ test all other .agg behavior
 
 from __future__ import print_function
 
-import pytest
 from collections import OrderedDict
-
 import datetime as dt
 from functools import partial
 
 import numpy as np
-import pandas as pd
+import pytest
 
+import pandas as pd
 from pandas import (
-    date_range, DataFrame, Index, MultiIndex, PeriodIndex, period_range, Series
-)
+    DataFrame, Index, MultiIndex, PeriodIndex, Series, date_range,
+    period_range)
 from pandas.core.groupby.groupby import SpecificationError
-from pandas.io.formats.printing import pprint_thing
 import pandas.util.testing as tm
 
+from pandas.io.formats.printing import pprint_thing
+
 
 def test_agg_api():
     # GH 6337
diff --git a/pandas/tests/groupby/conftest.py b/pandas/tests/groupby/conftest.py
index 657da422b..cb4fe5116 100644
--- a/pandas/tests/groupby/conftest.py
+++ b/pandas/tests/groupby/conftest.py
@@ -1,6 +1,7 @@
-import pytest
 import numpy as np
-from pandas import MultiIndex, DataFrame
+import pytest
+
+from pandas import DataFrame, MultiIndex
 from pandas.util import testing as tm
 
 
diff --git a/pandas/tests/groupby/test_apply.py b/pandas/tests/groupby/test_apply.py
index 8366f75a5..659d1a9cf 100644
--- a/pandas/tests/groupby/test_apply.py
+++ b/pandas/tests/groupby/test_apply.py
@@ -1,9 +1,11 @@
-import pytest
+from datetime import datetime
+
 import numpy as np
+import pytest
+
 import pandas as pd
-from datetime import datetime
+from pandas import DataFrame, Index, MultiIndex, Series, bdate_range, compat
 from pandas.util import testing as tm
-from pandas import DataFrame, MultiIndex, compat, Series, bdate_range, Index
 
 
 def test_apply_issues():
diff --git a/pandas/tests/groupby/test_bin_groupby.py b/pandas/tests/groupby/test_bin_groupby.py
index 9dcc13c15..f33df5fb0 100644
--- a/pandas/tests/groupby/test_bin_groupby.py
+++ b/pandas/tests/groupby/test_bin_groupby.py
@@ -1,16 +1,17 @@
 # -*- coding: utf-8 -*-
 
+import numpy as np
+from numpy import nan
 import pytest
 
-from numpy import nan
-import numpy as np
+from pandas._libs import groupby, lib, reduction
 
 from pandas.core.dtypes.common import ensure_int64
+
 from pandas import Index, isna
 from pandas.core.groupby.ops import generate_bins_generic
-from pandas.util.testing import assert_almost_equal
 import pandas.util.testing as tm
-from pandas._libs import lib, groupby, reduction
+from pandas.util.testing import assert_almost_equal
 
 
 def test_series_grouper():
diff --git a/pandas/tests/groupby/test_categorical.py b/pandas/tests/groupby/test_categorical.py
index a39600d11..144b64025 100644
--- a/pandas/tests/groupby/test_categorical.py
+++ b/pandas/tests/groupby/test_categorical.py
@@ -1,17 +1,19 @@
 # -*- coding: utf-8 -*-
 from __future__ import print_function
+
 from datetime import datetime
 
+import numpy as np
 import pytest
 
-import numpy as np
-import pandas as pd
 from pandas.compat import PY37
-from pandas import (Index, MultiIndex, CategoricalIndex,
-                    DataFrame, Categorical, Series, qcut)
-from pandas.util.testing import (assert_equal,
-                                 assert_frame_equal, assert_series_equal)
+
+import pandas as pd
+from pandas import (
+    Categorical, CategoricalIndex, DataFrame, Index, MultiIndex, Series, qcut)
 import pandas.util.testing as tm
+from pandas.util.testing import (
+    assert_equal, assert_frame_equal, assert_series_equal)
 
 
 def cartesian_product_for_groupers(result, args, names):
diff --git a/pandas/tests/groupby/test_counting.py b/pandas/tests/groupby/test_counting.py
index 8b9f3607d..1438de5b7 100644
--- a/pandas/tests/groupby/test_counting.py
+++ b/pandas/tests/groupby/test_counting.py
@@ -4,10 +4,10 @@ from __future__ import print_function
 import numpy as np
 import pytest
 
-from pandas import (DataFrame, Series, MultiIndex, Timestamp, Timedelta,
-                    Period)
-from pandas.util.testing import (assert_series_equal, assert_frame_equal)
-from pandas.compat import (range, product as cart_product)
+from pandas.compat import product as cart_product, range
+
+from pandas import DataFrame, MultiIndex, Period, Series, Timedelta, Timestamp
+from pandas.util.testing import assert_frame_equal, assert_series_equal
 
 
 class TestCounting(object):
diff --git a/pandas/tests/groupby/test_filters.py b/pandas/tests/groupby/test_filters.py
index 205b06c5b..8195d36b7 100644
--- a/pandas/tests/groupby/test_filters.py
+++ b/pandas/tests/groupby/test_filters.py
@@ -1,11 +1,12 @@
 # -*- coding: utf-8 -*-
 from __future__ import print_function
-import pytest
 
 import numpy as np
-import pandas.util.testing as tm
-from pandas import Timestamp, DataFrame, Series
+import pytest
+
 import pandas as pd
+from pandas import DataFrame, Series, Timestamp
+import pandas.util.testing as tm
 
 
 def test_filter_series():
diff --git a/pandas/tests/groupby/test_function.py b/pandas/tests/groupby/test_function.py
index 310a2fb1e..00714c333 100644
--- a/pandas/tests/groupby/test_function.py
+++ b/pandas/tests/groupby/test_function.py
@@ -1,14 +1,16 @@
-import pytest
+from string import ascii_lowercase
 
 import numpy as np
-import pandas as pd
-from pandas import (DataFrame, Index, compat, isna,
-                    Series, MultiIndex, Timestamp, date_range)
+import pytest
+
+from pandas.compat import product as cart_product
 from pandas.errors import UnsupportedFunctionCall
-from pandas.util import testing as tm
+
+import pandas as pd
+from pandas import (
+    DataFrame, Index, MultiIndex, Series, Timestamp, compat, date_range, isna)
 import pandas.core.nanops as nanops
-from string import ascii_lowercase
-from pandas.compat import product as cart_product
+from pandas.util import testing as tm
 
 
 @pytest.mark.parametrize("agg_func", ['any', 'all'])
diff --git a/pandas/tests/groupby/test_groupby.py b/pandas/tests/groupby/test_groupby.py
index e9de46bba..33cfb9a06 100644
--- a/pandas/tests/groupby/test_groupby.py
+++ b/pandas/tests/groupby/test_groupby.py
@@ -1,26 +1,25 @@
 # -*- coding: utf-8 -*-
 from __future__ import print_function
 
-import pytest
-
+from collections import defaultdict
 from datetime import datetime
 from decimal import Decimal
 
-from pandas import (date_range, Timestamp,
-                    Index, MultiIndex, DataFrame, Series,
-                    Panel, read_csv)
-from pandas.errors import PerformanceWarning
-from pandas.util.testing import (assert_frame_equal,
-                                 assert_series_equal, assert_almost_equal)
-from pandas.compat import (range, lrange, StringIO, lmap, lzip, map, zip,
-                           OrderedDict)
-from pandas import compat
-from collections import defaultdict
-import pandas.core.common as com
 import numpy as np
+import pytest
+
+from pandas.compat import (
+    OrderedDict, StringIO, lmap, lrange, lzip, map, range, zip)
+from pandas.errors import PerformanceWarning
 
-import pandas.util.testing as tm
 import pandas as pd
+from pandas import (
+    DataFrame, Index, MultiIndex, Panel, Series, Timestamp, compat, date_range,
+    read_csv)
+import pandas.core.common as com
+import pandas.util.testing as tm
+from pandas.util.testing import (
+    assert_almost_equal, assert_frame_equal, assert_series_equal)
 
 
 def test_repr():
diff --git a/pandas/tests/groupby/test_grouping.py b/pandas/tests/groupby/test_grouping.py
index bcf4f42d8..55d9cee03 100644
--- a/pandas/tests/groupby/test_grouping.py
+++ b/pandas/tests/groupby/test_grouping.py
@@ -2,25 +2,25 @@
 
 """ test where we are determining what we are grouping, or getting groups """
 
+import numpy as np
 import pytest
 
-from pandas import (date_range, Timestamp,
-                    Index, MultiIndex, DataFrame, Series, CategoricalIndex)
-from pandas.util.testing import (assert_panel_equal, assert_frame_equal,
-                                 assert_series_equal, assert_almost_equal)
-from pandas.core.groupby.grouper import Grouping
-from pandas.compat import lrange, long
+from pandas.compat import long, lrange
 
-from pandas import compat
-import numpy as np
-
-import pandas.util.testing as tm
 import pandas as pd
-
+from pandas import (
+    CategoricalIndex, DataFrame, Index, MultiIndex, Series, Timestamp, compat,
+    date_range)
+from pandas.core.groupby.grouper import Grouping
+import pandas.util.testing as tm
+from pandas.util.testing import (
+    assert_almost_equal, assert_frame_equal, assert_panel_equal,
+    assert_series_equal)
 
 # selection
 # --------------------------------
 
+
 class TestSelection(object):
 
     def test_select_bad_cols(self):
diff --git a/pandas/tests/groupby/test_index_as_string.py b/pandas/tests/groupby/test_index_as_string.py
index 6afa63c31..141381f84 100644
--- a/pandas/tests/groupby/test_index_as_string.py
+++ b/pandas/tests/groupby/test_index_as_string.py
@@ -1,7 +1,7 @@
-import pytest
-import pandas as pd
 import numpy as np
+import pytest
 
+import pandas as pd
 from pandas.util.testing import assert_frame_equal, assert_series_equal
 
 
diff --git a/pandas/tests/groupby/test_nth.py b/pandas/tests/groupby/test_nth.py
index 4ea4b580a..255d9a8ac 100644
--- a/pandas/tests/groupby/test_nth.py
+++ b/pandas/tests/groupby/test_nth.py
@@ -1,12 +1,12 @@
 import numpy as np
-import pandas as pd
-from pandas import DataFrame, MultiIndex, Index, Series, isna, Timestamp
+import pytest
+
 from pandas.compat import lrange
+
+import pandas as pd
+from pandas import DataFrame, Index, MultiIndex, Series, Timestamp, isna
 from pandas.util.testing import (
-    assert_frame_equal,
-    assert_produces_warning,
-    assert_series_equal)
-import pytest
+    assert_frame_equal, assert_produces_warning, assert_series_equal)
 
 
 def test_first_last_nth(df):
diff --git a/pandas/tests/groupby/test_rank.py b/pandas/tests/groupby/test_rank.py
index e58e12ab8..9b0396bb5 100644
--- a/pandas/tests/groupby/test_rank.py
+++ b/pandas/tests/groupby/test_rank.py
@@ -1,5 +1,6 @@
-import pytest
 import numpy as np
+import pytest
+
 import pandas as pd
 from pandas import DataFrame, Series, concat
 from pandas.util import testing as tm
diff --git a/pandas/tests/groupby/test_timegrouper.py b/pandas/tests/groupby/test_timegrouper.py
index cb7b41971..a2f2c1392 100644
--- a/pandas/tests/groupby/test_timegrouper.py
+++ b/pandas/tests/groupby/test_timegrouper.py
@@ -1,17 +1,17 @@
 """ test with the TimeGrouper / grouping with datetimes """
 
-import pytest
-import pytz
-
 from datetime import datetime
+
 import numpy as np
 from numpy import nan
+import pytest
+import pytz
+
+from pandas.compat import StringIO
 
 import pandas as pd
-from pandas import (DataFrame, date_range, Index,
-                    Series, MultiIndex, Timestamp)
+from pandas import DataFrame, Index, MultiIndex, Series, Timestamp, date_range
 from pandas.core.groupby.ops import BinGrouper
-from pandas.compat import StringIO
 from pandas.util import testing as tm
 from pandas.util.testing import assert_frame_equal, assert_series_equal
 
diff --git a/pandas/tests/groupby/test_transform.py b/pandas/tests/groupby/test_transform.py
index b6361b4ad..465ae67fd 100644
--- a/pandas/tests/groupby/test_transform.py
+++ b/pandas/tests/groupby/test_transform.py
@@ -1,19 +1,19 @@
 """ test with the .transform """
 
+import numpy as np
 import pytest
 
-import numpy as np
-import pandas as pd
-from pandas.util import testing as tm
-from pandas import Series, DataFrame, Timestamp, MultiIndex, concat, date_range
-from pandas.core.dtypes.common import (
-    ensure_platform_int, is_timedelta64_dtype)
-from pandas.compat import StringIO
 from pandas._libs import groupby
+from pandas.compat import StringIO
 
-from pandas.util.testing import assert_frame_equal, assert_series_equal
-from pandas.core.groupby.groupby import DataError
+from pandas.core.dtypes.common import ensure_platform_int, is_timedelta64_dtype
+
+import pandas as pd
+from pandas import DataFrame, MultiIndex, Series, Timestamp, concat, date_range
 from pandas.core.config import option_context
+from pandas.core.groupby.groupby import DataError
+from pandas.util import testing as tm
+from pandas.util.testing import assert_frame_equal, assert_series_equal
 
 
 def assert_fp_equal(a, b):
diff --git a/pandas/tests/groupby/test_value_counts.py b/pandas/tests/groupby/test_value_counts.py
index 143465611..2b5f87aa5 100644
--- a/pandas/tests/groupby/test_value_counts.py
+++ b/pandas/tests/groupby/test_value_counts.py
@@ -4,13 +4,13 @@ with different size combinations. This is to ensure stability of the sorting
 and proper parameter handling
 """
 
-import pytest
-
 from itertools import product
+
 import numpy as np
+import pytest
 
+from pandas import DataFrame, MultiIndex, Series, date_range
 from pandas.util import testing as tm
-from pandas import MultiIndex, DataFrame, Series, date_range
 
 
 # our starting frame
diff --git a/pandas/tests/groupby/test_whitelist.py b/pandas/tests/groupby/test_whitelist.py
index a451acebc..b7302b391 100644
--- a/pandas/tests/groupby/test_whitelist.py
+++ b/pandas/tests/groupby/test_whitelist.py
@@ -3,10 +3,12 @@ test methods relating to generic function evaluation
 the so-called white/black lists
 """
 
-import pytest
 from string import ascii_lowercase
+
 import numpy as np
-from pandas import DataFrame, Series, compat, date_range, Index, MultiIndex
+import pytest
+
+from pandas import DataFrame, Index, MultiIndex, Series, compat, date_range
 from pandas.util import testing as tm
 
 AGG_FUNCTIONS = ['sum', 'prod', 'min', 'max', 'median', 'mean', 'skew',
diff --git a/setup.cfg b/setup.cfg
index 70a38aca6..d4cdd57e7 100644
--- a/setup.cfg
+++ b/setup.cfg
@@ -135,25 +135,6 @@ skip=
     pandas/tests/arithmetic/conftest.py,
     pandas/tests/arithmetic/test_timedelta64.py,
     pandas/tests/internals/test_internals.py,
-    pandas/tests/groupby/test_value_counts.py,
-    pandas/tests/groupby/test_filters.py,
-    pandas/tests/groupby/test_nth.py,
-    pandas/tests/groupby/test_timegrouper.py,
-    pandas/tests/groupby/test_transform.py,
-    pandas/tests/groupby/test_bin_groupby.py,
-    pandas/tests/groupby/test_index_as_string.py,
-    pandas/tests/groupby/test_groupby.py,
-    pandas/tests/groupby/test_whitelist.py,
-    pandas/tests/groupby/test_function.py,
-    pandas/tests/groupby/test_apply.py,
-    pandas/tests/groupby/conftest.py,
-    pandas/tests/groupby/test_counting.py,
-    pandas/tests/groupby/test_categorical.py,
-    pandas/tests/groupby/test_grouping.py,
-    pandas/tests/groupby/test_rank.py,
-    pandas/tests/groupby/aggregate/test_cython.py,
-    pandas/tests/groupby/aggregate/test_other.py,
-    pandas/tests/groupby/aggregate/test_aggregate.py,
     pandas/tests/plotting/test_datetimelike.py,
     pandas/tests/plotting/test_series.py,
     pandas/tests/plotting/test_groupby.py,
