commit 100fb8f965b44100c2500cf7cbd95b6ed20354d3
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Wed Dec 5 00:57:32 2012 -0500

    BUG: handle non-existent files in parser. close #2428

diff --git a/pandas/io/tests/test_parsers.py b/pandas/io/tests/test_parsers.py
index d3e546418..d3fc6049b 100644
--- a/pandas/io/tests/test_parsers.py
+++ b/pandas/io/tests/test_parsers.py
@@ -1297,6 +1297,10 @@ False,NA,True"""
 
         tm.assert_frame_equal(result, expected)
 
+    def test_nonexistent_path(self):
+        # don't segfault pls #2428
+        path = '%s.csv' % tm.rands(10)
+        self.assertRaises(Exception, self.read_csv, path)
 
 class TestPythonParser(ParserTests, unittest.TestCase):
 
diff --git a/pandas/src/parser/io.c b/pandas/src/parser/io.c
index cb70ddf53..e6d54bd59 100644
--- a/pandas/src/parser/io.c
+++ b/pandas/src/parser/io.c
@@ -8,6 +8,11 @@
 void *new_file_source(char *fname, size_t buffer_size) {
     file_source *fs = (file_source *) malloc(sizeof(file_source));
     fs->fp = fopen(fname, "rb");
+
+    if (fs->fp == NULL) {
+        free(fs);
+        return NULL;
+    }
     setbuf(fs->fp, NULL);
 
     fs->initial_file_pos = ftell(fs->fp);
@@ -59,6 +64,8 @@ void* new_rd_source(PyObject *obj) {
 
 int del_file_source(void *fs) {
     // fseek(FS(fs)->fp, FS(fs)->initial_file_pos, SEEK_SET);
+    if (fs == NULL)
+        return 0;
 
     /* allocated on the heap */
     free(FS(fs)->buffer);
