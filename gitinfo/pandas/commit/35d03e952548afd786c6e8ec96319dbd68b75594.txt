commit 35d03e952548afd786c6e8ec96319dbd68b75594
Author: Yaroslav Halchenko <debian@onerussian.com>
Date:   Tue Sep 13 17:00:19 2011 -0400

    ENH: make blosc-dependent tests skip if pytables < 2.2

diff --git a/pandas/io/tests/test_pytables.py b/pandas/io/tests/test_pytables.py
index fb809956c..be3faff37 100644
--- a/pandas/io/tests/test_pytables.py
+++ b/pandas/io/tests/test_pytables.py
@@ -15,6 +15,11 @@ try:
 except ImportError:
     raise nose.SkipTest('no pytables')
 
+from distutils.version import LooseVersion
+
+_default_compressor = LooseVersion(tables.__version__) >= '2.2' \
+                      and 'blosc' or 'zlib'
+
 class TesttHDFStore(unittest.TestCase):
     path = '__test__.h5'
     scratchpath = '__scratch__.h5'
@@ -82,16 +87,25 @@ class TesttHDFStore(unittest.TestCase):
 
     def test_put_compression(self):
         df = tm.makeTimeDataFrame()
-        self.store.put('c', df, table=True, compression='blosc')
-        tm.assert_frame_equal(self.store['c'], df)
 
         self.store.put('c', df, table=True, compression='zlib')
         tm.assert_frame_equal(self.store['c'], df)
 
+        # can't compress if table=False
+        self.assertRaises(ValueError, self.store.put, 'b', df,
+                          table=False, compression='zlib')
+
+    def test_put_compression_blosc(self):
+        tm.skip_if_no_package('tables', '2.2', app='blosc support')
+        df = tm.makeTimeDataFrame()
+
         # can't compress if table=False
         self.assertRaises(ValueError, self.store.put, 'b', df,
                           table=False, compression='blosc')
 
+        self.store.put('c', df, table=True, compression='blosc')
+        tm.assert_frame_equal(self.store['c'], df)
+
     def test_put_integer(self):
         # non-date, non-string index
         df = DataFrame(np.random.randn(50, 100))
@@ -346,7 +360,7 @@ class TesttHDFStore(unittest.TestCase):
     def _check_roundtrip(self, obj, comparator, compression=False):
         options = {}
         if compression:
-            options['complib'] = 'blosc'
+            options['complib'] = _default_compressor
 
         store = HDFStore(self.scratchpath, 'w', **options)
         try:
@@ -360,7 +374,7 @@ class TesttHDFStore(unittest.TestCase):
     def _check_roundtrip_table(self, obj, comparator, compression=False):
         options = {}
         if compression:
-            options['complib'] = 'blosc'
+            options['complib'] = _default_compressor
 
         store = HDFStore(self.scratchpath, 'w', **options)
         try:
