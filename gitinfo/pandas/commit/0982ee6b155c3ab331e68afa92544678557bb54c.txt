commit 0982ee6b155c3ab331e68afa92544678557bb54c
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Sat Nov 24 22:38:01 2012 -0500

    BUG: fix segfault in boolean parsing. consistent upcasting in C/Python parser. close #2348

diff --git a/pandas/io/tests/test_parsers.py b/pandas/io/tests/test_parsers.py
index 06ea4bcb0..9a95b8e91 100644
--- a/pandas/io/tests/test_parsers.py
+++ b/pandas/io/tests/test_parsers.py
@@ -1366,6 +1366,20 @@ KORD6,19990127, 23:00:00, 22:56:00, -0.5900, 1.7100, 4.6000, 0.0000, 280.0000"""
                              na_values=['NaN'])
         assert_almost_equal(df.values, expected)
 
+    def test_bool_na_values(self):
+        data = """A,B,C
+True,False,True
+NA,True,False
+False,NA,True"""
+
+        result = self.read_csv(StringIO(data))
+        expected = DataFrame({'A': np.array([True, nan, False], dtype=object),
+                              'B': np.array([False, True, nan], dtype=object),
+                              'C': [True,  False, True]})
+
+        tm.assert_frame_equal(result, expected)
+
+
 class TestPythonParser(ParserTests, unittest.TestCase):
 
     def read_csv(self, *args, **kwds):
diff --git a/pandas/src/inference.pyx b/pandas/src/inference.pyx
index 3405dcb77..e31369bbb 100644
--- a/pandas/src/inference.pyx
+++ b/pandas/src/inference.pyx
@@ -679,6 +679,7 @@ def maybe_convert_bool(ndarray[object] arr):
         ndarray[uint8_t] result
         object val
         set true_vals, false_vals
+        int na_count = 0
 
     n = len(arr)
     result = np.empty(n, dtype=np.uint8)
@@ -698,10 +699,19 @@ def maybe_convert_bool(ndarray[object] arr):
             result[i] = 1
         elif val in false_vals:
             result[i] = 0
+        elif PyFloat_Check(val):
+            result[i] = UINT8_MAX
+            na_count += 1
         else:
             return arr
 
-    return result.view(np.bool_)
+    if na_count > 0:
+        mask = result == UINT8_MAX
+        arr = result.view(np.bool_).astype(object)
+        np.putmask(arr, mask, np.nan)
+        return arr
+    else:
+        return result.view(np.bool_)
 
 
 def map_infer_mask(ndarray arr, object f, ndarray[uint8_t] mask,
diff --git a/pandas/src/parser.pyx b/pandas/src/parser.pyx
index 90a2d9b22..8b1ce1b89 100644
--- a/pandas/src/parser.pyx
+++ b/pandas/src/parser.pyx
@@ -975,6 +975,10 @@ def _maybe_upcast(arr):
         na_value = na_values[arr.dtype]
         arr = arr.astype(float)
         np.putmask(arr, arr == na_value, np.nan)
+    elif arr.dtype == np.bool_:
+        mask = arr.view(np.uint8) == na_values[np.uint8]
+        arr = arr.astype(object)
+        np.putmask(arr, mask, np.nan)
 
     return arr
 
@@ -1294,7 +1298,8 @@ cdef _try_bool(parser_t *parser, int col, int line_start, int line_end,
             # in the hash table
             if k != na_hashset.n_buckets:
                 na_count += 1
-                data[i] = NA
+                data[0] = NA
+                data += 1
                 continue
 
             error = to_boolean(word, data)
@@ -1310,10 +1315,7 @@ cdef _try_bool(parser_t *parser, int col, int line_start, int line_end,
                 return None, None
             data += 1
 
-    if na_count > 0:
-        return result, na_count
-    else:
-        return result.view(np.bool_), na_count
+    return result.view(np.bool_), na_count
 
 cdef _get_na_mask(parser_t *parser, int col, int line_start, int line_end,
                   kh_str_t *na_hashset):
diff --git a/pandas/src/tseries.pyx b/pandas/src/tseries.pyx
index 54641a78a..f5290c83d 100644
--- a/pandas/src/tseries.pyx
+++ b/pandas/src/tseries.pyx
@@ -58,6 +58,10 @@ ctypedef unsigned char UChar
 cimport util
 from util cimport is_array, _checknull, _checknan
 
+cdef extern from "stdint.h":
+    enum: UINT8_MAX
+
+
 cdef extern from "math.h":
     double sqrt(double x)
     double fabs(double)
