commit 37662ea387e17a4aca1f83445daeea977e145a9b
Author: Robin to Roxel <35864265+r-toroxel@users.noreply.github.com>
Date:   Sat Jul 11 12:44:56 2020 +0200

    TST add corner cases in test_constructors (#35216)
    
    * TST add test case to drop_duplicates for inplace=True
    
    * CLN PEP-8
    
    * TST move to existing test
    
    * CLN remove parenthesis
    
    * TST test from_tuple corner cases
    
    * add comment
    
    * CLN run black formatting
    
    * CLN refactor case as separate test

diff --git a/pandas/tests/frame/test_constructors.py b/pandas/tests/frame/test_constructors.py
index 64ae29e6d..bfff58d05 100644
--- a/pandas/tests/frame/test_constructors.py
+++ b/pandas/tests/frame/test_constructors.py
@@ -1204,6 +1204,13 @@ class TestDataFrameConstructors:
         expected = DataFrame(index=[0])
         tm.assert_frame_equal(result, expected)
 
+    def test_constructor_single_row(self):
+        data = [OrderedDict([["a", 1.5], ["b", 3], ["c", 4], ["d", 6]])]
+
+        result = DataFrame(data)
+        expected = DataFrame.from_dict(dict(zip([0], data)), orient="index")
+        tm.assert_frame_equal(result, expected.reindex(result.index))
+
     def test_constructor_ordered_dict_preserve_order(self):
         # see gh-13304
         expected = DataFrame([[2, 1]], columns=["b", "a"])
@@ -1519,16 +1526,17 @@ class TestDataFrameConstructors:
             )
 
     @pytest.mark.parametrize(
-        "data_dict, keys",
+        "data_dict, keys, orient",
         [
-            ([{("a",): 1}, {("a",): 2}], [("a",)]),
-            ([OrderedDict([(("a",), 1), (("b",), 2)])], [("a",), ("b",)]),
-            ([{("a", "b"): 1}], [("a", "b")]),
+            ({}, [], "index"),
+            ([{("a",): 1}, {("a",): 2}], [("a",)], "columns"),
+            ([OrderedDict([(("a",), 1), (("b",), 2)])], [("a",), ("b",)], "columns"),
+            ([{("a", "b"): 1}], [("a", "b")], "columns"),
         ],
     )
-    def test_constructor_from_dict_tuples(self, data_dict, keys):
+    def test_constructor_from_dict_tuples(self, data_dict, keys, orient):
         # GH 16769
-        df = DataFrame.from_dict(data_dict)
+        df = DataFrame.from_dict(data_dict, orient)
 
         result = df.columns
         expected = Index(keys, dtype="object", tupleize_cols=False)
