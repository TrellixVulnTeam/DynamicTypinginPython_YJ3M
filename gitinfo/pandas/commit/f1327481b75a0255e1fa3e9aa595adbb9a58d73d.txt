commit f1327481b75a0255e1fa3e9aa595adbb9a58d73d
Author: y-p <yoval@gmx.com>
Date:   Fri Apr 5 16:19:51 2013 +0300

    BLD: test_perf, explicitly disable gc for runs, correct help message

diff --git a/vb_suite/test_perf.py b/vb_suite/test_perf.py
index a45983468..3f771addd 100755
--- a/vb_suite/test_perf.py
+++ b/vb_suite/test_perf.py
@@ -86,7 +86,7 @@ parser.add_argument('-n', '--repeats',
                     dest='repeats',
                     default=3,
                     type=int,
-                    help='number of times to run each vbench, result value is the average')
+                    help='number of times to run each vbench, result value is the best of')
 parser.add_argument('-c', '--ncalls',
                     metavar="N",
                     dest='ncalls',
@@ -131,7 +131,7 @@ def get_results_df(db, rev):
 def prprint(s):
     print("*** %s" % s)
 
-def clear():
+def pre_hook():
     import gc
     gc.collect()
 
@@ -143,6 +143,12 @@ def clear():
     except:
         pass
 
+    gc.disable()
+
+def post_hook():
+    import gc
+    gc.enable()
+
 def profile_comparative(benchmarks):
 
     from vbench.api import BenchmarkRunner
@@ -232,8 +238,11 @@ def profile_head_single(benchmark):
 
     results = []
     for i in range(N):
-        clear()
+        pre_hook() # gc collect then disable
+
         d=dict()
+        sys.stdout.write('.')
+        sys.stdout.flush()
         try:
             d = benchmark.run()
 
@@ -251,6 +260,8 @@ def profile_head_single(benchmark):
 
         results.append(d.get('timing',np.nan))
 
+        post_hook() # gc enable
+
     if results:
         # throw away the burn_in
         results = results[args.burnin:]
