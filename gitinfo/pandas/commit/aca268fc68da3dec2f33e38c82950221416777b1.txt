commit aca268fc68da3dec2f33e38c82950221416777b1
Author: Adam Klein <adamklein@gmail.com>
Date:   Thu Feb 23 13:33:01 2012 -0500

    BUG: handle grouping aggregations consistently whether as_index is True/False, close #819

diff --git a/pandas/core/groupby.py b/pandas/core/groupby.py
index 855c4b23d..181999b77 100644
--- a/pandas/core/groupby.py
+++ b/pandas/core/groupby.py
@@ -1115,10 +1115,19 @@ class DataFrameGroupBy(GroupBy):
                 raise ValueError('Can only pass dict with axis=0')
 
             obj = self._obj_with_exclusions
-            for col, func in arg.iteritems():
-                colg = SeriesGroupBy(obj[col], column=col,
-                                     grouper=self.grouper)
-                result[col] = colg.aggregate(func)
+            # more kludge
+            if len(obj.columns) == 1:
+                series_obj = Series(obj.ix[:,0])
+                series_name = obj.columns[0]
+                for col, func in arg.iteritems():
+                    colg = SeriesGroupBy(series_obj, column=series_name,
+                                         grouper=self.grouper)
+                    result[col] = colg.aggregate(func)
+            else:
+                for col, func in arg.iteritems():
+                    colg = SeriesGroupBy(obj[col], column=col,
+                                         grouper=self.grouper)
+                    result[col] = colg.aggregate(func)
 
             result = DataFrame(result)
         elif isinstance(arg, list):
diff --git a/pandas/tests/test_groupby.py b/pandas/tests/test_groupby.py
index 4a34b7dbc..0e075fa3f 100644
--- a/pandas/tests/test_groupby.py
+++ b/pandas/tests/test_groupby.py
@@ -686,6 +686,12 @@ class TestGroupBy(unittest.TestCase):
         expected2['D'] = grouped.sum()['D']
         assert_frame_equal(result2, expected2)
 
+        grouped = self.df.groupby('A', as_index=True)
+        expected3 = grouped['C'].sum()
+        expected3 = DataFrame(expected3).rename(columns={'C' : 'Q'})
+        result3 = grouped['C'].agg({'Q' : np.sum})
+        assert_frame_equal(result3, expected3)
+
         # multi-key
 
         grouped = self.df.groupby(['A', 'B'], as_index=False)
@@ -699,6 +705,12 @@ class TestGroupBy(unittest.TestCase):
         expected2['D'] = grouped.sum()['D']
         assert_frame_equal(result2, expected2)
 
+        expected3 = grouped['C'].sum()
+        expected3 = DataFrame(expected3).rename(columns={'C' : 'Q'})
+        result3 = grouped['C'].agg({'Q' : np.sum})
+        assert_frame_equal(result3, expected3)
+
+
     def test_as_index_series_return_frame(self):
         grouped = self.df.groupby('A', as_index=False)
         grouped2 = self.df.groupby(['A', 'B'], as_index=False)
