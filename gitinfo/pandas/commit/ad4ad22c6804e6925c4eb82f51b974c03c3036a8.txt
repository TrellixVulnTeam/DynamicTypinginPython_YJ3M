commit ad4ad22c6804e6925c4eb82f51b974c03c3036a8
Author: Simon Hawkins <simonjayhawkins@gmail.com>
Date:   Sun Apr 5 20:21:29 2020 +0100

    DOC/CLN: remove versionadded/changed:: 0.21 (#33301)

diff --git a/doc/source/development/contributing.rst b/doc/source/development/contributing.rst
index 31241287c..ba7f7eb90 100644
--- a/doc/source/development/contributing.rst
+++ b/doc/source/development/contributing.rst
@@ -791,7 +791,7 @@ the ``pandas.util._decorators.deprecate``:
 
     from pandas.util._decorators import deprecate
 
-    deprecate('old_func', 'new_func', '0.21.0')
+    deprecate('old_func', 'new_func', '1.1.0')
 
 Otherwise, you need to do it manually:
 
@@ -803,7 +803,7 @@ Otherwise, you need to do it manually:
     def old_func():
         """Summary of the function.
 
-        .. deprecated:: 0.21.0
+        .. deprecated:: 1.1.0
            Use new_func instead.
         """
         warnings.warn('Use new_func instead.', FutureWarning, stacklevel=2)
@@ -1354,9 +1354,9 @@ directive is used. The sphinx syntax for that is:
 
 .. code-block:: rst
 
-  .. versionadded:: 0.21.0
+  .. versionadded:: 1.1.0
 
-This will put the text *New in version 0.21.0* wherever you put the sphinx
+This will put the text *New in version 1.1.0* wherever you put the sphinx
 directive. This should also be put in the docstring when adding a new function
 or method (`example <https://github.com/pandas-dev/pandas/blob/v0.20.2/pandas/core/frame.py#L1495>`__)
 or a new keyword argument (`example <https://github.com/pandas-dev/pandas/blob/v0.20.2/pandas/core/generic.py#L568>`__).
diff --git a/doc/source/user_guide/basics.rst b/doc/source/user_guide/basics.rst
index aa93f37a3..055b43bc1 100644
--- a/doc/source/user_guide/basics.rst
+++ b/doc/source/user_guide/basics.rst
@@ -1224,8 +1224,6 @@ following can be done:
 This means that the reindexed Series's index is the same Python object as the
 DataFrame's index.
 
-.. versionadded:: 0.21.0
-
 :meth:`DataFrame.reindex` also supports an "axis-style" calling convention,
 where you specify a single ``labels`` argument and the ``axis`` it applies to.
 
@@ -1435,8 +1433,6 @@ Series can also be used:
 If the mapping doesn't include a column/index label, it isn't renamed. Note that
 extra labels in the mapping don't throw an error.
 
-.. versionadded:: 0.21.0
-
 :meth:`DataFrame.rename` also supports an "axis-style" calling convention, where
 you specify a single ``mapper`` and the ``axis`` to apply that mapping to.
 
diff --git a/doc/source/user_guide/categorical.rst b/doc/source/user_guide/categorical.rst
index a55326db7..d4faf527a 100644
--- a/doc/source/user_guide/categorical.rst
+++ b/doc/source/user_guide/categorical.rst
@@ -211,8 +211,6 @@ To get back to the original ``Series`` or NumPy array, use
 CategoricalDtype
 ----------------
 
-.. versionchanged:: 0.21.0
-
 A categorical's type is fully described by
 
 1. ``categories``: a sequence of unique values and no missing values
diff --git a/doc/source/user_guide/groupby.rst b/doc/source/user_guide/groupby.rst
index 8cd229070..b06c3afa6 100644
--- a/doc/source/user_guide/groupby.rst
+++ b/doc/source/user_guide/groupby.rst
@@ -1327,8 +1327,6 @@ See the :ref:`visualization documentation<visualization.box>` for more.
 Piping function calls
 ~~~~~~~~~~~~~~~~~~~~~
 
-.. versionadded:: 0.21.0
-
 Similar to the functionality provided by ``DataFrame`` and ``Series``, functions
 that take ``GroupBy`` objects can be chained together using a ``pipe`` method to
 allow for a cleaner, more readable syntax. To read about ``.pipe`` in general terms,
diff --git a/doc/source/user_guide/io.rst b/doc/source/user_guide/io.rst
index d68dc24ba..a4cc1f9ee 100644
--- a/doc/source/user_guide/io.rst
+++ b/doc/source/user_guide/io.rst
@@ -461,8 +461,6 @@ specification:
 
    pd.read_csv(StringIO(data), dtype={'col1': 'category'}).dtypes
 
-.. versionadded:: 0.21.0
-
 Specifying ``dtype='category'`` will result in an unordered ``Categorical``
 whose ``categories`` are the unique values observed in the data. For more
 control on the categories and order, create a
@@ -2171,8 +2169,6 @@ Line delimited json
 pandas is able to read and write line-delimited json files that are common in data processing pipelines
 using Hadoop or Spark.
 
-.. versionadded:: 0.21.0
-
 For line-delimited json files, pandas can also return an iterator which reads in ``chunksize`` lines at a time. This can be useful for large files or to read from a stream.
 
 .. ipython:: python
@@ -4646,8 +4642,6 @@ Read from a feather file.
 Parquet
 -------
 
-.. versionadded:: 0.21.0
-
 `Apache Parquet <https://parquet.apache.org/>`__ provides a partitioned binary columnar serialization for data frames. It is designed to
 make reading and writing data frames efficient, and to make sharing data across data analysis
 languages easy. Parquet can use a variety of compression techniques to shrink the file size as much as possible
diff --git a/doc/source/user_guide/merging.rst b/doc/source/user_guide/merging.rst
index 49f4bbb6b..0450c8195 100644
--- a/doc/source/user_guide/merging.rst
+++ b/doc/source/user_guide/merging.rst
@@ -573,8 +573,6 @@ all standard database join operations between ``DataFrame`` or named ``Series``
       dataset.
     * "many_to_many" or "m:m": allowed, but does not result in checks.
 
-  .. versionadded:: 0.21.0
-
 .. note::
 
    Support for specifying index levels as the ``on``, ``left_on``, and
@@ -773,8 +771,6 @@ Here is another example with duplicate join keys in DataFrames:
 Checking for duplicate keys
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~
 
-.. versionadded:: 0.21.0
-
 Users can use the ``validate`` argument to automatically check whether there
 are unexpected duplicates in their merge keys. Key uniqueness is checked before
 merge operations and so should protect against memory overflows. Checking key
diff --git a/pandas/_libs/lib.pyx b/pandas/_libs/lib.pyx
index 9802b29b1..276c2d519 100644
--- a/pandas/_libs/lib.pyx
+++ b/pandas/_libs/lib.pyx
@@ -1197,8 +1197,6 @@ def infer_dtype(value: object, skipna: bool = True) -> str:
     skipna : bool, default True
         Ignore NaN values when inferring the type.
 
-        .. versionadded:: 0.21.0
-
     Returns
     -------
     str
diff --git a/pandas/core/arrays/categorical.py b/pandas/core/arrays/categorical.py
index 55c42f59f..ad82d68ba 100644
--- a/pandas/core/arrays/categorical.py
+++ b/pandas/core/arrays/categorical.py
@@ -242,8 +242,6 @@ class Categorical(ExtensionArray, PandasObject):
     dtype : CategoricalDtype
         An instance of ``CategoricalDtype`` to use for this categorical.
 
-        .. versionadded:: 0.21.0
-
     Attributes
     ----------
     categories : Index
@@ -257,8 +255,6 @@ class Categorical(ExtensionArray, PandasObject):
         The instance of ``CategoricalDtype`` storing the ``categories``
         and ``ordered``.
 
-        .. versionadded:: 0.21.0
-
     Methods
     -------
     from_codes
@@ -876,8 +872,6 @@ class Categorical(ExtensionArray, PandasObject):
               are passed through and extra categories in the mapping are
               ignored.
 
-            .. versionadded:: 0.21.0.
-
             * callable : a callable that is called on all items in the old
               categories and whose return values comprise the new categories.
 
@@ -1306,7 +1300,6 @@ class Categorical(ExtensionArray, PandasObject):
         if not isinstance(state, dict):
             raise Exception("invalid pickle state")
 
-        # compat with pre 0.21.0 CategoricalDtype change
         if "_dtype" not in state:
             state["_dtype"] = CategoricalDtype(state["_categories"], state["_ordered"])
 
diff --git a/pandas/core/common.py b/pandas/core/common.py
index 4ff1a9373..8b152162d 100644
--- a/pandas/core/common.py
+++ b/pandas/core/common.py
@@ -357,8 +357,6 @@ def standardize_mapping(into):
     """
     Helper function to standardize a supplied mapping.
 
-    .. versionadded:: 0.21.0
-
     Parameters
     ----------
     into : instance or subclass of collections.abc.Mapping
diff --git a/pandas/core/dtypes/dtypes.py b/pandas/core/dtypes/dtypes.py
index 17c4c6ba1..4be5da9c4 100644
--- a/pandas/core/dtypes/dtypes.py
+++ b/pandas/core/dtypes/dtypes.py
@@ -189,8 +189,6 @@ class CategoricalDtype(PandasExtensionDtype, ExtensionDtype):
     """
     Type for categorical data with the categories and orderedness.
 
-    .. versionchanged:: 0.21.0
-
     Parameters
     ----------
     categories : sequence, optional
diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 71b755bbf..ddb7be405 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -245,8 +245,6 @@ validate : str, optional
       dataset.
     * "many_to_many" or "m:m": allowed, but does not result in checks.
 
-    .. versionadded:: 0.21.0
-
 Returns
 -------
 DataFrame
@@ -1339,8 +1337,6 @@ class DataFrame(NDFrame):
             instance of the mapping type you want.  If you want a
             collections.defaultdict, you must pass it initialized.
 
-            .. versionadded:: 0.21.0
-
         Returns
         -------
         dict, list or collections.abc.Mapping
@@ -2118,8 +2114,6 @@ class DataFrame(NDFrame):
         """
         Write a DataFrame to the binary parquet format.
 
-        .. versionadded:: 0.21.0
-
         This function writes the dataframe as a `parquet file
         <https://parquet.apache.org/>`_. You can choose different parquet
         backends, and have the option of compression. See
@@ -3749,13 +3743,9 @@ class DataFrame(NDFrame):
         index : single label or list-like
             Alternative to specifying axis (``labels, axis=0``
             is equivalent to ``index=labels``).
-
-            .. versionadded:: 0.21.0
         columns : single label or list-like
             Alternative to specifying axis (``labels, axis=1``
             is equivalent to ``columns=labels``).
-
-            .. versionadded:: 0.21.0
         level : int or level name, optional
             For MultiIndex, level from which the labels will be removed.
         inplace : bool, default False
diff --git a/pandas/core/generic.py b/pandas/core/generic.py
index c202bf846..9640c1e08 100644
--- a/pandas/core/generic.py
+++ b/pandas/core/generic.py
@@ -526,13 +526,6 @@ class NDFrame(PandasObject, SelectionMixin, indexing.IndexingMixin):
         Indexes for%(extended_summary_sub)s row labels can be changed by assigning
         a list-like or Index.
 
-        .. versionchanged:: 0.21.0
-
-           The signature is now `labels` and `axis`, consistent with
-           the rest of pandas API. Previously, the `axis` and `labels`
-           arguments were respectively the first and second positional
-           arguments.
-
         Parameters
         ----------
         labels : list-like, Index
@@ -1178,8 +1171,6 @@ class NDFrame(PandasObject, SelectionMixin, indexing.IndexingMixin):
         inplace : bool, default False
             If `True`, do operation inplace and return None.
 
-            .. versionadded:: 0.21.0
-
         Returns
         -------
         Series, DataFrame, or None
@@ -2146,7 +2137,6 @@ class NDFrame(PandasObject, SelectionMixin, indexing.IndexingMixin):
             only used when the first argument is a filename. By default, the
             compression is inferred from the filename.
 
-            .. versionadded:: 0.21.0
             .. versionchanged:: 0.24.0
                'infer' option added and set to default
         index : bool, default True
@@ -2663,7 +2653,6 @@ class NDFrame(PandasObject, SelectionMixin, indexing.IndexingMixin):
             parameter is equivalent to setting its value to HIGHEST_PROTOCOL.
 
             .. [1] https://docs.python.org/3/library/pickle.html.
-            .. versionadded:: 0.21.0.
 
         See Also
         --------
@@ -3794,8 +3783,6 @@ class NDFrame(PandasObject, SelectionMixin, indexing.IndexingMixin):
             the same size as the index and its dtype must exactly match the
             index's type.
 
-            .. versionadded:: 0.21.0 (list-like tolerance)
-
         Returns
         -------
         Series or DataFrame
@@ -4235,8 +4222,6 @@ class NDFrame(PandasObject, SelectionMixin, indexing.IndexingMixin):
             the same size as the index and its dtype must exactly match the
             index's type.
 
-            .. versionadded:: 0.21.0 (list-like tolerance)
-
         Returns
         -------
         %(klass)s with changed index.
@@ -5750,8 +5735,6 @@ class NDFrame(PandasObject, SelectionMixin, indexing.IndexingMixin):
         columns unchanged. The inference rules are the
         same as during normal Series/DataFrame construction.
 
-        .. versionadded:: 0.21.0
-
         Returns
         -------
         converted : same type as input object
@@ -7287,8 +7270,6 @@ class NDFrame(PandasObject, SelectionMixin, indexing.IndexingMixin):
             Align object with lower and upper along the given axis.
         inplace : bool, default False
             Whether to perform the operation in place on the data.
-
-            .. versionadded:: 0.21.0
         *args, **kwargs
             Additional keywords have no effect but might be accepted
             for compatibility with numpy.
diff --git a/pandas/core/indexes/base.py b/pandas/core/indexes/base.py
index 5fec68d25..b97f03665 100644
--- a/pandas/core/indexes/base.py
+++ b/pandas/core/indexes/base.py
@@ -2836,8 +2836,6 @@ class Index(IndexOpsMixin, PandasObject):
             the index at the matching location most satisfy the equation
             ``abs(index[loc] - key) <= tolerance``.
 
-            .. versionadded:: 0.21.0 (list-like tolerance)
-
         Returns
         -------
         loc : int if unique index, slice if monotonic index, else mask
@@ -2909,8 +2907,6 @@ class Index(IndexOpsMixin, PandasObject):
             the same size as the index and its dtype must exactly match the
             index's type.
 
-            .. versionadded:: 0.21.0 (list-like tolerance)
-
         Returns
         -------
         indexer : ndarray of int
diff --git a/pandas/core/indexes/category.py b/pandas/core/indexes/category.py
index 073e19676..635bf3263 100644
--- a/pandas/core/indexes/category.py
+++ b/pandas/core/indexes/category.py
@@ -91,8 +91,6 @@ class CategoricalIndex(ExtensionIndex, accessor.PandasDelegate):
     dtype : CategoricalDtype or "category", optional
         If :class:`CategoricalDtype`, cannot be used together with
         `categories` or `ordered`.
-
-        .. versionadded:: 0.21.0
     copy : bool, default False
         Make a copy of input ndarray.
     name : object, optional
diff --git a/pandas/core/indexes/datetimes.py b/pandas/core/indexes/datetimes.py
index 92c3b9125..68d6229e7 100644
--- a/pandas/core/indexes/datetimes.py
+++ b/pandas/core/indexes/datetimes.py
@@ -1014,16 +1014,10 @@ def bdate_range(
         Weekmask of valid business days, passed to ``numpy.busdaycalendar``,
         only used when custom frequency strings are passed.  The default
         value None is equivalent to 'Mon Tue Wed Thu Fri'.
-
-        .. versionadded:: 0.21.0
-
     holidays : list-like or None, default None
         Dates to exclude from the set of valid business days, passed to
         ``numpy.busdaycalendar``, only used when custom frequency strings
         are passed.
-
-        .. versionadded:: 0.21.0
-
     closed : str, default None
         Make the interval closed with respect to the given frequency to
         the 'left', 'right', or both sides (None).
diff --git a/pandas/core/resample.py b/pandas/core/resample.py
index 2e1dcf8da..b17092caa 100644
--- a/pandas/core/resample.py
+++ b/pandas/core/resample.py
@@ -467,8 +467,6 @@ class Resampler(_GroupBy, ShallowMixin):
         limit : int, optional
             Limit of how many values to fill.
 
-            .. versionadded:: 0.21.0
-
         Returns
         -------
         Series or DataFrame
diff --git a/pandas/core/reshape/pivot.py b/pandas/core/reshape/pivot.py
index b3b016633..17473ac26 100644
--- a/pandas/core/reshape/pivot.py
+++ b/pandas/core/reshape/pivot.py
@@ -500,9 +500,6 @@ def crosstab(
     margins_name : str, default 'All'
         Name of the row/column that will contain the totals
         when margins is True.
-
-        .. versionadded:: 0.21.0
-
     dropna : bool, default True
         Do not include columns whose entries are all NaN.
     normalize : bool, {'all', 'index', 'columns'}, or {0,1}, default False
diff --git a/pandas/core/series.py b/pandas/core/series.py
index 03b823653..2b073b3c5 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -1509,8 +1509,6 @@ class Series(base.IndexOpsMixin, generic.NDFrame):
             instance of the mapping type you want.  If you want a
             collections.defaultdict, you must pass it initialized.
 
-            .. versionadded:: 0.21.0
-
         Returns
         -------
         collections.abc.Mapping
@@ -4067,12 +4065,8 @@ Name: Max Speed, dtype: float64
         index : single label or list-like
             Redundant for application on Series, but 'index' can be used instead
             of 'labels'.
-
-            .. versionadded:: 0.21.0
         columns : single label or list-like
             No change is made to the Series; use 'index' or 'labels' instead.
-
-            .. versionadded:: 0.21.0
         level : int or level name, optional
             For MultiIndex, level for which the labels will be removed.
         inplace : bool, default False
diff --git a/pandas/io/formats/style.py b/pandas/io/formats/style.py
index 718534e42..fecdf3b75 100644
--- a/pandas/io/formats/style.py
+++ b/pandas/io/formats/style.py
@@ -765,8 +765,6 @@ class Styler:
         Updates the HTML representation with a style which is
         selected in accordance with the return value of a function.
 
-        .. versionadded:: 0.21.0
-
         Parameters
         ----------
         cond : callable
diff --git a/pandas/io/html.py b/pandas/io/html.py
index ce6674ffb..442a2791f 100644
--- a/pandas/io/html.py
+++ b/pandas/io/html.py
@@ -1057,8 +1057,6 @@ def read_html(
     the header, otherwise the function attempts to find the header within
     the body (by putting rows with only ``<th>`` elements into the header).
 
-        .. versionadded:: 0.21.0
-
     Similar to :func:`~read_csv` the `header` argument is applied
     **after** `skiprows` is applied.
 
diff --git a/pandas/io/json/_json.py b/pandas/io/json/_json.py
index d6b90ae99..b955b83db 100644
--- a/pandas/io/json/_json.py
+++ b/pandas/io/json/_json.py
@@ -490,9 +490,6 @@ def read_json(
         for more information on ``chunksize``.
         This can only be passed if `lines=True`.
         If this is None, the file will be read into memory all at once.
-
-        .. versionadded:: 0.21.0
-
     compression : {'infer', 'gzip', 'bz2', 'zip', 'xz', None}, default 'infer'
         For on-the-fly decompression of on-disk data. If 'infer', then use
         gzip, bz2, zip or xz if path_or_buf is a string ending in
@@ -500,8 +497,6 @@ def read_json(
         otherwise. If using 'zip', the ZIP file must contain only one data
         file to be read in. Set to None for no decompression.
 
-        .. versionadded:: 0.21.0
-
     Returns
     -------
     Series or DataFrame
diff --git a/pandas/io/parquet.py b/pandas/io/parquet.py
index 9ae9729fc..463203555 100644
--- a/pandas/io/parquet.py
+++ b/pandas/io/parquet.py
@@ -260,8 +260,6 @@ def read_parquet(path, engine: str = "auto", columns=None, **kwargs):
     """
     Load a parquet object from the file path, returning a DataFrame.
 
-    .. versionadded:: 0.21.0
-
     Parameters
     ----------
     path : str, path object or file-like object
@@ -287,8 +285,6 @@ def read_parquet(path, engine: str = "auto", columns=None, **kwargs):
         'pyarrow' is unavailable.
     columns : list, default=None
         If not None, only these columns will be read from the file.
-
-        .. versionadded:: 0.21.1
     **kwargs
         Any additional kwargs are passed to the engine.
 
diff --git a/pandas/io/pickle.py b/pandas/io/pickle.py
index 4e731b8ec..6faebf56a 100644
--- a/pandas/io/pickle.py
+++ b/pandas/io/pickle.py
@@ -43,7 +43,6 @@ def to_pickle(
         HIGHEST_PROTOCOL.
 
         .. [1] https://docs.python.org/3/library/pickle.html
-        .. versionadded:: 0.21.0
 
     See Also
     --------
diff --git a/pandas/io/pytables.py b/pandas/io/pytables.py
index 8c2138031..3e4b25088 100644
--- a/pandas/io/pytables.py
+++ b/pandas/io/pytables.py
@@ -306,9 +306,6 @@ def read_hdf(
         By file-like object, we refer to objects with a ``read()`` method,
         such as a file handler (e.g. via builtin ``open`` function)
         or ``StringIO``.
-
-        .. versionadded:: 0.21.0 support for __fspath__ protocol.
-
     key : object, optional
         The group identifier in the store. Can be omitted if the HDF file
         contains a single pandas object.
@@ -1462,8 +1459,6 @@ class HDFStore:
         """
         Print detailed information on the store.
 
-        .. versionadded:: 0.21.0
-
         Returns
         -------
         str
