commit e472dad678f95b5e13ea23bc22bbadb198b0f2bc
Author: Chang She <chang@lambdafoundry.com>
Date:   Thu May 17 19:07:13 2012 -0400

    TST: more tests for 0.8

diff --git a/pandas/core/common.py b/pandas/core/common.py
index 2c686a5ea..e16d1471c 100644
--- a/pandas/core/common.py
+++ b/pandas/core/common.py
@@ -140,6 +140,21 @@ def _unpickle_array(bytes):
     arr = read_array(BytesIO(bytes))
     return arr
 
+def _take_1d_datetime(arr, indexer, out, fill_value=np.nan):
+    view = arr.view(np.int64)
+    outview = out.view(np.int64)
+    _algos.take_1d_bool(view, indexer, outview, fill_value=fill_value)
+
+def _take_2d_axis0_datetime(arr, indexer, out, fill_value=np.nan):
+    view = arr.view(np.int64)
+    outview = out.view(np.int64)
+    _algos.take_1d_bool(view, indexer, outview, fill_value=fill_value)
+
+def _take_2d_axis1_datetime(arr, indexer, out, fill_value=np.nan):
+    view = arr.view(np.uint8)
+    outview = out.view(np.uint8)
+    _algos.take_1d_bool(view, indexer, outview, fill_value=fill_value)
+
 def _view_wrapper(f, wrap_dtype, na_override=None):
     def wrapper(arr, indexer, out, fill_value=np.nan):
         if na_override is not None and np.isnan(fill_value):
diff --git a/pandas/core/series.py b/pandas/core/series.py
index 8cbc8f2d5..bb74dddbb 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -512,7 +512,6 @@ copy : boolean, default False
             if 'unorderable' in str(e):  # pragma: no cover
                 raise IndexError(key)
             # Could not hash item
-            pass
 
         if _is_bool_indexer(key):
             key = self._check_bool_indexer(key)
@@ -2645,6 +2644,7 @@ def _sanitize_array(data, index, dtype=None, copy=False,
             except Exception:
                 if raise_cast_failure:
                     raise
+                subarr = np.array(data, dtype=object, copy=copy)
                 subarr = lib.maybe_convert_objects(subarr)
         else:
             subarr = lib.list_to_object_array(data)
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index a09204675..ffc4db4f4 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -5651,15 +5651,15 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
 
         df = DataFrame(np.random.randint(0, 10, (3, 3)))
 
-        result = df.reindex(range(3), range(3))
-        expected = df.reindex(range(3)).reindex(columns=range(3))
+        result = df.reindex(range(2), range(2))
+        expected = df.reindex(range(2)).reindex(columns=range(2))
 
         assert_frame_equal(result, expected)
 
         df = df + 1j
 
-        result = df.reindex(range(4), range(4))
-        expected = df.reindex(range(4)).reindex(columns=range(4))
+        result = df.reindex(range(3), range(3))
+        expected = df.reindex(range(3)).reindex(columns=range(3))
 
         assert_frame_equal(result, expected)
 
diff --git a/pandas/tests/test_series.py b/pandas/tests/test_series.py
index dc309da66..348843a80 100644
--- a/pandas/tests/test_series.py
+++ b/pandas/tests/test_series.py
@@ -1255,8 +1255,9 @@ class TestSeries(unittest.TestCase, CheckNameIntegration):
 
         check_comparators(self.ts, 5)
         check_comparators(self.ts, self.ts + 1)
+
         bool_ser = self.ts > 0
-        check_comparators(bool_ser, bool_ser[::2])
+        check_comparators(bool_ser, list(bool_ser[::2]))
 
 
     def test_operators_empty_int_corner(self):
