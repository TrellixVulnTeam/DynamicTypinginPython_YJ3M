commit ae054e73d3f56029dd9c2309cdc472f8e092c4dc
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Mon Jan 16 18:44:03 2012 -0500

    TST: cast to i8 when checking margins

diff --git a/pandas/tools/tests/test_merge.py b/pandas/tools/tests/test_merge.py
index 43ad933cd..99a08cbd6 100644
--- a/pandas/tools/tests/test_merge.py
+++ b/pandas/tools/tests/test_merge.py
@@ -533,6 +533,29 @@ class TestMergeMulti(unittest.TestCase):
         # just to hit the label compression code path
         merged = merge(df, df2, how='outer')
 
+    def test_left_join_index_preserve_order(self):
+
+        left = DataFrame({'k1' : [0, 1, 2] * 8,
+                          'k2' : ['foo', 'bar'] * 12,
+                          'v' : np.arange(24)})
+
+        index = MultiIndex.from_tuples([(2, 'bar'), (1, 'foo')])
+        right = DataFrame({'v2' : [5, 7]}, index=index)
+
+        result = left.join(right, on=['k1', 'k2'])
+
+        expected = left.copy()
+        expected['v2'] = np.nan
+        expected['v2'][(expected.k1 == 2) & (expected.k2 == 'bar')] = 5
+        expected['v2'][(expected.k1 == 1) & (expected.k2 == 'foo')] = 7
+
+        tm.assert_frame_equal(result, expected)
+
+        # do a right join for an extra test
+        joined = merge(right, left, left_index=True,
+                       right_on=['k1', 'k2'], how='right')
+        tm.assert_frame_equal(joined.ix[:, expected.columns], expected)
+
 def _check_join(left, right, result, join_col, how='left',
                 lsuffix='.x', rsuffix='.y'):
 
@@ -1042,28 +1065,6 @@ class TestConcatenate(unittest.TestCase):
         expected = concat([df, df], keys=['foo', 'bar'])
         tm.assert_frame_equal(result, expected[:10])
 
-    def test_left_join_index_preserve_order(self):
-
-        left = DataFrame({'k1' : [0, 1, 2] * 4,
-                          'k2' : ['foo', 'bar'] * 6,
-                          'v' : np.arange(12)})
-
-        index = MultiIndex.from_tuples([(2, 'bar')])
-        right = DataFrame({'v2' : 5}, index=index)
-
-        result = left.join(right, on=['k1', 'k2'])
-
-        expected = left.copy()
-        expected['v2'] = np.nan
-        expected['v2'][(expected.k1 == 2) & (expected.k2 == 'bar')] = 5
-
-        tm.assert_frame_equal(result, expected)
-
-        # do a right join for an extra test
-        joined = merge(right, left, left_index=True,
-                       right_on=['k1', 'k2'], how='right')
-        tm.assert_frame_equal(joined.ix[:, expected.columns], expected)
-
 
 if __name__ == '__main__':
     import nose
diff --git a/pandas/tools/tests/test_pivot.py b/pandas/tools/tests/test_pivot.py
index e08a07924..eff577222 100644
--- a/pandas/tools/tests/test_pivot.py
+++ b/pandas/tools/tests/test_pivot.py
@@ -197,13 +197,13 @@ class TestCrosstab(unittest.TestCase):
         self.assertEqual(result.columns.names, ['b', 'c'])
 
         all_cols = result['All', '']
-        exp_cols = df.groupby(['a']).size()
+        exp_cols = df.groupby(['a']).size().astype('i8')
         exp_cols = exp_cols.append(Series([len(df)], index=['All']))
 
         tm.assert_series_equal(all_cols, exp_cols)
 
         all_rows = result.ix['All']
-        exp_rows = df.groupby(['b', 'c']).size()
+        exp_rows = df.groupby(['b', 'c']).size().astype('i8')
         exp_rows = exp_rows.append(Series([len(df)], index=[('All', '')]))
 
         exp_rows = exp_rows.reindex(all_rows.index)
