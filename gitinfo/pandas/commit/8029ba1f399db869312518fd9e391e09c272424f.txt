commit 8029ba1f399db869312518fd9e391e09c272424f
Author: jbrockmendel <jbrockmendel@gmail.com>
Date:   Wed Jan 8 18:48:27 2020 -0800

    CLN: de-duplicate boxing in DTI.get_value (#30819)

diff --git a/pandas/core/indexes/datetimes.py b/pandas/core/indexes/datetimes.py
index 560c215dd..c12b815aa 100644
--- a/pandas/core/indexes/datetimes.py
+++ b/pandas/core/indexes/datetimes.py
@@ -641,15 +641,7 @@ class DatetimeIndex(DatetimeTimedeltaMixin, DatetimeDelegateMixin):
         know what you're doing
         """
 
-        if isinstance(key, datetime):
-
-            # needed to localize naive datetimes
-            if self.tz is not None:
-                if key.tzinfo is not None:
-                    key = Timestamp(key).tz_convert(self.tz)
-                else:
-                    key = Timestamp(key).tz_localize(self.tz)
-
+        if isinstance(key, (datetime, np.datetime64)):
             return self.get_value_maybe_box(series, key)
 
         if isinstance(key, time):
diff --git a/pandas/tests/indexes/datetimes/test_indexing.py b/pandas/tests/indexes/datetimes/test_indexing.py
index 97290c8c6..99a362e25 100644
--- a/pandas/tests/indexes/datetimes/test_indexing.py
+++ b/pandas/tests/indexes/datetimes/test_indexing.py
@@ -613,6 +613,23 @@ class TestDatetimeIndex:
             assert result.freq == expected.freq
             assert result.tz == expected.tz
 
+    def test_get_value(self):
+        # specifically make sure we have test for np.datetime64 key
+        dti = pd.date_range("2016-01-01", periods=3)
+
+        arr = np.arange(6, 8)
+
+        key = dti[1]
+
+        result = dti.get_value(arr, key)
+        assert result == 7
+
+        result = dti.get_value(arr, key.to_pydatetime())
+        assert result == 7
+
+        result = dti.get_value(arr, key.to_datetime64())
+        assert result == 7
+
     def test_get_loc(self):
         idx = pd.date_range("2000-01-01", periods=3)
 
