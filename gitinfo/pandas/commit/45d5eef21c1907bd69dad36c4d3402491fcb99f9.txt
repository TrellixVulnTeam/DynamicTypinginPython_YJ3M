commit 45d5eef21c1907bd69dad36c4d3402491fcb99f9
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Sat Mar 19 11:18:40 2011 -0400

    added quantile and describe to Series

diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 0ed648023..b3ef82d7c 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -2154,8 +2154,8 @@ class DataFrame(Picklable, Groupable):
 
     def quantile(self, q=0.5, axis=0):
         """
-        Return array or Series of score at the given `per` percentile
-        over requested axis.
+        Return array or Series of values at the given quantile over requested
+        axis.
 
         Parameters
         ----------
diff --git a/pandas/core/series.py b/pandas/core/series.py
index e2a607571..e4b8dd363 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -386,6 +386,39 @@ class Series(np.ndarray, Picklable, Groupable):
         """
         return self._ndarray_statistic('mean')
 
+    def quantile(self, q=0.5):
+        """
+        Return value at the given quantile
+
+        Parameters
+        ----------
+        q : quantile
+            0 <= q <= 1
+
+        Returns
+        -------
+        q : float
+        """
+        from scipy.stats import scoreatpercentile
+        return scoreatpercentile(self.valid().values, q * 100)
+
+    def describe(self):
+        """
+        Generate various summary statistics of columns, excluding NaN values
+
+        Returns
+        -------
+        DataFrame
+        """
+        names = ['count', 'mean', 'std', 'min',
+                 '10%', '50%', '90%', 'max']
+
+        data = [self.count(), self.mean(), self.std(), self.min(),
+                self.quantile(.1), self.median(), self.quantile(.9),
+                self.max()]
+
+        return Series(data, index=names)
+
     def _ndarray_statistic(self, funcname):
         arr = self.values
         retVal = getattr(arr, funcname)()
diff --git a/pandas/core/tests/test_series.py b/pandas/core/tests/test_series.py
index 4f336ff91..894c4c3d8 100644
--- a/pandas/core/tests/test_series.py
+++ b/pandas/core/tests/test_series.py
@@ -258,6 +258,19 @@ class TestSeries(unittest.TestCase):
         self.assert_(np.isnan(Series([1.], index=[1]).var()))
         self.assert_(np.isnan(Series([1.], index=[1]).skew()))
 
+    def test_quantile(self):
+        from scipy.stats import scoreatpercentile
+
+        q = self.ts.quantile(0.1)
+        self.assertEqual(q, scoreatpercentile(self.ts.valid(), 10))
+
+        q = self.ts.quantile(0.9)
+        self.assertEqual(q, scoreatpercentile(self.ts.valid(), 90))
+
+    def test_describe(self):
+        _ = self.series.describe()
+        _ = self.ts.describe()
+
     def test_append(self):
         appendedSeries = self.series.append(self.ts)
         for idx, value in appendedSeries.iteritems():
