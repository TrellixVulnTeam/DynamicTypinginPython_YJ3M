commit e2fb47badb6ea386ca9c468e19714dcf8c78d788
Author: Matt Williams <matt@milliams.com>
Date:   Sat Jan 5 22:02:41 2019 +0000

    EHN: Add filename to FileNotFoundError (#24266)

diff --git a/pandas/_libs/parsers.pyx b/pandas/_libs/parsers.pyx
index 0b7edaf04..e0fcf1027 100644
--- a/pandas/_libs/parsers.pyx
+++ b/pandas/_libs/parsers.pyx
@@ -6,6 +6,7 @@ import time
 import warnings
 
 from csv import QUOTE_MINIMAL, QUOTE_NONNUMERIC, QUOTE_NONE
+from errno import ENOENT
 
 from libc.stdlib cimport free
 from libc.string cimport strncpy, strlen, strcasecmp
@@ -696,7 +697,9 @@ cdef class TextReader:
             if ptr == NULL:
                 if not os.path.exists(source):
                     raise compat.FileNotFoundError(
-                        'File {source} does not exist'.format(source=source))
+                        ENOENT,
+                        'File {source} does not exist'.format(source=source),
+                        source)
                 raise IOError('Initializing from file failed')
 
             self.parser.source = ptr
diff --git a/pandas/tests/io/parser/test_common.py b/pandas/tests/io/parser/test_common.py
index b15471813..6860452f5 100644
--- a/pandas/tests/io/parser/test_common.py
+++ b/pandas/tests/io/parser/test_common.py
@@ -898,9 +898,15 @@ def test_nonexistent_path(all_parsers):
 
     msg = ("does not exist" if parser.engine == "c"
            else r"\[Errno 2\]")
-    with pytest.raises(compat.FileNotFoundError, match=msg):
+    with pytest.raises(compat.FileNotFoundError, match=msg) as e:
         parser.read_csv(path)
 
+        filename = e.value.filename
+        filename = filename.decode() if isinstance(
+            filename, bytes) else filename
+
+        assert path == filename
+
 
 def test_missing_trailing_delimiters(all_parsers):
     parser = all_parsers
