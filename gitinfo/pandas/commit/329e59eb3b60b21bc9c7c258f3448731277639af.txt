commit 329e59eb3b60b21bc9c7c258f3448731277639af
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Sat Jan 7 19:12:18 2012 -0500

    ENH: add justify option for column header, per #571

diff --git a/pandas/core/format.py b/pandas/core/format.py
index 2ef921640..552c2d687 100644
--- a/pandas/core/format.py
+++ b/pandas/core/format.py
@@ -30,6 +30,8 @@ docstring_to_string = """
     sparsify : bool, optional
         Set to False for a DataFrame with a hierarchical index to print every
         multiindex key at each row, default True
+    justify : {'left', 'right'}, default 'left'
+        Left or right-justify the column labels
     index_names : bool, optional
         Prints the names of the indexes, default True """
 
@@ -46,7 +48,8 @@ class DataFrameFormatter(object):
 
     def __init__(self, frame, buf=None, columns=None, col_space=None,
                  header=True, index=True, na_rep='NaN', formatters=None,
-                 float_format=None, sparsify=True, index_names=True):
+                 justify='left', float_format=None, sparsify=True,
+                 index_names=True):
         self.frame = frame
         self.buf = buf if buf is not None else StringIO()
         self.show_index_names = index_names
@@ -57,6 +60,7 @@ class DataFrameFormatter(object):
         self.col_space = col_space
         self.header = header
         self.index = index
+        self.justify = justify
 
         if columns is not None:
             self.columns = _ensure_index(columns)
@@ -81,11 +85,21 @@ class DataFrameFormatter(object):
             str_index = self._get_formatted_index()
             str_columns = self._get_formatted_column_labels()
 
-            if self.header:
-                stringified = [str_columns[i] + self._format_col(c)
-                               for i, c in enumerate(self.columns)]
-            else:
-                stringified = [self._format_col(c) for c in self.columns]
+            stringified = []
+
+            for i, c in enumerate(self.columns):
+                if self.header:
+                    fmt_values = self._format_col(c)
+                    cheader = str_columns[i]
+                    max_len = max(max(len(x) for x in fmt_values),
+                                  max(len(x) for x in cheader))
+                    if self.justify == 'left':
+                        cheader = [x.ljust(max_len) for x in cheader]
+                    else:
+                        cheader = [x.rjust(max_len) for x in cheader]
+                    stringified.append(cheader + fmt_values)
+                else:
+                    stringified = [self._format_col(c) for c in self.columns]
 
             if self.index:
                 to_write.append(adjoin(1, str_index, *stringified))
diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index bcd8dc1b6..fae8991b6 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -922,7 +922,7 @@ class DataFrame(NDFrame):
     def to_string(self, buf=None, columns=None, col_space=None, colSpace=None,
                   header=True, index=True, na_rep='NaN', formatters=None,
                   float_format=None, sparsify=True, nanRep=None,
-                  index_names=True):
+                  index_names=True, justify='left'):
         """
         Render a DataFrame to a console-friendly tabular output.
         """
@@ -944,6 +944,7 @@ class DataFrame(NDFrame):
                                        formatters=formatters,
                                        float_format=float_format,
                                        sparsify=sparsify,
+                                       justify=justify,
                                        index_names=index_names,
                                        header=header, index=index)
         formatter.to_string()
