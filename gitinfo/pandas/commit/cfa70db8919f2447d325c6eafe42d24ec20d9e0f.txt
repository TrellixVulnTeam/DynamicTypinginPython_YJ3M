commit cfa70db8919f2447d325c6eafe42d24ec20d9e0f
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Tue Sep 18 11:04:44 2012 -0400

    BUG: handling datetime.date in more places in DateOffset classes close #1395

diff --git a/RELEASE.rst b/RELEASE.rst
index c811d9b0d..e983a8cd9 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -35,7 +35,7 @@ pandas 0.9.0
   - Add Options class to pandas.io.data for fetching options data from Yahoo!
     Finance (#1748, #1739)
   - Recognize and convert more boolean values in file parsing (Yes, No, TRUE,
-    FALSE, variants thereof) (#1691)
+    FALSE, variants thereof) (#1691, #1295)
 
 **Improvements to existing features**
 
@@ -179,6 +179,7 @@ pandas 0.9.0
   - Fix error while retrieving timezone and utc offset from subclasses of
     datetime.tzinfo without .zone and ._utcoffset attributes (#1922)
   - Fix DataFrame formatting of small, non-zero FP numbers (#1911)
+  - Various fixes by upcasting of date -> datetime (#1395)
 
 pandas 0.8.1
 ============
diff --git a/pandas/tseries/offsets.py b/pandas/tseries/offsets.py
index 84781973f..05861d937 100644
--- a/pandas/tseries/offsets.py
+++ b/pandas/tseries/offsets.py
@@ -182,30 +182,25 @@ class DateOffset(object):
 
     def rollback(self, dt):
         """Roll provided date backward to next offset only if not on offset"""
-        try:
-            if not self.onOffset(dt):
-                dt = dt - self.__class__(1, **self.kwds)
-            return dt
-        except Exception:
-            if isinstance(dt, date):
-                return self.rollback(datetime(dt.year, dt.month, dt.day))
-            else:
-                raise
+        if type(dt) == date:
+            dt = datetime(dt.year, dt.month, dt.day)
+
+        if not self.onOffset(dt):
+            dt = dt - self.__class__(1, **self.kwds)
+        return dt
 
     def rollforward(self, dt):
         """Roll provided date forward to next offset only if not on offset"""
-        try:
-            if not self.onOffset(dt):
-                dt = dt + self.__class__(1, **self.kwds)
-            return dt
-        except Exception:
-            if isinstance(dt, date):
-                return self.rollforward(datetime(dt.year, dt.month, dt.day))
-            else:
-                raise
+        if type(dt) == date:
+            dt = datetime(dt.year, dt.month, dt.day)
+
+        if not self.onOffset(dt):
+            dt = dt + self.__class__(1, **self.kwds)
+        return dt
 
     def onOffset(self, dt):
-        if type(self) == DateOffset:
+        # XXX, see #1395
+        if type(self) == DateOffset or isinstance(self, Tick):
             return True
 
         # Default (slow) method for determining if some date is a member of the
@@ -1033,10 +1028,15 @@ class Tick(DateOffset):
         return _delta_to_nanoseconds(self.delta)
 
     def apply(self, other):
+        if type(other) == date:
+            other = datetime(other.year, other.month, other.day)
+
         if isinstance(other, (datetime, timedelta)):
             return other + self.delta
         elif isinstance(other, type(self)):
             return type(self)(self.n + other.n)
+        else:  # pragma: no cover
+            raise TypeError('Unhandled type: %s' % type(other))
 
     _rule_base = 'undefined'
     @property
diff --git a/pandas/tseries/tests/test_offsets.py b/pandas/tseries/tests/test_offsets.py
index 8e4a15b60..d8eac19f6 100644
--- a/pandas/tseries/tests/test_offsets.py
+++ b/pandas/tseries/tests/test_offsets.py
@@ -184,6 +184,13 @@ class TestBusinessDay(unittest.TestCase):
         result = offset.rollforward(dt)
         self.assertEqual(result, datetime(2012, 9, 17))
 
+        offset = offsets.Day()
+        result = offset.rollback(dt)
+        self.assertEqual(result, datetime(2012, 9, 15))
+
+        result = offset.rollforward(dt)
+        self.assertEqual(result, datetime(2012, 9, 15))
+
     def test_onOffset(self):
         tests = [(BDay(), datetime(2008, 1, 1), True),
                  (BDay(), datetime(2008, 1, 5), False)]
