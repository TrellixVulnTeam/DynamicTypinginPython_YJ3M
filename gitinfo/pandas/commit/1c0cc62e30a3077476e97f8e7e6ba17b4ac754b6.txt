commit 1c0cc62e30a3077476e97f8e7e6ba17b4ac754b6
Author: jbrockmendel <jbrockmendel@gmail.com>
Date:   Sun Apr 19 16:30:50 2020 -0700

    REF: get .items out of BlockManager.apply (#33616)

diff --git a/pandas/core/generic.py b/pandas/core/generic.py
index 7767238e1..673d661e9 100644
--- a/pandas/core/generic.py
+++ b/pandas/core/generic.py
@@ -8665,6 +8665,11 @@ class NDFrame(PandasObject, SelectionMixin, indexing.IndexingMixin):
         else:
             align = self._get_axis_number(axis) == 1
 
+        if align and isinstance(other, NDFrame):
+            other = other.reindex(self._info_axis, axis=self._info_axis_number)
+        if isinstance(cond, NDFrame):
+            cond = cond.reindex(self._info_axis, axis=self._info_axis_number)
+
         block_axis = self._get_block_manager_axis(axis)
 
         if inplace:
diff --git a/pandas/core/internals/managers.py b/pandas/core/internals/managers.py
index dd950c027..6368a2498 100644
--- a/pandas/core/internals/managers.py
+++ b/pandas/core/internals/managers.py
@@ -373,23 +373,20 @@ class BlockManager(PandasObject):
 
         self._consolidate_inplace()
 
-        align_copy = False
-        if f == "where":
-            align_copy = True
-
         aligned_args = {k: kwargs[k] for k in align_keys}
 
         for b in self.blocks:
 
             if aligned_args:
-                b_items = self.items[b.mgr_locs.indexer]
 
                 for k, obj in aligned_args.items():
                     if isinstance(obj, (ABCSeries, ABCDataFrame)):
-                        axis = obj._info_axis_number
-                        kwargs[k] = obj.reindex(
-                            b_items, axis=axis, copy=align_copy
-                        )._values
+                        # The caller is responsible for ensuring that
+                        #  obj.axes[-1].equals(self.items)
+                        if obj.ndim == 1:
+                            kwargs[k] = obj.iloc[b.mgr_locs.indexer]._values
+                        else:
+                            kwargs[k] = obj.iloc[:, b.mgr_locs.indexer]._values
                     else:
                         # otherwise we have an ndarray
                         kwargs[k] = obj[b.mgr_locs.indexer]
@@ -1125,6 +1122,7 @@ class BlockManager(PandasObject):
         new_axis = self.items.insert(loc, item)
 
         if value.ndim == self.ndim - 1 and not is_extension_array_dtype(value.dtype):
+            # TODO(EA2D): special case not needed with 2D EAs
             value = _safe_reshape(value, (1,) + value.shape)
 
         block = make_block(values=value, ndim=self.ndim, placement=slice(loc, loc + 1))
