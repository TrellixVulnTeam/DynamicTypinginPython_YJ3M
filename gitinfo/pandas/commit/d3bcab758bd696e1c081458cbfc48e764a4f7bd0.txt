commit d3bcab758bd696e1c081458cbfc48e764a4f7bd0
Author: Chang She <chang@lambdafoundry.com>
Date:   Wed Apr 11 11:49:39 2012 -0400

    ENH: label sizes and rotations for histogram
    TST: test cases for both Series and DataFrame histogram

diff --git a/pandas/tests/test_graphics.py b/pandas/tests/test_graphics.py
index a0983ecf8..4fe40a6eb 100644
--- a/pandas/tests/test_graphics.py
+++ b/pandas/tests/test_graphics.py
@@ -142,6 +142,30 @@ class TestDataFramePlots(unittest.TestCase):
         df = DataFrame(np.random.randn(100, 6))
         _check_plot_works(df.hist)
 
+        #make sure kwargs are handled
+        ser = df[0]
+        xf, yf = 20, 20
+        xrot, yrot = 30, 30
+        ax = ser.hist(xlabelsize=xf, xrot=30, ylabelsize=yf, yrot=30)
+        ytick = ax.get_yticklabels()[0]
+        xtick = ax.get_xticklabels()[0]
+        self.assertAlmostEqual(ytick.get_fontsize(), yf)
+        self.assertAlmostEqual(ytick.get_rotation(), yrot)
+        self.assertAlmostEqual(xtick.get_fontsize(), xf)
+        self.assertAlmostEqual(xtick.get_rotation(), xrot)
+
+        xf, yf = 20, 20
+        xrot, yrot = 30, 30
+        axes = df.hist(xlabelsize=xf, xrot=30, ylabelsize=yf, yrot=30)
+        for i, ax in enumerate(axes.ravel()):
+            if i < len(df.columns):
+                ytick = ax.get_yticklabels()[0]
+                xtick = ax.get_xticklabels()[0]
+                self.assertAlmostEqual(ytick.get_fontsize(), yf)
+                self.assertAlmostEqual(ytick.get_rotation(), yrot)
+                self.assertAlmostEqual(xtick.get_fontsize(), xf)
+                self.assertAlmostEqual(xtick.get_rotation(), xrot)
+
     @slow
     def test_scatter(self):
         df = DataFrame(np.random.randn(100, 4))
diff --git a/pandas/tools/plotting.py b/pandas/tools/plotting.py
index f80b69f21..25808693d 100644
--- a/pandas/tools/plotting.py
+++ b/pandas/tools/plotting.py
@@ -702,15 +702,27 @@ def scatter_plot(data, x, y, by=None, ax=None, figsize=None):
     return fig
 
 
-def hist_frame(data, grid=True, **kwds):
+def hist_frame(data, grid=True, xlabelsize=None, xrot=None,
+               ylabelsize=None, yrot=None, **kwds):
     """
     Draw Histogram the DataFrame's series using matplotlib / pylab.
 
     Parameters
     ----------
+    grid : boolean, default True
+        Whether to show axis grid lines
+    xlabelsize : int, default None
+        If specified changes the x-axis label size
+    xrot : float, default None
+        rotation of x axis labels
+    ylabelsize : int, default None
+        If specified changes the y-axis label size
+    yrot : float, default None
+        rotation of y axis labels
     kwds : other plotting keyword arguments
         To be passed to hist function
     """
+    import matplotlib.pyplot as plt
     n = len(data.columns)
     k = 1
     while k ** 2 < n:
@@ -723,10 +735,19 @@ def hist_frame(data, grid=True, **kwds):
         ax.set_title(col)
         ax.grid(grid)
 
-    return axes
+        if xlabelsize is not None:
+            plt.setp(ax.get_xticklabels(), fontsize=xlabelsize)
+        if xrot is not None:
+            plt.setp(ax.get_xticklabels(), rotation=xrot)
+        if ylabelsize is not None:
+            plt.setp(ax.get_yticklabels(), fontsize=ylabelsize)
+        if yrot is not None:
+            plt.setp(ax.get_yticklabels(), rotation=yrot)
 
+    return axes
 
-def hist_series(self, ax=None, grid=True, **kwds):
+def hist_series(self, ax=None, grid=True, xlabelsize=None, xrot=None,
+                ylabelsize=None, yrot=None, **kwds):
     """
     Draw histogram of the input series using matplotlib
 
@@ -734,6 +755,16 @@ def hist_series(self, ax=None, grid=True, **kwds):
     ----------
     ax : matplotlib axis object
         If not passed, uses gca()
+    grid : boolean, default True
+        Whether to show axis grid lines
+    xlabelsize : int, default None
+        If specified changes the x-axis label size
+    xrot : float, default None
+        rotation of x axis labels
+    ylabelsize : int, default None
+        If specified changes the y-axis label size
+    yrot : float, default None
+        rotation of y axis labels
     kwds : keywords
         To be passed to the actual plotting function
 
@@ -752,6 +783,15 @@ def hist_series(self, ax=None, grid=True, **kwds):
     ax.hist(values, **kwds)
     ax.grid(grid)
 
+    if xlabelsize is not None:
+        plt.setp(ax.get_xticklabels(), fontsize=xlabelsize)
+    if xrot is not None:
+        plt.setp(ax.get_xticklabels(), rotation=xrot)
+    if ylabelsize is not None:
+        plt.setp(ax.get_yticklabels(), fontsize=ylabelsize)
+    if yrot is not None:
+        plt.setp(ax.get_yticklabels(), rotation=yrot)
+
     return ax
 
 
