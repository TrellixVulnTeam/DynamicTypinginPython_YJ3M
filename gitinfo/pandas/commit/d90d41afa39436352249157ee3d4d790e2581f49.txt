commit d90d41afa39436352249157ee3d4d790e2581f49
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Fri Nov 2 18:47:21 2012 -0400

    BUG/ENH: support negative periods in Panel.shift. close #2164

diff --git a/RELEASE.rst b/RELEASE.rst
index 2b8f71cde..b43fa4fec 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -41,6 +41,7 @@ pandas 0.9.1
   - Improve HTML display of DataFrame objects with hierarchical columns
   - Enable referencing of Excel columns by their column names (#1936)
   - DataFrame.dot can accept ndarrays (#2042)
+  - Support negative periods in Panel.shift (#2164)
 
 **Bug fixes**
 
diff --git a/pandas/core/common.py b/pandas/core/common.py
index a4d7d1bf9..e7829ab4b 100644
--- a/pandas/core/common.py
+++ b/pandas/core/common.py
@@ -730,6 +730,18 @@ def intersection(*seqs):
     return type(seqs[0])(list(result))
 
 
+def _shift_indexer(N, periods):
+    # small reusable utility
+    indexer = np.zeros(N, dtype=int)
+
+    if periods > 0:
+        indexer[periods:] = np.arange(N - periods)
+    else:
+        indexer[:periods] = np.arange(-periods, N)
+
+    return indexer
+
+
 def _asarray_tuplesafe(values, dtype=None):
     from pandas.core.index import Index
 
diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index ead8e46c6..bd220a008 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -3717,7 +3717,7 @@ class DataFrame(NDFrame):
             return make_block(new_values, blk.items, blk.ref_items)
 
         if offset is None:
-            indexer = self._shift_indexer(periods)
+            indexer = com._shift_indexer(len(self), periods)
             new_blocks = [_shift_block(b, indexer) for b in self._data.blocks]
             new_data = BlockManager(new_blocks, [self.columns, self.index])
         elif isinstance(self.index, PeriodIndex):
@@ -3735,18 +3735,6 @@ class DataFrame(NDFrame):
 
         return self._constructor(new_data)
 
-    def _shift_indexer(self, periods):
-        # small reusable utility
-        N = len(self)
-        indexer = np.zeros(N, dtype=int)
-
-        if periods > 0:
-            indexer[periods:] = np.arange(N - periods)
-        else:
-            indexer[:periods] = np.arange(-periods, N)
-
-        return indexer
-
     #----------------------------------------------------------------------
     # Function application
 
diff --git a/pandas/core/panel.py b/pandas/core/panel.py
index dbdebd470..093baa4d4 100755
--- a/pandas/core/panel.py
+++ b/pandas/core/panel.py
@@ -1223,12 +1223,12 @@ class Panel(NDFrame):
 
     def shift(self, lags, axis='major'):
         """
-        Shift major or minor axis by specified number of lags. Drops periods
+        Shift major or minor axis by specified number of leads/lags. Drops
+        periods right now compared with DataFrame.shift
 
         Parameters
         ----------
         lags : int
-            Needs to be a positive number currently
         axis : {'major', 'minor'}
 
         Returns
@@ -1240,17 +1240,26 @@ class Panel(NDFrame):
         major_axis = self.major_axis
         minor_axis = self.minor_axis
 
+        if lags > 0:
+            vslicer = slice(None, -lags)
+            islicer = slice(lags, None)
+        elif lags == 0:
+            vslicer = islicer =slice(None)
+        else:
+            vslicer = slice(-lags, None)
+            islicer = slice(None, lags)
+
         if axis == 'major':
-            values = values[:, :-lags, :]
-            major_axis = major_axis[lags:]
+            values = values[:, vslicer, :]
+            major_axis = major_axis[islicer]
         elif axis == 'minor':
-            values = values[:, :, :-lags]
-            minor_axis = minor_axis[lags:]
+            values = values[:, :, vslicer]
+            minor_axis = minor_axis[islicer]
         else:
             raise ValueError('Invalid axis')
 
         return self._constructor(values, items=items, major_axis=major_axis,
-                         minor_axis=minor_axis)
+                                 minor_axis=minor_axis)
 
     def truncate(self, before=None, after=None, axis='major'):
         """Function truncates a sorted Panel before and/or after some
diff --git a/pandas/tests/test_panel.py b/pandas/tests/test_panel.py
index d3726bda8..3007ae643 100755
--- a/pandas/tests/test_panel.py
+++ b/pandas/tests/test_panel.py
@@ -1078,6 +1078,12 @@ class TestPanel(unittest.TestCase, PanelTests, CheckIndexing,
 
         self.assertRaises(Exception, self.panel.shift, 1, axis='items')
 
+        # negative numbers, #2164
+        result = self.panel.shift(-1)
+        expected = Panel(dict((i, f.shift(-1)[:-1])
+                              for i, f in self.panel.iteritems()))
+        assert_panel_equal(result, expected)
+
     def test_multiindex_get(self):
         ind = MultiIndex.from_tuples([('a', 1), ('a', 2), ('b', 1), ('b',2)],
                                      names=['first', 'second'])
