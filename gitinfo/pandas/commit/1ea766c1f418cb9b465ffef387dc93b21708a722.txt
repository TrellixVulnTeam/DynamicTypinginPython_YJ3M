commit 1ea766c1f418cb9b465ffef387dc93b21708a722
Author: Chang She <chang@lambdafoundry.com>
Date:   Thu May 3 00:17:27 2012 -0400

    BUG: return all indices if grouped by empty; fixes segfault. GH #1048

diff --git a/pandas/src/generate_code.py b/pandas/src/generate_code.py
index 9ab8b7c08..8ef821a3d 100644
--- a/pandas/src/generate_code.py
+++ b/pandas/src/generate_code.py
@@ -464,6 +464,9 @@ def groupby_%(name)s(ndarray[%(c_type)s] index, ndarray labels):
     cdef list members
     cdef object idx, key
 
+    if len(labels) == 0:
+        return list(index)
+
     length = len(index)
 
     for i in range(length):
diff --git a/pandas/src/generated.pyx b/pandas/src/generated.pyx
index 626a7514e..a67553c5a 100644
--- a/pandas/src/generated.pyx
+++ b/pandas/src/generated.pyx
@@ -1625,6 +1625,9 @@ def groupby_float64(ndarray[float64_t] index, ndarray labels):
     cdef list members
     cdef object idx, key
 
+    if len(labels) == 0:
+        return list(index)
+
     length = len(index)
 
     for i in range(length):
@@ -1650,6 +1653,9 @@ def groupby_object(ndarray[object] index, ndarray labels):
     cdef list members
     cdef object idx, key
 
+    if len(labels) == 0:
+        return list(index)
+
     length = len(index)
 
     for i in range(length):
@@ -1675,6 +1681,9 @@ def groupby_int32(ndarray[int32_t] index, ndarray labels):
     cdef list members
     cdef object idx, key
 
+    if len(labels) == 0:
+        return list(index)
+
     length = len(index)
 
     for i in range(length):
@@ -1700,6 +1709,9 @@ def groupby_int64(ndarray[int64_t] index, ndarray labels):
     cdef list members
     cdef object idx, key
 
+    if len(labels) == 0:
+        return list(index)
+
     length = len(index)
 
     for i in range(length):
@@ -1725,6 +1737,9 @@ def groupby_bool(ndarray[uint8_t] index, ndarray labels):
     cdef list members
     cdef object idx, key
 
+    if len(labels) == 0:
+        return list(index)
+
     length = len(index)
 
     for i in range(length):
diff --git a/pandas/tests/test_groupby.py b/pandas/tests/test_groupby.py
index a4c12cb98..5e1a50d28 100644
--- a/pandas/tests/test_groupby.py
+++ b/pandas/tests/test_groupby.py
@@ -120,6 +120,11 @@ class TestGroupBy(unittest.TestCase):
         # corner cases
         self.assertRaises(Exception, grouped.aggregate, lambda x: x * 2)
 
+        result = self.df.groupby([]).groups
+        expected = range(len(self.df))
+        self.assertEqual(tuple(result), tuple(expected))
+
+        # tests for first / last / nth
         grouped = self.df.groupby('A')
         first = grouped.first()
         expected = grouped.get_group('bar')
@@ -139,6 +144,8 @@ class TestGroupBy(unittest.TestCase):
         expected.name ='foo'
         assert_series_equal(nth.xs('foo'), expected)
 
+
+
     def test_groupby_dict_mapping(self):
         # GH #679
         from pandas import Series
