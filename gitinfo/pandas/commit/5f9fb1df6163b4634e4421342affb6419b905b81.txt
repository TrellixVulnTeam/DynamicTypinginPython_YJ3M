commit 5f9fb1df6163b4634e4421342affb6419b905b81
Author: jbrockmendel <jbrockmendel@gmail.com>
Date:   Tue Feb 25 18:01:47 2020 -0800

    test_combine.py (#32253)

diff --git a/pandas/tests/frame/methods/test_combine.py b/pandas/tests/frame/methods/test_combine.py
new file mode 100644
index 000000000..bc6a67e4e
--- /dev/null
+++ b/pandas/tests/frame/methods/test_combine.py
@@ -0,0 +1,47 @@
+import numpy as np
+import pytest
+
+import pandas as pd
+import pandas._testing as tm
+
+
+class TestCombine:
+    @pytest.mark.parametrize(
+        "data",
+        [
+            pd.date_range("2000", periods=4),
+            pd.date_range("2000", periods=4, tz="US/Central"),
+            pd.period_range("2000", periods=4),
+            pd.timedelta_range(0, periods=4),
+        ],
+    )
+    def test_combine_datetlike_udf(self, data):
+        # GH#23079
+        df = pd.DataFrame({"A": data})
+        other = df.copy()
+        df.iloc[1, 0] = None
+
+        def combiner(a, b):
+            return b
+
+        result = df.combine(other, combiner)
+        tm.assert_frame_equal(result, other)
+
+    def test_combine_generic(self, float_frame):
+        df1 = float_frame
+        df2 = float_frame.loc[float_frame.index[:-5], ["A", "B", "C"]]
+
+        combined = df1.combine(df2, np.add)
+        combined2 = df2.combine(df1, np.add)
+        assert combined["D"].isna().all()
+        assert combined2["D"].isna().all()
+
+        chunk = combined.loc[combined.index[:-5], ["A", "B", "C"]]
+        chunk2 = combined2.loc[combined2.index[:-5], ["A", "B", "C"]]
+
+        exp = (
+            float_frame.loc[float_frame.index[:-5], ["A", "B", "C"]].reindex_like(chunk)
+            * 2
+        )
+        tm.assert_frame_equal(chunk, exp)
+        tm.assert_frame_equal(chunk2, exp)
diff --git a/pandas/tests/frame/test_combine_concat.py b/pandas/tests/frame/test_combine_concat.py
index 36a476d19..321eb5fe9 100644
--- a/pandas/tests/frame/test_combine_concat.py
+++ b/pandas/tests/frame/test_combine_concat.py
@@ -21,27 +21,6 @@ class TestDataFrameConcatCommon:
         )
         tm.assert_series_equal(results, expected)
 
-    @pytest.mark.parametrize(
-        "data",
-        [
-            pd.date_range("2000", periods=4),
-            pd.date_range("2000", periods=4, tz="US/Central"),
-            pd.period_range("2000", periods=4),
-            pd.timedelta_range(0, periods=4),
-        ],
-    )
-    def test_combine_datetlike_udf(self, data):
-        # https://github.com/pandas-dev/pandas/issues/23079
-        df = pd.DataFrame({"A": data})
-        other = df.copy()
-        df.iloc[1, 0] = None
-
-        def combiner(a, b):
-            return b
-
-        result = df.combine(other, combiner)
-        tm.assert_frame_equal(result, other)
-
     def test_concat_multiple_tzs(self):
         # GH 12467
         # combining datetime tz-aware and naive DataFrames
diff --git a/pandas/tests/frame/test_operators.py b/pandas/tests/frame/test_operators.py
index df40c2e7e..542d9835b 100644
--- a/pandas/tests/frame/test_operators.py
+++ b/pandas/tests/frame/test_operators.py
@@ -685,25 +685,6 @@ class TestDataFrameOperators:
         with pytest.raises(ValueError, match=msg1d):
             result = df == tup
 
-    def test_combine_generic(self, float_frame):
-        df1 = float_frame
-        df2 = float_frame.loc[float_frame.index[:-5], ["A", "B", "C"]]
-
-        combined = df1.combine(df2, np.add)
-        combined2 = df2.combine(df1, np.add)
-        assert combined["D"].isna().all()
-        assert combined2["D"].isna().all()
-
-        chunk = combined.loc[combined.index[:-5], ["A", "B", "C"]]
-        chunk2 = combined2.loc[combined2.index[:-5], ["A", "B", "C"]]
-
-        exp = (
-            float_frame.loc[float_frame.index[:-5], ["A", "B", "C"]].reindex_like(chunk)
-            * 2
-        )
-        tm.assert_frame_equal(chunk, exp)
-        tm.assert_frame_equal(chunk2, exp)
-
     def test_inplace_ops_alignment(self):
 
         # inplace ops / ops alignment
