commit ee3068bf6dd73213143aa5c06683706d6947cdc9
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Tue Sep 27 22:53:17 2011 -0400

    ENH: significantly speeding up Index.union

diff --git a/pandas/core/index.py b/pandas/core/index.py
index 66082dd8e..e1bf367fc 100644
--- a/pandas/core/index.py
+++ b/pandas/core/index.py
@@ -235,7 +235,23 @@ class Index(np.ndarray):
         if len(self) == 0:
             return _ensure_index(other)
 
-        return Index(lib.fast_unique_multiple([self, other]))
+        indexer = self.get_indexer(other)
+        indexer = (indexer == -1).nonzero()[0]
+
+        if len(indexer) > 0:
+            other_diff = other.values.take(indexer)
+            result = list(self) + list(other_diff)
+        else:
+            # contained in
+            result = list(self)
+
+        # timsort wins
+        try:
+            result.sort()
+        except Exception:
+            pass
+
+        return Index(result)
 
     def intersection(self, other):
         """
diff --git a/scripts/groupby_sample.py b/scripts/groupby_sample.py
new file mode 100644
index 000000000..03ad51664
--- /dev/null
+++ b/scripts/groupby_sample.py
@@ -0,0 +1,26 @@
+from pandas import *
+import numpy as np
+import string
+
+g1 = np.array(list(string.letters))[:-1]
+g2 = np.arange(51)
+df_small = DataFrame({'group1' : ["a","b","a","a","b","c","c","c","c",
+                                  "c","a","a","a","b","b","b","b"],
+                      'group2' : [1,2,3,4,1,3,5,6,5,4,1,2,3,4,3,2,1],
+                      'value'  : ["apple","pear","orange","apple",
+                                  "banana","durian","lemon","lime",
+                                  "raspberry","durian","peach","nectarine",
+                                  "banana","lemon","guava","blackberry",
+                                  "grape"]})
+value = df_small['value'].values.repeat(3)
+df = DataFrame({'group1' : g1.repeat(40000),
+                'group2' : np.tile(g2, 40000),
+                'value' : value.repeat(40000)})
+
+
+def random_sample():
+    grouped = df.groupby(['group1','group2'])['value']
+    from random import choice
+    choose = lambda group: choice(group.index)
+    indices = grouped.apply(choose)
+    return df.reindex(indices)
