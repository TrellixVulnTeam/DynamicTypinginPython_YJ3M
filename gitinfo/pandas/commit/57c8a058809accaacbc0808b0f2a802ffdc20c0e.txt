commit 57c8a058809accaacbc0808b0f2a802ffdc20c0e
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Mon Oct 24 21:08:56 2011 -0400

    BUG: workaround not being able to use cast=True with boolean dtype in Python 2.5

diff --git a/pandas/src/generate_code.py b/pandas/src/generate_code.py
index 28bc8f2ca..30624bdff 100644
--- a/pandas/src/generate_code.py
+++ b/pandas/src/generate_code.py
@@ -312,13 +312,13 @@ groupby_template = """@cython.wraparound(False)
 @cython.boundscheck(False)
 def groupby_%(name)s(ndarray[%(c_type)s] index, ndarray[object] labels):
     cdef dict result = {}
-    cdef ndarray[uint8_t, cast=True] mask
+    cdef ndarray[uint8_t] mask
     cdef int i, length
     cdef list members
     cdef object idx, key
 
     length = len(index)
-    mask = isnullobj(labels)
+    mask = isnullobj(labels).view(np.uint8)
 
     for i from 0 <= i < length:
         if mask[i]:
diff --git a/pandas/src/generated.pyx b/pandas/src/generated.pyx
index 9d191e0a5..f851d9c1d 100644
--- a/pandas/src/generated.pyx
+++ b/pandas/src/generated.pyx
@@ -938,13 +938,13 @@ def is_monotonic_bool(ndarray[uint8_t] arr):
 @cython.boundscheck(False)
 def groupby_float64(ndarray[float64_t] index, ndarray[object] labels):
     cdef dict result = {}
-    cdef ndarray[uint8_t, cast=True] mask
+    cdef ndarray[uint8_t] mask
     cdef int i, length
     cdef list members
     cdef object idx, key
 
     length = len(index)
-    mask = isnullobj(labels)
+    mask = isnullobj(labels).view(np.uint8)
 
     for i from 0 <= i < length:
         if mask[i]:
@@ -964,13 +964,13 @@ def groupby_float64(ndarray[float64_t] index, ndarray[object] labels):
 @cython.boundscheck(False)
 def groupby_object(ndarray[object] index, ndarray[object] labels):
     cdef dict result = {}
-    cdef ndarray[uint8_t, cast=True] mask
+    cdef ndarray[uint8_t] mask
     cdef int i, length
     cdef list members
     cdef object idx, key
 
     length = len(index)
-    mask = isnullobj(labels)
+    mask = isnullobj(labels).view(np.uint8)
 
     for i from 0 <= i < length:
         if mask[i]:
@@ -990,13 +990,13 @@ def groupby_object(ndarray[object] index, ndarray[object] labels):
 @cython.boundscheck(False)
 def groupby_int32(ndarray[int32_t] index, ndarray[object] labels):
     cdef dict result = {}
-    cdef ndarray[uint8_t, cast=True] mask
+    cdef ndarray[uint8_t] mask
     cdef int i, length
     cdef list members
     cdef object idx, key
 
     length = len(index)
-    mask = isnullobj(labels)
+    mask = isnullobj(labels).view(np.uint8)
 
     for i from 0 <= i < length:
         if mask[i]:
@@ -1016,13 +1016,13 @@ def groupby_int32(ndarray[int32_t] index, ndarray[object] labels):
 @cython.boundscheck(False)
 def groupby_int64(ndarray[int64_t] index, ndarray[object] labels):
     cdef dict result = {}
-    cdef ndarray[uint8_t, cast=True] mask
+    cdef ndarray[uint8_t] mask
     cdef int i, length
     cdef list members
     cdef object idx, key
 
     length = len(index)
-    mask = isnullobj(labels)
+    mask = isnullobj(labels).view(np.uint8)
 
     for i from 0 <= i < length:
         if mask[i]:
@@ -1042,13 +1042,13 @@ def groupby_int64(ndarray[int64_t] index, ndarray[object] labels):
 @cython.boundscheck(False)
 def groupby_bool(ndarray[uint8_t] index, ndarray[object] labels):
     cdef dict result = {}
-    cdef ndarray[uint8_t, cast=True] mask
+    cdef ndarray[uint8_t] mask
     cdef int i, length
     cdef list members
     cdef object idx, key
 
     length = len(index)
-    mask = isnullobj(labels)
+    mask = isnullobj(labels).view(np.uint8)
 
     for i from 0 <= i < length:
         if mask[i]:
diff --git a/pandas/src/parsing.pyx b/pandas/src/parsing.pyx
index 486c2550c..cfc81b1a3 100644
--- a/pandas/src/parsing.pyx
+++ b/pandas/src/parsing.pyx
@@ -99,7 +99,7 @@ def convert_sql_column(ndarray[object] objects):
         Py_ssize_t i, n
         ndarray[float64_t] floats
         ndarray[int64_t] ints
-        ndarray[uint8_t, cast=True] bools
+        ndarray[uint8_t] bools
         bint seen_float = 0
         bint seen_int = 0
         bint seen_bool = 0
@@ -111,7 +111,7 @@ def convert_sql_column(ndarray[object] objects):
 
     floats = np.empty(n, dtype='f8')
     ints = np.empty(n, dtype='i8')
-    bools = np.empty(n, dtype=bool)
+    bools = np.empty(n, dtype=np.uint8)
 
     onan = np.nan
     fnan = np.nan
@@ -153,7 +153,7 @@ def convert_sql_column(ndarray[object] objects):
         elif seen_float:
             return floats
         elif seen_bool:
-            return bools
+            return bools.view(np.bool_)
         else:
             return objects
 
@@ -206,11 +206,11 @@ def sanitize_objects(ndarray[object] values):
 def maybe_convert_bool(ndarray[object] arr):
     cdef:
         Py_ssize_t i, n
-        ndarray[uint8_t, cast=True] result
+        ndarray[uint8_t] result
         object val
 
     n = len(arr)
-    result = np.empty(n, dtype=bool)
+    result = np.empty(n, dtype=np.uint8)
 
     for i from 0 <= i < n:
         val = arr[i]
@@ -222,4 +222,4 @@ def maybe_convert_bool(ndarray[object] arr):
         else:
             return arr
 
-    return result
+    return result.view(np.bool_)
diff --git a/pandas/src/reindex.pyx b/pandas/src/reindex.pyx
index 447e04d05..4ca19f77f 100644
--- a/pandas/src/reindex.pyx
+++ b/pandas/src/reindex.pyx
@@ -91,7 +91,7 @@ def ordered_left_join(ndarray[object] left, ndarray[object] right):
     cdef:
         Py_ssize_t i, j, k, n
         ndarray[int32_t] indexer
-        ndarray[uint8_t, cast=True] mask
+        ndarray[uint8_t] mask
         object val
 
     i = 0
@@ -100,7 +100,7 @@ def ordered_left_join(ndarray[object] left, ndarray[object] right):
     k = len(right)
 
     indexer = np.zeros(n, dtype=np.int32)
-    mask = np.ones(n, dtype=np.bool)
+    mask = np.ones(n, dtype=np.uint8)
 
     for i from 0 <= i < n:
         val = left[i]
@@ -115,7 +115,7 @@ def ordered_left_join(ndarray[object] left, ndarray[object] right):
             indexer[i] = j
             mask[i] = 0
 
-    return indexer, mask
+    return indexer, mask.view(np.bool_)
 
 @cython.wraparound(False)
 @cython.boundscheck(False)
diff --git a/pandas/src/tseries.pyx b/pandas/src/tseries.pyx
index 23a9278e6..f5029ddc8 100644
--- a/pandas/src/tseries.pyx
+++ b/pandas/src/tseries.pyx
@@ -232,7 +232,7 @@ cpdef checknull(object val):
 def isnullobj(ndarray[object] arr):
     cdef Py_ssize_t i, n
     cdef object val
-    cdef ndarray[uint8_t, cast=True] result
+    cdef ndarray[uint8_t] result
 
     n = len(arr)
     result = np.zeros(n, dtype=bool)
@@ -240,7 +240,7 @@ def isnullobj(ndarray[object] arr):
         val = arr[i]
         if _checknull(val):
             result[i] = 1
-    return result
+    return result.view(np.bool_)
 
 def list_to_object_array(list obj):
     '''
