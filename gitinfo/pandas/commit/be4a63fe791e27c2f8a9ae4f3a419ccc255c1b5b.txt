commit be4a63fe791e27c2f8a9ae4f3a419ccc255c1b5b
Author: Jeff Reback <jeff@reback.net>
Date:   Sat Feb 18 12:04:48 2017 -0500

    BUG: testing on windows
    
    - we are passing builds which actually have an error
    - fix the small dtype issues
    
    Author: Jeff Reback <jeff@reback.net>
    
    Closes #15445 from jreback/windows and squashes the following commits:
    
    a5b7fb3 [Jeff Reback] change integer to power comparisions
    eab15c4 [Jeff Reback] don't force remove pandas
    cf3b9bd [Jeff Reback] more windows fixing
    efe6a76 [Jeff Reback] add cython to build
    8194e63 [Jeff Reback] don't use appveyor recipe, just build inplace
    e064825 [Jeff Reback] TST: resample dtype issue xref #15418
    10d9b26 [Jeff Reback] TST: run windows tests so failures show up in appeveyor

diff --git a/appveyor.yml b/appveyor.yml
index d96e1dfcf..1c1469843 100644
--- a/appveyor.yml
+++ b/appveyor.yml
@@ -78,21 +78,19 @@ install:
   # this is now the downloaded conda...
   - cmd: conda info -a
 
-  # build em using the local source checkout in the correct windows env
-  - cmd: '%CMD_IN_ENV% conda build ci\appveyor.recipe -q'
-
   # create our env
-  - cmd: conda create -q -n pandas python=%PYTHON_VERSION% pytest
+  - cmd: conda create -q -n pandas python=%PYTHON_VERSION% cython pytest
   - cmd: activate pandas
   - SET REQ=ci\requirements-%PYTHON_VERSION%-%PYTHON_ARCH%.run
   - cmd: echo "installing requirements from %REQ%"
   - cmd: conda install -n pandas -q --file=%REQ%
   - cmd: conda list -n pandas
   - cmd: echo "installing requirements from %REQ% - done"
-  - ps: conda install -n pandas (conda build ci\appveyor.recipe -q --output)
+
+  # build em using the local source checkout in the correct windows env
+  - cmd: '%CMD_IN_ENV% python setup.py build_ext --inplace'
 
 test_script:
   # tests
   - cmd: activate pandas
-  - cmd: cd \
-  - cmd: python -c "import pandas; pandas.test(['--skip-slow', '--skip-network'])"
+  - cmd: test.bat
diff --git a/ci/appveyor.recipe/bld.bat b/ci/appveyor.recipe/bld.bat
deleted file mode 100644
index 284926fae..000000000
--- a/ci/appveyor.recipe/bld.bat
+++ /dev/null
@@ -1,2 +0,0 @@
-@echo off
-%PYTHON% setup.py install
diff --git a/ci/appveyor.recipe/build.sh b/ci/appveyor.recipe/build.sh
deleted file mode 100644
index f341bce6f..000000000
--- a/ci/appveyor.recipe/build.sh
+++ /dev/null
@@ -1,2 +0,0 @@
-#!/bin/sh
-$PYTHON setup.py install
diff --git a/ci/appveyor.recipe/meta.yaml b/ci/appveyor.recipe/meta.yaml
deleted file mode 100644
index 777fd9d68..000000000
--- a/ci/appveyor.recipe/meta.yaml
+++ /dev/null
@@ -1,37 +0,0 @@
-package:
-    name: pandas
-    version: 0.20.0
-
-build:
-    number: {{environ.get('APPVEYOR_BUILD_NUMBER', 0)}}  # [win]
-    string: np{{ environ.get('CONDA_NPY') }}py{{ environ.get('CONDA_PY') }}_{{ environ.get('APPVEYOR_BUILD_NUMBER', 0) }} # [win]
-
-source:
-
-    # conda-build needs a full clone
-    # rather than a shallow git_url type clone
-    # https://github.com/conda/conda-build/issues/780
-    path: ../../
-
-requirements:
-  build:
-    - python
-    - cython
-    - numpy x.x
-    - setuptools
-    - pytz
-    - python-dateutil
-
-  run:
-    - python
-    - numpy x.x
-    - python-dateutil
-    - pytz
-
-test:
-  imports:
-    - pandas
-
-about:
-  home: http://pandas.pydata.org
-  license: BSD
diff --git a/pandas/tests/indexing/test_timedelta.py b/pandas/tests/indexing/test_timedelta.py
index e5ccd72ca..5f0088382 100644
--- a/pandas/tests/indexing/test_timedelta.py
+++ b/pandas/tests/indexing/test_timedelta.py
@@ -13,8 +13,7 @@ class TestTimedeltaIndexing(tm.TestCase):
                          [0, 1, 2, 10, 4, 5, 6, 7, 8, 9],
                          [10, 10, 10, 3, 4, 5, 6, 7, 8, 9]]
         for cond, data in zip(conditions, expected_data):
-            result = df.copy()
-            result.loc[cond, 'x'] = 10
+            result = df.assign(x=df.mask(cond, 10).astype('int64'))
             expected = pd.DataFrame(data,
                                     index=pd.to_timedelta(range(10), unit='s'),
                                     columns=['x'])
diff --git a/pandas/tests/test_expressions.py b/pandas/tests/test_expressions.py
index 3032a2880..f669ebe37 100644
--- a/pandas/tests/test_expressions.py
+++ b/pandas/tests/test_expressions.py
@@ -12,7 +12,7 @@ import numpy as np
 
 from pandas.core.api import DataFrame, Panel
 from pandas.computation import expressions as expr
-from pandas import compat, _np_version_under1p12
+from pandas import compat, _np_version_under1p11
 from pandas.util.testing import (assert_almost_equal, assert_series_equal,
                                  assert_frame_equal, assert_panel_equal,
                                  assert_panel4d_equal, slow)
@@ -70,10 +70,10 @@ class TestExpressions(tm.TestCase):
             operations.append('div')
         for arith in operations:
 
-            # numpy >= 1.12 doesn't handle integers
+            # numpy >= 1.11 doesn't handle integers
             # raised to integer powers
             # https://github.com/pandas-dev/pandas/issues/15363
-            if arith == 'pow' and not _np_version_under1p12:
+            if arith == 'pow' and not _np_version_under1p11:
                 continue
 
             operator_name = arith
@@ -272,10 +272,10 @@ class TestExpressions(tm.TestCase):
                 for op, op_str in [('add', '+'), ('sub', '-'), ('mul', '*'),
                                    ('div', '/'), ('pow', '**')]:
 
-                    # numpy >= 1.12 doesn't handle integers
+                    # numpy >= 1.11 doesn't handle integers
                     # raised to integer powers
                     # https://github.com/pandas-dev/pandas/issues/15363
-                    if op == 'pow' and not _np_version_under1p12:
+                    if op == 'pow' and not _np_version_under1p11:
                         continue
 
                     if op == 'div':
diff --git a/pandas/tests/tseries/test_resample.py b/pandas/tests/tseries/test_resample.py
index 45bbc88ef..6e999c5b1 100755
--- a/pandas/tests/tseries/test_resample.py
+++ b/pandas/tests/tseries/test_resample.py
@@ -1944,7 +1944,7 @@ class TestDatetimeIndex(Base, tm.TestCase):
         index = pd.date_range('1-1-2000', '2-15-2000', freq='h')
         index2 = pd.date_range('4-15-2000', '5-15-2000', freq='h')
         index3 = index.append(index2)
-        s = pd.Series(range(len(index3)), index=index3)
+        s = pd.Series(range(len(index3)), index=index3, dtype='int64')
         r = s.resample('M')
 
         # Since all elements are unique, these should all be the same
diff --git a/test.bat b/test.bat
index 7f9244abb..2c5f25c24 100644
--- a/test.bat
+++ b/test.bat
@@ -1,4 +1,3 @@
 :: test on windows
 
-:: nosetests --exe -A "not slow and not network and not disabled" pandas %*
-pytest pandas
+pytest --skip-slow --skip-network pandas
