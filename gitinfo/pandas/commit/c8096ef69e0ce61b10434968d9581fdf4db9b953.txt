commit c8096ef69e0ce61b10434968d9581fdf4db9b953
Author: jreback <jeff@reback.net>
Date:   Wed Mar 5 17:35:10 2014 -0500

    BUG: Series.quantile raising on an object dtype (GH6555)

diff --git a/doc/source/release.rst b/doc/source/release.rst
index 183d662f1..03e21a26c 100644
--- a/doc/source/release.rst
+++ b/doc/source/release.rst
@@ -219,7 +219,7 @@ Bug Fixes
   wrong data types and missing values (:issue:`6335`)
 - Inconsistent types in Timestamp addition/subtraction (:issue:`6543`)
 - Bug in indexing: empty list lookup caused ``IndexError`` exceptions (:issue:`6536`, :issue:`6551`)
-
+- Series.quantile raising on an ``object`` dtype (:issue:`6555`)
 
 pandas 0.13.1
 -------------
diff --git a/pandas/core/series.py b/pandas/core/series.py
index 4fc7ced6e..409bbf601 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -1287,7 +1287,7 @@ class Series(base.IndexOpsMixin, generic.NDFrame):
         if len(valid_values) == 0:
             return pa.NA
         result = _quantile(valid_values, q * 100)
-        if result.dtype == _TD_DTYPE:
+        if not np.isscalar and com.is_timedelta64_dtype(result):
             from pandas.tseries.timedeltas import to_timedelta
             return to_timedelta(result)
 
diff --git a/pandas/tests/test_series.py b/pandas/tests/test_series.py
index faf534127..71e506374 100644
--- a/pandas/tests/test_series.py
+++ b/pandas/tests/test_series.py
@@ -2102,6 +2102,10 @@ class TestSeries(tm.TestCase, CheckNameIntegration):
         q = self.ts.quantile(0.9)
         self.assertEqual(q, scoreatpercentile(self.ts.valid(), 90))
 
+        # object dtype
+        q = Series(self.ts,dtype=object).quantile(0.9)
+        self.assertEqual(q, scoreatpercentile(self.ts.valid(), 90))
+
     def test_describe(self):
         _ = self.series.describe()
         _ = self.ts.describe()
