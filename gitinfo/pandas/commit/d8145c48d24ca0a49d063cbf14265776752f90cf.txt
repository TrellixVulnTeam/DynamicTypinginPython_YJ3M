commit d8145c48d24ca0a49d063cbf14265776752f90cf
Author: Adam Klein <adamklein@gmail.com>
Date:   Wed Mar 14 17:11:57 2012 -0400

    ENH: cleaned up interval accessor code

diff --git a/pandas/core/datetools.py b/pandas/core/datetools.py
index b61b28e99..0c98ee623 100644
--- a/pandas/core/datetools.py
+++ b/pandas/core/datetools.py
@@ -331,62 +331,62 @@ class Interval:
     @property
     def year(self):
         base, mult = self.freq
-        return lib.get_skts_field(self.ordinal, base, mult, 'Y')
+        return lib.get_skts_year(self.ordinal, base, mult)
 
     @property
     def month(self):
         base, mult = self.freq
-        return lib.get_skts_field(self.ordinal, base, mult, 'M')
+        return lib.get_skts_month(self.ordinal, base, mult)
 
     @property
     def qyear(self):
         base, mult = self.freq
-        return lib.get_skts_field(self.ordinal, base, mult, 'R')
+        return lib.get_skts_qyear(self.ordinal, base, mult)
 
     @property
     def quarter(self):
         base, mult = self.freq
-        return lib.get_skts_field(self.ordinal, base, mult, 'Q')
+        return lib.get_skts_quarter(self.ordinal, base, mult)
 
     @property
     def day(self):
         base, mult = self.freq
-        return lib.get_skts_field(self.ordinal, base, mult, 'D')
+        return lib.get_skts_day(self.ordinal, base, mult)
 
     @property
     def week(self):
         base, mult = self.freq
-        return lib.get_skts_field(self.ordinal, base, mult, 'E')
+        return lib.get_skts_week(self.ordinal, base, mult)
 
     @property
     def weekday(self):
         base, mult = self.freq
-        return lib.get_skts_field(self.ordinal, base, mult, 'K')
+        return lib.get_skts_weekday(self.ordinal, base, mult)
 
     @property
     def day_of_week(self):
         base, mult = self.freq
-        return lib.get_skts_field(self.ordinal, base, mult, 'W')
+        return lib.get_skts_dow(self.ordinal, base, mult)
 
     @property
     def day_of_year(self):
         base, mult = self.freq
-        return lib.get_skts_field(self.ordinal, base, mult, 'A')
+        return lib.get_skts_doy(self.ordinal, base, mult)
 
     @property
     def hour(self):
         base, mult = self.freq
-        return lib.get_skts_field(self.ordinal, base, mult, 'H')
+        return lib.get_skts_hour(self.ordinal, base, mult)
 
     @property
     def minute(self):
         base, mult = self.freq
-        return lib.get_skts_field(self.ordinal, base, mult, 'T')
+        return lib.get_skts_minute(self.ordinal, base, mult)
 
     @property
     def second(self):
         base, mult = self.freq
-        return lib.get_skts_field(self.ordinal, base, mult, 'S')
+        return lib.get_skts_second(self.ordinal, base, mult)
 
     @classmethod
     def now(cls, freq=None):
diff --git a/pandas/src/datetime.pyx b/pandas/src/datetime.pyx
index 3dd0454ad..c13d7c1c7 100644
--- a/pandas/src/datetime.pyx
+++ b/pandas/src/datetime.pyx
@@ -1930,39 +1930,54 @@ def skts_ordinal_to_dt(long skts_ordinal, int base, long mult):
 def skts_ordinal_to_string(long value, int base, long mult):
     return <object>interval_to_string(remove_mult(value, mult), base)
 
-def get_skts_field(long value, int base, long mult, object fld):
-    return _get_skts_field(value, base, mult, (<char*>fld)[0])
+# interval accessors
 
-cdef int _get_skts_field(long value, int base, long mult, char fld) except -1:
-    cdef:
-        date_info dinfo
+cpdef int get_skts_year(long value, int base, long mult) except -1:
+    value = remove_mult(value, mult)
+    return iyear(value, base)
+
+cpdef int get_skts_qyear(long value, int base, long mult) except -1:
+    value = remove_mult(value, mult)
+    return iqyear(value, base)
+
+cpdef int get_skts_quarter(long value, int base, long mult) except -1:
+    value = remove_mult(value, mult)
+    return iquarter(value, base)
+
+cpdef int get_skts_month(long value, int base, long mult) except -1:
+    value = remove_mult(value, mult)
+    return imonth(value, base)
+
+cpdef int get_skts_day(long value, int base, long mult) except -1:
+    value = remove_mult(value, mult)
+    return iday(value, base)
+
+cpdef int get_skts_hour(long value, int base, long mult) except -1:
+    value = remove_mult(value, mult)
+    return ihour(value, base)
+
+cpdef int get_skts_minute(long value, int base, long mult) except -1:
+    value = remove_mult(value, mult)
+    return iminute(value, base)
+
+cpdef int get_skts_second(long value, int base, long mult) except -1:
+    value = remove_mult(value, mult)
+    return isecond(value, base)
+
+cpdef int get_skts_dow(long value, int base, long mult) except -1:
+    value = remove_mult(value, mult)
+    return iday_of_week(value, base)
+
+cpdef int get_skts_week(long value, int base, long mult) except -1:
+    value = remove_mult(value, mult)
+    return iweek(value, base)
+
+cpdef int get_skts_weekday(long value, int base, long mult) except -1:
+    value = remove_mult(value, mult)
+    return iweekday(value, base)
 
+cpdef int get_skts_doy(long value, int base, long mult) except -1:
     value = remove_mult(value, mult)
+    return iday_of_year(value, base)
 
-    if fld == 'Y':
-        return iyear(value, base)
-    elif fld == 'R':
-        return iqyear(value, base)
-    elif fld == 'Q':
-        return iquarter(value, base)
-    elif fld == 'M':
-        return imonth(value, base)
-    elif fld == 'D':
-        return iday(value, base)
-    elif fld == 'H':
-        return ihour(value, base)
-    elif fld == 'T':
-        return iminute(value, base)
-    elif fld == 'S':
-        return isecond(value, base)
-    elif fld == 'W':
-        return iday_of_week(value, base)
-    elif fld == 'E':
-        return iweek(value, base)
-    elif fld == 'K': # python weekday
-        return iweekday(value, base)
-    elif fld == 'A':
-        return iday_of_year(value, base)
-
-    raise ValueError("Bad field passed to _get_skts_field")
 
