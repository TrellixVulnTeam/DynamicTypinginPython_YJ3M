commit 4c4c7b38bb642390b2bff1caa97a2a2898718d0b
Author: Chang She <chang@lambdafoundry.com>
Date:   Thu May 3 10:14:29 2012 -0400

    BUG: coerce index into DatetimeIndex if coercing from Series to TimeSeries
    GH # 1187

diff --git a/pandas/core/series.py b/pandas/core/series.py
index c6baa753e..db995165d 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -289,6 +289,8 @@ class Series(np.ndarray, generic.PandasObject):
 
         # Change the class of the array to be the subclass type.
         if index.is_all_dates:
+            if not isinstance(index, (DatetimeIndex, PeriodIndex)):
+                index = DatetimeIndex(index)
             subarr = subarr.view(TimeSeries)
         else:
             subarr = subarr.view(Series)
diff --git a/pandas/tests/test_series.py b/pandas/tests/test_series.py
index 7a63c0114..f364ddbe6 100644
--- a/pandas/tests/test_series.py
+++ b/pandas/tests/test_series.py
@@ -14,7 +14,7 @@ import numpy.ma as ma
 from pandas import (Index, Series, TimeSeries, DataFrame, isnull, notnull,
                     bdate_range, date_range)
 from pandas.core.index import MultiIndex
-from pandas.tseries.index import Timestamp
+from pandas.tseries.index import Timestamp, DatetimeIndex
 
 import pandas.core.datetools as datetools
 import pandas.core.nanops as nanops
@@ -2532,6 +2532,11 @@ class TestSeriesNonUnique(unittest.TestCase):
         df = ser.reset_index(name='value2')
         self.assert_('value2' in df)
 
+    def test_timeseries_coercion(self):
+        idx = tm.makeDateIndex(10000)
+        ser = Series(np.random.randn(len(idx)), idx.astype(object))
+        self.assert_(isinstance(ser, TimeSeries))
+        self.assert_(isinstance(ser.index, DatetimeIndex))
 
 if __name__ == '__main__':
     nose.runmodule(argv=[__file__,'-vvs','-x','--pdb', '--pdb-failure'],
