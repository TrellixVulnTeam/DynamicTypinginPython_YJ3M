commit b291dd68356ffdfa9dec25b8d6259e717fa97de9
Author: Nicolas Bonnotte <nicolas.bonnotte@gmail.com>
Date:   Fri Jan 29 12:16:46 2016 +0100

    TST drop and groupby on dataframes with non-lexsorted multi-index
    
    closes #11640
    closes #11717

diff --git a/pandas/indexes/multi.py b/pandas/indexes/multi.py
index 1b7f057de..a9a40f584 100644
--- a/pandas/indexes/multi.py
+++ b/pandas/indexes/multi.py
@@ -1092,7 +1092,7 @@ class MultiIndex(Index):
                 elif is_bool_indexer(loc):
                     if self.lexsort_depth == 0:
                         warnings.warn('dropping on a non-lexsorted multi-index'
-                                      'without a level parameter may impact '
+                                      ' without a level parameter may impact '
                                       'performance.',
                                       PerformanceWarning,
                                       stacklevel=2)
diff --git a/pandas/tests/frame/test_axis_select_reindex.py b/pandas/tests/frame/test_axis_select_reindex.py
index 32df9fac4..7f7f890a8 100644
--- a/pandas/tests/frame/test_axis_select_reindex.py
+++ b/pandas/tests/frame/test_axis_select_reindex.py
@@ -114,6 +114,29 @@ class TestDataFrameSelectReindex(tm.TestCase, TestData):
         df.drop(labels=df[df.b > 0].index, inplace=True)
         assert_frame_equal(df, expected)
 
+    def test_drop_multiindex_not_lexsorted(self):
+        # GH 11640
+
+        # define the lexsorted version
+        lexsorted_mi = MultiIndex.from_tuples(
+            [('a', ''), ('b1', 'c1'), ('b2', 'c2')], names=['b', 'c'])
+        lexsorted_df = DataFrame([[1, 3, 4]], columns=lexsorted_mi)
+        self.assertTrue(lexsorted_df.columns.is_lexsorted())
+
+        # define the non-lexsorted version
+        not_lexsorted_df = DataFrame(columns=['a', 'b', 'c', 'd'],
+                                     data=[[1, 'b1', 'c1', 3],
+                                           [1, 'b2', 'c2', 4]])
+        not_lexsorted_df = not_lexsorted_df.pivot_table(
+            index='a', columns=['b', 'c'], values='d')
+        not_lexsorted_df = not_lexsorted_df.reset_index()
+        self.assertFalse(not_lexsorted_df.columns.is_lexsorted())
+
+        # compare the results
+        tm.assert_frame_equal(lexsorted_df, not_lexsorted_df)
+        tm.assert_frame_equal(lexsorted_df.drop('a', axis=1),
+                              not_lexsorted_df.drop('a', axis=1))
+
     def test_reindex(self):
         newFrame = self.frame.reindex(self.ts1.index)
 
diff --git a/pandas/tests/test_groupby.py b/pandas/tests/test_groupby.py
index 7e40885fd..753bbccf8 100644
--- a/pandas/tests/test_groupby.py
+++ b/pandas/tests/test_groupby.py
@@ -4198,6 +4198,29 @@ class TestGroupBy(tm.TestCase):
 
         tm.assert_frame_equal(res, exp)
 
+    def test_groupby_multiindex_not_lexsorted(self):
+        # GH 11640
+
+        # define the lexsorted version
+        lexsorted_mi = MultiIndex.from_tuples(
+            [('a', ''), ('b1', 'c1'), ('b2', 'c2')], names=['b', 'c'])
+        lexsorted_df = DataFrame([[1, 3, 4]], columns=lexsorted_mi)
+        self.assertTrue(lexsorted_df.columns.is_lexsorted())
+
+        # define the non-lexsorted version
+        not_lexsorted_df = DataFrame(columns=['a', 'b', 'c', 'd'],
+                                     data=[[1, 'b1', 'c1', 3],
+                                           [1, 'b2', 'c2', 4]])
+        not_lexsorted_df = not_lexsorted_df.pivot_table(
+            index='a', columns=['b', 'c'], values='d')
+        not_lexsorted_df = not_lexsorted_df.reset_index()
+        self.assertFalse(not_lexsorted_df.columns.is_lexsorted())
+
+        # compare the results
+        tm.assert_frame_equal(lexsorted_df, not_lexsorted_df)
+        tm.assert_frame_equal(lexsorted_df.groupby('a').mean(),
+                              not_lexsorted_df.groupby('a').mean())
+
     def test_groupby_levels_and_columns(self):
         # GH9344, GH9049
         idx_names = ['x', 'y']
