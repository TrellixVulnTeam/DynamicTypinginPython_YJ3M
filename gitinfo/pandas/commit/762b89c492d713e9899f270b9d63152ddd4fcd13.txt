commit 762b89c492d713e9899f270b9d63152ddd4fcd13
Author: jbrockmendel <jbrockmendel@gmail.com>
Date:   Tue Oct 1 09:51:32 2019 -0700

    CLN: Exception in io/plotting (#28720)

diff --git a/pandas/plotting/_matplotlib/tools.py b/pandas/plotting/_matplotlib/tools.py
index 1c9bd01b1..eddc9b4cd 100644
--- a/pandas/plotting/_matplotlib/tools.py
+++ b/pandas/plotting/_matplotlib/tools.py
@@ -12,14 +12,11 @@ from pandas.core.dtypes.generic import ABCDataFrame, ABCIndexClass, ABCSeries
 
 def format_date_labels(ax, rot):
     # mini version of autofmt_xdate
-    try:
-        for label in ax.get_xticklabels():
-            label.set_ha("right")
-            label.set_rotation(rot)
-        fig = ax.get_figure()
-        fig.subplots_adjust(bottom=0.2)
-    except Exception:  # pragma: no cover
-        pass
+    for label in ax.get_xticklabels():
+        label.set_ha("right")
+        label.set_rotation(rot)
+    fig = ax.get_figure()
+    fig.subplots_adjust(bottom=0.2)
 
 
 def table(ax, data, rowLabels=None, colLabels=None, **kwargs):
diff --git a/pandas/tests/io/test_sql.py b/pandas/tests/io/test_sql.py
index 89bc98b5a..7491cef17 100644
--- a/pandas/tests/io/test_sql.py
+++ b/pandas/tests/io/test_sql.py
@@ -539,13 +539,16 @@ class PandasSQLTest:
         with self.pandasSQL.run_transaction() as trans:
             trans.execute("CREATE TABLE test_trans (A INT, B TEXT)")
 
+        class DummyException(Exception):
+            pass
+
         # Make sure when transaction is rolled back, no rows get inserted
         ins_sql = "INSERT INTO test_trans (A,B) VALUES (1, 'blah')"
         try:
             with self.pandasSQL.run_transaction() as trans:
                 trans.execute(ins_sql)
-                raise Exception("error")
-        except Exception:
+                raise DummyException("error")
+        except DummyException:
             # ignore raised exception
             pass
         res = self.pandasSQL.read_query("SELECT * FROM test_trans")
diff --git a/pandas/tests/plotting/common.py b/pandas/tests/plotting/common.py
index 5a591f72d..65d0c3d9f 100644
--- a/pandas/tests/plotting/common.py
+++ b/pandas/tests/plotting/common.py
@@ -536,7 +536,7 @@ def _check_plot_works(f, filterwarnings="always", **kwargs):
 
             plt.clf()
 
-            ax = kwargs.get("ax", fig.add_subplot(211))  # noqa
+            kwargs.get("ax", fig.add_subplot(211))
             ret = f(**kwargs)
 
             assert_is_valid_plot_return_object(ret)
diff --git a/pandas/tests/plotting/test_datetimelike.py b/pandas/tests/plotting/test_datetimelike.py
index e2b7f2819..be24f1028 100644
--- a/pandas/tests/plotting/test_datetimelike.py
+++ b/pandas/tests/plotting/test_datetimelike.py
@@ -1553,12 +1553,9 @@ def _check_plot_works(f, freq=None, series=None, *args, **kwargs):
             assert ax.freq == freq
 
         ax = fig.add_subplot(212)
-        try:
-            kwargs["ax"] = ax
-            ret = f(*args, **kwargs)
-            assert ret is not None  # do something more intelligent
-        except Exception:
-            pass
+        kwargs["ax"] = ax
+        ret = f(*args, **kwargs)
+        assert ret is not None  # TODO: do something more intelligent
 
         with ensure_clean(return_filelike=True) as path:
             plt.savefig(path)
