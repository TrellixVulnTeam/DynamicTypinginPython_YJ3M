commit eff90322117fe6194122490d0d75bb391b3afdb9
Author: jreback <jeff@reback.net>
Date:   Fri May 17 10:13:56 2013 -0400

    BUG: validate ndarray size correctly with assigning pieces to a DataFrame

diff --git a/pandas/core/indexing.py b/pandas/core/indexing.py
index a53afad36..1cbc5abdc 100644
--- a/pandas/core/indexing.py
+++ b/pandas/core/indexing.py
@@ -144,8 +144,8 @@ class _NDFrameIndexer(object):
                             setter(item, np.nan)
 
                 # we have an equal len ndarray
-                elif isinstance(value, np.ndarray) and value.ndim > 1:
-                    if len(labels) != len(value):
+                elif isinstance(value, np.ndarray) and value.ndim == 2:
+                    if len(labels) != value.shape[1]:
                         raise ValueError('Must have equal len keys and value when'
                                          ' setting with an ndarray')
 
diff --git a/pandas/tests/test_indexing.py b/pandas/tests/test_indexing.py
index c62a0037e..f6d106f42 100644
--- a/pandas/tests/test_indexing.py
+++ b/pandas/tests/test_indexing.py
@@ -874,11 +874,21 @@ class TestIndexing(unittest.TestCase):
                               'col1':Series([0,1,4,6,8,10],dtype='float64'),
                               'col2':[12,7,16,np.nan,20,22]})
         
+
+        # frame on rhs
         df2.ix[mask, cols]= dft.ix[mask, cols]
         assert_frame_equal(df2,expected)
         df2.ix[mask, cols]= dft.ix[mask, cols]
         assert_frame_equal(df2,expected)
 
+        # with an ndarray on rhs
+        df2 = df.copy()
+        df2.ix[mask, cols]= dft.ix[mask, cols].values
+        assert_frame_equal(df2,expected)
+        df2.ix[mask, cols]= dft.ix[mask, cols].values
+        assert_frame_equal(df2,expected)
+
+
 if __name__ == '__main__':
     import nose
     nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
