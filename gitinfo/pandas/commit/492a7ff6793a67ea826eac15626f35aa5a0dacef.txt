commit 492a7ff6793a67ea826eac15626f35aa5a0dacef
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Sat Oct 1 23:48:32 2011 -0400

    TST: test DataFrame.take for mixed-dtype

diff --git a/RELEASE.rst b/RELEASE.rst
index c08f34c1a..c062aa607 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -23,6 +23,7 @@ This is an incremental bug fix and performance enhancement release
   - Added `is_monotonic` property to `Index` classes with associated Cython
     code to evaluate the monotonicity of the `Index` values
   - Add method `get_level_values` to `MultiIndex`
+  - Implemented shallow copy of `BlockManager` object in `DataFrame` internals
 
 **Improvements to existing features**
 
diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 6c18bf643..efb5deeca 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -1095,6 +1095,7 @@ class DataFrame(NDFrame):
                 new_data = self._data.take(indices, axis=1)
                 return DataFrame(new_data)
             else:
+                new_columns = self.columns.take(indices)
                 return self.reindex(columns=new_columns)
         else:
             new_values = self.values.take(indices, axis=axis)
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index b2612c103..3f5e6777d 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -3006,6 +3006,22 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
         df = DataFrame(index=range(20), columns=cols, data=data)
         self.assert_(df.columns.tolist() == df.fillna().columns.tolist())
 
+    def test_take(self):
+        # homogeneous
+        #----------------------------------------
+
+        # mixed-dtype
+        #----------------------------------------
+        order = [4, 1, 2, 0, 3]
+
+        result = self.mixed_frame.take(order, axis=0)
+        expected = self.mixed_frame.reindex(self.mixed_frame.index.take(order))
+        assert_frame_equal(result, expected)
+
+        # axis = 1
+        result = self.mixed_frame.take(order, axis=1)
+        expected = self.mixed_frame.ix[:, ['foo', 'B', 'C', 'A', 'D']]
+        assert_frame_equal(result, expected)
 
 if __name__ == '__main__':
     # unittest.main()
