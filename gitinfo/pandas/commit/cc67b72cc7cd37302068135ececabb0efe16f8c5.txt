commit cc67b72cc7cd37302068135ececabb0efe16f8c5
Author: ajenkins-cargometrics <ajenkins@cargometrics.com>
Date:   Tue Apr 26 09:19:41 2016 -0400

    BUG: Preserve timezone in unaligned assignments
    
    closes #12981
    
    Author: ajenkins-cargometrics <ajenkins@cargometrics.com>
    
    Closes #12982 from ajenkins-cargometrics/GH12981 and squashes the following commits:
    
    6689f57 [ajenkins-cargometrics] TST: Add test with mask on LHS for test_setitem_with_unaligned_tz_aware_datetime_column
    1347398 [ajenkins-cargometrics] BUG: Preserve timezone in unaligned assignments

diff --git a/doc/source/whatsnew/v0.18.1.txt b/doc/source/whatsnew/v0.18.1.txt
index c270f1b9f..5ef508693 100644
--- a/doc/source/whatsnew/v0.18.1.txt
+++ b/doc/source/whatsnew/v0.18.1.txt
@@ -387,6 +387,7 @@ Bug Fixes
 
 
 - Bug in ``read_csv`` with the C engine when specifying ``skiprows`` with newlines in quoted items (:issue:`10911`, `12775`)
+- Bug in ``DataFrame`` timezone lost when assigning tz-aware datetime ``Series`` with alignment (:issue `12981`)
 
 
 
diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 55ec24793..9c87d1c88 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -2538,7 +2538,7 @@ class DataFrame(NDFrame):
 
                 # GH 4107
                 try:
-                    value = value.reindex(self.index).values
+                    value = value.reindex(self.index)._values
                 except Exception as e:
 
                     # duplicate axis
diff --git a/pandas/tests/frame/test_indexing.py b/pandas/tests/frame/test_indexing.py
index 2a3ee774a..2006905fe 100644
--- a/pandas/tests/frame/test_indexing.py
+++ b/pandas/tests/frame/test_indexing.py
@@ -1940,6 +1940,20 @@ class TestDataFrameIndexing(tm.TestCase, TestData):
         exp = pd.Series([1, 0, 0], name='new_column')
         assert_series_equal(df['new_column'], exp)
 
+    def test_setitem_with_unaligned_tz_aware_datetime_column(self):
+        # GH 12981
+        # Assignment of unaligned offset-aware datetime series.
+        # Make sure timezone isn't lost
+        column = pd.Series(pd.date_range('2015-01-01', periods=3, tz='utc'),
+                           name='dates')
+        df = pd.DataFrame({'dates': column})
+        df['dates'] = column[[1, 0, 2]]
+        assert_series_equal(df['dates'], column)
+
+        df = pd.DataFrame({'dates': column})
+        df.loc[[0, 1, 2], 'dates'] = column[[1, 0, 2]]
+        assert_series_equal(df['dates'], column)
+
     def test_setitem_datetime_coercion(self):
         # GH 1048
         df = pd.DataFrame({'c': [pd.Timestamp('2010-10-01')] * 3})
@@ -1949,7 +1963,7 @@ class TestDataFrameIndexing(tm.TestCase, TestData):
         df.loc[2, 'c'] = date(2005, 5, 5)
         self.assertEqual(pd.Timestamp('2005-05-05'), df.loc[2, 'c'])
 
-    def test_datetimelike_setitem_with_inference(self):
+    def test_setitem_datetimelike_with_inference(self):
         # GH 7592
         # assignment of timedeltas with NaT
 
