commit fbcbefdc9fad999b212754fd0ac7705d6c076c27
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Wed Oct 12 15:23:37 2011 -0400

    ENH: hugely sped up MultiIndex -> Index of tuples conversion using small Cython function. Multi-key joining ~10x faster now

diff --git a/pandas/core/common.py b/pandas/core/common.py
index cadda5d43..715c91a99 100644
--- a/pandas/core/common.py
+++ b/pandas/core/common.py
@@ -518,7 +518,7 @@ def _asarray_tuplesafe(values, dtype=None):
     if not isinstance(values, (list, tuple, np.ndarray)):
         values = list(values)
 
-    if isinstance(values, list) and dtype == np.object_:
+    if isinstance(values, list) and dtype in [np.object_, object]:
         return lib.list_to_object_array(values)
 
     result = np.asarray(values, dtype=dtype)
diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 8297ffabf..abf7b2f3e 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -2221,7 +2221,8 @@ class DataFrame(NDFrame):
 
         if isinstance(on, (list, tuple)):
             join_key = zip(*[self[k] for k in on])
-            join_key = common._asarray_tuplesafe(join_key, dtype=object)
+            join_key = common._asarray_tuplesafe(join_key,
+                                                 dtype=np.object_)
         else:
             join_key = np.asarray(self[on])
 
diff --git a/scripts/bench_join_multi.py b/scripts/bench_join_multi.py
new file mode 100644
index 000000000..c591ca7d8
--- /dev/null
+++ b/scripts/bench_join_multi.py
@@ -0,0 +1,54 @@
+from pandas import *
+
+import numpy as np
+from itertools import izip
+from pandas.util.testing import rands
+import pandas._tseries as lib
+
+N = 100000
+
+key1 = [rands(10) for _ in xrange(N)]
+key2 = [rands(10) for _ in xrange(N)]
+
+zipped = izip(key1, key2)
+
+def _zip(*args):
+    arr = np.empty(N, dtype=object)
+    arr[:] = zip(*args)
+    return arr
+
+def _zip2(*args):
+    return lib.list_to_object_array(zip(*args))
+
+index = MultiIndex.from_arrays([key1, key2])
+to_join = DataFrame({'j1' : np.random.randn(100000)}, index=index)
+
+data = DataFrame({'A' : np.random.randn(500000),
+                  'key1' : np.repeat(key1, 5),
+                  'key2' : np.repeat(key2, 5)})
+
+# data.join(to_join, on=['key1', 'key2'])
+
+"""
+Cython function for list_to_object_array
+
+def list_to_object_array(list obj):
+    '''
+    Convert list to object ndarray. Seriously can't believe I had to write this
+    function
+    '''
+    cdef:
+        Py_ssize_t i, n
+        ndarray[object] arr
+
+    n = len(obj)
+    arr = np.empty(n, dtype=object)
+
+    for i from 0 <= i < n:
+        arr[i] = obj[i]
+
+    return arr
+"""
+
+
+
