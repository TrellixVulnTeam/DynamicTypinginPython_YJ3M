commit dbc446ad3e9d3bf52c01ec1088ef5f3b48bfef89
Author: jbrockmendel <jbrockmendel@gmail.com>
Date:   Sat Feb 22 13:07:29 2020 -0800

    CLN: no kwargs for take_with_is_copy (#32181)

diff --git a/pandas/core/generic.py b/pandas/core/generic.py
index 40e59f041..a6ab0d403 100644
--- a/pandas/core/generic.py
+++ b/pandas/core/generic.py
@@ -3262,9 +3262,7 @@ class NDFrame(PandasObject, SelectionMixin, indexing.IndexingMixin):
         )
         return self._constructor(new_data).__finalize__(self)
 
-    def _take_with_is_copy(
-        self: FrameOrSeries, indices, axis=0, **kwargs
-    ) -> FrameOrSeries:
+    def _take_with_is_copy(self: FrameOrSeries, indices, axis=0) -> FrameOrSeries:
         """
         Internal version of the `take` method that sets the `_is_copy`
         attribute to keep track of the parent dataframe (using in indexing
@@ -3272,7 +3270,7 @@ class NDFrame(PandasObject, SelectionMixin, indexing.IndexingMixin):
 
         See the docstring of `take` for full explanation of the parameters.
         """
-        result = self.take(indices=indices, axis=axis, **kwargs)
+        result = self.take(indices=indices, axis=axis)
         # Maybe set copy if we didn't actually change the index.
         if not result._get_axis(axis).equals(self._get_axis(axis)):
             result._set_is_copy(self)
diff --git a/pandas/core/series.py b/pandas/core/series.py
index 77f9df0f4..3ded02598 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -812,7 +812,7 @@ class Series(base.IndexOpsMixin, generic.NDFrame):
             new_values, index=new_index, fastpath=True
         ).__finalize__(self)
 
-    def _take_with_is_copy(self, indices, axis=0, **kwargs):
+    def _take_with_is_copy(self, indices, axis=0):
         """
         Internal version of the `take` method that sets the `_is_copy`
         attribute to keep track of the parent dataframe (using in indexing
@@ -821,7 +821,7 @@ class Series(base.IndexOpsMixin, generic.NDFrame):
 
         See the docstring of `take` for full explanation of the parameters.
         """
-        return self.take(indices=indices, axis=axis, **kwargs)
+        return self.take(indices=indices, axis=axis)
 
     def _ixs(self, i: int, axis: int = 0):
         """
