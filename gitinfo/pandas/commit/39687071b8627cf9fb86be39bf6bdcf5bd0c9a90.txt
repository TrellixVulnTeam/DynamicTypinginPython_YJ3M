commit 39687071b8627cf9fb86be39bf6bdcf5bd0c9a90
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Thu Jun 21 18:26:07 2012 -0400

    RLS: 0.8.0 what's new docs

diff --git a/RELEASE.rst b/RELEASE.rst
index d187b211e..120f7fca0 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -43,7 +43,7 @@ pandas 0.8.0
     conversion method (#1018)
   - Implement robust frequency inference function and `inferred_freq` attribute
     on DatetimeIndex (#391)
-  - New ``tz_convert`` methods in Series / DataFrame
+  - New ``tz_convert`` and ``tz_localize`` methods in Series / DataFrame
   - Convert DatetimeIndexes to UTC if time zones are different in join/setops
     (#864)
   - Add limit argument for forward/backward filling to reindex, fillna,
diff --git a/doc/source/whatsnew/v0.4.x.txt b/doc/source/v0.4.x.txt
similarity index 100%
rename from doc/source/whatsnew/v0.4.x.txt
rename to doc/source/v0.4.x.txt
diff --git a/doc/source/whatsnew/v0.5.0.txt b/doc/source/v0.5.0.txt
similarity index 100%
rename from doc/source/whatsnew/v0.5.0.txt
rename to doc/source/v0.5.0.txt
diff --git a/doc/source/whatsnew/v0.6.0.txt b/doc/source/v0.6.0.txt
similarity index 100%
rename from doc/source/whatsnew/v0.6.0.txt
rename to doc/source/v0.6.0.txt
diff --git a/doc/source/whatsnew/v0.6.1.txt b/doc/source/v0.6.1.txt
similarity index 100%
rename from doc/source/whatsnew/v0.6.1.txt
rename to doc/source/v0.6.1.txt
diff --git a/doc/source/whatsnew/v0.7.0.txt b/doc/source/v0.7.0.txt
similarity index 100%
rename from doc/source/whatsnew/v0.7.0.txt
rename to doc/source/v0.7.0.txt
diff --git a/doc/source/whatsnew/v0.7.1.txt b/doc/source/v0.7.1.txt
similarity index 100%
rename from doc/source/whatsnew/v0.7.1.txt
rename to doc/source/v0.7.1.txt
diff --git a/doc/source/whatsnew/v0.7.2.txt b/doc/source/v0.7.2.txt
similarity index 100%
rename from doc/source/whatsnew/v0.7.2.txt
rename to doc/source/v0.7.2.txt
diff --git a/doc/source/whatsnew/v0.7.3.txt b/doc/source/v0.7.3.txt
similarity index 100%
rename from doc/source/whatsnew/v0.7.3.txt
rename to doc/source/v0.7.3.txt
diff --git a/doc/source/whatsnew/v0.8.0.txt b/doc/source/v0.8.0.txt
similarity index 86%
rename from doc/source/whatsnew/v0.8.0.txt
rename to doc/source/v0.8.0.txt
index cbf094752..c4049c208 100644
--- a/doc/source/whatsnew/v0.8.0.txt
+++ b/doc/source/v0.8.0.txt
@@ -67,15 +67,16 @@ Time series changes and improvements
   PeriodIndex and DatetimeIndex
 - New Timestamp data type subclasses `datetime.datetime`, providing the same
   interface while enabling working with nanosecond-resolution data. Also
-  provides **easy time zone conversions**
-- Enhanced support for **time zones**. Add `tz_convert` methods to TimeSeries
-  and DataFrame. All timestamps are stored as UTC; Timestamps from
-  DatetimeIndex objects with time zone set will be localized to localtime. Time
-  zone conversions are therefore essentially free. User needs to know very
-  little about pytz library now; only time zone names as as strings are
-  required. Timestamps are equal if and only if their UTC timestamps
-  match. Operations between time series with different time zones will result
-  in a UTC-indexed time series
+  provides :ref:`easy time zone conversions <timeseries.timezone>`.
+- Enhanced support for :ref:`time zones <timeseries.timezone>`. Add
+  `tz_convert` and ``tz_lcoalize`` methods to TimeSeries and DataFrame. All
+  timestamps are stored as UTC; Timestamps from DatetimeIndex objects with time
+  zone set will be localized to localtime. Time zone conversions are therefore
+  essentially free. User needs to know very little about pytz library now; only
+  time zone names as as strings are required. Time zone-aware timestamps are
+  equal if and only if their UTC timestamps match. Operations between time
+  zone-aware time series with different time zones will result in a UTC-indexed
+  time series.
 - Time series **string indexing conveniences** / shortcuts: slice years, year
   and month, and index values with strings
 - Enhanced time series **plotting**; adaptation of scikits.timeseries
@@ -115,6 +116,7 @@ Other new features
   function) for computing a categorical variable from a continuous variable by
   binning values either into value-based (``cut``) or quantile-based (``qcut``)
   bins
+- Rename ``Factor`` to ``Categorical`` and add a number of usability features
 - Add :ref:`limit <missing_data.fillna.limit>` argument to fillna/reindex
 - More flexible multiple function application in GroupBy, and can pass list
   (name, function) tuples to get result in particular order with given names
@@ -135,8 +137,8 @@ Other new features
   memory usage than Python's dict
 - Add first, last, min, max, and prod optimized GroupBy functions
 - New :ref:`ordered_merge <merging.ordered_merge>` function
-- Add flexible :ref:`comparison <basics.binop>` instance methods eq, ne, lt, gt, etc. to DataFrame,
-  Series
+- Add flexible :ref:`comparison <basics.binop>` instance methods eq, ne, lt,
+  gt, etc. to DataFrame, Series
 - Improve :ref:`scatter_matrix <visualization.scatter_matrix>` plotting
   function and add histogram or kernel density estimates to diagonal
 - Add :ref:`'kde' <visualization.kde>` plot option for density plots
@@ -148,6 +150,42 @@ Other new features
 - Can select multiple columns from GroupBy
 - Add :ref:`update <merging.combine_first.update>` methods to Series/DataFrame
   for updating values in place
+- Add ``any`` and ``all method to DataFrame
+
+New plotting methods
+~~~~~~~~~~~~~~~~~~~~
+
+.. ipython:: python
+   :suppress:
+
+   import pandas as pd
+   fx = pd.load('data/fx_prices')
+   import matplotlib.pyplot as plt
+
+``Series.plot`` now supports a ``secondary_y`` option:
+
+.. ipython:: python
+
+   plt.figure()
+
+   fx['FR'].plot(style='g')
+
+   @savefig whatsnew_secondary_y.png width=4.5in
+   fx['IT'].plot(style='k--', secondary_y=True)
+
+Vytautas Jancauskas, the 2012 GSOC participant, has added many new plot
+types. For example, ``'kde'`` is a new option:
+
+.. ipython:: python
+
+   s = Series(np.concatenate((np.random.randn(1000),
+                              np.random.randn(1000) * 0.5 + 3)))
+   plt.figure()
+   s.hist(normed=True, alpha=0.2)
+   @savefig whatsnew_kde.png width=4.5in
+   s.plot(kind='kde')
+
+See :ref:`the plotting page <visualization.other>` for much more.
 
 Other API changes
 ~~~~~~~~~~~~~~~~~
diff --git a/doc/source/visualization.rst b/doc/source/visualization.rst
index dcf0f3b87..eb15d7f77 100644
--- a/doc/source/visualization.rst
+++ b/doc/source/visualization.rst
@@ -121,6 +121,7 @@ You can pass an ``ax`` argument to ``Series.plot`` to plot on a particular axis:
    @savefig series_plot_multi.png width=4.5in
    df['D'].plot(ax=axes[1,1]); axes[1,1].set_title('D')
 
+.. _visualization.other:
 
 Other plotting features
 -----------------------
diff --git a/doc/source/whatsnew.rst b/doc/source/whatsnew.rst
index b930bdbbd..e60baa378 100644
--- a/doc/source/whatsnew.rst
+++ b/doc/source/whatsnew.rst
@@ -16,21 +16,21 @@ What's New
 
 These are new features and improvements of note in each release.
 
-.. include:: whatsnew/v0.8.0.txt
+.. include:: v0.8.0.txt
 
-.. include:: whatsnew/v0.7.3.txt
+.. include:: v0.7.3.txt
 
-.. include:: whatsnew/v0.7.2.txt
+.. include:: v0.7.2.txt
 
-.. include:: whatsnew/v0.7.1.txt
+.. include:: v0.7.1.txt
 
-.. include:: whatsnew/v0.7.0.txt
+.. include:: v0.7.0.txt
 
-.. include:: whatsnew/v0.6.1.txt
+.. include:: v0.6.1.txt
 
-.. include:: whatsnew/v0.6.0.txt
+.. include:: v0.6.0.txt
 
-.. include:: whatsnew/v0.5.0.txt
+.. include:: v0.5.0.txt
 
-.. include:: whatsnew/v0.4.x.txt
+.. include:: v0.4.x.txt
 
diff --git a/pandas/tseries/frequencies.py b/pandas/tseries/frequencies.py
index 433e88e2d..98f9fbe3c 100644
--- a/pandas/tseries/frequencies.py
+++ b/pandas/tseries/frequencies.py
@@ -259,23 +259,20 @@ _offset_to_period_map = {
 }
 
 need_suffix = ['QS', 'BQ', 'BQS', 'AS', 'BA', 'BAS']
-months = ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP',
-          'OCT', 'NOV', 'DEC']
-for prefix in need_suffix:
-    for m in months:
-        _offset_to_period_map['%s-%s' % (prefix, m)] = \
-            _offset_to_period_map[prefix]
-
-months = ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP',
-          'OCT', 'NOV', 'DEC']
-for prefix in ['A', 'Q']:
-    for m in months:
-        alias = '%s-%s' % (prefix, m)
-        _offset_to_period_map[alias] = alias
+_months = ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP',
+           'OCT', 'NOV', 'DEC']
+for __prefix in need_suffix:
+    for _m in _months:
+        _offset_to_period_map['%s-%s' % (__prefix, _m)] = \
+            _offset_to_period_map[__prefix]
+for __prefix in ['A', 'Q']:
+    for _m in _months:
+        _alias = '%s-%s' % (__prefix, _m)
+        _offset_to_period_map[_alias] = _alias
 
 _days = ['MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN']
-for d in _days:
-    _offset_to_period_map['W-%s' % d] = 'W-%s' % d
+for _d in _days:
+    _offset_to_period_map['W-%s' % _d] = 'W-%s' % _d
 
 def get_period_alias(offset_str):
     """ alias to closest period strings BQ->Q etc"""
@@ -322,11 +319,11 @@ _rule_aliases = {
     'us': 'U'
 }
 
-for i, weekday in enumerate(['MON', 'TUE', 'WED', 'THU', 'FRI']):
-    for iweek in xrange(4):
-        name = 'WOM-%d%s' % (iweek + 1, weekday)
-        _offset_map[name] = offsets.WeekOfMonth(week=iweek, weekday=i)
-        _rule_aliases[name.replace('-', '@')] = name
+for _i, _weekday in enumerate(['MON', 'TUE', 'WED', 'THU', 'FRI']):
+    for _iweek in xrange(4):
+        _name = 'WOM-%d%s' % (_iweek + 1, _weekday)
+        _offset_map[_name] = offsets.WeekOfMonth(week=_iweek, weekday=_i)
+        _rule_aliases[_name.replace('-', '@')] = _name
 
 _legacy_reverse_map = dict((v, k) for k, v in _rule_aliases.iteritems())
 
@@ -562,8 +559,8 @@ _period_code_map = {
 }
 
 _reverse_period_code_map = {}
-for k, v in _period_code_map.iteritems():
-    _reverse_period_code_map[v] = k
+for _k, _v in _period_code_map.iteritems():
+    _reverse_period_code_map[_v] = _k
 
 # Additional aliases
 _period_code_map.update({
