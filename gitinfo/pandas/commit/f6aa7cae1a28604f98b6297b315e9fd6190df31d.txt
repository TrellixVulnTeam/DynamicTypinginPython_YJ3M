commit f6aa7cae1a28604f98b6297b315e9fd6190df31d
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Mon Oct 24 10:22:42 2011 -0400

    TST: groupby unit tests

diff --git a/pandas/core/groupby.py b/pandas/core/groupby.py
index 216669c1d..eccdafeaf 100644
--- a/pandas/core/groupby.py
+++ b/pandas/core/groupby.py
@@ -690,13 +690,7 @@ class SeriesGroupBy(GroupBy):
             except Exception:
                 result = self._aggregate_named(func_or_funcs, *args, **kwargs)
 
-            if len(result) > 0:
-                if isinstance(result.values()[0], Series):
-                    ret = DataFrame(result).T
-                else:
-                    ret = Series(result)
-            else:
-                ret = Series({})
+            ret = Series(result)
 
         if not self.as_index:  # pragma: no cover
             print 'Warning, ignoring as_index=True'
@@ -761,7 +755,7 @@ class SeriesGroupBy(GroupBy):
         result = {}
         for k, v in self.primary.indices.iteritems():
             agged = func(values.take(v), *args, **kwargs)
-            if isinstance(output, np.ndarray):
+            if isinstance(agged, np.ndarray):
                 raise Exception('Must produce aggregated value')
             result[k] = agged
 
diff --git a/pandas/tests/test_groupby.py b/pandas/tests/test_groupby.py
index 13204044d..67ecbd6fd 100644
--- a/pandas/tests/test_groupby.py
+++ b/pandas/tests/test_groupby.py
@@ -111,6 +111,11 @@ class TestGroupBy(unittest.TestCase):
         expected = grouped.mean()
         assert_frame_equal(result, expected)
 
+    def test_agg_must_add(self):
+        grouped = self.df.groupby('A')['C']
+        self.assertRaises(Exception, grouped.agg, lambda x: x.describe())
+        self.assertRaises(Exception, grouped.agg, lambda x: x.index[:2])
+
     def test_get_group(self):
         wp = tm.makePanel()
         grouped = wp.groupby(lambda x: x.month, axis='major')
diff --git a/pandas/tests/test_index.py b/pandas/tests/test_index.py
index e82bb58ac..f48b05877 100644
--- a/pandas/tests/test_index.py
+++ b/pandas/tests/test_index.py
@@ -950,6 +950,9 @@ class TestMultiIndex(unittest.TestCase):
         result = self.index - self.index.sortlevel(1)[0]
         self.assert_(len(result) == 0)
 
+        # raise Exception called with non-MultiIndex
+        self.assertRaises(Exception, first.diff, first.get_tuple_index())
+
     def test_from_tuples(self):
         self.assertRaises(Exception, MultiIndex.from_tuples, [])
 
