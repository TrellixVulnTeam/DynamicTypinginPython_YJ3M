commit bf8d4956b75083095a2bc2b3a6081ffa80ad84e7
Author: pilkibun <51503352+pilkibun@users.noreply.github.com>
Date:   Thu Jul 25 16:57:32 2019 +0000

    TST: add regression test for slicing IntervalIndex MI level with scalars (#27572)

diff --git a/pandas/tests/indexing/interval/test_interval.py b/pandas/tests/indexing/interval/test_interval.py
index 7ae427827..bbce786fc 100644
--- a/pandas/tests/indexing/interval/test_interval.py
+++ b/pandas/tests/indexing/interval/test_interval.py
@@ -112,3 +112,38 @@ class TestIntervalIndex:
         # partial missing
         with pytest.raises(KeyError, match="^$"):
             df.loc[[10, 4]]
+
+
+class TestIntervalIndexInsideMultiIndex:
+    def test_mi_intervalindex_slicing_with_scalar(self):
+        # GH#27456
+        idx = pd.MultiIndex.from_arrays(
+            [
+                pd.Index(["FC", "FC", "FC", "FC", "OWNER", "OWNER", "OWNER", "OWNER"]),
+                pd.Index(
+                    ["RID1", "RID1", "RID2", "RID2", "RID1", "RID1", "RID2", "RID2"]
+                ),
+                pd.IntervalIndex.from_arrays(
+                    [0, 1, 10, 11, 0, 1, 10, 11], [1, 2, 11, 12, 1, 2, 11, 12]
+                ),
+            ]
+        )
+
+        idx.names = ["Item", "RID", "MP"]
+        df = pd.DataFrame({"value": [1, 2, 3, 4, 5, 6, 7, 8]})
+        df.index = idx
+        query_df = pd.DataFrame(
+            {
+                "Item": ["FC", "OWNER", "FC", "OWNER", "OWNER"],
+                "RID": ["RID1", "RID1", "RID1", "RID2", "RID2"],
+                "MP": [0.2, 1.5, 1.6, 11.1, 10.9],
+            }
+        )
+
+        query_df = query_df.sort_index()
+
+        idx = pd.MultiIndex.from_arrays([query_df.Item, query_df.RID, query_df.MP])
+        query_df.index = idx
+        result = df.value.loc[query_df.index]
+        expected = pd.Series([1, 6, 2, 8, 7], index=idx, name="value")
+        tm.assert_series_equal(result, expected)
