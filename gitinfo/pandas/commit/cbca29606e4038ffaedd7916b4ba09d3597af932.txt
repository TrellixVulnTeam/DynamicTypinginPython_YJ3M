commit cbca29606e4038ffaedd7916b4ba09d3597af932
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Sun Oct 9 13:40:39 2011 -0400

    ENH: print 25%-75% quartiles instead of 10%-90% deciles in describe. Address
    discussion in GH #196

diff --git a/RELEASE.rst b/RELEASE.rst
index 655399f84..a058ee299 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -31,6 +31,14 @@ and enhanced features. Also, pandas can now be installed and used on Python 3!
     the integer-based (dense) alignment logic which is faster with a larger
     number of blocks (GH #205)
 
+**API Changes**
+
+  - `Series.describe` and `DataFrame.describe` now bring the 25% and 75%
+    quartiles instead of the 10% and 90% deciles. The other outputs have not
+    changed
+  - `Series.toString` will print deprecation warning, has been de-camelCased to
+    `to_string`
+
 **Bug fixes**
 
   - Fix broken interaction between `Index` and `Int64Index` when calling
diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 82726c107..404a9498f 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -278,7 +278,7 @@ class DataFrame(NDFrame):
         """Iterator over (column, series) pairs"""
         series = self._series
         return ((k, series[k]) for k in self.columns)
-    
+
     iterkv = iteritems
     if py3compat.PY3:
         items = iteritems
@@ -322,7 +322,7 @@ class DataFrame(NDFrame):
                                default_axis=None)
     __rpow__ = _arith_method(lambda x, y: y ** x, '__rpow__',
                              default_axis=None)
-    
+
     # Python 2 division methods
     if not py3compat.PY3:
         __div__ = _arith_method(operator.div, '__div__', default_axis=None)
@@ -2297,11 +2297,11 @@ class DataFrame(NDFrame):
         tmp = self.reindex(columns=cols)
 
         cols_destat = ['count', 'mean', 'std', 'min',
-                       '10%', '50%', '90%', 'max']
+                       '25%', '50%', '75%', 'max']
 
         data = [tmp.count(), tmp.mean(), tmp.std(), tmp.min(),
-                tmp.quantile(.1), tmp.median(),
-                tmp.quantile(.9), tmp.max()]
+                tmp.quantile(.25), tmp.median(),
+                tmp.quantile(.75), tmp.max()]
 
         return self._constructor(data, index=cols_destat, columns=cols)
 
diff --git a/pandas/core/series.py b/pandas/core/series.py
index 2923f4b84..9c16dbce0 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -419,7 +419,7 @@ copy : boolean, default False
         Lazily iterate over (index, value) tuples
         """
         return itertools.izip(iter(self.index), iter(self))
-    
+
     iterkv = iteritems
     if py3compat.PY3:
         items = iteritems
@@ -448,7 +448,7 @@ copy : boolean, default False
     __itruediv__ = __truediv__
     __ifloordiv__ = __floordiv__
     __ipow__ = __pow__
-    
+
     # Python 2 division operators
     if not py3compat.PY3:
         __div__ = _arith_method(operator.div, '__div__')
@@ -870,10 +870,10 @@ copy : boolean, default False
         desc : Series
         """
         names = ['count', 'mean', 'std', 'min',
-                 '10%', '50%', '90%', 'max']
+                 '25%', '50%', '75%', 'max']
 
         data = [self.count(), self.mean(), self.std(), self.min(),
-                self.quantile(.1), self.median(), self.quantile(.9),
+                self.quantile(.25), self.median(), self.quantile(.75),
                 self.max()]
 
         return Series(data, index=names)
@@ -1619,7 +1619,7 @@ copy : boolean, default False
         return remove_na(self)
 
     valid = dropna
-    
+
     isnull = isnull
     notnull = notnull
 
diff --git a/pandas/tests/test_index.py b/pandas/tests/test_index.py
index c8d225ad9..7a37780b0 100644
--- a/pandas/tests/test_index.py
+++ b/pandas/tests/test_index.py
@@ -8,7 +8,7 @@ import unittest
 import numpy as np
 
 from pandas.core.index import (Index, Int64Index, Factor,
-                               MultiIndex, NULL_INDEX)
+                               MultiIndex)
 from pandas.util.testing import assert_almost_equal
 import pandas.util.testing as tm
 import pandas._tseries as tseries
