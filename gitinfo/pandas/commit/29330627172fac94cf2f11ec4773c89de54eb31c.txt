commit 29330627172fac94cf2f11ec4773c89de54eb31c
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Thu Nov 3 17:13:53 2011 -0400

    BUG: enable cythonized groupers to work on boolean columns, GH #315

diff --git a/pandas/core/groupby.py b/pandas/core/groupby.py
index e84181610..3b242b398 100644
--- a/pandas/core/groupby.py
+++ b/pandas/core/groupby.py
@@ -333,7 +333,7 @@ class GroupBy(object):
         output = {}
         cannot_agg = []
         for name, obj in self._iterate_slices():
-            if issubclass(obj.dtype.type, np.number):
+            if issubclass(obj.dtype.type, (np.number, np.bool_)):
                 if obj.dtype != np.float64:
                     obj = obj.astype('f8')
             else:
diff --git a/pandas/tests/test_groupby.py b/pandas/tests/test_groupby.py
index d6041b8e8..e1da99c4c 100644
--- a/pandas/tests/test_groupby.py
+++ b/pandas/tests/test_groupby.py
@@ -659,6 +659,15 @@ class TestGroupBy(unittest.TestCase):
         _testit(lambda x: x.sum())
         _testit(lambda x: x.mean())
 
+
+    def test_cython_agg_boolean(self):
+        frame = DataFrame({'a': np.random.randint(0, 5, 50),
+                           'b': np.random.randint(0, 2, 50).astype('bool')})
+        result = frame.groupby('a')['b'].mean()
+        expected = frame.groupby('a')['b'].agg(np.mean)
+
+        assert_series_equal(result, expected)
+
     def test_grouping_attrs(self):
         deleveled = self.mframe.delevel()
         grouped = deleveled.groupby(['first', 'second'])
