commit e0d9b1a7807c41374b0212c3b09d5b73c1fecec6
Author: John W. O'Brien <john@saltant.com>
Date:   Sun Sep 21 21:43:56 2014 -0400

    BUG: _Openpyxl2Writer mishandles merged cell style
    
    TST: Cover merged cells case in openpyxl2 engine

diff --git a/pandas/io/excel.py b/pandas/io/excel.py
index dcecbedd8..424518cbd 100644
--- a/pandas/io/excel.py
+++ b/pandas/io/excel.py
@@ -706,7 +706,7 @@ class _Openpyxl2Writer(_Openpyxl1Writer):
 
                 # Excel requires that the format of the first cell in a merged
                 # range is repeated in the rest of the merged range.
-                if style:
+                if style_kwargs:
                     first_row = startrow + cell.row + 1
                     last_row = startrow + cell.mergestart + 1
                     first_col = startcol + cell.col + 1
diff --git a/pandas/io/tests/test_excel.py b/pandas/io/tests/test_excel.py
index 662f12da8..6d3f0b547 100644
--- a/pandas/io/tests/test_excel.py
+++ b/pandas/io/tests/test_excel.py
@@ -1258,6 +1258,43 @@ class Openpyxl2Tests(ExcelWriterBase, tm.TestCase):
         self.assertEqual(kw['protection'], protection)
 
 
+    def test_write_cells_merge_styled(self):
+        _skip_if_no_openpyxl()
+        if not openpyxl_compat.is_compat(major_ver=2):
+            raise nose.SkipTest('incompatiable openpyxl version')
+
+        from pandas.core.format import ExcelCell
+        from openpyxl import styles
+
+        sheet_name='merge_styled'
+
+        sty_b1 = {'font': {'color': '00FF0000'}}
+        sty_a2 = {'font': {'color': '0000FF00'}}
+
+        initial_cells = [
+            ExcelCell(col=1, row=0, val=42, style=sty_b1),
+            ExcelCell(col=0, row=1, val=99, style=sty_a2),
+        ]
+
+        sty_merged = {'font': { 'color': '000000FF', 'bold': True }}
+        sty_kwargs = _Openpyxl2Writer._convert_to_style_kwargs(sty_merged)
+        openpyxl_sty_merged = styles.Style(**sty_kwargs)
+        merge_cells = [
+            ExcelCell(col=0, row=0, val='pandas',
+                    mergestart=1, mergeend=1, style=sty_merged),
+        ]
+
+        with ensure_clean('.xlsx') as path:
+            writer = _Openpyxl2Writer(path)
+            writer.write_cells(initial_cells, sheet_name=sheet_name)
+            writer.write_cells(merge_cells, sheet_name=sheet_name)
+
+            wks = writer.sheets[sheet_name]
+            xcell_b1 = wks.cell('B1')
+            xcell_a2 = wks.cell('A2')
+            self.assertEqual(xcell_b1.style, openpyxl_sty_merged)
+            self.assertEqual(xcell_a2.style, openpyxl_sty_merged)
+
 
 class XlwtTests(ExcelWriterBase, tm.TestCase):
     ext = '.xls'
