commit a53cfa934a87e98f08adbfd4bd3cc4687e05f50c
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Mon May 28 20:18:43 2012 -0400

    BUG: display localtime in DatetimeIndex.__repr__, close #1336

diff --git a/pandas/core/format.py b/pandas/core/format.py
index 53b9052e1..734ab98c7 100644
--- a/pandas/core/format.py
+++ b/pandas/core/format.py
@@ -587,11 +587,11 @@ class Datetime64Formatter(GenericArrayFormatter):
         fmt_values = [formatter(x) for x in self.values]
         return _make_fixed_width(fmt_values, self.justify)
 
-def _format_datetime64(x):
+def _format_datetime64(x, tz=None):
     if isnull(x):
         return 'NaT'
 
-    stamp = lib.Timestamp(x)
+    stamp = lib.Timestamp(x, tz=tz)
     base = stamp.strftime('%Y-%m-%d %H:%M:%S')
 
     fraction = stamp.microsecond * 1000 + stamp.nanosecond
diff --git a/pandas/tseries/index.py b/pandas/tseries/index.py
index e7319078e..4fe9130c3 100644
--- a/pandas/tseries/index.py
+++ b/pandas/tseries/index.py
@@ -421,8 +421,8 @@ class DatetimeIndex(Int64Index):
 
         summary = str(self.__class__)
         if len(self) > 0:
-            first = _format_datetime64(values[0])
-            last = _format_datetime64(values[-1])
+            first = _format_datetime64(values[0], tz=self.tz)
+            last = _format_datetime64(values[-1], tz=self.tz)
             summary += '\n[%s, ..., %s]' % (first, last)
         tagline = '\nLength: %d, Freq: %s, Timezone: %s'
         summary += tagline % (len(self), freq, self.tz)
diff --git a/pandas/tseries/tests/test_timezones.py b/pandas/tseries/tests/test_timezones.py
index 7f7747125..90cb02f03 100644
--- a/pandas/tseries/tests/test_timezones.py
+++ b/pandas/tseries/tests/test_timezones.py
@@ -243,6 +243,13 @@ class TestTimeZoneSupport(unittest.TestCase):
         self.assert_(result.tz == rng.tz)
         self.assert_(result.freq == rng.freq)
 
+    def test_index_with_timezone_repr(self):
+        rng = date_range('4/13/2010', '5/6/2010')
+
+        rng_eastern = rng.tz_convert('US/Eastern')
+
+        rng_repr = repr(rng)
+        self.assert_('2010-04-13 00:00:00' in rng_repr)
 
 class TestTimeZones(unittest.TestCase):
 
