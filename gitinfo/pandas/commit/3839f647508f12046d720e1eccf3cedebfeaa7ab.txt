commit 3839f647508f12046d720e1eccf3cedebfeaa7ab
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Sun Jul 22 15:12:32 2012 -0400

    ENH: better string element access/slicing notation close #1656

diff --git a/pandas/core/strings.py b/pandas/core/strings.py
index 3734a48ab..511fdd24b 100644
--- a/pandas/core/strings.py
+++ b/pandas/core/strings.py
@@ -506,7 +506,7 @@ def str_split(arr, pat, n=0):
     return _na_map(f, arr)
 
 
-def str_slice(arr, start=None, stop=None):
+def str_slice(arr, start=None, stop=None, step=1):
     """
     Slice substrings from each element in array
 
@@ -519,7 +519,7 @@ def str_slice(arr, start=None, stop=None):
     -------
     sliced : array
     """
-    obj = slice(start, stop)
+    obj = slice(start, stop, step)
     f = lambda x: x[obj]
     return _na_map(f, arr)
 
@@ -649,6 +649,13 @@ class StringMethods(object):
     def __init__(self, series):
         self.series = series
 
+    def __getitem__(self, key):
+        if isinstance(key, slice):
+            return self.slice(start=key.start, stop=key.stop,
+                              step=key.step)
+        else:
+            return self.get(key)
+
     def _wrap_result(self, result):
         return Series(result, index=self.series.index,
                       name=self.series.name)
@@ -699,7 +706,7 @@ class StringMethods(object):
         return self._wrap_result(result)
 
     @copy(str_slice)
-    def slice(self, start=None, stop=None):
+    def slice(self, start=None, stop=None, step=1):
         result = str_slice(self.series, start, stop)
         return self._wrap_result(result)
 
diff --git a/pandas/tests/test_strings.py b/pandas/tests/test_strings.py
index 7512330b6..db0b99ead 100644
--- a/pandas/tests/test_strings.py
+++ b/pandas/tests/test_strings.py
@@ -626,6 +626,18 @@ class TestStringMethods(unittest.TestCase):
                            'XX-XX BA', 'XX-XX ', 'XX-XX t'])
         assert_series_equal(result, expected)
 
+    def test_string_slice_get_syntax(self):
+        s = Series(['YYY', 'B', 'C', 'YYYYYYbYYY', 'BYYYcYYY', NA,
+                    'CYYYBYYY', 'dog', 'cYYYt'])
+
+        result = s.str[0]
+        expected = s.str.get(0)
+        assert_series_equal(result, expected)
+
+        result = s.str[:3]
+        expected = s.str.slice(stop=3)
+        assert_series_equal(result, expected)
+
 if __name__ == '__main__':
     nose.runmodule(argv=[__file__,'-vvs','-x','--pdb', '--pdb-failure'],
                    exit=False)
