commit 96ae488f16e6a314af593024e74a4dea31b5a610
Author: Adam Klein <adamklein@gmail.com>
Date:   Wed Jan 25 13:34:30 2012 -0500

    BUG: more #680 fixes

diff --git a/pandas/core/format.py b/pandas/core/format.py
index bd1b7f72d..bb97546d7 100644
--- a/pandas/core/format.py
+++ b/pandas/core/format.py
@@ -179,10 +179,11 @@ class DataFrameFormatter(object):
         to_write = []
 
         if len(frame.columns) == 0 or len(frame.index) == 0:
-            info_line = 'Empty %s\nColumns: %s\nIndex: %s'
-            to_write.append(info_line % (type(self.frame).__name__,
-                                         repr(frame.columns),
-                                         repr(frame.index)))
+            info_line = ('Empty %s\nColumns: %s\nIndex: %s' 
+                         % (type(self.frame).__name__, 
+                            repr(frame.columns), 
+                            repr(frame.index)))
+            to_write.append(info_line)
         else:
             # may include levels names also
             str_index = self._get_formatted_index()
diff --git a/pandas/core/index.py b/pandas/core/index.py
index b71fb9aff..54e4176cf 100644
--- a/pandas/core/index.py
+++ b/pandas/core/index.py
@@ -121,6 +121,14 @@ class Index(np.ndarray):
         name = type(self).__name__
         return '%s: %s entries%s' % (name, len(self), index_summary)
 
+    def __repr__(self):
+        try:
+            return np.array_repr(self.values)
+        except UnicodeError:
+            return np.array_repr(np.array(
+                        [x if not isinstance(x, basestring) else unicode(x)
+                         for x in self.values]))
+
     @property
     def values(self):
         return np.asarray(self)
diff --git a/pandas/core/series.py b/pandas/core/series.py
index 68464c9bd..381071a31 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -569,7 +569,7 @@ copy : boolean, default False
                                                   length=False,
                                                   name=False)
         result = head + '\n...\n' + tail
-        namestr = "Name: %s, " % str(self.name) if self.name else ""
+        namestr = "Name: %s, " % str(unicode(self.name)) if self.name else ""
         result = '%s\n%sLength: %d' % (result, namestr, len(self))
         return result
 
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index e80ce7f61..4322587f6 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -1836,10 +1836,16 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
         df.info(buf=buf)
         buf.getvalue()
 
+    def test_to_string_unicode_two(self):
+        dm = DataFrame({u'c/\u03c3': []})
+        buf = StringIO()
+        dm.to_string(buf)
+
     def test_to_string_with_formatters_unicode(self):
         df = DataFrame({u'c/\u03c3':[1,2,3]})
         result = df.to_string(formatters={u'c/\u03c3': lambda x: '%s' % x})
-        self.assertEqual(result, '  c/\xcf\x83\n0 1   \n1 2   \n2 3   ')
+        assert(result in ('  c/\xcf\x83\n0 1   \n1 2   \n2 3   ',
+                          '  c/?\n0 1   \n1 2   \n2 3   ' ))
 
     def test_head_tail(self):
         assert_frame_equal(self.frame.head(), self.frame[:5])
