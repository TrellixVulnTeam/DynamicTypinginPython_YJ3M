commit 6790d7ad3a2b54ef8af7d76e2b863662d2b020a4
Author: jreback <jeff@reback.net>
Date:   Thu Mar 21 08:42:42 2013 -0400

    TST: less likelihood of random failing tests

diff --git a/pandas/io/tests/test_pytables.py b/pandas/io/tests/test_pytables.py
index e2d1d75e6..a40284ff1 100644
--- a/pandas/io/tests/test_pytables.py
+++ b/pandas/io/tests/test_pytables.py
@@ -663,6 +663,7 @@ class TestHDFStore(unittest.TestCase):
 
         with ensure_clean(self.path) as store:
             df = tm.makeTimeDataFrame()
+            df.loc[:,'B'].iloc[0] = 1.
             store.remove('df')
             store.append('df', df[:2], data_columns=['B'])
             store.append('df', df[2:])
@@ -726,6 +727,8 @@ class TestHDFStore(unittest.TestCase):
         with ensure_clean(self.path) as store:
             # multiple data columns
             df_new = df.copy()
+            df_new.loc[:,'A'].iloc[0] = 1.
+            df_new.loc[:,'B'].iloc[0] = -1.
             df_new['string'] = 'foo'
             df_new['string'][1:4] = np.nan
             df_new['string'][5:6] = 'bar'
@@ -743,9 +746,9 @@ class TestHDFStore(unittest.TestCase):
 
             # yield an empty frame
             result = store.select('df', [Term('string', '=', 'foo'), Term(
-                        'string2=bar'), Term('A>0'), Term('B<0')])
+                        'string2=cool')])
             expected = df_new[(df_new.string == 'foo') & (
-                    df_new.string2 == 'bar') & (df_new.A > 0) & (df_new.B < 0)]
+                    df_new.string2 == 'cool')]
             tm.assert_frame_equal(result, expected)
 
         with ensure_clean(self.path) as store:
