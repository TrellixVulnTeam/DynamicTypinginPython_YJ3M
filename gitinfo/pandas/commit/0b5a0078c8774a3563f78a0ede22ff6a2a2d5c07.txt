commit 0b5a0078c8774a3563f78a0ede22ff6a2a2d5c07
Author: Kamil Kisiel <kamil@kamilkisiel.net>
Date:   Thu Apr 12 13:29:12 2012 -0700

    BUG: Allow indexing with namedtuple, close #1026

diff --git a/pandas/core/indexing.py b/pandas/core/indexing.py
index 66052c7ef..4bc746ce0 100644
--- a/pandas/core/indexing.py
+++ b/pandas/core/indexing.py
@@ -24,7 +24,7 @@ class _NDFrameIndexer(object):
         raise NotImplementedError('ix is not iterable')
 
     def __getitem__(self, key):
-        if isinstance(key, tuple):
+        if type(key) is tuple:
             try:
                 return self.obj.get_value(*key)
             except Exception:
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index 19c610841..806f4632d 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -5114,6 +5114,15 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
         exp = Y['g'].sum()
         self.assert_(isnull(Y['g']['c']))
 
+    def test_index_namedtuple(self):
+        from collections import namedtuple
+        IndexType = namedtuple("IndexType", ["a", "b"])
+        idx1 = IndexType("foo", "bar")
+        idx2 = IndexType("baz", "bof")
+        index = Index([idx1, idx2], name="composite_index")
+        df = DataFrame([(1, 2), (3, 4)], index=index, columns=["A", "B"])
+        self.assertEqual(df.ix[IndexType("foo", "bar")], (1, 2))
+
 if __name__ == '__main__':
     # unittest.main()
     import nose
