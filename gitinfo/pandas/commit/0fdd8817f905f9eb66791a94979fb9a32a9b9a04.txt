commit 0fdd8817f905f9eb66791a94979fb9a32a9b9a04
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Wed Jun 13 23:34:02 2012 -0400

    BUG: resampling bugs with closed='left', close #1465

diff --git a/pandas/tseries/resample.py b/pandas/tseries/resample.py
index 5d8dc0b02..9c86d5a1d 100644
--- a/pandas/tseries/resample.py
+++ b/pandas/tseries/resample.py
@@ -97,7 +97,7 @@ class TimeGrouper(CustomGrouper):
 
         first, last = _get_range_edges(axis, self.begin, self.end, self.freq,
                                        closed=self.closed, base=self.base)
-        binner = DatetimeIndex(freq=self.freq, start=first, end=last)
+        binner = labels = DatetimeIndex(freq=self.freq, start=first, end=last)
 
         # a little hack
         trimmed = False
@@ -108,12 +108,17 @@ class TimeGrouper(CustomGrouper):
         # general version, knowing nothing about relative frequencies
         bins = lib.generate_bins_dt64(axis.asi8, binner.asi8, self.closed)
 
-        if self.label == 'right':
-            labels = binner[1:]
-        elif not trimmed:
-            labels = binner[:-1]
-        else:
+        if self.closed == 'right':
             labels = binner
+            if self.label == 'right':
+                labels = labels[1:]
+            elif not trimmed:
+                labels = labels[:-1]
+        else:
+            if self.label == 'right':
+                labels = labels[1:]
+            elif not trimmed:
+                labels = labels[:-1]
 
         return binner, bins, labels
 
diff --git a/pandas/tseries/tests/test_resample.py b/pandas/tseries/tests/test_resample.py
index 139676410..0516c2770 100644
--- a/pandas/tseries/tests/test_resample.py
+++ b/pandas/tseries/tests/test_resample.py
@@ -660,6 +660,21 @@ class TestResamplePeriodIndex(unittest.TestCase):
 
         assert_series_equal(result, exp)
 
+    def test_closed_left_corner(self):
+        # #1465
+        s = Series(np.random.randn(21),
+                   index=date_range(start='1/1/2012 9:30',
+                                    freq='1min', periods=21))
+        s[0] = np.nan
+
+        result = s.resample('10min', how='mean',closed='left', label='right')
+        exp = s[1:].resample('10min', how='mean',closed='left', label='right')
+        assert_series_equal(result, exp)
+
+        result = s.resample('10min', how='mean',closed='left', label='left')
+        exp = s[1:].resample('10min', how='mean',closed='left', label='left')
+        assert_series_equal(result, exp)
+
 class TestTimeGrouper(unittest.TestCase):
 
     def setUp(self):
