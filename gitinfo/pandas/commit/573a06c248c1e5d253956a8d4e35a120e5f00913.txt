commit 573a06c248c1e5d253956a8d4e35a120e5f00913
Author: Joris Van den Bossche <jorisvandenbossche@gmail.com>
Date:   Tue May 20 15:30:05 2014 +0200

    DOC: some doc build fixes

diff --git a/doc/source/ecosystem.rst b/doc/source/ecosystem.rst
index fb0a0a080..3b409ec91 100644
--- a/doc/source/ecosystem.rst
+++ b/doc/source/ecosystem.rst
@@ -24,7 +24,7 @@ Statistics and Machine Learning
 -------------------------------
 
 `Statsmodels <http://statsmodels.sourceforge.net>`__
-~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 
 Statsmodels is the prominent python "statistics and econometrics library" and it has
 a long-standing special relationship with pandas. Statsmodels provides powerful statistics,
@@ -44,14 +44,14 @@ Visualization
 -------------
 
 `Vincent <https://github.com/wrobstory/vincent>`__
-~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 
 The `Vincent <https://github.com/wrobstory/vincent>`__ project leverages `Vega <https://github.com/trifacta/vega>`__
 (that in turn, leverages `d3 <http://d3js.org/>`__) to create plots . It has great support
 for pandas data objects.
 
 `yhat/ggplot <https://github.com/yhat/ggplot>`__
-~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 
 Hadley Wickham's `ggplot2 <http://ggplot2.org/>`__ is a foundational exploratory visualization package for the R language.
 Based on `"The Grammer of Graphics" <http://www.cs.uic.edu/~wilkinson/TheGrammarOfGraphics/GOG.html>`__ it
@@ -71,7 +71,7 @@ and `matplotlib <http://matplotlib.org>`__ to provide easy plotting of data whic
 more advanced types of plots then those offered by pandas.
 
 `Bokeh <http://bokeh.pydata.org>`__
-~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 
 Bokeh is a Python interactive visualization library for large datasets that natively uses
 the latest web technologies. Its goal is to provide elegant, concise construction of novel
diff --git a/doc/source/groupby.rst b/doc/source/groupby.rst
index 1c6bc976d..cad557756 100644
--- a/doc/source/groupby.rst
+++ b/doc/source/groupby.rst
@@ -926,9 +926,10 @@ the values in column 1 where the group is "B" are 3 higher on average.
 We can easily visualize this with a boxplot:
 
 .. ipython:: python
+   :okwarning:
 
    @savefig groupby_boxplot.png
-   bp = df.groupby('g').boxplot()
+   df.groupby('g').boxplot()
 
 The result of calling ``boxplot`` is a dictionary whose keys are the values
 of our grouping column ``g`` ("A" and "B"). The values of the resulting dictionary
diff --git a/doc/source/release.rst b/doc/source/release.rst
index ed62b2fb0..0898af86b 100644
--- a/doc/source/release.rst
+++ b/doc/source/release.rst
@@ -512,7 +512,7 @@ Bug Fixes
 - :func:`read_fwf` treats ``None`` in ``colspec`` like regular python slices. It now reads from the beginning
   or until the end of the line when ``colspec`` contains a ``None`` (previously raised a ``TypeError``)
 - Bug in cache coherence with chained indexing and slicing; add ``_is_view`` property to ``NDFrame`` to correctly predict
-  views; mark ``is_copy`` on ``xs` only if its an actual copy (and not a view) (:issue:`7084`)
+  views; mark ``is_copy`` on ``xs`` only if its an actual copy (and not a view) (:issue:`7084`)
 - Bug in DatetimeIndex creation from string ndarray with ``dayfirst=True`` (:issue:`5917`)
 - Bug in ``MultiIndex.from_arrays`` created from ``DatetimeIndex`` doesn't preserve ``freq`` and ``tz`` (:issue:`7090`)
 - Bug in ``unstack`` raises ``ValueError`` when ``MultiIndex`` contains ``PeriodIndex`` (:issue:`4342`)
diff --git a/doc/source/visualization.rst b/doc/source/visualization.rst
index 72e657b6d..6064d02ca 100644
--- a/doc/source/visualization.rst
+++ b/doc/source/visualization.rst
@@ -108,6 +108,10 @@ You can plot one column versus another using the `x` and `y` keywords in
 
    For more formatting and sytling options, see :ref:`below <visualization.formatting>`.
 
+.. ipython:: python
+    :suppress:
+
+    plt.close('all')
 
 .. _visualization.other:
 
@@ -255,6 +259,7 @@ a uniform random variable on [0,1).
    np.random.seed(123456)
 
 .. ipython:: python
+   :okwarning:
 
    df = DataFrame(rand(10,5))
    plt.figure();
@@ -271,6 +276,7 @@ groupings.  For instance,
    np.random.seed(123456)
 
 .. ipython:: python
+   :okwarning:
 
    df = DataFrame(rand(10,2), columns=['Col1', 'Col2'] )
    df['X'] = Series(['A','A','A','A','A','B','B','B','B','B'])
@@ -289,6 +295,7 @@ columns:
    np.random.seed(123456)
 
 .. ipython:: python
+   :okwarning:
 
    df = DataFrame(rand(10,3), columns=['Col1', 'Col2', 'Col3'])
    df['X'] = Series(['A','A','A','A','A','B','B','B','B','B'])
@@ -325,6 +332,7 @@ facet for each key, with each facet containing a box for each column of the
 DataFrame.
 
 .. ipython:: python
+   :okwarning:
 
    np.random.seed(1234)
    df_box = DataFrame(np.random.randn(50, 2))
@@ -337,6 +345,7 @@ DataFrame.
 Compare to:
 
 .. ipython:: python
+   :okwarning:
 
    @savefig groupby_boxplot_vis.png
    bp = df_box.groupby('g').boxplot()
@@ -517,6 +526,11 @@ If you pass values whose sum total is less than 1.0, matplotlib draws a semicirc
 
 See the `matplotlib pie documenation <http://matplotlib.org/api/pyplot_api.html#matplotlib.pyplot.pie>`__ for more.
 
+.. ipython:: python
+    :suppress:
+
+    plt.close('all')
+
 .. _visualization.tools:
 
 Plotting Tools
