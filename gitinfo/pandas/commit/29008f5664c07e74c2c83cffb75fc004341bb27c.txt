commit 29008f5664c07e74c2c83cffb75fc004341bb27c
Author: Arno Veenstra <arnoveenstra@gmail.com>
Date:   Sat Feb 16 19:49:50 2019 +0100

    BUG: Fix passing of numeric_only argument for categorical reduce (#25304)

diff --git a/doc/source/whatsnew/v0.24.2.rst b/doc/source/whatsnew/v0.24.2.rst
index 0c66df312..8e59c2300 100644
--- a/doc/source/whatsnew/v0.24.2.rst
+++ b/doc/source/whatsnew/v0.24.2.rst
@@ -25,6 +25,7 @@ Fixed Regressions
 - Fixed regression in :meth:`DataFrame.apply` causing ``RecursionError`` when ``dict``-like classes were passed as argument. (:issue:`25196`)
 
 - Fixed regression in :meth:`DataFrame.duplicated()`, where empty dataframe was not returning a boolean dtyped Series. (:issue:`25184`)
+- Fixed regression in :meth:`Series.min` and :meth:`Series.max` where ``numeric_only=True`` was ignored when the ``Series`` contained ```Categorical`` data (:issue:`25299`)
 
 .. _whatsnew_0242.enhancements:
 
diff --git a/pandas/core/arrays/categorical.py b/pandas/core/arrays/categorical.py
index c2b024c9a..79e565df9 100644
--- a/pandas/core/arrays/categorical.py
+++ b/pandas/core/arrays/categorical.py
@@ -2172,7 +2172,7 @@ class Categorical(ExtensionArray, PandasObject):
         return result
 
     # reduction ops #
-    def _reduce(self, name, axis=0, skipna=True, **kwargs):
+    def _reduce(self, name, axis=0, **kwargs):
         func = getattr(self, name, None)
         if func is None:
             msg = 'Categorical cannot perform the operation {op}'
diff --git a/pandas/core/series.py b/pandas/core/series.py
index 31c624743..a5dfe8d43 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -3678,8 +3678,12 @@ class Series(base.IndexOpsMixin, generic.NDFrame):
         if axis is not None:
             self._get_axis_number(axis)
 
-        # dispatch to ExtensionArray interface
-        if isinstance(delegate, ExtensionArray):
+        if isinstance(delegate, Categorical):
+            # TODO deprecate numeric_only argument for Categorical and use
+            # skipna as well, see GH25303
+            return delegate._reduce(name, numeric_only=numeric_only, **kwds)
+        elif isinstance(delegate, ExtensionArray):
+            # dispatch to ExtensionArray interface
             return delegate._reduce(name, skipna=skipna, **kwds)
         elif is_datetime64_dtype(delegate):
             # use DatetimeIndex implementation to handle skipna correctly
diff --git a/pandas/tests/reductions/test_reductions.py b/pandas/tests/reductions/test_reductions.py
index 173f719ed..8520855d1 100644
--- a/pandas/tests/reductions/test_reductions.py
+++ b/pandas/tests/reductions/test_reductions.py
@@ -960,6 +960,27 @@ class TestCategoricalSeriesReductions(object):
         assert np.isnan(_min)
         assert _max == 1
 
+    def test_min_max_numeric_only(self):
+        # TODO deprecate numeric_only argument for Categorical and use
+        # skipna as well, see GH25303
+        cat = Series(Categorical(
+            ["a", "b", np.nan, "a"], categories=['b', 'a'], ordered=True))
+
+        _min = cat.min()
+        _max = cat.max()
+        assert np.isnan(_min)
+        assert _max == "a"
+
+        _min = cat.min(numeric_only=True)
+        _max = cat.max(numeric_only=True)
+        assert _min == "b"
+        assert _max == "a"
+
+        _min = cat.min(numeric_only=False)
+        _max = cat.max(numeric_only=False)
+        assert np.isnan(_min)
+        assert _max == "a"
+
 
 class TestSeriesMode(object):
     # Note: the name TestSeriesMode indicates these tests
