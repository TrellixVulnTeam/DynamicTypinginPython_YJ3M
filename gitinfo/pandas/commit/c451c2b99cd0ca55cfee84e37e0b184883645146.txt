commit c451c2b99cd0ca55cfee84e37e0b184883645146
Author: Chang She <chang@lambdafoundry.com>
Date:   Tue Apr 10 01:25:24 2012 -0400

    tests for frame/groupby/series/stats

diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index 3c2784814..c158aa013 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -2702,7 +2702,7 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
         self.frame.info(buf=io)
         self.tsframe.info(buf=io)
 
-        frame = DataFrame(np.random(5, 3))
+        frame = DataFrame(np.random.randn(5, 3))
         frame.info()
         frame.info(verbose=False)
 
diff --git a/pandas/tests/test_groupby.py b/pandas/tests/test_groupby.py
index 66a572716..21ec6ad25 100644
--- a/pandas/tests/test_groupby.py
+++ b/pandas/tests/test_groupby.py
@@ -289,6 +289,9 @@ class TestGroupBy(unittest.TestCase):
                                           lambda x: x.weekday()])
         _check_results(by_mwkday)
 
+    def test_aggregate_item_by_item(self):
+        pass
+
     def test_basic_regression(self):
         # regression
         T = [1.0*x for x in range(1,10) *10][:1095]
diff --git a/pandas/tests/test_series.py b/pandas/tests/test_series.py
index e8c966c65..c0541fb2d 100644
--- a/pandas/tests/test_series.py
+++ b/pandas/tests/test_series.py
@@ -176,6 +176,11 @@ class TestNanops(unittest.TestCase):
         df = DataFrame(np.empty((10, 0)))
         self.assert_((df.sum(1) == 0).all())
 
+    def test_bn_switch(self):
+        f = nanops._bottleneck_switch('nanskew', nanops.nanskew)
+        ser = Series(np.random.randn(100))
+        self.assertAlmostEqual(f(ser), nanops.nanskew(ser))
+
 class SafeForSparse(object):
     pass
 
@@ -617,6 +622,10 @@ class TestSeries(unittest.TestCase, CheckNameIntegration):
         self.assertRaises(Exception, self.ts.__setitem__,
                           [5, slice(None, None)], 2)
 
+    def test_reshape_non_2d(self):
+        x = Series(np.random.random(201), name='x')
+        self.assertRaises(TypeError, x.reshape, (len(x),))
+
     def test_reshape_2d_return_array(self):
         x = Series(np.random.random(201), name='x')
         result = x.reshape((-1,1))
diff --git a/pandas/tests/test_stats.py b/pandas/tests/test_stats.py
index 820cba29b..9d6f12288 100644
--- a/pandas/tests/test_stats.py
+++ b/pandas/tests/test_stats.py
@@ -111,6 +111,7 @@ class TestRank(unittest.TestCase):
             expected.index = result.index
             assert_series_equal(result, expected)
 
+
 if __name__ == '__main__':
     nose.runmodule(argv=[__file__,'-vvs','-x','--pdb', '--pdb-failure'],
                    exit=False)
