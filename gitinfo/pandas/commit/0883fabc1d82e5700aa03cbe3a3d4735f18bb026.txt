commit 0883fabc1d82e5700aa03cbe3a3d4735f18bb026
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Fri Apr 27 16:28:46 2012 -0400

    BUG: loss of freq in DatetimeIndex constructor, close #1140

diff --git a/pandas/tests/test_format.py b/pandas/tests/test_format.py
index 6cb550b7d..a1bf5651c 100644
--- a/pandas/tests/test_format.py
+++ b/pandas/tests/test_format.py
@@ -512,7 +512,7 @@ class TestSeriesFormatting(unittest.TestCase):
         cp.name = 'foo'
         result = cp.to_string(length=True, name=True)
         last_line = result.split('\n')[-1].strip()
-        self.assertEqual(last_line, "Name: foo, Length: %d" % len(cp))
+        self.assertEqual(last_line, "Freq: B, Name: foo, Length: %d" % len(cp))
 
     def test_to_string_mixed(self):
         s = Series(['foo', np.nan, -1.23, 4.56])
diff --git a/pandas/tseries/index.py b/pandas/tseries/index.py
index 04c0d94ac..87fb5f71f 100644
--- a/pandas/tseries/index.py
+++ b/pandas/tseries/index.py
@@ -262,9 +262,14 @@ class DatetimeIndex(Int64Index):
 
         if issubclass(data.dtype.type, basestring):
             subarr = _str_to_dt_array(data)
-        elif issubclass(data.dtype.type, np.integer):
-            subarr = np.array(data, dtype='M8[us]', copy=copy)
         elif issubclass(data.dtype.type, np.datetime64):
+            if isinstance(data, DatetimeIndex):
+                subarr = data.values
+                offset = data.offset
+                verify_integrity = False
+            else:
+                subarr = np.array(data, dtype='M8[us]', copy=copy)
+        elif issubclass(data.dtype.type, np.integer):
             subarr = np.array(data, dtype='M8[us]', copy=copy)
         else:
             subarr = np.array(data, dtype='M8[us]', copy=copy)
@@ -800,7 +805,7 @@ class DatetimeIndex(Int64Index):
                 raise KeyError(stamp)
 
     def get_loc(self, key):
-        """
+        """y
         Get integer location for requested label
 
         Returns
diff --git a/pandas/tseries/tests/test_timeseries.py b/pandas/tseries/tests/test_timeseries.py
index 97eaaa3ac..41c5a74aa 100644
--- a/pandas/tseries/tests/test_timeseries.py
+++ b/pandas/tseries/tests/test_timeseries.py
@@ -495,6 +495,12 @@ class TestTimeSeries(unittest.TestCase):
         assert_series_equal(result, expected)
         tm.assert_frame_equal(result_df, exp_df)
 
+    def test_dti_constructor_preserve_dti_freq(self):
+        rng = date_range('1/1/2000', '1/2/2000', freq='5min')
+
+        rng2 = DatetimeIndex(rng)
+        self.assert_(rng.freq == rng2.freq)
+
 def _simple_ts(start, end, freq='D'):
     rng = date_range(start, end, freq=freq)
     return Series(np.random.randn(len(rng)), index=rng)
