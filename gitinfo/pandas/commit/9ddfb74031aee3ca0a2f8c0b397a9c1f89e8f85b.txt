commit 9ddfb74031aee3ca0a2f8c0b397a9c1f89e8f85b
Author: jreback <jeff@reback.net>
Date:   Wed Dec 12 15:58:26 2012 -0500

    BUG: non-datetime indicies were not being handled correctly in searchings (via Terms)
          added support for integer, float, date

diff --git a/pandas/io/pytables.py b/pandas/io/pytables.py
index 9499cfe2d..984ac6d11 100644
--- a/pandas/io/pytables.py
+++ b/pandas/io/pytables.py
@@ -2157,8 +2157,14 @@ class Term(object):
         if self.field == 'index' or self.field == 'major_axis':
             if self.kind == 'datetime64' :
                 return [lib.Timestamp(v).value, None]
-            elif isinstance(v, datetime) or hasattr(v,'timetuple'):
+            elif isinstance(v, datetime) or hasattr(v,'timetuple') or self.kind == 'date':
                 return [time.mktime(v.timetuple()), None]
+            elif self.kind == 'integer':
+                v = int(float(v))
+                return [v, v]
+            elif self.kind == 'float':
+                v = float(v)
+                return [v, v]
         elif not isinstance(v, basestring):
             return [str(v), None]
 
diff --git a/pandas/io/tests/test_pytables.py b/pandas/io/tests/test_pytables.py
index b2d12d2d0..8bb5fdaf5 100644
--- a/pandas/io/tests/test_pytables.py
+++ b/pandas/io/tests/test_pytables.py
@@ -996,6 +996,17 @@ class TestHDFStore(unittest.TestCase):
         expected = df.ix[:, ['A']]
         tm.assert_frame_equal(result, expected)
 
+        # other indicies for a frame
+
+        # integer
+        df = DataFrame(dict(A = np.random.rand(20), B = np.random.rand(20)))
+        self.store.append('df_int', df)
+        self.store.select('df_int', [ Term("index<10"), Term("columns", "=", ["A"]) ])
+
+        df = DataFrame(dict(A = np.random.rand(20), B = np.random.rand(20), index = np.arange(20,dtype='f8')))
+        self.store.append('df_float', df)
+        self.store.select('df_float', [ Term("index<10.0"), Term("columns", "=", ["A"]) ])
+
         # can't select if not written as table
         #self.store['frame'] = df
         #self.assertRaises(Exception, self.store.select,
