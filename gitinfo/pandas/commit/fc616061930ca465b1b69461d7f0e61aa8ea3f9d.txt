commit fc616061930ca465b1b69461d7f0e61aa8ea3f9d
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Sun May 6 23:38:54 2012 -0400

    ENH: small amount of refactoring

diff --git a/pandas/src/groupby.pyx b/pandas/src/groupby.pyx
index becd4e77e..8b1953cbd 100644
--- a/pandas/src/groupby.pyx
+++ b/pandas/src/groupby.pyx
@@ -607,9 +607,6 @@ def generate_bins_dt64(ndarray[int64_t] values, ndarray[int64_t] binner,
         bins[bc] = j
         bc += 1
 
-    # if len(bins) > 0 and bins[-1] == lenidx:
-    #     bins = bins[:-1]
-
     return bins
 
 # add passing bin edges, instead of labels
diff --git a/pandas/tseries/resample.py b/pandas/tseries/resample.py
index ca653822a..4af2bc800 100644
--- a/pandas/tseries/resample.py
+++ b/pandas/tseries/resample.py
@@ -124,6 +124,10 @@ class TimeGrouper(CustomGrouper):
     def _resample_periods(self, obj):
         axlabels = obj._get_axis(self.axis)
 
+        start = axlabels[0].asfreq(self.freq, how=self.convention)
+        end = axlabels[-1].asfreq(self.freq, how=self.convention)
+        new_index = period_range(start, end, freq=self.freq)
+
         # Start vs. end of period
         memb = axlabels.asfreq(self.freq, how=self.convention)
 
@@ -135,15 +139,11 @@ class TimeGrouper(CustomGrouper):
             else:
                 bins = np.array([], dtype=np.int32)
 
-            index = period_range(memb[0], memb[-1], freq=self.freq)
-            grouper = BinGrouper(bins, index)
+            grouper = BinGrouper(bins, new_index)
 
             grouped = obj.groupby(grouper, axis=self.axis)
             return grouped.agg(self.how)
         elif is_superperiod(axlabels.freq, self.freq):
-            # Generate full range
-            new_index = period_range(memb[0], memb[-1], freq=self.freq)
-
             # Get the fill indexer
             indexer = memb.get_indexer(new_index, method=self.fill_method,
                                        limit=self.limit)
