commit e546530dcd528c15b6eabcdec40bf6b4c237e51c
Author: Chang She <chang@lambdafoundry.com>
Date:   Sun Apr 29 21:22:00 2012 -0400

    CMP: py3compat issues with StringIO. Imports should no longer fail in py3x, but writing non-unicode maybe a problem

diff --git a/pandas/__init__.py b/pandas/__init__.py
index a4281a7d2..5451ee750 100644
--- a/pandas/__init__.py
+++ b/pandas/__init__.py
@@ -8,7 +8,9 @@ import numpy as np
 
 try:
     import pandas._tseries as lib
-except Exception, e:  # pragma: no cover
+except Exception:  # pragma: no cover
+    import sys
+    e = sys.exc_info()[1] # Py25 and Py3 current exception syntax conflict
     if 'No module named' in str(e):
         raise ImportError('C extensions not built: if you installed already '
                           'verify that you are not importing from the source '
diff --git a/pandas/core/common.py b/pandas/core/common.py
index f210feb7f..f7e5d6069 100644
--- a/pandas/core/common.py
+++ b/pandas/core/common.py
@@ -6,11 +6,6 @@ try:
 except ImportError:  # pragma: no cover
     import pickle
 
-try:
-    from io import BytesIO
-except ImportError:  # pragma: no cover
-    # Python < 2.6
-    from cStringIO import StringIO as BytesIO
 import itertools
 
 try:
@@ -20,8 +15,6 @@ except NameError:  # pragma: no cover
     def next(x):
         return x.next()
 
-from cStringIO import StringIO
-
 from numpy.lib.format import read_array, write_array
 import numpy as np
 
@@ -30,6 +23,8 @@ from pandas.util import py3compat
 import codecs
 import csv
 
+from pandas.util.py3compat import StringIO, BytesIO
+
 # XXX: HACK for NumPy 1.5.1 to suppress warnings
 try:
     np.seterr(all='ignore')
diff --git a/pandas/core/format.py b/pandas/core/format.py
index 62dc47e45..6ae204b94 100644
--- a/pandas/core/format.py
+++ b/pandas/core/format.py
@@ -1,6 +1,10 @@
 from itertools import izip
 
-from StringIO import StringIO
+try:
+    from StringIO import StringIO
+except:
+    from io import StringIO
+
 from pandas.core.common import adjoin, isnull, notnull, _stringify
 from pandas.core.index import MultiIndex, _ensure_index
 from pandas.util import py3compat
diff --git a/pandas/io/tests/test_parsers.py b/pandas/io/tests/test_parsers.py
index 37d485dfb..3061779bf 100644
--- a/pandas/io/tests/test_parsers.py
+++ b/pandas/io/tests/test_parsers.py
@@ -1,10 +1,4 @@
-try:
-    from io import BytesIO
-except ImportError:  # pragma: no cover
-    # Python < 2.6
-    from cStringIO import StringIO as BytesIO
-
-from cStringIO import StringIO
+from pandas.util.py3compat import StringIO, BytesIO
 from datetime import datetime
 import csv
 import os
diff --git a/pandas/io/tests/test_sql.py b/pandas/io/tests/test_sql.py
index a9851e7ef..0767bdcd1 100644
--- a/pandas/io/tests/test_sql.py
+++ b/pandas/io/tests/test_sql.py
@@ -1,4 +1,4 @@
-from cStringIO import StringIO
+from pandas.util.py3compat import StringIO
 import unittest
 import sqlite3
 import sys
diff --git a/pandas/src/generate_code.py b/pandas/src/generate_code.py
index 69d62dfeb..9ab8b7c08 100644
--- a/pandas/src/generate_code.py
+++ b/pandas/src/generate_code.py
@@ -1,4 +1,4 @@
-from cStringIO import StringIO
+from pandas.util.py3compat import StringIO
 
 take_1d_template = """@cython.wraparound(False)
 @cython.boundscheck(False)
diff --git a/pandas/stats/fama_macbeth.py b/pandas/stats/fama_macbeth.py
index 799e0f4d6..586642f81 100644
--- a/pandas/stats/fama_macbeth.py
+++ b/pandas/stats/fama_macbeth.py
@@ -1,4 +1,4 @@
-from cStringIO import StringIO
+from pandas.util.py3compat import StringIO
 
 import numpy as np
 
diff --git a/pandas/tests/test_format.py b/pandas/tests/test_format.py
index a1bf5651c..429698cbf 100644
--- a/pandas/tests/test_format.py
+++ b/pandas/tests/test_format.py
@@ -1,4 +1,8 @@
-from StringIO import StringIO
+try:
+    from StringIO import StringIO
+except:
+    from io import StringIO
+
 import os
 import sys
 import unittest
@@ -484,7 +488,6 @@ class TestSeriesFormatting(unittest.TestCase):
         repr(s)
 
     def test_to_string(self):
-        from cStringIO import StringIO
         buf = StringIO()
 
         s = self.ts.to_string()
diff --git a/pandas/tests/test_groupby.py b/pandas/tests/test_groupby.py
index de80c7d49..bda00f2aa 100644
--- a/pandas/tests/test_groupby.py
+++ b/pandas/tests/test_groupby.py
@@ -1347,7 +1347,7 @@ class TestGroupBy(unittest.TestCase):
 
     def test_groupby_wrong_multi_labels(self):
         from pandas import read_csv
-        from cStringIO import StringIO
+        from pandas.util.py3compat import StringIO
         data = """index,foo,bar,baz,spam,data
 0,foo1,bar1,baz1,spam2,20
 1,foo1,bar2,baz1,spam3,30
diff --git a/pandas/tests/test_multilevel.py b/pandas/tests/test_multilevel.py
index 704be2ff0..5a09cefc5 100644
--- a/pandas/tests/test_multilevel.py
+++ b/pandas/tests/test_multilevel.py
@@ -1,5 +1,5 @@
 # pylint: disable-msg=W0612,E1101,W0141
-from cStringIO import StringIO
+from pandas.util.py3compat import StringIO
 import nose
 import unittest
 
diff --git a/pandas/tests/test_panel.py b/pandas/tests/test_panel.py
index 1c4c91ce7..c3421b7dd 100644
--- a/pandas/tests/test_panel.py
+++ b/pandas/tests/test_panel.py
@@ -1124,7 +1124,7 @@ class TestLongPanel(unittest.TestCase):
         self.assert_(is_sorted(sorted_major.index.labels[0]))
 
     def test_to_string(self):
-        from cStringIO import StringIO
+        from pandas.util.py3compat import StringIO
 
         buf = StringIO()
         self.panel.to_string(buf)
diff --git a/pandas/tests/test_series.py b/pandas/tests/test_series.py
index 45b3964e5..388be8ea6 100644
--- a/pandas/tests/test_series.py
+++ b/pandas/tests/test_series.py
@@ -1,6 +1,5 @@
 # pylint: disable-msg=E1101,W0612
 
-from cStringIO import StringIO
 from datetime import datetime, timedelta
 import os
 import operator
@@ -20,6 +19,7 @@ from pandas.tseries.index import Timestamp
 import pandas.core.datetools as datetools
 import pandas.core.nanops as nanops
 
+from pandas.util.py3compat import StringIO
 from pandas.util import py3compat
 from pandas.util.testing import assert_series_equal, assert_almost_equal
 import pandas.util.testing as tm
diff --git a/pandas/util/decorators.py b/pandas/util/decorators.py
index a8d5d97f7..ebf914d51 100644
--- a/pandas/util/decorators.py
+++ b/pandas/util/decorators.py
@@ -1,5 +1,4 @@
-from cStringIO import StringIO
-
+from pandas.util.py3compat import StringIO
 from pandas._tseries import cache_readonly
 import sys
 import warnings
diff --git a/pandas/util/py3compat.py b/pandas/util/py3compat.py
index ddae56a09..53490cb50 100644
--- a/pandas/util/py3compat.py
+++ b/pandas/util/py3compat.py
@@ -5,7 +5,7 @@ PY3 = (sys.version_info[0] >= 3)
 if PY3:
     def isidentifier(s):
         return s.isidentifier()
-        
+
     def str_to_bytes(s, encoding='ascii'):
         return s.encode(encoding)
 
@@ -15,6 +15,17 @@ else:
     _name_re = re.compile(r"[a-zA-Z_][a-zA-Z0-9_]*$")
     def isidentifier(s, dotted=False):
         return bool(_name_re.match(s))
-    
+
     def str_to_bytes(s, encoding='ascii'):
         return s
+
+try:
+    from cStringIO import StringIO
+except:
+    from io import StringIO
+
+try:
+    from io import BytesIO
+except:
+    from cStringIO import StringIO as BytesIO
+
