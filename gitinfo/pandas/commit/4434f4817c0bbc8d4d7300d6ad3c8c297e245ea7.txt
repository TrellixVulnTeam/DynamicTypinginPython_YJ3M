commit 4434f4817c0bbc8d4d7300d6ad3c8c297e245ea7
Author: immerrr <immerrr@gmail.com>
Date:   Fri Jul 18 21:34:50 2014 +0400

    BUG: fix unpickling of some pre-0.14.1 pickles with non-unique items
    
    Series, frames and panels that contain only one block can be unpickled
    under the assumption that block items correspond to manager items 1-to-1.

diff --git a/doc/source/v0.15.0.txt b/doc/source/v0.15.0.txt
index 5e3f97944..103ac2a34 100644
--- a/doc/source/v0.15.0.txt
+++ b/doc/source/v0.15.0.txt
@@ -191,6 +191,8 @@ Bug Fixes
 
 - Bug in pickles contains ``DateOffset`` may raise ``AttributeError`` when ``normalize`` attribute is reffered internally (:issue:`7748`)
 
+- Bug in pickle deserialization that failed for pre-0.14.1 containers with dup items trying to avoid ambiguity
+  when matching block and manager items, when there's only one block there's no ambiguity (:issue:`7794`)
 
 
 - Bug in ``is_superperiod`` and ``is_subperiod`` cannot handle higher frequencies than ``S`` (:issue:`7760`, :issue:`7772`, :issue:`7803`)
diff --git a/pandas/core/internals.py b/pandas/core/internals.py
index f649baeb1..cad7b579a 100644
--- a/pandas/core/internals.py
+++ b/pandas/core/internals.py
@@ -2271,10 +2271,23 @@ class BlockManager(PandasObject):
             ax_arrays, bvalues, bitems = state[:3]
 
             self.axes = [_ensure_index(ax) for ax in ax_arrays]
+
+            if len(bitems) == 1 and self.axes[0].equals(bitems[0]):
+                # This is a workaround for pre-0.14.1 pickles that didn't
+                # support unpickling multi-block frames/panels with non-unique
+                # columns/items, because given a manager with items ["a", "b",
+                # "a"] there's no way of knowing which block's "a" is where.
+                #
+                # Single-block case can be supported under the assumption that
+                # block items corresponded to manager items 1-to-1.
+                all_mgr_locs = [slice(0, len(bitems[0]))]
+            else:
+                all_mgr_locs = [self.axes[0].get_indexer(blk_items)
+                                for blk_items in bitems]
+
             self.blocks = tuple(
-                unpickle_block(values,
-                               self.axes[0].get_indexer(items))
-                for values, items in zip(bvalues, bitems))
+                unpickle_block(values, mgr_locs)
+                for values, mgr_locs in zip(bvalues, all_mgr_locs))
 
         self._post_setstate()
 
