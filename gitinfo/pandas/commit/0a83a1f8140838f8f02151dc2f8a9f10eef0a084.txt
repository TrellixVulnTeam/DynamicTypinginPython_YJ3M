commit 0a83a1f8140838f8f02151dc2f8a9f10eef0a084
Author: Phillip Cloud <cpcloud@gmail.com>
Date:   Sat Jun 15 05:23:41 2013 -0400

    FIX/ENH: attempt soft conversion of object series before raising a TypeError when plotting

diff --git a/pandas/tests/test_graphics.py b/pandas/tests/test_graphics.py
index 0755caf45..56b3c3371 100644
--- a/pandas/tests/test_graphics.py
+++ b/pandas/tests/test_graphics.py
@@ -189,8 +189,7 @@ class TestSeriesPlots(unittest.TestCase):
         from pandas.tools.plotting import bootstrap_plot
         _check_plot_works(bootstrap_plot, self.ts, size=10)
 
-    @slow
-    def test_all_invalid_plot_data(self):
+    def test_invalid_plot_data(self):
         s = Series(list('abcd'))
         kinds = 'line', 'bar', 'barh', 'kde', 'density'
 
@@ -198,6 +197,13 @@ class TestSeriesPlots(unittest.TestCase):
             self.assertRaises(TypeError, s.plot, kind=kind)
 
     @slow
+    def test_valid_object_plot(self):
+        s = Series(range(10), dtype=object)
+        kinds = 'line', 'bar', 'barh', 'kde', 'density'
+
+        for kind in kinds:
+            _check_plot_works(s.plot, kind=kind)
+
     def test_partially_invalid_plot_data(self):
         s = Series(['a', 'b', 1.0, 2])
         kinds = 'line', 'bar', 'barh', 'kde', 'density'
diff --git a/pandas/tools/plotting.py b/pandas/tools/plotting.py
index 83ad58c1e..3c7bd7fb5 100644
--- a/pandas/tools/plotting.py
+++ b/pandas/tools/plotting.py
@@ -881,12 +881,12 @@ class MPLPlot(object):
             # might be a frame
             numeric_data = self.data._get_numeric_data()
         except AttributeError:
-            # a series, but no object dtypes allowed!
-            if self.data.dtype == np.object_:
-                raise TypeError('invalid dtype for plotting, please cast to a '
-                                'numeric dtype explicitly if you want to plot')
+            # attempt soft conversion
+            numeric_data = self.data.convert_objects()
 
-            numeric_data = self.data
+            # a series, but no object dtypes allowed!
+            if numeric_data.dtype == np.object_:
+                raise TypeError('invalid dtype for plotting')
 
         try:
             is_empty = numeric_data.empty
