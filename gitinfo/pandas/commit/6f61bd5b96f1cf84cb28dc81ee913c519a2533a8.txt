commit 6f61bd5b96f1cf84cb28dc81ee913c519a2533a8
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Sat May 5 16:41:05 2012 -0400

    ENH: make DatetimeIndex + 1 do shift like PeriodIndex, close #1158

diff --git a/pandas/tseries/index.py b/pandas/tseries/index.py
index b2dead38b..2f67404ae 100644
--- a/pandas/tseries/index.py
+++ b/pandas/tseries/index.py
@@ -159,8 +159,6 @@ class DatetimeIndex(Int64Index):
     __le__ = _dt_index_cmp('__le__')
     __ge__ = _dt_index_cmp('__ge__')
 
-    __sub__ = _dt_index_op('__sub__')
-
     # structured array cache for datetime fields
     _sarr_cache = None
 
@@ -460,9 +458,21 @@ class DatetimeIndex(Int64Index):
             return self.union(other)
         elif isinstance(other, (DateOffset, timedelta)):
             return self._add_delta(other)
+        elif com.is_integer(other):
+            return self.shift(other)
         else:
             return Index(self.view(np.ndarray) + other)
 
+    def __sub__(self, other):
+        if isinstance(other, Index):
+            return self.diff(other)
+        elif isinstance(other, (DateOffset, timedelta)):
+            return self._add_delta(-other)
+        elif com.is_integer(other):
+            return self.shift(-other)
+        else:
+            return Index(self.view(np.ndarray) - other)
+
     def _add_delta(self, delta):
         if isinstance(delta, (Tick, timedelta)):
             inc = offsets._delta_to_microseconds(delta)
diff --git a/pandas/tseries/tests/test_timeseries.py b/pandas/tseries/tests/test_timeseries.py
index 970cb753a..8eb4475f5 100644
--- a/pandas/tseries/tests/test_timeseries.py
+++ b/pandas/tseries/tests/test_timeseries.py
@@ -608,6 +608,17 @@ class TestTimeSeries(unittest.TestCase):
         self.assertEqual(idx.freq, Timestamp(idx[0], idx.freq).freq)
         self.assertEqual(idx.freqstr, Timestamp(idx[0], idx.freq).freqstr)
 
+    def test_datetimeindex_integers_shift(self):
+        rng = date_range('1/1/2000', periods=20)
+
+        result = rng + 5
+        expected = rng.shift(5)
+        self.assert_(result.equals(expected))
+
+        result = rng - 5
+        expected = rng.shift(-5)
+        self.assert_(result.equals(expected))
+
 
 def _simple_ts(start, end, freq='D'):
     rng = date_range(start, end, freq=freq)
