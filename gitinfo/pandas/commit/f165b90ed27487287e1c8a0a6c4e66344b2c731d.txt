commit f165b90ed27487287e1c8a0a6c4e66344b2c731d
Author: XF <FXocena@users.noreply.github.com>
Date:   Thu Aug 10 07:32:46 2017 -0500

    BUG: Rolling apply on DataFrame with Datetime index returns NaN (#17156)

diff --git a/doc/source/whatsnew/v0.21.0.txt b/doc/source/whatsnew/v0.21.0.txt
index 70300a087..8b2c4d16f 100644
--- a/doc/source/whatsnew/v0.21.0.txt
+++ b/doc/source/whatsnew/v0.21.0.txt
@@ -350,6 +350,8 @@ Groupby/Resample/Rolling
 - Bug in ``.rolling(...).quantile()`` which incorrectly used different defaults than :func:`Series.quantile()` and :func:`DataFrame.quantile()` (:issue:`9413`, :issue:`16211`)
 - Bug in ``groupby.transform()`` that would coerce boolean dtypes back to float (:issue:`16875`)
 - Bug in ``Series.resample(...).apply()`` where an empty ``Series`` modified the source index and did not return the name of a ``Series`` (:issue:`14313`)
+- Bug in ``.rolling(...).apply(...)`` with a ``DataFrame`` with a ``DatetimeIndex``, a ``window`` of a timedelta-convertible and ``min_periods >= 1` (:issue:`15305`)
+
 
 Sparse
 ^^^^^^
diff --git a/pandas/_libs/window.pyx b/pandas/_libs/window.pyx
index 2450eea55..bdd371871 100644
--- a/pandas/_libs/window.pyx
+++ b/pandas/_libs/window.pyx
@@ -1428,15 +1428,16 @@ def roll_generic(ndarray[float64_t, cast=True] input,
     if n == 0:
         return input
 
+    counts = roll_sum(np.concatenate([np.isfinite(input).astype(float),
+                                      np.array([0.] * offset)]),
+                      win, minp, index, closed)[offset:]
+
     start, end, N, win, minp, is_variable = get_window_indexer(input, win,
                                                                minp, index,
                                                                closed,
                                                                floor=0)
-    output = np.empty(N, dtype=float)
 
-    counts = roll_sum(np.concatenate([np.isfinite(input).astype(float),
-                                      np.array([0.] * offset)]),
-                      win, minp, index, closed)[offset:]
+    output = np.empty(N, dtype=float)
 
     if is_variable:
 
diff --git a/pandas/tests/test_window.py b/pandas/tests/test_window.py
index 5ab33bd6c..d94e34c41 100644
--- a/pandas/tests/test_window.py
+++ b/pandas/tests/test_window.py
@@ -423,6 +423,26 @@ class TestRolling(Base):
             expected = df.rolling('3D').sum()
             tm.assert_frame_equal(result, expected)
 
+    @pytest.mark.parametrize(
+        'window', [timedelta(days=3), pd.Timedelta(days=3), '3D'])
+    def test_constructor_with_timedelta_window_and_minperiods(self, window):
+        # GH 15305
+        n = 10
+        df = pd.DataFrame({'value': np.arange(n)},
+                          index=pd.date_range('2017-08-08',
+                                              periods=n,
+                                              freq="D"))
+        expected = pd.DataFrame({'value': np.append([np.NaN, 1.],
+                                                    np.arange(3., 27., 3))},
+                                index=pd.date_range('2017-08-08',
+                                                    periods=n,
+                                                    freq="D"))
+        result_roll_sum = df.rolling(window=window, min_periods=2).sum()
+        result_roll_generic = df.rolling(window=window,
+                                         min_periods=2).apply(sum)
+        tm.assert_frame_equal(result_roll_sum, expected)
+        tm.assert_frame_equal(result_roll_generic, expected)
+
     def test_numpy_compat(self):
         # see gh-12811
         r = rwindow.Rolling(Series([2, 4, 6]), window=2)
