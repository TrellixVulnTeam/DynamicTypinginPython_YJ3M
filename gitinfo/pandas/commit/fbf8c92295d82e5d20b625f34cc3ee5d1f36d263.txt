commit fbf8c92295d82e5d20b625f34cc3ee5d1f36d263
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Tue May 29 22:09:15 2012 -0400

    DOC: another pass at release notes

diff --git a/RELEASE.rst b/RELEASE.rst
index 738bd77b2..cc5b1ab22 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -36,12 +36,14 @@ pandas 0.8.0
   - High performance resampling of timestamp and period data. New `resample`
     method of all pandas data structures
   - New frequency names plus shortcut string aliases like '15h', '1h30min'
+  - Time series string indexing shorthand (#222)
   - Add week, dayofyear array and other timestamp array-valued field accessor
     functions to DatetimeIndex
   - Add GroupBy.prod optimized aggregation function and 'prod' fast time series
     conversion method (#1018)
   - Implement robust frequency inference function and `inferred_freq` attribute
     on DatetimeIndex (#391)
+  - New ``tz_convert`` methods in Series / DataFrame
   - Convert DatetimeIndexes to UTC if time zones are different in join/setops
     (#864)
   - Add limit argument for forward/backward filling to reindex, fillna,
@@ -58,7 +60,7 @@ pandas 0.8.0
   - Can pass list of (name, function) to GroupBy.aggregate to get aggregates in
     a particular order (#610)
   - Can pass dicts with lists of functions or dicts to GroupBy aggregate to do
-    much more flexible multiple function aggregation (#642)
+    much more flexible multiple function aggregation (#642, #610)
   - New ordered_merge functions for merging DataFrames with ordered
     data. Also supports group-wise merging for panel data (#813)
   - Add keys() method to DataFrame
@@ -69,6 +71,13 @@ pandas 0.8.0
   - Add pct_change function to Series/DataFrame
   - Add option to interpolate by Index values in Series.interpolate (#1206)
   - Add ``max_colwidth`` option for DataFrame, defaulting to 50
+  - Conversion of DataFrame through rpy2 to R data.frame (#1282, )
+  - Add keys() method on DataFrame (#1240)
+  - Add new ``match`` function to API (similar to R) (#502)
+  - Add dayfirst option to parsers (#854)
+  - Add ``method`` argument to ``align`` method for forward/backward fillin
+    (#216)
+  - Add Panel.transpose method for rearranging axes (#695)
 
 **Improvements to existing features**
 
@@ -93,6 +102,12 @@ pandas 0.8.0
   - Use DataFrame columns' name for legend title in plots
   - Preserve frequency in DatetimeIndex when possible in boolean indexing
     operations
+  - Promote datetime.date values in data alignment operations (#867)
+  - Add ``order`` method to Index classes (#1028)
+  - Avoid hash table creation in large monotonic hash table indexes (#1160)
+  - Store time zones in HDFStore (#1232)
+  - Enable storage of sparse data structures in HDFStore (#85)
+  - Enable Series.asof to work with arrays of timestamp inputs
 
 **API Changes**
 
@@ -100,11 +115,11 @@ pandas 0.8.0
     deprecated. get_legacy_offset_name backwards compatibility function added
   - Raise ValueError in DataFrame.__nonzero__, so "if df" no longer works
     (#1073)
-  - Change BDay (business day) to not normalize dates by default
+  - Change BDay (business day) to not normalize dates by default (#506)
   - Remove deprecated DataMatrix name
   - Default merge suffixes for overlap now have underscores instead of periods
     to facilitate tab completion, etc. (#1239)
-  - Deprecation of offset, timeRule parameters throughout codebaes
+  - Deprecation of offset, time_rule timeRule parameters throughout codebase
 
 **Bug fixes**
 
@@ -113,7 +128,7 @@ pandas 0.8.0
   - Fix logical error with February leap year end in YearEnd offset
   - Series([False, nan]) was getting casted to float64 (GH #1074)
   - Fix binary operations between boolean Series and object Series with
-    booleans and NAs (GH #1074)
+    booleans and NAs (GH #1074, #1079)
   - Couldn't assign whole array to column in mixed-type DataFrame via .ix
     (#1142)
   - Fix label slicing issues with float index values (#1167)
@@ -129,6 +144,23 @@ pandas 0.8.0
     to datetime64 representation (#1081, #809)
   - Fix DataFrame.duplicated/drop_duplicates NA value handling (#557)
   - Actually raise exceptions in fast reducer (#1243)
+  - Fix various timezone-handling bugs from 0.7.3 (#969)
+  - GroupBy on level=0 discarded index name (#1313)
+  - Better error message with unmergeable DataFrames (#1307)
+  - Series.__repr__ alignment fix with unicode index values (#1279)
+  - Better error message if nothing passed to reindex (#1267)
+  - More robust NA handling in DataFrame.drop_duplicates (#557)
+  - Resolve locale-based and pre-epoch HDF5 timestamp deserialization issues
+    (#973, #1081, #179)
+  - Implement Series.repeat (#1229)
+  - Fix indexing with namedtuple and other tuple subclasses (#1026)
+  - Fix float64 slicing bug (#1167)
+  - Parsing integers with commas (#796)
+  - Fix groupby improper data type when group consists of one value (#1065)
+  - Fix negative variance possibility in nanvar resulting from floating point
+    error (#1090)
+  - Consistently set name on groupby pieces (#184)
+  - Treat dict return values as Series in GroupBy.apply (#823)
 
 pandas 0.7.3
 ============
diff --git a/doc/source/whatsnew/v0.8.0.txt b/doc/source/whatsnew/v0.8.0.txt
index da7387d07..3d6b85ae9 100644
--- a/doc/source/whatsnew/v0.8.0.txt
+++ b/doc/source/whatsnew/v0.8.0.txt
@@ -64,7 +64,9 @@ Time series changes and improvements
   DatetimeIndex objects with time zone set will be localized to localtime. Time
   zone conversions are therefore essentially free. User needs to know very
   little about pytz library now; only time zone names as as strings are
-  required. Timestamps are equal if and only if their UTC timestamps match
+  required. Timestamps are equal if and only if their UTC timestamps
+  match. Operations between time series with different time zones will result
+  in a UTC-indexed time series
 - Time series **string indexing conveniences** / shortcuts: slice years, year
   and month, and index values with strings
 - Enhanced time series **plotting**; adaptation of scikits.timeseries
@@ -72,8 +74,11 @@ Time series changes and improvements
 - New ``date_range``, ``bdate_range``, and ``period_range`` **factory
   functions**
 - Robust **frequency inference** function `infer_freq` and ``inferred_freq``
-  property of DatetimeIndex
-- to_datetime function efficiently **parses array of strings** to DatetimeIndex
+  property of DatetimeIndex, with option to infer frequency on construction of
+  DatetimeIndex
+- to_datetime function efficiently **parses array of strings** to
+  DatetimeIndex. DatetimeIndex will parse array or list of strings to
+  datetime64
 - **Optimized** support for datetime64-dtype data in Series and DataFrame
   columns
 - New NaT (Not-a-Time) type to represent **NA** in timestamp arrays
@@ -83,6 +88,8 @@ Time series changes and improvements
 - Can index time series with datetime.time objects to select all data at
   particular **time of day** (``TimeSeries.at_time``) or **between two times**
   (``TimeSeries.between_time``)
+- Add tshift method for leading/lagging using the frequency (if any) of the
+  index, as opposed to a naive lead/lag using shift
 
 Support for non-unique indexes
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@@ -94,12 +101,15 @@ index duplication in many-to-many joins)
 Other new features
 ~~~~~~~~~~~~~~~~~~
 
+- Add limit argument to fillna/reindex
 - More flexible multiple function application in GroupBy, and can pass list
   (name, function) tuples to get result in particular order with given names
 - Add flexible ``replace`` method for efficiently substituting values
 - Enhanced read_csv/read_table for reading time series data and converting
   multiple columns to dates
 - Add comments option to parser functions: read_csv, etc.
+- Add ``dayfirst`` option to parser functions for parsing international
+  DD/MM/YYYY dates
 - Enable unstacking of multiple levels in one shot. Alleviate ``pivot_table``
   bugs (empty columns being introduced)
 - Move to klib-based hash tables for indexing; better performance and less
@@ -116,6 +126,8 @@ Other new features
 - Add ``pct_change`` method to all data structures
 - Add max_colwidth configuration option for DataFrame console output
 - Interpolate Series values using index values
+- Can select multiple columns from GroupBy
+- Add Series/DataFrame.update methods for updating values in place
 
 Other API changes
 ~~~~~~~~~~~~~~~~~
