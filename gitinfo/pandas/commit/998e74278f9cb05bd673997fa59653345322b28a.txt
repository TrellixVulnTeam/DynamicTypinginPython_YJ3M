commit 998e74278f9cb05bd673997fa59653345322b28a
Author: jbrockmendel <jbrockmendel@gmail.com>
Date:   Mon Jan 20 09:19:48 2020 -0800

    BUG: EAs should not be hashable (#30908)

diff --git a/pandas/core/arrays/base.py b/pandas/core/arrays/base.py
index 9723343ea..c3c91cea4 100644
--- a/pandas/core/arrays/base.py
+++ b/pandas/core/arrays/base.py
@@ -176,6 +176,9 @@ class ExtensionArray:
        types present.
 
     See :ref:`extending.extension.ufunc` for more.
+
+    By default, ExtensionArrays are not hashable.  Immutable subclasses may
+    override this behavior.
     """
 
     # '_typ' is for pandas.core.dtypes.generic.ABCExtensionArray.
@@ -1073,6 +1076,9 @@ class ExtensionArray:
         """
         raise TypeError(f"cannot perform {name} with type {self.dtype}")
 
+    def __hash__(self):
+        raise TypeError(f"unhashable type: {repr(type(self).__name__)}")
+
 
 class ExtensionOpsMixin:
     """
diff --git a/pandas/tests/extension/base/methods.py b/pandas/tests/extension/base/methods.py
index 1e427c631..6b75176eb 100644
--- a/pandas/tests/extension/base/methods.py
+++ b/pandas/tests/extension/base/methods.py
@@ -261,6 +261,11 @@ class BaseMethodsTests(BaseExtensionTests):
         expected = data.take([2, 3, 0, 0])
         self.assert_extension_array_equal(result, expected)
 
+    def test_not_hashable(self, data):
+        # We are in general mutable, so not hashable
+        with pytest.raises(TypeError, match="unhashable type"):
+            hash(data)
+
     def test_hash_pandas_object_works(self, data, as_frame):
         # https://github.com/pandas-dev/pandas/issues/23066
         data = pd.Series(data)
