commit 20b52181e0d65228786970ed3465f655132f8361
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Mon Jun 11 14:27:51 2012 -0400

    ENH: add convert_dtype option to Series.apply to be able to leave result as dtype=object, close #1414

diff --git a/RELEASE.rst b/RELEASE.rst
index 850908f52..93c0b91ae 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -121,6 +121,8 @@ pandas 0.8.0
   - Exclude "nuisance" columns automatically in GroupBy.transform (#1364)
   - Support functions-as-strings in GroupBy.transform (#1362)
   - Use index name as xlabel/ylabel in plots (#1415)
+  - Add ``convert_dtype`` option to Series.apply to be able to leave data as
+    dtype=object (#1414)
 
 **API Changes**
 
diff --git a/pandas/core/series.py b/pandas/core/series.py
index fb7830839..88d68905d 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -1987,7 +1987,7 @@ copy : boolean, default False
             mapped = lib.map_infer(self.values, arg)
             return Series(mapped, index=self.index, name=self.name)
 
-    def apply(self, func):
+    def apply(self, func, convert_dtype=True):
         """
         Invoke function on values of Series. Can be ufunc or Python function
         expecting only single values
@@ -1995,6 +1995,9 @@ copy : boolean, default False
         Parameters
         ----------
         func : function
+        convert_dtype : boolean, default True
+            Try to find better dtype for elementwise function results. If
+            False, leave as dtype=object
 
         See also
         --------
@@ -2012,7 +2015,7 @@ copy : boolean, default False
                 raise ValueError('Must yield array')
             return result
         except Exception:
-            mapped = lib.map_infer(self.values, func)
+            mapped = lib.map_infer(self.values, func, convert=convert_dtype)
             return Series(mapped, index=self.index, name=self.name)
 
     def align(self, other, join='outer', level=None, copy=True,
diff --git a/pandas/src/inference.pyx b/pandas/src/inference.pyx
index 9f357fd8b..4057d240f 100644
--- a/pandas/src/inference.pyx
+++ b/pandas/src/inference.pyx
@@ -617,7 +617,7 @@ def maybe_convert_bool(ndarray[object] arr):
     return result.view(np.bool_)
 
 
-def map_infer(ndarray arr, object f):
+def map_infer(ndarray arr, object f, bint convert=1):
     '''
     Substitute for np.vectorize with pandas-friendly dtype inference
 
@@ -647,8 +647,11 @@ def map_infer(ndarray arr, object f):
 
         result[i] = val
 
-    return maybe_convert_objects(result, try_float=0,
-                                 convert_datetime=0)
+    if convert:
+        return maybe_convert_objects(result, try_float=0,
+                                     convert_datetime=0)
+
+    return result
 
 def to_object_array(list rows):
     cdef:
diff --git a/pandas/tests/test_series.py b/pandas/tests/test_series.py
index 4f556e5be..08187ba34 100644
--- a/pandas/tests/test_series.py
+++ b/pandas/tests/test_series.py
@@ -2219,6 +2219,13 @@ class TestSeries(unittest.TestCase, CheckNameIntegration):
         expected = s.map(f)
         assert_series_equal(result, expected)
 
+    def test_apply_dont_convert_dtype(self):
+        s = Series(np.random.randn(10))
+
+        f = lambda x: x if x > 0 else np.nan
+        result = s.apply(f, convert_dtype=False)
+        self.assert_(result.dtype == object)
+
     def test_align(self):
         def _check_align(a, b, how='left', fill=None):
             aa, ab = a.align(b, join=how, fill_value=fill)
