commit ca173df785b69c9804c51f0004333f1859a6d042
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Thu May 26 17:43:28 2011 +0100

    changed / fixed inconsistency / minor optimization in Index.union when one contained in the other, fixed resulting failing unit tests. forced SparseSeries fill_value to always be float64 type

diff --git a/pandas/core/index.py b/pandas/core/index.py
index 1d12ba5a5..05c4eb7fd 100644
--- a/pandas/core/index.py
+++ b/pandas/core/index.py
@@ -175,21 +175,16 @@ class Index(np.ndarray):
         if not hasattr(other, '__iter__'):
             raise Exception('Input must be iterable!')
 
-        if self.equals(other):
+        if len(other) == 0 or self.equals(other):
             return self
 
-        f = self.indexMap.__contains__
-        newElts = [x for x in other if not f(x)]
-        if len(newElts) > 0:
-            newSeq = np.concatenate((self, newElts))
-            try:
-                newSeq = np.unique(newSeq)
-            except Exception:
-                # Not sortable / multiple types
-                pass
-            return Index(newSeq)
-        else:
-            return self
+        new_seq = np.concatenate((self, other))
+        try:
+            new_seq = np.unique(new_seq)
+        except Exception:
+            # Not sortable / multiple types
+            pass
+        return Index(new_seq)
 
     def intersection(self, other):
         """
diff --git a/pandas/core/sparse.py b/pandas/core/sparse.py
index cab09f03a..ff51a5d8e 100644
--- a/pandas/core/sparse.py
+++ b/pandas/core/sparse.py
@@ -239,7 +239,7 @@ class SparseSeries(Series):
         output = subarr.view(cls)
         output._sp_values = subarr
         output.sp_index = sparse_index
-        output.fill_value = fill_value
+        output.fill_value = np.float64(fill_value)
         output.index = index
         return output
 
diff --git a/pandas/core/tests/test_frame.py b/pandas/core/tests/test_frame.py
index 553a69704..782d09085 100644
--- a/pandas/core/tests/test_frame.py
+++ b/pandas/core/tests/test_frame.py
@@ -572,7 +572,10 @@ class TestDataFrame(unittest.TestCase):
                                  self.frame['A'] * 2,
                                  compare_keys=False)
 
-        self.assert_(np.isnan(added['C'][:5]).all())
+        self.assert_(np.isnan(added['C'].reindex(frame_copy.index)[:5]).all())
+
+        # assert(False)
+
         self.assert_(np.isnan(added['D']).all())
 
         self_added = self.frame + self.frame
@@ -1697,9 +1700,18 @@ class TestDataFrame(unittest.TestCase):
         desc = self.mixed_frame.describe()
         desc = self.frame.describe()
 
-    def test_frame_indexer(self):
+    def test_frame_fancy_indexing(self):
+        f = self.frame
+        ix = f.ix
+
+        assert_series_equal(ix[:, 'A'], f['A'])
+        assert_frame_equal(ix[:, ['B', 'A']], f.reindex(columns=['B', 'A']))
+
+        # slicing, ints
+        assert_frame_equal(ix[5:10], f[5:10])
+        assert_frame_equal(ix[5:10, :], f[5:10])
+
 
-        ix = self.frame.ix
 
 if __name__ == '__main__':
     import nose
diff --git a/pandas/io/parsers.py b/pandas/io/parsers.py
index e63b3fd06..13aea0975 100644
--- a/pandas/io/parsers.py
+++ b/pandas/io/parsers.py
@@ -201,7 +201,7 @@ class ExcelFile(object):
                 row.append(value)
             data.append(row)
         return simpleParser(data, header=header, indexCol=index_col,
-                            na_values=na_values)
+                            na_values=na_values).toDataMatrix()
 
 def parseExcel(filepath, header=None, indexCol=0, sheetname=None, **kwds):
     """
diff --git a/pandas/util/testing.py b/pandas/util/testing.py
index 482aee0bb..3b62faaf5 100644
--- a/pandas/util/testing.py
+++ b/pandas/util/testing.py
@@ -113,6 +113,8 @@ def assert_frame_equal(left, right):
     for col in right:
         assert(col in left)
 
+    assert(left.columns.equals(right.columns))
+
 def assert_panel_equal(left, right):
     for col, series in left.iteritems():
         assert(col in right)
