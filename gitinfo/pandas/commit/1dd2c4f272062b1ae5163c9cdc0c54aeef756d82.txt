commit 1dd2c4f272062b1ae5163c9cdc0c54aeef756d82
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Sun Aug 12 16:37:24 2012 -0400

    BUG: handle unicode level names when formatting MultiIndex close #1736

diff --git a/RELEASE.rst b/RELEASE.rst
index 950556685..c98141a68 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -80,6 +80,7 @@ pandas 0.8.2
   - Fix bug in scatter_plot with by option (#1716)
   - Fix performance problem in infer_freq with lots of non-unique stamps (#1686)
   - Fix handling of PeriodIndex as argument to create MultiIndex (#1705)
+  - Fix re: unicode MultiIndex level names in Series/DataFrame repr (#1736)
 
 pandas 0.8.1
 ============
diff --git a/pandas/core/index.py b/pandas/core/index.py
index 5466a8697..ec5c50104 100644
--- a/pandas/core/index.py
+++ b/pandas/core/index.py
@@ -1463,6 +1463,11 @@ class MultiIndex(Index):
         return unique_vals.take(labels)
 
     def format(self, space=2, sparsify=None, adjoin=True, names=False):
+        from pandas.core.common import _stringify
+        from pandas.core.format import print_config
+        def _strify(x):
+            return _stringify(x, print_config.encoding)
+
         if len(self) == 0:
             return []
 
@@ -1474,7 +1479,7 @@ class MultiIndex(Index):
             level = []
 
             if names:
-                level.append(str(name) if name is not None else '')
+                level.append(_strify(name) if name is not None else '')
 
             level.extend(np.array(lev, dtype=object))
             result_levels.append(level)
diff --git a/pandas/tests/test_multilevel.py b/pandas/tests/test_multilevel.py
index 6eb6976b1..6abd8594f 100644
--- a/pandas/tests/test_multilevel.py
+++ b/pandas/tests/test_multilevel.py
@@ -1395,6 +1395,15 @@ x   q   30      3    -0.6662 -0.5243 -0.3580  0.89145  2.5838"""
         # NumPy bug
         # repr(index.get_level_values(1))
 
+    def test_unicode_repr_level_names(self):
+        index = MultiIndex.from_tuples([(0, 0), (1, 1)],
+                                       names=[u'\u0394', 'i1'])
+
+        s = Series(range(2), index=index)
+        df = DataFrame(np.random.randn(2,4), index=index)
+        repr(s)
+        repr(df)
+
     def test_dataframe_insert_column_all_na(self):
         # GH #1534
         mix = MultiIndex.from_tuples([('1a', '2a'), ('1a', '2b'), ('1a', '2c')])
