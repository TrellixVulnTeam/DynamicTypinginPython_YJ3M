commit 6812f5b295ea6a942251d5ff131b03953e29e3ed
Author: Chang She <chang@lambdafoundry.com>
Date:   Sun Jun 17 15:16:05 2012 -0400

    BUG: code around np.concatenate bug in fast_union #1489

diff --git a/pandas/tseries/index.py b/pandas/tseries/index.py
index 255411335..f6455f5d2 100644
--- a/pandas/tseries/index.py
+++ b/pandas/tseries/index.py
@@ -557,12 +557,7 @@ class DatetimeIndex(Int64Index):
         to_concat = [x.values if isinstance(x, Index) else x
                      for x in to_concat]
 
-        if all(x.dtype == _NS_DTYPE for x in to_concat):
-            # work around NumPy 1.6 bug
-            new_values = np.concatenate([x.view('i8') for x in to_concat])
-            return Index(new_values.view(_NS_DTYPE), name=name)
-        else:
-            return Index(np.concatenate(to_concat), name=name)
+        return Index(_concat(to_concat), name=name)
 
     def get_duplicates(self):
         values = Index.get_duplicates(self)
@@ -838,7 +833,7 @@ class DatetimeIndex(Int64Index):
             if left_end < right_end:
                 loc = right.searchsorted(left_end, side='right')
                 right_chunk = right.values[loc:]
-                dates = np.concatenate((left.values, right_chunk))
+                dates = _concat((left.values, right_chunk))
                 return self._view_like(dates)
             else:
                 return left
@@ -1384,3 +1379,10 @@ def _time_to_nanosecond(time):
     return (1000000 * seconds + time.microsecond) * 1000
 
 
+def _concat(to_concat):
+    if all(x.dtype == _NS_DTYPE for x in to_concat):
+        # work around NumPy 1.6 bug
+        new_values = np.concatenate([x.view('i8') for x in to_concat])
+        return new_values.view(_NS_DTYPE)
+    else:
+        return np.concatenate(to_concat)
diff --git a/pandas/tseries/tests/test_timeseries.py b/pandas/tseries/tests/test_timeseries.py
index cd4a0169f..4a79b2711 100644
--- a/pandas/tseries/tests/test_timeseries.py
+++ b/pandas/tseries/tests/test_timeseries.py
@@ -1509,6 +1509,18 @@ class TestSeriesDatetime64(unittest.TestCase):
         result = df.values.squeeze()
         self.assert_((result[:, 0] == expected.values).all())
 
+    def test_union(self):
+        from pandas import Series, DataFrame
+        import pandas as pd
+
+        rng1 = pd.date_range('1/1/1999', '1/1/2012', freq='MS')
+        s1 = Series(np.random.randn(len(rng1)), rng1)
+
+        rng2 = pd.date_range('1/1/1980', '12/1/2001', freq='MS')
+        s2 = Series(np.random.randn(len(rng2)), rng2)
+        df = DataFrame({'s1' : s1, 's2' : s2})
+        self.assert_(df.index.values.dtype == np.dtype('M8[ns]'))
+
 
 class TestTimestamp(unittest.TestCase):
 
