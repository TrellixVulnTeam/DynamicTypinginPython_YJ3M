commit fcf63ee4fc0bf89c2547ed607d57de0045f20ce3
Author: Adam Klein <adamklein@gmail.com>
Date:   Sat Feb 11 15:04:29 2012 -0500

    added conformity check

diff --git a/pandas/core/datetools.py b/pandas/core/datetools.py
index cac499816..1b7621253 100644
--- a/pandas/core/datetools.py
+++ b/pandas/core/datetools.py
@@ -45,14 +45,14 @@ def _dt_box_array(arr):
     return boxer(arr)
 
 _box_cache = dict()
-def _dt_box(key, freq, offset):
+def _dt_box(key, freq=None, offset=-1):
     '''
     Box datetime64 to Timestamp
     '''
     try:
         return _box_cache[key]
     except KeyError:
-        _box_cache[key] = lib.Timestamp(key.view('i8'), 
+        _box_cache[key] = lib.Timestamp(key.view('i8'),
                                         freq=freq, offset=offset)
         return _box_cache[key]
 
diff --git a/pandas/core/index.py b/pandas/core/index.py
index 467c2d91c..ec8eb8a7e 100644
--- a/pandas/core/index.py
+++ b/pandas/core/index.py
@@ -1073,6 +1073,14 @@ class DatetimeIndex(Int64Index):
             cached, first, last = lib._get_freq(freq, start, end, n)
             dti = cls._construct_from_cache(name, freq, cached, first, last+1)
             return dti
+        else:
+            # hmm prob want to move this to bottom after data
+            # is constructed
+            if freq is not None:
+                failure = lib.conformity_check(data.view('i8'), freq)
+                if failure is not None:
+                    raise ValueError("%s does not satisfy %s"
+                                     % (np.datetime64(failure), freq))
 
         # TODO: check if data conforms to freq
 
@@ -1151,7 +1159,7 @@ class DatetimeIndex(Int64Index):
             val = arr_idx[key]
             if self.freq:
                 # suffer another cache lookup? how to avoid?
-                return _dt_box(val, self.freq, 
+                return _dt_box(val, self.freq,
                                self.first + self._engine.get_loc(val))
             else:
                 return _dt_box(val)
diff --git a/pandas/src/datetime.pyx b/pandas/src/datetime.pyx
index 22b7140f0..809c769b0 100644
--- a/pandas/src/datetime.pyx
+++ b/pandas/src/datetime.pyx
@@ -690,6 +690,27 @@ def _get_freq(freq, start, end=None, n=None):
 
     return (rng, first, last)
 
+def conformity_check(ndarray[int64_t] data, object freq):
+    cdef:
+        Py_ssize_t p, i
+        int64_t first, last
+
+    if len(data) == 0:
+        return None
+
+    rng, first, last = _get_freq(freq, data[0], n=len(data))
+
+    i = 0
+    p = first
+    while i < len(data):
+        if rng[p] != data[i]:
+            return data[i]
+        i += 1
+        p += 1
+
+    return None
+
+
 # The following is derived from relativedelta.py in dateutil package
 # ------------------------------------------------------------------------------
 # Copyright (c) 2003-2010  Gustavo Niemeyer <gustavo@niemeyer.net>
