commit 764ce5e44f83ec2f9fa30895c6061b009e664429
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Wed Mar 14 20:44:41 2012 -0400

    BUG: hierarchical item selection in Panel.__getitem__

diff --git a/pandas/core/panel.py b/pandas/core/panel.py
index 9b9310bd3..56366ea32 100644
--- a/pandas/core/panel.py
+++ b/pandas/core/panel.py
@@ -327,29 +327,6 @@ class Panel(NDFrame):
             return self._getitem_multilevel(key)
         return super(Panel, self).__getitem__(key)
 
-    def _getitem_multilevel(self, key):
-        loc = self.items.get_loc(key)
-        if isinstance(loc, (slice, np.ndarray)):
-            new_index = self.items[loc]
-            result_index = _maybe_droplevels(new_index, key)
-            if self._is_mixed_type:
-                result = self.reindex(items=new_index)
-                result.index = result_index
-            else:
-                new_values = self.values[loc, :, :]
-                result = Panel(new_values, 
-                               items=self.items[loc],
-                               major_axis=self.major_axis,
-                               minor_axis=self.minor_axis)
-            return result
-        else:
-            return self._get_item_cache(key)
-
-    def __getitem__(self, key):
-        if isinstance(self.items, MultiIndex):
-            return self._getitem_multilevel(key)
-        return super(Panel, self).__getitem__(key)
-
     def _getitem_multilevel(self, key):
         loc = self.items.get_loc(key)
         if isinstance(loc, (slice, np.ndarray)):
@@ -361,7 +338,7 @@ class Panel(NDFrame):
             else:
                 new_values = self.values[loc, :, :]
                 result = Panel(new_values,
-                               items=self.items[loc],
+                               items=result_index,
                                major_axis=self.major_axis,
                                minor_axis=self.minor_axis)
             return result
diff --git a/pandas/tests/test_panel.py b/pandas/tests/test_panel.py
index 2cfc472d2..54d4ff279 100644
--- a/pandas/tests/test_panel.py
+++ b/pandas/tests/test_panel.py
@@ -951,16 +951,16 @@ class TestPanel(unittest.TestCase, PanelTests, CheckIndexing,
     def test_multiindex_get(self):
         ind = MultiIndex.from_tuples([('a', 1), ('a', 2), ('b', 1), ('b',2)],
                                      names=['first', 'second'])
-        wp = Panel(np.random.random((4,5,5)), 
-                                    items=ind, 
-                                    major_axis=np.arange(5), 
+        wp = Panel(np.random.random((4,5,5)),
+                                    items=ind,
+                                    major_axis=np.arange(5),
                                     minor_axis=np.arange(5))
         f1 = wp['a']
         f2 = wp.ix['a']
         assert_panel_equal(f1, f2)
 
-        self.assert_((f1.items == ind[0:2]).all())
-        self.assert_((f2.items == ind[0:2]).all())
+        self.assert_((f1.items == [1, 2]).all())
+        self.assert_((f2.items == [1, 2]).all())
 
     def test_repr_empty(self):
         empty = Panel()
diff --git a/scripts/groupby_speed.py b/scripts/groupby_speed.py
index 37d153d38..c0fa44957 100644
--- a/scripts/groupby_speed.py
+++ b/scripts/groupby_speed.py
@@ -1,13 +1,12 @@
 from pandas import *
 
 rng = DateRange('1/3/2011', '11/30/2011', offset=datetools.Minute())
-rng5 = DateRange('1/3/2011', '11/30/2011', offset=datetools.Minute(5))
 
 df = DataFrame(np.random.randn(len(rng), 5), index=rng,
                columns=list('OHLCV'))
 
+rng5 = DateRange('1/3/2011', '11/30/2011', offset=datetools.Minute(5))
 gp = rng5.asof
-
 grouped = df.groupby(gp)
 
 def get1(dt):
