commit b1a104e37684d337ee847d81dc2f2a411c328ac2
Author: Joris Van den Bossche <jorisvandenbossche@gmail.com>
Date:   Fri Jan 24 14:09:49 2020 +0100

    ASV: add benchmarks for Series.array and extract_array (#31277)

diff --git a/asv_bench/benchmarks/attrs_caching.py b/asv_bench/benchmarks/attrs_caching.py
index 501e27b90..9c7b107b4 100644
--- a/asv_bench/benchmarks/attrs_caching.py
+++ b/asv_bench/benchmarks/attrs_caching.py
@@ -1,5 +1,6 @@
 import numpy as np
 
+import pandas as pd
 from pandas import DataFrame
 
 try:
@@ -7,6 +8,11 @@ try:
 except ImportError:
     from pandas.util.decorators import cache_readonly
 
+try:
+    from pandas.core.construction import extract_array
+except ImportError:
+    extract_array = None
+
 
 class DataFrameAttributes:
     def setup(self):
@@ -20,6 +26,33 @@ class DataFrameAttributes:
         self.df.index = self.cur_index
 
 
+class SeriesArrayAttribute:
+
+    params = [["numeric", "object", "category", "datetime64", "datetime64tz"]]
+    param_names = ["dtype"]
+
+    def setup(self, dtype):
+        if dtype == "numeric":
+            self.series = pd.Series([1, 2, 3])
+        elif dtype == "object":
+            self.series = pd.Series(["a", "b", "c"], dtype=object)
+        elif dtype == "category":
+            self.series = pd.Series(["a", "b", "c"], dtype="category")
+        elif dtype == "datetime64":
+            self.series = pd.Series(pd.date_range("2013", periods=3))
+        elif dtype == "datetime64tz":
+            self.series = pd.Series(pd.date_range("2013", periods=3, tz="UTC"))
+
+    def time_array(self, dtype):
+        self.series.array
+
+    def time_extract_array(self, dtype):
+        extract_array(self.series)
+
+    def time_extract_array_numpy(self, dtype):
+        extract_array(self.series, extract_numpy=True)
+
+
 class CacheReadonly:
     def setup(self):
         class Foo:
