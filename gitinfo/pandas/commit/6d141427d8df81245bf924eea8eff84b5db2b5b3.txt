commit 6d141427d8df81245bf924eea8eff84b5db2b5b3
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Mon May 7 10:55:16 2012 -0400

    DOC: improve docstring and add rst doc for #695

diff --git a/RELEASE.rst b/RELEASE.rst
index 070dcede6..2991910b2 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -33,6 +33,8 @@ pandas 0.8.0
     on DatetimeIndex (#391)
   - Convert DatetimeIndexes to UTC if time zones are different in join/setops
     (#864)
+  - Add limit argument for forward/backward filling to reindex, fillna,
+    etc. (#825 and others)
 
 **Improvements to existing features**
 
diff --git a/doc/source/dsintro.rst b/doc/source/dsintro.rst
index b227352e4..99876d66c 100644
--- a/doc/source/dsintro.rst
+++ b/doc/source/dsintro.rst
@@ -741,6 +741,16 @@ The API for insertion and deletion is the same as for DataFrame. And as with
 DataFrame, if the item is a valid python identifier, you can access it as an
 attribute and tab-complete it in IPython.
 
+Transposing
+~~~~~~~~~~~
+
+A Panel can be rearranged using its ``transpose`` method (which does not make a
+copy by default unless the data are heterogeneous):
+
+.. ipython:: python
+
+   wp.transpose(2, 0, 1)
+
 Indexing / Selection
 ~~~~~~~~~~~~~~~~~~~~
 
diff --git a/pandas/core/panel.py b/pandas/core/panel.py
index d031e3a2a..b8b014e2b 100644
--- a/pandas/core/panel.py
+++ b/pandas/core/panel.py
@@ -937,10 +937,24 @@ class Panel(NDFrame):
         return self._constructor(new_values, *new_axes)
 
     def transpose(self, items='items', major='major', minor='minor',
-                  copy=True):
+                  copy=False):
         """
         Permute the dimensions of the Panel
 
+        Parameters
+        ----------
+        items : int or one of {'items', 'major', 'minor'}
+        major : int or one of {'items', 'major', 'minor'}
+        minor : int or one of {'items', 'major', 'minor'}
+        copy : boolean, default False
+            Make a copy of the underlying data. Mixed-dtype data will
+            always result in a copy
+
+        Examples
+        --------
+        >>> p.transpose(2, 0, 1)
+        >>> p.transpose(2, 0, 1, copy=True)
+
         Returns
         -------
         y : Panel (new object)
