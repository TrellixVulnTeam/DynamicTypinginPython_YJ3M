commit 03bee8d22728fadd6e97bc2b508c9977a236bb8a
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Sat Jan 19 18:45:44 2013 -0500

    BUG: fix data borking in to_datetime called on Series with datetime64 values already. close #2699

diff --git a/RELEASE.rst b/RELEASE.rst
index 4dc4896cc..1a51d2348 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -81,6 +81,7 @@ pandas 0.10.1
   - Fix a Cython C int64 boxing issue causing read_csv to return incorrect
     results (GH2599_)
   - Fix groupby summing performance issue on boolean data (GH2692_)
+  - Don't bork Series containing datetime64 values with to_datetime (GH2699_)
 
 **API Changes**
 
@@ -103,6 +104,7 @@ pandas 0.10.1
 .. _GH2637: https://github.com/pydata/pandas/issues/2637
 .. _GH2690: https://github.com/pydata/pandas/issues/2690
 .. _GH2692: https://github.com/pydata/pandas/issues/2692
+.. _GH2699: https://github.com/pydata/pandas/issues/2699
 
 pandas 0.10.0
 =============
diff --git a/pandas/tseries/tests/test_timeseries.py b/pandas/tseries/tests/test_timeseries.py
index 1044f25b1..ced87f7ff 100644
--- a/pandas/tseries/tests/test_timeseries.py
+++ b/pandas/tseries/tests/test_timeseries.py
@@ -673,6 +673,13 @@ class TestTimeSeries(unittest.TestCase):
         xp = datetime(2001, 1, 1)
         self.assert_(rs, xp)
 
+    def test_to_datetime_on_datetime64_series(self):
+        # #2699
+        s = Series(date_range('1/1/2000', periods=10))
+
+        result = to_datetime(s)
+        self.assertEquals(result[0], s[0])
+
     def test_nat_vector_field_access(self):
         idx = DatetimeIndex(['1/1/2000', None, None, '1/4/2000'])
 
diff --git a/pandas/tseries/tools.py b/pandas/tseries/tools.py
index 5843f3edc..495008617 100644
--- a/pandas/tseries/tools.py
+++ b/pandas/tseries/tools.py
@@ -89,7 +89,9 @@ def to_datetime(arg, errors='ignore', dayfirst=False, utc=None, box=True):
     elif isinstance(arg, datetime):
         return arg
     elif isinstance(arg, Series):
-        values = _convert_f(arg.values)
+        values = arg.values
+        if not com.is_datetime64_dtype(values):
+            values = _convert_f(values)
         return Series(values, index=arg.index, name=arg.name)
     elif isinstance(arg, (np.ndarray, list)):
         if isinstance(arg, list):
