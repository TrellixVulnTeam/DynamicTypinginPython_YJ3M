commit 38b717d5a76bc58dac5cb854d75b501369cf8dc6
Author: jreback <jeff@reback.net>
Date:   Sat Oct 12 09:53:31 2013 -0400

    DOC: minor whatsnew changes

diff --git a/doc/source/basics.rst b/doc/source/basics.rst
index e6bb084fc..33d1219b3 100644
--- a/doc/source/basics.rst
+++ b/doc/source/basics.rst
@@ -219,8 +219,8 @@ see :ref:`here<indexing.boolean>`
 Boolean Reductions
 ~~~~~~~~~~~~~~~~~~
 
-Furthermore, you can apply the reductions: ``empty``, ``any()``, ``all()``, and ``bool()`` to provide a
-way to summarize these results.
+You can apply the reductions: ``empty``, ``any()``, ``all()``, and ``bool()`` to provide a
+way to summarize a boolean result.
 
 .. ipython:: python
 
@@ -240,6 +240,15 @@ You can test if a pandas object is empty, via the ``empty`` property.
    df.empty
    DataFrame(columns=list('ABC')).empty
 
+To evaluate single-element pandas objects in a boolean context, use the method ``.bool()``:
+
+.. ipython:: python
+
+   Series([True]).bool()
+   Series([False]).bool()
+   DataFrame([[True]]).bool()
+   DataFrame([[False]]).bool()
+
 .. warning::
 
    You might be tempted to do the following:
@@ -261,16 +270,6 @@ You can test if a pandas object is empty, via the ``empty`` property.
 
        ValueError: The truth value of an array is ambiguous. Use a.empty, a.any() or a.all().
 
-
-To evaluate single-element pandas objects in a boolean context, use the method ``.bool()``:
-
-.. ipython:: python
-
-   Series([True]).bool()
-   Series([False]).bool()
-   DataFrame([[True]]).bool()
-   DataFrame([[False]]).bool()
-
 See :ref:`gotchas<gotchas.truth>` for a more detailed discussion.
 
 
diff --git a/doc/source/gotchas.rst b/doc/source/gotchas.rst
index e8f3367ee..1edd6fa17 100644
--- a/doc/source/gotchas.rst
+++ b/doc/source/gotchas.rst
@@ -68,8 +68,6 @@ To evaluate single-element pandas objects in a boolean context, use the method `
    DataFrame([[True]]).bool()
    DataFrame([[False]]).bool()
 
-See :ref:`boolean reductions<basics.reductions>` for more examples.
-
 Bitwise boolean
 ~~~~~~~~~~~~~~~
 
@@ -87,6 +85,8 @@ which is almost always what you want anyways.
    4     True
    dtype: bool
 
+See :ref:`boolean comparisons<basics.compare>` for more examples.
+
 ``NaN``, Integer ``NA`` values and ``NA`` type promotions
 ---------------------------------------------------------
 
diff --git a/doc/source/v0.13.0.txt b/doc/source/v0.13.0.txt
index afc5a7039..9cacc2a93 100644
--- a/doc/source/v0.13.0.txt
+++ b/doc/source/v0.13.0.txt
@@ -57,22 +57,18 @@ API changes
 
 - Infer and downcast dtype if ``downcast='infer'`` is passed to ``fillna/ffill/bfill`` (:issue:`4604`)
 - ``__nonzero__`` for all NDFrame objects, will now raise a ``ValueError``, this reverts back to (:issue:`1073`, :issue:`4633`)
-  behavior. Added the ``.bool()`` method to ``NDFrame`` objects to facilitate evaluating of single-element boolean Series
-  See :ref:`gotchas<gotchas.truth>` for a more detailed discussion.
+  behavior. See :ref:`gotchas<gotchas.truth>` for a more detailed discussion.
 
-  This prevents doing boolean comparision on *entire* pandas objects. These all will raise ``ValueError``.
+  This prevents doing boolean comparision on *entire* pandas objects, which is inherently ambiguous. These all will raise a ``ValueError``.
 
   .. code-block:: python
 
       if df:
          ....
-      >>> ValueError: The truth value of a DataFrame is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().
-
       df1 and df2
       s1 and s2
 
-
-  To evaluate single-element pandas objects in a boolean context, use the method ``.bool()``:
+  Added the ``.bool()`` method to ``NDFrame`` objects to facilitate evaluating of single-element boolean Series:
 
   .. ipython:: python
 
@@ -93,7 +89,7 @@ Prior Version Deprecations/Changes
 These were announced changes in 0.12 or prior that are taking effect as of 0.13.0
 
 - Remove deprecated ``Factor`` (:issue:`3650`)
-- Remove deprecated ``set_printoptions/reset_printoptions`` (:issue:``3046``)
+- Remove deprecated ``set_printoptions/reset_printoptions`` (:issue:`3046`)
 - Remove deprecated ``_verbose_info`` (:issue:`3215`)
 - Remove deprecated ``read_clipboard/to_clipboard/ExcelFile/ExcelWriter`` from ``pandas.io.parsers`` (:issue:`3717`)
 - default for ``tupleize_cols`` is now ``False`` for both ``to_csv`` and ``read_csv``. Fair warning in 0.12 (:issue:`3604`)
