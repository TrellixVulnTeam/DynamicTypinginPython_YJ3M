commit d794618774dc9f20bcd92c2a0765836d298b26c3
Author: Phillip Cloud <cpcloud@gmail.com>
Date:   Wed Feb 12 23:25:33 2014 -0500

    TST: add tests for dict with bool keys

diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index f3a0f156e..e73f1e792 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -8003,6 +8003,12 @@ class TestDataFrame(tm.TestCase, CheckIndexing,
         expected = DataFrame(np.ones((2, 2), dtype=bool))
         tm.assert_frame_equal(result, expected)
 
+    def test_replace_with_dict_with_bool_keys(self):
+        df = DataFrame({0: [True, False], 1: [False, True]})
+        result = df.replace({'asdf': 'asdb', True: 'yes'})
+        expected = DataFrame({0: ['yes', False], 1: [False, 'yes']})
+        tm.assert_frame_equal(expected, result)
+
     def test_combine_multiple_frames_dtypes(self):
         from pandas import concat
 
diff --git a/pandas/tests/test_series.py b/pandas/tests/test_series.py
index e8a357665..38aae8ad2 100644
--- a/pandas/tests/test_series.py
+++ b/pandas/tests/test_series.py
@@ -5291,7 +5291,6 @@ class TestSeries(tm.TestCase, CheckNameIntegration):
         result = ser.replace(Timestamp('20130103'), Timestamp('20120101'))
         assert_series_equal(result, expected)
 
-
     def test_replace_with_single_list(self):
         ser = Series([0, 1, 2, 3, 4])
         result = ser.replace([1,2,3])
@@ -5307,6 +5306,7 @@ class TestSeries(tm.TestCase, CheckNameIntegration):
             s.replace([1,2,3],inplace=True,method='crash_cymbal')
         assert_series_equal(s, ser)
 
+
     def test_replace_mixed_types(self):
         s = Series(np.arange(5),dtype='int64')
 
@@ -5367,6 +5367,12 @@ class TestSeries(tm.TestCase, CheckNameIntegration):
         expected = Series([False] * len(s))
         tm.assert_series_equal(expected, result)
 
+    def test_replace_with_dict_with_bool_keys(self):
+        s = Series([True, False, True])
+        result = s.replace({'asdf': 'asdb', True: 'yes'})
+        expected = Series(['yes', False, 'yes'])
+        tm.assert_series_equal(expected, result)
+
     def test_asfreq(self):
         ts = Series([0., 1., 2.], index=[datetime(2009, 10, 30),
                                          datetime(2009, 11, 30),
