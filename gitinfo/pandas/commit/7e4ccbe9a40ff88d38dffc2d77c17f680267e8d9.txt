commit 7e4ccbe9a40ff88d38dffc2d77c17f680267e8d9
Author: jreback <jeff@reback.net>
Date:   Sun Jun 9 17:41:17 2013 -0400

    TST: disallow slicing a timeseries with floats
    
    TST: manage truediv in py3 for unit comparisons

diff --git a/pandas/tseries/index.py b/pandas/tseries/index.py
index 51e657d17..1cb986ee6 100644
--- a/pandas/tseries/index.py
+++ b/pandas/tseries/index.py
@@ -1204,6 +1204,9 @@ class DatetimeIndex(Int64Index):
         if isinstance(start, time) or isinstance(end, time):
             raise KeyError('Cannot mix time and non-time slice keys')
 
+        if isinstance(start, float) or isinstance(end, float):
+            raise TypeError('Cannot index datetime64 with float keys')
+
         return Index.slice_indexer(self, start, end, step)
 
     def slice_locs(self, start=None, end=None):
diff --git a/pandas/tseries/tests/test_timeseries.py b/pandas/tseries/tests/test_timeseries.py
index 6efddb281..88dee987f 100644
--- a/pandas/tseries/tests/test_timeseries.py
+++ b/pandas/tseries/tests/test_timeseries.py
@@ -2718,10 +2718,17 @@ class TestTimestamp(unittest.TestCase):
         check(val/1000000L,unit='ms')
         check(val/1000000000L,unit='s')
 
-        # get chopped
-        check((val+500000)/1000000000L,unit='s')
-        check((val+500000000)/1000000000L,unit='s')
-        check((val+500000)/1000000L,unit='ms')
+        # using truediv, so these are like floats
+        if py3compat.PY3:
+            check((val+500000)/1000000000L,unit='s',us=500)
+            check((val+500000000)/1000000000L,unit='s',us=500000)
+            check((val+500000)/1000000L,unit='ms',us=500)
+
+        # get chopped in py2
+        else:
+            check((val+500000)/1000000000L,unit='s')
+            check((val+500000000)/1000000000L,unit='s')
+            check((val+500000)/1000000L,unit='ms')
 
         # ok
         check((val+500000)/1000L,unit='us',us=500)
diff --git a/pandas/tseries/tools.py b/pandas/tseries/tools.py
index 46bcee6f9..90bc0beb8 100644
--- a/pandas/tseries/tools.py
+++ b/pandas/tseries/tools.py
@@ -50,7 +50,7 @@ def _maybe_get_tz(tz):
 
 
 def to_datetime(arg, errors='ignore', dayfirst=False, utc=None, box=True,
-                format=None, coerce=False, unit=None):
+                format=None, coerce=False, unit='ns'):
     """
     Convert argument to datetime
 
@@ -70,7 +70,7 @@ def to_datetime(arg, errors='ignore', dayfirst=False, utc=None, box=True,
         strftime to parse time, eg "%d/%m/%Y"
     coerce : force errors to NaT (False by default)
     unit : unit of the arg (s,ms,us,ns) denote the unit in epoch
-        (e.g. a unix timestamp)
+        (e.g. a unix timestamp), which is an integer/float number
 
     Returns
     -------
diff --git a/pandas/tslib.pyx b/pandas/tslib.pyx
index 94279e61e..c2a3f429e 100644
--- a/pandas/tslib.pyx
+++ b/pandas/tslib.pyx
@@ -1254,7 +1254,6 @@ cdef inline _get_datetime64_nanos(object val):
 cdef inline int64_t cast_from_unit(object unit, object ts):
     """ return a casting of the unit represented to nanoseconds
         round the fractional part of a float to our precision, p """
-    p = 0
     if unit == 's':
         m = 1000000000L
         p = 6
@@ -1266,6 +1265,7 @@ cdef inline int64_t cast_from_unit(object unit, object ts):
         p = 0
     else:
         m = 1L
+        p = 0
 
     # just give me the unit back
     if ts is None:
