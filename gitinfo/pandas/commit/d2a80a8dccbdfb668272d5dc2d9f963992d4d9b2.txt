commit d2a80a8dccbdfb668272d5dc2d9f963992d4d9b2
Author: jreback <jeff@reback.net>
Date:   Sat May 18 18:44:54 2013 -0400

    CLN: added NotImplementedError when trying to iloc with a mask that has an integer index
    
         (rather than ValueError)

diff --git a/pandas/core/indexing.py b/pandas/core/indexing.py
index 9a2cd640c..02f1cf453 100644
--- a/pandas/core/indexing.py
+++ b/pandas/core/indexing.py
@@ -777,6 +777,8 @@ class _iLocIndexer(_LocationIndexer):
     def _has_valid_type(self, key, axis):
         if com._is_bool_indexer(key):
             if hasattr(key,'index') and isinstance(key.index,Index):
+                if key.index.inferred_type == 'integer':
+                    raise NotImplementedError("iLocation based boolean indexing on an integer type is not available")
                 raise ValueError("iLocation based boolean indexing cannot use an indexable as a mask")
             return True
 
diff --git a/pandas/tests/test_indexing.py b/pandas/tests/test_indexing.py
index e9b63c860..d90aa369a 100644
--- a/pandas/tests/test_indexing.py
+++ b/pandas/tests/test_indexing.py
@@ -895,7 +895,7 @@ class TestIndexing(unittest.TestCase):
         mask = (df.a%2 == 0)
         self.assertRaises(ValueError, df.iloc.__getitem__, tuple([mask]))
         mask.index = range(len(mask))
-        self.assertRaises(ValueError, df.iloc.__getitem__, tuple([mask]))
+        self.assertRaises(NotImplementedError, df.iloc.__getitem__, tuple([mask]))
 
         # ndarray ok
         result = df.iloc[np.array([True] * len(mask),dtype=bool)]
@@ -916,7 +916,7 @@ class TestIndexing(unittest.TestCase):
             ('index','.iloc') : 'iLocation based boolean indexing cannot use an indexable as a mask',
             ('locs','')      : 'Unalignable boolean Series key provided',
             ('locs','.loc')   : 'Unalignable boolean Series key provided',
-            ('locs','.iloc')  : 'iLocation based boolean indexing cannot use an indexable as a mask',
+            ('locs','.iloc')  : 'iLocation based boolean indexing on an integer type is not available',
             }
 
         import warnings
