commit 5932190ccede58857d4b3cd064609b884800aeba
Author: Thierry Moisan <thierry.moisan@gmail.com>
Date:   Wed Mar 6 20:49:58 2013 -0500

    add comparisons operator to the Period object and fixes issue 2781

diff --git a/pandas/tests/test_tseries.py b/pandas/tests/test_tseries.py
index eaeb33256..ba73803e6 100644
--- a/pandas/tests/test_tseries.py
+++ b/pandas/tests/test_tseries.py
@@ -2,7 +2,7 @@ import unittest
 
 from numpy import nan
 import numpy as np
-from pandas import Index, isnull
+from pandas import Index, isnull, Period
 from pandas.util.testing import assert_almost_equal
 import pandas.util.testing as common
 import pandas.lib as lib
@@ -61,6 +61,35 @@ class TestTseriesUtil(unittest.TestCase):
         expect_filler = [-1, -1, -1, -1, -1]
         self.assert_(np.array_equal(filler, expect_filler))
 
+class TestPeriod(unittest.TestCase):
+    def setUp(self):
+        self.january1 = Period('2000-01', 'M')
+        self.january2 = Period('2000-01', 'M')
+        self.february = Period('2000-02', 'M')
+        self.march = Period('2000-03', 'M')
+
+    def test_equal(self):
+        self.assertEqual(self.january1,self.january2)
+
+    def test_notEqual(self):
+        self.assertNotEqual(self.january1, self.february)
+
+    def test_greater(self):
+        self.assertGreater(self.february, self.january1)
+
+    def test_greaterEqual(self):
+        self.assertGreaterEqual(self.january1, self.january2)
+
+    def test_smallerEqual(self):
+        self.assertLessEqual(self.january1, self.january2)
+
+    def test_smaller(self):
+        self.assertLess(self.january1, self.february)
+
+    def test_sort(self):
+        periods = [self.march, self.january1, self.february]
+        correctPeriods = [self.january1, self.february, self.march]
+        self.assertListEqual(sorted(periods), correctPeriods)
 
 def test_left_join_indexer_unique():
     a = np.array([1, 2, 3, 4, 5], dtype=np.int64)
diff --git a/pandas/tseries/period.py b/pandas/tseries/period.py
index 75decb914..43dad94c0 100644
--- a/pandas/tseries/period.py
+++ b/pandas/tseries/period.py
@@ -152,6 +152,26 @@ class Period(object):
         else:  # pragma: no cover
             raise TypeError(other)
 
+    def __lt__(self, other):
+        if other.freq != self.freq:
+            raise ValueError("Cannot compare non-conforming periods")
+        return self.ordinal < other.ordinal
+
+    def __le__(self, other):
+        if other.freq != self.freq:
+            raise ValueError("Cannot compare non-conforming periods")
+        return self.ordinal <= other.ordinal
+
+    def __gt__(self, other):
+        if other.freq != self.freq:
+            raise ValueError("Cannot compare non-conforming periods")
+        return self.ordinal > other.ordinal
+
+    def __ge__(self, other):
+        if other.freq != self.freq:
+            raise ValueError("Cannot compare non-conforming periods")
+        return self.ordinal >= other.ordinal
+
     def asfreq(self, freq, how='E'):
         """
         Convert Period to desired frequency, either at the start or end of the
