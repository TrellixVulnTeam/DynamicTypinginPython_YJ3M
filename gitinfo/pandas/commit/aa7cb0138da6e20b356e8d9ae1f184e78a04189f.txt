commit aa7cb0138da6e20b356e8d9ae1f184e78a04189f
Author: Simon Hawkins <simonjayhawkins@gmail.com>
Date:   Wed Jan 2 16:39:11 2019 +0000

    TST: isort tests/test_* (#24551)

diff --git a/pandas/tests/test_algos.py b/pandas/tests/test_algos.py
index 8d7fd6449..294eae9d4 100644
--- a/pandas/tests/test_algos.py
+++ b/pandas/tests/test_algos.py
@@ -1,28 +1,30 @@
 # -*- coding: utf-8 -*-
 
-import numpy as np
-import pytest
-
-from numpy.random import RandomState
-from numpy import nan
 from datetime import datetime
 from itertools import permutations
 import struct
-from pandas import (Series, Categorical, CategoricalIndex,
-                    Timestamp, DatetimeIndex, Index, IntervalIndex)
-import pandas as pd
 
-from pandas import compat
-from pandas._libs import (groupby as libgroupby, algos as libalgos,
-                          hashtable as ht)
+import numpy as np
+from numpy import nan
+from numpy.random import RandomState
+import pytest
+
+from pandas._libs import (
+    algos as libalgos, groupby as libgroupby, hashtable as ht)
 from pandas.compat import lrange, range
-from pandas.core.arrays import DatetimeArrayMixin as DatetimeArray
+from pandas.compat.numpy import np_array_datetime64_compat
+import pandas.util._test_decorators as td
+
+from pandas.core.dtypes.dtypes import CategoricalDtype as CDT
+
+import pandas as pd
+from pandas import (
+    Categorical, CategoricalIndex, DatetimeIndex, Index, IntervalIndex, Series,
+    Timestamp, compat)
 import pandas.core.algorithms as algos
+from pandas.core.arrays import DatetimeArrayMixin as DatetimeArray
 import pandas.core.common as com
 import pandas.util.testing as tm
-import pandas.util._test_decorators as td
-from pandas.core.dtypes.dtypes import CategoricalDtype as CDT
-from pandas.compat.numpy import np_array_datetime64_compat
 from pandas.util.testing import assert_almost_equal
 
 
diff --git a/pandas/tests/test_base.py b/pandas/tests/test_base.py
index f941f2ff3..85650a9b0 100644
--- a/pandas/tests/test_base.py
+++ b/pandas/tests/test_base.py
@@ -1,32 +1,33 @@
 # -*- coding: utf-8 -*-
 from __future__ import print_function
 
+from datetime import datetime, timedelta
 import re
 import sys
-from datetime import datetime, timedelta
-import pytest
+
 import numpy as np
+import pytest
 
-import pandas as pd
+from pandas._libs.tslib import iNaT
 import pandas.compat as compat
-from pandas.core.dtypes.common import (
-    is_object_dtype, is_datetime64_dtype, is_datetime64tz_dtype,
-    needs_i8_conversion, is_timedelta64_dtype)
-import pandas.util.testing as tm
-from pandas import (Series, Index, DatetimeIndex, TimedeltaIndex,
-                    PeriodIndex, Timedelta, IntervalIndex, Interval,
-                    CategoricalIndex, Timestamp, DataFrame, Panel)
-from pandas.core.arrays import (
-    PandasArray,
-    DatetimeArrayMixin as DatetimeArray,
-    TimedeltaArrayMixin as TimedeltaArray,
-)
-from pandas.compat import StringIO, PYPY, long
+from pandas.compat import PYPY, StringIO, long
 from pandas.compat.numpy import np_array_datetime64_compat
+
+from pandas.core.dtypes.common import (
+    is_datetime64_dtype, is_datetime64tz_dtype, is_object_dtype,
+    is_timedelta64_dtype, needs_i8_conversion)
+
+import pandas as pd
+from pandas import (
+    CategoricalIndex, DataFrame, DatetimeIndex, Index, Interval, IntervalIndex,
+    Panel, PeriodIndex, Series, Timedelta, TimedeltaIndex, Timestamp)
 from pandas.core.accessor import PandasDelegate
-from pandas.core.base import PandasObject, NoNewAttributesMixin
+from pandas.core.arrays import (
+    DatetimeArrayMixin as DatetimeArray, PandasArray,
+    TimedeltaArrayMixin as TimedeltaArray)
+from pandas.core.base import NoNewAttributesMixin, PandasObject
 from pandas.core.indexes.datetimelike import DatetimeIndexOpsMixin
-from pandas._libs.tslib import iNaT
+import pandas.util.testing as tm
 
 
 class CheckStringMixin(object):
diff --git a/pandas/tests/test_common.py b/pandas/tests/test_common.py
index ae46bee90..18eb760e3 100644
--- a/pandas/tests/test_common.py
+++ b/pandas/tests/test_common.py
@@ -1,18 +1,15 @@
 # -*- coding: utf-8 -*-
 
 import collections
-import string
 from functools import partial
+import string
 
 import numpy as np
 import pytest
 
 import pandas as pd
 from pandas import Series, Timestamp
-from pandas.core import (
-    common as com,
-    ops,
-)
+from pandas.core import common as com, ops
 
 
 def test_get_callable_name():
diff --git a/pandas/tests/test_compat.py b/pandas/tests/test_compat.py
index 79d3aad49..d1a3ee43a 100644
--- a/pandas/tests/test_compat.py
+++ b/pandas/tests/test_compat.py
@@ -3,11 +3,13 @@
 Testing that functions from compat work as expected
 """
 
-import pytest
 import re
-from pandas.compat import (range, zip, map, filter, lrange, lzip, lmap,
-                           lfilter, builtins, iterkeys, itervalues, iteritems,
-                           next, get_range_parameters, PY2, re_type)
+
+import pytest
+
+from pandas.compat import (
+    PY2, builtins, filter, get_range_parameters, iteritems, iterkeys,
+    itervalues, lfilter, lmap, lrange, lzip, map, next, range, re_type, zip)
 
 
 class TestBuiltinIterators(object):
diff --git a/pandas/tests/test_config.py b/pandas/tests/test_config.py
index fd8e98c48..2cdcb948e 100644
--- a/pandas/tests/test_config.py
+++ b/pandas/tests/test_config.py
@@ -1,10 +1,10 @@
 # -*- coding: utf-8 -*-
+import warnings
+
 import pytest
 
 import pandas as pd
 
-import warnings
-
 
 class TestConfig(object):
 
diff --git a/pandas/tests/test_downstream.py b/pandas/tests/test_downstream.py
index 1d17b514a..e22b9a0ef 100644
--- a/pandas/tests/test_downstream.py
+++ b/pandas/tests/test_downstream.py
@@ -2,15 +2,17 @@
 """
 Testing that we work in the downstream packages
 """
+import importlib
 import subprocess
 import sys
 
-import pytest
 import numpy as np  # noqa
-from pandas import DataFrame
+import pytest
+
 from pandas.compat import PY36
+
+from pandas import DataFrame
 from pandas.util import testing as tm
-import importlib
 
 
 def import_module(name):
diff --git a/pandas/tests/test_errors.py b/pandas/tests/test_errors.py
index c5ea69b5e..d3b6a237a 100644
--- a/pandas/tests/test_errors.py
+++ b/pandas/tests/test_errors.py
@@ -1,10 +1,11 @@
 # -*- coding: utf-8 -*-
 
 import pytest
-import pandas  # noqa
-import pandas as pd
+
 from pandas.errors import AbstractMethodError
 
+import pandas as pd  # noqa
+
 
 @pytest.mark.parametrize(
     "exc", ['UnsupportedFunctionCall', 'UnsortedIndexError',
diff --git a/pandas/tests/test_expressions.py b/pandas/tests/test_expressions.py
index cc5ae9b15..f5aa0b0b3 100644
--- a/pandas/tests/test_expressions.py
+++ b/pandas/tests/test_expressions.py
@@ -1,23 +1,25 @@
 # -*- coding: utf-8 -*-
 from __future__ import print_function
-# pylint: disable-msg=W0612,E1101
 
-from warnings import catch_warnings, simplefilter
-import re
 import operator
-import pytest
-
-from numpy.random import randn
+import re
+from warnings import catch_warnings, simplefilter
 
 import numpy as np
+from numpy.random import randn
+import pytest
 
+from pandas import _np_version_under1p13, compat
 from pandas.core.api import DataFrame, Panel
 from pandas.core.computation import expressions as expr
-from pandas import compat, _np_version_under1p13
-from pandas.util.testing import (assert_almost_equal, assert_series_equal,
-                                 assert_frame_equal, assert_panel_equal)
-from pandas.io.formats.printing import pprint_thing
 import pandas.util.testing as tm
+from pandas.util.testing import (
+    assert_almost_equal, assert_frame_equal, assert_panel_equal,
+    assert_series_equal)
+
+from pandas.io.formats.printing import pprint_thing
+
+# pylint: disable-msg=W0612,E1101
 
 
 _frame = DataFrame(randn(10000, 4), columns=list('ABCD'), dtype='float64')
diff --git a/pandas/tests/test_join.py b/pandas/tests/test_join.py
index af946436b..5b6656de1 100644
--- a/pandas/tests/test_join.py
+++ b/pandas/tests/test_join.py
@@ -1,9 +1,10 @@
 # -*- coding: utf-8 -*-
 
 import numpy as np
-from pandas import Index, DataFrame, Categorical, merge
 
 from pandas._libs import join as _join
+
+from pandas import Categorical, DataFrame, Index, merge
 import pandas.util.testing as tm
 from pandas.util.testing import assert_almost_equal, assert_frame_equal
 
diff --git a/pandas/tests/test_lib.py b/pandas/tests/test_lib.py
index d0812eae8..c5dcfc89f 100644
--- a/pandas/tests/test_lib.py
+++ b/pandas/tests/test_lib.py
@@ -1,10 +1,11 @@
 # -*- coding: utf-8 -*-
 
+import numpy as np
 import pytest
 
-import numpy as np
-from pandas import Index
 from pandas._libs import lib, writers as libwriters
+
+from pandas import Index
 import pandas.util.testing as tm
 
 
diff --git a/pandas/tests/test_multilevel.py b/pandas/tests/test_multilevel.py
index ce95f0f86..b5023c376 100644
--- a/pandas/tests/test_multilevel.py
+++ b/pandas/tests/test_multilevel.py
@@ -1,23 +1,23 @@
 # -*- coding: utf-8 -*-
 # pylint: disable-msg=W0612,E1101,W0141
-from warnings import catch_warnings, simplefilter
 import datetime
 import itertools
+from warnings import catch_warnings, simplefilter
 
+import numpy as np
+from numpy.random import randn
 import pytest
 import pytz
 
-from numpy.random import randn
-import numpy as np
-
-from pandas.core.index import Index, MultiIndex
-from pandas import (Panel, DataFrame, Series, isna, Timestamp)
+from pandas.compat import (
+    StringIO, lrange, lzip, product as cart_product, range, u, zip)
 
 from pandas.core.dtypes.common import is_float_dtype, is_integer_dtype
-import pandas.util.testing as tm
-from pandas.compat import (range, lrange, StringIO, lzip, u, product as
-                           cart_product, zip)
+
 import pandas as pd
+from pandas import DataFrame, Panel, Series, Timestamp, isna
+from pandas.core.index import Index, MultiIndex
+import pandas.util.testing as tm
 
 AGG_FUNCTIONS = ['sum', 'prod', 'min', 'max', 'median', 'mean', 'skew', 'mad',
                  'std', 'var', 'sem']
diff --git a/pandas/tests/test_nanops.py b/pandas/tests/test_nanops.py
index 1e0891481..cc793767d 100644
--- a/pandas/tests/test_nanops.py
+++ b/pandas/tests/test_nanops.py
@@ -1,20 +1,22 @@
 # -*- coding: utf-8 -*-
 from __future__ import division, print_function
 
-import warnings
 from functools import partial
+import warnings
 
 import numpy as np
 import pytest
 
-import pandas as pd
-import pandas.core.nanops as nanops
-import pandas.util._test_decorators as td
-import pandas.util.testing as tm
-from pandas import Series, isna
 from pandas.compat.numpy import _np_version_under1p13
+import pandas.util._test_decorators as td
+
 from pandas.core.dtypes.common import is_integer_dtype
+
+import pandas as pd
+from pandas import Series, isna
 from pandas.core.arrays import DatetimeArrayMixin as DatetimeArray
+import pandas.core.nanops as nanops
+import pandas.util.testing as tm
 
 use_bn = nanops._USE_BOTTLENECK
 
diff --git a/pandas/tests/test_panel.py b/pandas/tests/test_panel.py
index 33f2c3440..5539778e1 100644
--- a/pandas/tests/test_panel.py
+++ b/pandas/tests/test_panel.py
@@ -1,31 +1,31 @@
 # -*- coding: utf-8 -*-
 # pylint: disable=W0612,E1101
 
-from warnings import catch_warnings, simplefilter
 from datetime import datetime
 import operator
-import pytest
+from warnings import catch_warnings, simplefilter
 
 import numpy as np
+import pytest
+
+from pandas.compat import OrderedDict, StringIO, lrange, range, signature
+import pandas.util._test_decorators as td
 
 from pandas.core.dtypes.common import is_float_dtype
-from pandas import (Series, DataFrame, Index, date_range, isna, notna,
-                    MultiIndex)
+
+from pandas import (
+    DataFrame, Index, MultiIndex, Series, compat, date_range, isna, notna)
 from pandas.core.nanops import nanall, nanany
+import pandas.core.panel as panelm
 from pandas.core.panel import Panel
+import pandas.util.testing as tm
+from pandas.util.testing import (
+    assert_almost_equal, assert_frame_equal, assert_panel_equal,
+    assert_series_equal, ensure_clean, makeCustomDataframe as mkdf,
+    makeMixedDataFrame)
 
 from pandas.io.formats.printing import pprint_thing
-from pandas import compat
-from pandas.compat import range, lrange, StringIO, OrderedDict, signature
-
 from pandas.tseries.offsets import BDay, MonthEnd
-from pandas.util.testing import (assert_panel_equal, assert_frame_equal,
-                                 assert_series_equal, assert_almost_equal,
-                                 ensure_clean, makeMixedDataFrame,
-                                 makeCustomDataframe as mkdf)
-import pandas.core.panel as panelm
-import pandas.util.testing as tm
-import pandas.util._test_decorators as td
 
 
 def make_test_panel():
diff --git a/pandas/tests/test_sorting.py b/pandas/tests/test_sorting.py
index 333b93dbd..7500cbb3c 100644
--- a/pandas/tests/test_sorting.py
+++ b/pandas/tests/test_sorting.py
@@ -1,21 +1,19 @@
-import pytest
-from itertools import product
 from collections import defaultdict
-import warnings
 from datetime import datetime
+from itertools import product
+import warnings
 
 import numpy as np
 from numpy import nan
+import pytest
+
+from pandas import DataFrame, MultiIndex, Series, compat, concat, merge
 from pandas.core import common as com
-from pandas import DataFrame, MultiIndex, merge, concat, Series, compat
+from pandas.core.sorting import (
+    decons_group_index, get_group_index, is_int64_overflow_possible,
+    lexsort_indexer, nargsort, safe_sort)
 from pandas.util import testing as tm
 from pandas.util.testing import assert_frame_equal, assert_series_equal
-from pandas.core.sorting import (is_int64_overflow_possible,
-                                 decons_group_index,
-                                 get_group_index,
-                                 nargsort,
-                                 lexsort_indexer,
-                                 safe_sort)
 
 
 class TestSorting(object):
diff --git a/pandas/tests/test_strings.py b/pandas/tests/test_strings.py
index c5a4e9511..d4ea21632 100644
--- a/pandas/tests/test_strings.py
+++ b/pandas/tests/test_strings.py
@@ -2,21 +2,20 @@
 # pylint: disable-msg=E1101,W0612
 
 from datetime import datetime, timedelta
-import pytest
 import re
 
-from numpy import nan as NA
 import numpy as np
+from numpy import nan as NA
 from numpy.random import randint
+import pytest
 
-from pandas.compat import range, u, PY3
 import pandas.compat as compat
-from pandas import Index, Series, DataFrame, isna, MultiIndex, notna, concat
-
-from pandas.util.testing import assert_series_equal, assert_index_equal
-import pandas.util.testing as tm
+from pandas.compat import PY3, range, u
 
+from pandas import DataFrame, Index, MultiIndex, Series, concat, isna, notna
 import pandas.core.strings as strings
+import pandas.util.testing as tm
+from pandas.util.testing import assert_index_equal, assert_series_equal
 
 
 def assert_series_or_index_equal(left, right):
diff --git a/pandas/tests/test_take.py b/pandas/tests/test_take.py
index 69150ee3c..c9e4ed90b 100644
--- a/pandas/tests/test_take.py
+++ b/pandas/tests/test_take.py
@@ -1,13 +1,15 @@
 # -*- coding: utf-8 -*-
-import re
 from datetime import datetime
+import re
 
 import numpy as np
 import pytest
+
+from pandas._libs.tslib import iNaT
 from pandas.compat import long
+
 import pandas.core.algorithms as algos
 import pandas.util.testing as tm
-from pandas._libs.tslib import iNaT
 
 
 @pytest.fixture(params=[True, False])
diff --git a/pandas/tests/test_window.py b/pandas/tests/test_window.py
index b53aca2c9..412f70a3c 100644
--- a/pandas/tests/test_window.py
+++ b/pandas/tests/test_window.py
@@ -1,24 +1,26 @@
 from collections import OrderedDict
+from datetime import datetime, timedelta
 from itertools import product
-import pytest
 import warnings
 from warnings import catch_warnings
 
-from datetime import datetime, timedelta
-from numpy.random import randn
 import numpy as np
+from numpy.random import randn
+import pytest
+
+from pandas.compat import range, zip
+from pandas.errors import UnsupportedFunctionCall
+import pandas.util._test_decorators as td
 
 import pandas as pd
-from pandas import (Series, DataFrame, bdate_range,
-                    isna, notna, concat, Timestamp, Index)
-import pandas.core.window as rwindow
-import pandas.tseries.offsets as offsets
+from pandas import (
+    DataFrame, Index, Series, Timestamp, bdate_range, concat, isna, notna)
 from pandas.core.base import SpecificationError
-from pandas.errors import UnsupportedFunctionCall
 from pandas.core.sorting import safe_sort
+import pandas.core.window as rwindow
 import pandas.util.testing as tm
-import pandas.util._test_decorators as td
-from pandas.compat import range, zip
+
+import pandas.tseries.offsets as offsets
 
 N, K = 100, 10
 
diff --git a/setup.cfg b/setup.cfg
index 15a5384bc..70a38aca6 100644
--- a/setup.cfg
+++ b/setup.cfg
@@ -118,24 +118,6 @@ force_sort_within_sections=True
 skip=
     pandas/core/api.py,
     pandas/core/frame.py,
-    pandas/tests/test_errors.py,
-    pandas/tests/test_base.py,
-    pandas/tests/test_register_accessor.py,
-    pandas/tests/test_window.py,
-    pandas/tests/test_downstream.py,
-    pandas/tests/test_multilevel.py,
-    pandas/tests/test_common.py,
-    pandas/tests/test_compat.py,
-    pandas/tests/test_sorting.py,
-    pandas/tests/test_algos.py,
-    pandas/tests/test_expressions.py,
-    pandas/tests/test_strings.py,
-    pandas/tests/test_lib.py,
-    pandas/tests/test_join.py,
-    pandas/tests/test_panel.py,
-    pandas/tests/test_take.py,
-    pandas/tests/test_nanops.py,
-    pandas/tests/test_config.py,
     pandas/tests/api/test_types.py,
     pandas/tests/api/test_api.py,
     pandas/tests/tools/test_numeric.py,
