commit 928d4317c6b6b5cdf426dd0003f300bbee554e53
Author: jreback <jeff@reback.net>
Date:   Fri Jan 11 11:29:07 2013 -0500

    BUG: series assignment with a boolean indexer AND a series as a value would give incorrect results

diff --git a/pandas/core/series.py b/pandas/core/series.py
index fbeee597c..2dae1a743 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -707,7 +707,13 @@ copy : boolean, default False
                 else:
                     return self._set_values(key, value)
             elif key_type == 'boolean':
-                self._set_values(key, value)
+
+                # scalar setting with boolean key
+                if np.isscalar(value):
+                    self._set_values(key, value)
+                # we have a key mask and a value that is np.array like
+                else:
+                    np.putmask(self.values, key, value)
             else:
                 self._set_labels(key, value)
 
diff --git a/pandas/tests/test_series.py b/pandas/tests/test_series.py
index fecb994d9..46b76a0a1 100644
--- a/pandas/tests/test_series.py
+++ b/pandas/tests/test_series.py
@@ -1044,6 +1044,14 @@ class TestSeries(unittest.TestCase, CheckNameIntegration):
         self.assertEquals(self.series[d1], 4)
         self.assertEquals(self.series[d2], 6)
 
+    def test_setitem_boolean(self):
+        mask = self.series > self.series.median()
+
+        result = self.series.copy()
+        result[mask] = self.series*2
+        expected = self.series*2
+        assert_series_equal(result[mask], expected[mask])
+
     def test_ix_setitem_boolean(self):
         mask = self.series > self.series.median()
 
@@ -3218,9 +3226,9 @@ class TestSeries(unittest.TestCase, CheckNameIntegration):
         expected = s.copy()
         bad = isnull(expected.values)
         good = -bad
-        expected[bad] = np.interp(vals[bad], vals[good], s.values[good])
+        expected = Series(np.interp(vals[bad], vals[good], s.values[good]), index=s.index[bad])
 
-        assert_series_equal(result, expected)
+        assert_series_equal(result[bad], expected)
 
     def test_weekday(self):
         # Just run the function
