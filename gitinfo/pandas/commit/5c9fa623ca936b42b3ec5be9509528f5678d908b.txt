commit 5c9fa623ca936b42b3ec5be9509528f5678d908b
Author: Adam Klein <adamklein@gmail.com>
Date:   Tue Mar 13 19:31:13 2012 -0400

    BUG: fix treatment of 'how' in asfreq having multiples

diff --git a/pandas/core/datetools.py b/pandas/core/datetools.py
index 4cb355954..339512b77 100644
--- a/pandas/core/datetools.py
+++ b/pandas/core/datetools.py
@@ -437,7 +437,7 @@ def parse_time_string(arg):
         for attr in ["year", "month", "day", "hour",
                      "minute", "second", "microsecond"]:
             value = getattr(parsed, attr)
-            if value is not None:
+            if value is not None and value != 0:
                 repl[attr] = value
                 if not stopped:
                     reso = attr
diff --git a/pandas/src/datetime.pyx b/pandas/src/datetime.pyx
index 21e5ccbc4..f66a16621 100644
--- a/pandas/src/datetime.pyx
+++ b/pandas/src/datetime.pyx
@@ -1896,9 +1896,13 @@ def skts_freq_conv(long skts_ordinal, int base1, long mult1, int base2, long mul
 
     skts_ordinal = remove_mult(skts_ordinal, mult1)
 
+    if mult1 != 1 and relation == 'E':
+        skts_ordinal += (mult1 - 1)
+
     retval = frequency_conversion(skts_ordinal, base1, base2, (<char*>relation)[0])
+    retval = apply_mult(retval, mult2)
 
-    return apply_mult(retval, mult2)
+    return retval
 
 def skts_ordinal(int y, int m, int d, int h, int min, int s, int base, long mult):
     cdef:
diff --git a/pandas/tests/test_datetime64.py b/pandas/tests/test_datetime64.py
index bcb3efa8a..ea178ede9 100644
--- a/pandas/tests/test_datetime64.py
+++ b/pandas/tests/test_datetime64.py
@@ -603,7 +603,7 @@ class TestDatetime64(unittest.TestCase):
 
     def test_interval_asfreq(self):
         # need a whole bunch of tests here ...
-        # D to B conversion exception, was failing silently before
+        # D to B conversion exception, not on biz day
         i1 = Interval('3/10/12')
         self.assertRaises(Exception, i1.asfreq, 'B')
 
@@ -623,14 +623,21 @@ class TestDatetime64(unittest.TestCase):
         self.assertEquals(ii[1], Interval('3/1/10', '2M'))
 
         self.assertEquals(ii[0].asfreq('6M'), ii[2].asfreq('6M')) 
+        self.assertEquals(ii[0].asfreq('A'), ii[2].asfreq('A')) 
 
+        self.assertEquals(ii[0].asfreq('M', how='S'),
+                          Interval('Jan 2010', '1M'))
+        self.assertEquals(ii[0].asfreq('M', how='E'),
+                          Interval('Feb 2010', '1M'))
+        self.assertEquals(ii[1].asfreq('M', how='S'),
+                          Interval('Mar 2010', '1M'))
 
-    def test_intervalindex_constructor(self):
-        pass
-        #ii = IntervalIndex(freq='M', start='1/1/2005', end='12/1/2005')
-        #self.assertEquals(len(ii), 12)
-        #self.assertEquals(ii[0], TimeInterval('1/2005', freq='M'))
-        #self.assertEquals(ii[-1], TimeInterval('12/2005', freq='M'))
+        i = Interval('1/1/2010 12:05:18', '5S')
+        self.assertEquals(i, Interval('1/1/2010 12:05:15', '5S'))
+
+        i = Interval('1/1/2010 12:05:18', '5S')
+        self.assertEquals(i.asfreq('1S', how='E'), 
+                          Interval('1/1/2010 12:05:19', '1S'))
 
 if __name__ == '__main__':
     import nose
