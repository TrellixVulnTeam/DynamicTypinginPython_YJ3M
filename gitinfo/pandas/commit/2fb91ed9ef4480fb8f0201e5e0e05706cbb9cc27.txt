commit 2fb91ed9ef4480fb8f0201e5e0e05706cbb9cc27
Author: jbrockmendel <jbrockmendel@gmail.com>
Date:   Tue Sep 10 04:41:05 2019 -0700

    CLN: Exception catching (#28361)

diff --git a/pandas/_libs/testing.pyx b/pandas/_libs/testing.pyx
index ae0d3ac1a..c407de4cf 100644
--- a/pandas/_libs/testing.pyx
+++ b/pandas/_libs/testing.pyx
@@ -139,7 +139,7 @@ cpdef assert_almost_equal(a, b,
                     obj, '{0} shapes are different'.format(obj),
                     a.shape, b.shape)
 
-            if check_dtype and not is_dtype_equal(a, b):
+            if check_dtype and not is_dtype_equal(a.dtype, b.dtype):
                 from pandas.util.testing import assert_attr_equal
                 assert_attr_equal('dtype', a, b, obj=obj)
 
@@ -188,6 +188,7 @@ cpdef assert_almost_equal(a, b,
         # object comparison
         return True
     if isna(a) and isna(b):
+        # TODO: Should require same-dtype NA?
         # nan / None comparison
         return True
     if is_comparable_as_number(a) and is_comparable_as_number(b):
diff --git a/pandas/core/construction.py b/pandas/core/construction.py
index 0c25cdf12..5bd2a2b69 100644
--- a/pandas/core/construction.py
+++ b/pandas/core/construction.py
@@ -413,14 +413,7 @@ def sanitize_array(data, index, dtype=None, copy=False, raise_cast_failure=False
 
     elif isinstance(data, (list, tuple)) and len(data) > 0:
         if dtype is not None:
-            try:
-                subarr = _try_cast(data, dtype, copy, raise_cast_failure)
-            except Exception:
-                if raise_cast_failure:  # pragma: no cover
-                    raise
-                subarr = np.array(data, dtype=object, copy=copy)
-                subarr = lib.maybe_convert_objects(subarr)
-
+            subarr = _try_cast(data, dtype, copy, raise_cast_failure)
         else:
             subarr = maybe_convert_platform(data)
 
diff --git a/pandas/core/indexing.py b/pandas/core/indexing.py
index 3d495eeb8..45cb03760 100755
--- a/pandas/core/indexing.py
+++ b/pandas/core/indexing.py
@@ -175,7 +175,8 @@ class _NDFrameIndexer(_NDFrameIndexerBase):
         if isinstance(ax, ABCMultiIndex) and self.name != "iloc":
             try:
                 return ax.get_loc(key)
-            except Exception:
+            except (TypeError, KeyError):
+                # TypeError e.g. passed a bool
                 pass
 
         if isinstance(key, tuple):
