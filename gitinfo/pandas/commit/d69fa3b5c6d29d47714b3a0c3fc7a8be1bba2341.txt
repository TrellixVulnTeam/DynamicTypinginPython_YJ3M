commit d69fa3b5c6d29d47714b3a0c3fc7a8be1bba2341
Author: Phillip Cloud <cpcloud@gmail.com>
Date:   Mon Apr 13 15:35:21 2015 -0400

    Fix rhs dict assignment

diff --git a/pandas/core/indexing.py b/pandas/core/indexing.py
index 920e8aa04..8154eb1bb 100644
--- a/pandas/core/indexing.py
+++ b/pandas/core/indexing.py
@@ -200,7 +200,6 @@ class _NDFrameIndexer(object):
         return True
 
     def _setitem_with_indexer(self, indexer, value):
-
         self._has_valid_setitem_indexer(indexer)
 
         # also has the side effect of consolidating in-place
@@ -486,8 +485,8 @@ class _NDFrameIndexer(object):
                     self.obj[item_labels[indexer[info_axis]]] = value
                     return
 
-            if isinstance(value, ABCSeries):
-                value = self._align_series(indexer, value)
+            if isinstance(value, (ABCSeries, dict)):
+                value = self._align_series(indexer, Series(value))
 
             elif isinstance(value, ABCDataFrame):
                 value = self._align_frame(indexer, value)
diff --git a/pandas/tests/test_indexing.py b/pandas/tests/test_indexing.py
index ee6140828..5f109212a 100644
--- a/pandas/tests/test_indexing.py
+++ b/pandas/tests/test_indexing.py
@@ -4411,6 +4411,16 @@ class TestIndexing(tm.TestCase):
         self.assertRaisesRegexp(ValueError, 'slice step cannot be zero',
                                 lambda: s.ix[::0])
 
+    def test_indexing_assignment_dict_already_exists(self):
+        df = pd.DataFrame({'x': [1, 2, 6],
+                           'y': [2, 2, 8],
+                           'z': [-5, 0, 5]}).set_index('z')
+        expected = df.copy()
+        rhs = dict(x=9, y=99)
+        df.loc[5] = rhs
+        expected.loc[5] = [9, 99]
+        tm.assert_frame_equal(df, expected)
+
 
 class TestSeriesNoneCoercion(tm.TestCase):
     EXPECTED_RESULTS = [
