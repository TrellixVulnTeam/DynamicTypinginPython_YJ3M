commit e1ee2b0679e5999c993a787606d30e75faaba7a2
Author: Daniel Saxton <2658661+dsaxton@users.noreply.github.com>
Date:   Tue May 5 11:27:24 2020 -0500

    BUG: Fix Series.update ExtensionArray issue (#33984)

diff --git a/doc/source/whatsnew/v1.1.0.rst b/doc/source/whatsnew/v1.1.0.rst
index 816ef4e5c..9c424f70b 100644
--- a/doc/source/whatsnew/v1.1.0.rst
+++ b/doc/source/whatsnew/v1.1.0.rst
@@ -758,6 +758,7 @@ ExtensionArray
 - Fixed bug where :meth:`Series.value_counts` would raise on empty input of ``Int64`` dtype (:issue:`33317`)
 - Fixed bug in :class:`Series` construction with EA dtype and index but no data or scalar data fails (:issue:`26469`)
 - Fixed bug that caused :meth:`Series.__repr__()` to crash for extension types whose elements are multidimensional arrays (:issue:`33770`).
+- Fixed bug where :meth:`Series.update` would raise a ``ValueError`` for ``ExtensionArray`` dtypes with missing values (:issue:`33980`)
 - Fixed bug where :meth:`StringArray.memory_usage` was not implemented (:issue:`33963`)
 
 
diff --git a/pandas/core/internals/blocks.py b/pandas/core/internals/blocks.py
index d028d8404..e4dcffae4 100644
--- a/pandas/core/internals/blocks.py
+++ b/pandas/core/internals/blocks.py
@@ -1599,7 +1599,7 @@ class ExtensionBlock(Block):
 
         new_values = self.values if inplace else self.values.copy()
 
-        if isinstance(new, np.ndarray) and len(new) == len(mask):
+        if isinstance(new, (np.ndarray, ExtensionArray)) and len(new) == len(mask):
             new = new[mask]
 
         mask = _safe_reshape(mask, new_values.shape)
diff --git a/pandas/tests/series/methods/test_update.py b/pandas/tests/series/methods/test_update.py
index 989595995..9cb6d8f81 100644
--- a/pandas/tests/series/methods/test_update.py
+++ b/pandas/tests/series/methods/test_update.py
@@ -74,3 +74,27 @@ class TestUpdate:
         # GH 33215
         series.update(other)
         tm.assert_series_equal(series, expected)
+
+    @pytest.mark.parametrize(
+        "result, target, expected",
+        [
+            (
+                Series(["a", None], dtype="string"),
+                Series([None, "b"], dtype="string"),
+                Series(["a", "b"], dtype="string"),
+            ),
+            (
+                Series([1, None], dtype="Int64"),
+                Series([None, 2], dtype="Int64"),
+                Series([1, 2], dtype="Int64"),
+            ),
+            (
+                Series([True, None], dtype="boolean"),
+                Series([None, False], dtype="boolean"),
+                Series([True, False], dtype="boolean"),
+            ),
+        ],
+    )
+    def test_update_extension_array_series(self, result, target, expected):
+        result.update(target)
+        tm.assert_series_equal(result, expected)
