commit 444a2e83472670137f1e071b4223791894d6c1d7
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Sat Dec 1 22:23:09 2012 -0500

    BUG: fix other vbench failures #2404

diff --git a/RELEASE.rst b/RELEASE.rst
index a0dacb690..9d62d9bd9 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -45,6 +45,9 @@ pandas 0.10.0
 
 **API Changes**
 
+  - inf/-inf are no longer considered as NA by isnull/notnull. To be cler, this
+    is legacy cruft from early pandas. This behavior can be globally re-enabled
+    using pandas.core.common.use_inf_as_na (#2050, #1919)
   - ``pandas.merge`` will now default to ``sort=False``. For many use cases
     sorting the join keys is not necessary, and doing it by default is wasteful
   - ``names`` handling in file parsing: if explicit column `names` passed,
diff --git a/scripts/count_code.sh b/scripts/count_code.sh
index 31fff2ff3..991faf2e8 100755
--- a/scripts/count_code.sh
+++ b/scripts/count_code.sh
@@ -1 +1 @@
-cloc pandas --force-lang=Python,pyx --not-match-f="parser.c|tseries.c|sandbox.c|engines.c|sparse.c|generated.c|plib.c"
\ No newline at end of file
+cloc pandas --force-lang=Python,pyx --not-match-f="parser.c|lib.c|tslib.c|sandbox.c|hashtable.c|sparse.c|algos.c|index.c"
\ No newline at end of file
diff --git a/vb_suite/reindex.py b/vb_suite/reindex.py
index 86d67e9eb..6e76c7bdd 100644
--- a/vb_suite/reindex.py
+++ b/vb_suite/reindex.py
@@ -122,6 +122,7 @@ key2 = np.array([rands(10) for _ in xrange(N)], dtype='O').repeat(K)
 
 df = DataFrame({'key1' : key1, 'key2' : key2,
                 'value' : np.random.randn(N * K)})
+col_array_list = list(df.values.T)
 """
 statement = "df.sort_index(by=['key1', 'key2'])"
 frame_sort_index_by_columns = Benchmark(statement, setup,
@@ -137,7 +138,7 @@ statement = "df.drop_duplicates(['key1', 'key2'], inplace=True)"
 frame_drop_dup_inplace = Benchmark(statement, setup,
                                   start_date=datetime(2012, 5, 16))
 
-lib_fast_zip = Benchmark('lib.fast_zip(df.values.T)', setup,
+lib_fast_zip = Benchmark('lib.fast_zip(col_array_list)', setup,
                          name='lib_fast_zip',
                          start_date=datetime(2012, 1, 1))
 
@@ -148,7 +149,7 @@ statement2 = "df.drop_duplicates(['key1', 'key2'])"
 frame_drop_duplicates_na = Benchmark(statement2, setup,
                                      start_date=datetime(2012, 5, 15))
 
-lib_fast_zip_fillna = Benchmark('lib.fast_zip_fillna(df.values.T)', setup,
+lib_fast_zip_fillna = Benchmark('lib.fast_zip_fillna(col_array_list)', setup,
                                 start_date=datetime(2012, 5, 15))
 
 statement2 = "df.drop_duplicates(['key1', 'key2'], inplace=True)"
diff --git a/vb_suite/replace.py b/vb_suite/replace.py
index 71bae2dca..517e2da59 100644
--- a/vb_suite/replace.py
+++ b/vb_suite/replace.py
@@ -24,5 +24,6 @@ replace_fillna = Benchmark('ts.fillna(0., inplace=True)', common_setup,
 replace_replacena = Benchmark('ts.replace(np.nan, 0., inplace=True)',
                               common_setup,
                               start_date=datetime(2012, 5, 15))
-replace_putmask = Benchmark('replace_slow(ts, np.nan, 0.)', common_setup,
-                            start_date=datetime(2012, 5, 15))
+
+# replace_putmask = Benchmark('replace_slow(ts, np.nan, 0.)', common_setup,
+#                             start_date=datetime(2012, 5, 15))
