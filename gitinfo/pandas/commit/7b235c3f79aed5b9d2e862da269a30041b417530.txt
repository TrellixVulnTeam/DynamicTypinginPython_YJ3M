commit 7b235c3f79aed5b9d2e862da269a30041b417530
Author: Younggun Kim <iam@younggun.kim>
Date:   Mon Nov 2 18:41:24 2015 +0900

    Fixed typos
    
    Thanks to pypi.python.org/pypi/misspellings

diff --git a/doc/source/advanced.rst b/doc/source/advanced.rst
index 76f8f6aa5..b550f59b8 100644
--- a/doc/source/advanced.rst
+++ b/doc/source/advanced.rst
@@ -686,7 +686,7 @@ values NOT in the categories, similarly to how you can reindex ANY pandas index.
 
 .. warning::
 
-   Reshaping and Comparision operations on a ``CategoricalIndex`` must have the same categories
+   Reshaping and Comparison operations on a ``CategoricalIndex`` must have the same categories
    or a ``TypeError`` will be raised.
 
    .. code-block:: python
diff --git a/doc/source/categorical.rst b/doc/source/categorical.rst
index ddd4fb81e..4ba526949 100644
--- a/doc/source/categorical.rst
+++ b/doc/source/categorical.rst
@@ -718,7 +718,7 @@ Old style constructor usage
 
 In earlier versions than pandas 0.15, a `Categorical` could be constructed by passing in precomputed
 `codes` (called then `labels`) instead of values with categories. The `codes` were interpreted as
-pointers to the categories with `-1` as `NaN`. This type of constructor useage is replaced by
+pointers to the categories with `-1` as `NaN`. This type of constructor usage is replaced by
 the special constructor :func:`Categorical.from_codes`.
 
 Unfortunately, in some special cases, using code which assumes the old style constructor usage
diff --git a/doc/source/enhancingperf.rst b/doc/source/enhancingperf.rst
index d98801f4a..ead4c1034 100644
--- a/doc/source/enhancingperf.rst
+++ b/doc/source/enhancingperf.rst
@@ -699,7 +699,7 @@ ol' Python.
 .. note::
 
    Using the ``'python'`` engine is generally *not* useful, except for testing
-   other evaluation engines against it. You will acheive **no** performance
+   other evaluation engines against it. You will achieve **no** performance
    benefits using :func:`~pandas.eval` with ``engine='python'`` and in fact may
    incur a performance hit.
 
diff --git a/doc/source/indexing.rst b/doc/source/indexing.rst
index 38629ee7b..95cdc8970 100644
--- a/doc/source/indexing.rst
+++ b/doc/source/indexing.rst
@@ -97,7 +97,7 @@ of multi-axis indexing.
   axis is of integer type. ``.ix`` is the most general and will
   support any of the inputs in ``.loc`` and ``.iloc``. ``.ix`` also supports floating point
   label schemes. ``.ix`` is exceptionally useful when dealing with mixed positional
-  and label based hierachical indexes.
+  and label based hierarchical indexes.
 
   However, when an axis is integer based, ONLY
   label based access and not positional access is supported.
@@ -1585,5 +1585,5 @@ This will **not** work at all, and so should be avoided
 .. warning::
 
    The chained assignment warnings / exceptions are aiming to inform the user of a possibly invalid
-   assignment. There may be false positives; situations where a chained assignment is inadvertantly
+   assignment. There may be false positives; situations where a chained assignment is inadvertently
    reported.
diff --git a/doc/source/io.rst b/doc/source/io.rst
index a7c0d3118..a003f2e7d 100644
--- a/doc/source/io.rst
+++ b/doc/source/io.rst
@@ -2006,7 +2006,7 @@ file, and the ``sheetname`` indicating which sheet to parse.
 ``ExcelFile`` class
 +++++++++++++++++++
 
-To faciliate working with multiple sheets from the same file, the ``ExcelFile``
+To facilitate working with multiple sheets from the same file, the ``ExcelFile``
 class can be used to wrap the file and can be be passed into ``read_excel``
 There will be a performance benefit for reading multiple sheets as the file is
 read into memory only once.
diff --git a/doc/source/remote_data.rst b/doc/source/remote_data.rst
index d1a2ba59d..01eba8e82 100644
--- a/doc/source/remote_data.rst
+++ b/doc/source/remote_data.rst
@@ -373,7 +373,7 @@ The first thing you need to do is to setup accesses to Google Analytics API. Fol
     #. rename it to ``client_secrets.json``
     #. move it to the ``pandas/io`` module directory
 
-The first time you use the :func:`read_ga` funtion, a browser window will open to ask you to authentify to the Google API. Do proceed.
+The first time you use the :func:`read_ga` function, a browser window will open to ask you to authentify to the Google API. Do proceed.
 
 Using the Google Analytics API
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
diff --git a/doc/source/timedeltas.rst b/doc/source/timedeltas.rst
index e62f4f938..620270c83 100644
--- a/doc/source/timedeltas.rst
+++ b/doc/source/timedeltas.rst
@@ -220,7 +220,7 @@ Frequency Conversion
 .. versionadded:: 0.13
 
 Timedelta Series, ``TimedeltaIndex``, and ``Timedelta`` scalars can be converted to other 'frequencies' by dividing by another timedelta,
-or by astyping to a specific timedelta type. These operations yield Series and propogate ``NaT`` -> ``nan``.
+or by astyping to a specific timedelta type. These operations yield Series and propagate ``NaT`` -> ``nan``.
 Note that division by the numpy scalar is true division, while astyping is equivalent of floor division.
 
 .. ipython:: python
diff --git a/doc/source/visualization.rst b/doc/source/visualization.rst
index b6ee2d83f..4430dd6d3 100644
--- a/doc/source/visualization.rst
+++ b/doc/source/visualization.rst
@@ -1264,7 +1264,7 @@ with the ``subplots`` keyword:
 
    plt.close('all')
 
-Using Layout and Targetting Multiple Axes
+Using Layout and Targeting Multiple Axes
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 
 The layout of subplots can be specified by ``layout`` keyword. It can accept
