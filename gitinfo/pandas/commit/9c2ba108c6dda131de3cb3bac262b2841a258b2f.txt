commit 9c2ba108c6dda131de3cb3bac262b2841a258b2f
Author: Chang She <chang@lambdafoundry.com>
Date:   Wed Jul 11 12:44:38 2012 -0400

    BUG: Series repr if name==0 #1602

diff --git a/pandas/core/format.py b/pandas/core/format.py
index 776a0fd80..e2ca85bf9 100644
--- a/pandas/core/format.py
+++ b/pandas/core/format.py
@@ -77,7 +77,7 @@ class SeriesFormatter(object):
             if footer and self.series.name:
                 footer += ', '
             footer += ("Name: %s" % str(self.series.name)
-                       if self.series.name else '')
+                       if self.series.name is not None else '')
 
         if self.length:
             if footer:
diff --git a/pandas/core/series.py b/pandas/core/series.py
index 4f0f7bcd4..677721f72 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -799,7 +799,7 @@ copy : boolean, default False
         return '%s\n%s' % (result, self._repr_footer())
 
     def _repr_footer(self):
-        namestr = "Name: %s, " % str(self.name) if self.name else ""
+        namestr = "Name: %s, " % str(self.name) if self.name is not None else ""
         return '%sLength: %d' % (namestr, len(self))
 
     def to_string(self, buf=None, na_rep='NaN', float_format=None,
@@ -2783,7 +2783,7 @@ class TimeSeries(Series):
         else:
             freqstr = ''
 
-        namestr = "Name: %s, " % str(self.name) if self.name else ""
+        namestr = "Name: %s, " % str(self.name) if self.name is not None else ""
         return '%s%sLength: %d' % (freqstr, namestr, len(self))
 
     def at_time(self, time, asof=False):
diff --git a/pandas/tests/test_series.py b/pandas/tests/test_series.py
index 3b2bfd85e..b24a93023 100644
--- a/pandas/tests/test_series.py
+++ b/pandas/tests/test_series.py
@@ -961,6 +961,17 @@ class TestSeries(unittest.TestCase, CheckNameIntegration):
                         name=('foo', 'bar', 'baz'))
         repr(biggie)
 
+        # 0 as name
+        ser = Series(np.random.randn(100), name=0)
+        rep_str = repr(ser)
+        self.assert_("Name: 0" in rep_str)
+
+        # tidy repr
+        ser = Series(np.random.randn(1001), name=0)
+        rep_str = repr(ser)
+        self.assert_("Name: 0" in rep_str)
+
+
     def test_timeseries_repr_object_dtype(self):
         index = Index([datetime(2000, 1, 1) + timedelta(i)
                        for i in range(1000)], dtype=object)
