commit 2c81846a35175a43a75c29dfe1b7c3792ec23c67
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Mon Apr 8 17:32:37 2013 -0700

    ENH: silently return NA in String.str.get when values are too short. close #3223

diff --git a/RELEASE.rst b/RELEASE.rst
index 8edc59d0d..3c11b3199 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -129,6 +129,8 @@ pandas 0.11.0
   - Treat boolean values as integers (values 1 and 0) for numeric
     operations. (GH2641_)
   - Add ``time()`` method to DatetimeIndex (GH3180_)
+  - Return NA when using Series.str[...] for values that are not long enough
+    (GH3223_)
 
 **API Changes**
 
@@ -382,6 +384,7 @@ pandas 0.11.0
 .. _GH3216: https://github.com/pydata/pandas/issues/3216
 .. _GH3222: https://github.com/pydata/pandas/issues/3222
 .. _GH2641: https://github.com/pydata/pandas/issues/2641
+.. _GH3223: https://github.com/pydata/pandas/issues/3223
 .. _GH3238: https://github.com/pydata/pandas/issues/3238
 .. _GH3258: https://github.com/pydata/pandas/issues/3258
 .. _GH3283: https://github.com/pydata/pandas/issues/3283
diff --git a/pandas/core/strings.py b/pandas/core/strings.py
index 99a45b5c5..3521c9ff9 100644
--- a/pandas/core/strings.py
+++ b/pandas/core/strings.py
@@ -559,7 +559,7 @@ def str_get(arr, i):
     -------
     items : array
     """
-    f = lambda x: x[i]
+    f = lambda x: x[i] if len(x) > i else np.nan
     return _na_map(f, arr)
 
 
diff --git a/pandas/tests/test_strings.py b/pandas/tests/test_strings.py
index da7ad5b5d..2134eea18 100644
--- a/pandas/tests/test_strings.py
+++ b/pandas/tests/test_strings.py
@@ -754,6 +754,19 @@ class TestStringMethods(unittest.TestCase):
         expected = s.str.slice(stop=3)
         assert_series_equal(result, expected)
 
+    def test_string_slice_out_of_bounds(self):
+        s = Series([(1, 2), (1,), (3,4,5)])
+
+        result = s.str[1]
+        expected = Series([2, np.nan, 4])
+
+        assert_series_equal(result, expected)
+
+        s = Series(['foo', 'b', 'ba'])
+        result = s.str[1]
+        expected = Series(['o', np.nan, 'a'])
+        assert_series_equal(result, expected)
+
     def test_match_findall_flags(self):
         data = {'Dave': 'dave@google.com', 'Steve': 'steve@gmail.com',
                 'Rob': 'rob@gmail.com', 'Wes': np.nan}
