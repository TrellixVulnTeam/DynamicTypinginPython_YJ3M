commit 012a6a3912e13f3446363d8090ea02c81e99c7a1
Author: Uwe L. Korn <xhochy@users.noreply.github.com>
Date:   Wed Feb 12 17:00:41 2020 +0100

    BLD: Run flake8 check on Cython files in pre-commit (#30847)

diff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml
index 139b9e31d..896765722 100644
--- a/.pre-commit-config.yaml
+++ b/.pre-commit-config.yaml
@@ -10,6 +10,20 @@ repos:
     -   id: flake8
         language: python_venv
         additional_dependencies: [flake8-comprehensions>=3.1.0]
+    -   id: flake8
+        name: flake8-pyx
+        language: python_venv
+        files: \.(pyx|pxd)$
+        types:
+          - file
+        args: [--append-config=flake8/cython.cfg]
+    -   id: flake8
+        name: flake8-pxd
+        language: python_venv
+        files: \.pxi\.in$
+        types:
+          - file
+        args: [--append-config=flake8/cython-template.cfg]
 -   repo: https://github.com/pre-commit/mirrors-isort
     rev: v4.3.21
     hooks:
diff --git a/ci/code_checks.sh b/ci/code_checks.sh
index fdc9fef5d..7eb80077c 100755
--- a/ci/code_checks.sh
+++ b/ci/code_checks.sh
@@ -65,12 +65,12 @@ if [[ -z "$CHECK" || "$CHECK" == "lint" ]]; then
     flake8 --format="$FLAKE8_FORMAT" .
     RET=$(($RET + $?)) ; echo $MSG "DONE"
 
-    MSG='Linting .pyx code' ; echo $MSG
-    flake8 --format="$FLAKE8_FORMAT" pandas --filename=*.pyx --select=E501,E302,E203,E111,E114,E221,E303,E128,E231,E126,E265,E305,E301,E127,E261,E271,E129,W291,E222,E241,E123,F403,C400,C401,C402,C403,C404,C405,C406,C407,C408,C409,C410,C411
+    MSG='Linting .pyx and .pxd code' ; echo $MSG
+    flake8 --format="$FLAKE8_FORMAT" pandas --append-config=flake8/cython.cfg
     RET=$(($RET + $?)) ; echo $MSG "DONE"
 
-    MSG='Linting .pxd and .pxi.in' ; echo $MSG
-    flake8 --format="$FLAKE8_FORMAT" pandas/_libs --filename=*.pxi.in,*.pxd --select=E501,E302,E203,E111,E114,E221,E303,E231,E126,F403
+    MSG='Linting .pxi.in' ; echo $MSG
+    flake8 --format="$FLAKE8_FORMAT" pandas/_libs --append-config=flake8/cython-template.cfg
     RET=$(($RET + $?)) ; echo $MSG "DONE"
 
     echo "flake8-rst --version"
diff --git a/flake8/cython-template.cfg b/flake8/cython-template.cfg
new file mode 100644
index 000000000..61562bd77
--- /dev/null
+++ b/flake8/cython-template.cfg
@@ -0,0 +1,4 @@
+[flake8]
+filename = *.pxi.in
+select = E501,E302,E203,E111,E114,E221,E303,E231,E126,F403
+
diff --git a/flake8/cython.cfg b/flake8/cython.cfg
new file mode 100644
index 000000000..2dfe47b60
--- /dev/null
+++ b/flake8/cython.cfg
@@ -0,0 +1,3 @@
+[flake8]
+filename = *.pyx,*.pxd
+select=E501,E302,E203,E111,E114,E221,E303,E128,E231,E126,E265,E305,E301,E127,E261,E271,E129,W291,E222,E241,E123,F403,C400,C401,C402,C403,C404,C405,C406,C407,C408,C409,C410,C411
diff --git a/pandas/_libs/sparse_op_helper.pxi.in b/pandas/_libs/sparse_op_helper.pxi.in
index 996da4ca2..ce665ca81 100644
--- a/pandas/_libs/sparse_op_helper.pxi.in
+++ b/pandas/_libs/sparse_op_helper.pxi.in
@@ -235,7 +235,7 @@ cdef inline tuple int_op_{{opname}}_{{dtype}}({{dtype}}_t[:] x_,
                                               {{dtype}}_t yfill):
     cdef:
         IntIndex out_index
-        Py_ssize_t xi = 0, yi = 0, out_i = 0 # fp buf indices
+        Py_ssize_t xi = 0, yi = 0, out_i = 0  # fp buf indices
         int32_t xloc, yloc
         int32_t[:] xindices, yindices, out_indices
         {{dtype}}_t[:] x, y
diff --git a/pandas/_libs/tslibs/util.pxd b/pandas/_libs/tslibs/util.pxd
index 936532a81..e7f6b3334 100644
--- a/pandas/_libs/tslibs/util.pxd
+++ b/pandas/_libs/tslibs/util.pxd
@@ -42,7 +42,7 @@ cdef extern from "numpy/ndarrayobject.h":
     bint PyArray_IsIntegerScalar(obj) nogil
     bint PyArray_Check(obj) nogil
 
-cdef extern from  "numpy/npy_common.h":
+cdef extern from "numpy/npy_common.h":
     int64_t NPY_MIN_INT64
 
 
diff --git a/web/pandas_web.py b/web/pandas_web.py
index a34a31fea..38ab78f56 100755
--- a/web/pandas_web.py
+++ b/web/pandas_web.py
@@ -34,12 +34,13 @@ import sys
 import time
 import typing
 
-import feedparser
 import jinja2
-import markdown
 import requests
 import yaml
 
+import feedparser
+import markdown
+
 
 class Preprocessors:
     """
