commit 2bd8354cdff199803494ceda5185545119b7f9d0
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Tue Jan 3 14:06:08 2012 -0500

    TST: more test coverage, merge benchmark tweaks

diff --git a/bench/bench_merge.R b/bench/bench_merge.R
index a9d4ed39d..38e0133d1 100644
--- a/bench/bench_merge.R
+++ b/bench/bench_merge.R
@@ -1,13 +1,22 @@
 N <- 10000
 indices = rep(NA, N)
-for (i in 1:N)
+indices2 = rep(NA, N)
+for (i in 1:N) {
   indices[i] <- paste(sample(letters, 10), collapse="")
-
+  indices2[i] <- paste(sample(letters, 10), collapse="")
+}
 left <- data.frame(key=rep(indices, 10),
-                   key2=sample(rep(indices, 10)),
+                   key2=rep(indices2, 10),
                    value=rnorm(100000))
 right <- data.frame(key=indices,
-                    key2=sample(indices),
+                    key2=indices2,
+                    value2=rnorm(10000))
+
+left <- data.frame(key=rep(indices[1:1000], 10),
+                   key2=rep(indices2[1:1000], 10),
+                   value=rnorm(100000))
+right <- data.frame(key=indices[1:1000],
+                    key2=indices2[1:1000],
                     value2=rnorm(10000))
 
 timeit <- function(func, niter=10) {
diff --git a/pandas/tests/test_graphics.py b/pandas/tests/test_graphics.py
index 8ac07220e..c19d37cb5 100644
--- a/pandas/tests/test_graphics.py
+++ b/pandas/tests/test_graphics.py
@@ -94,7 +94,9 @@ class TestDataFramePlots(unittest.TestCase):
         df['indic2'] = ['foo', 'bar', 'foo'] * 2
 
         _check_plot_works(df.boxplot)
-        _check_plot_works(df.boxplot, column='one', by='indic')
+        _check_plot_works(df.boxplot, column=['one', 'two'])
+        _check_plot_works(df.boxplot, column=['one', 'two'],
+                          by='indic')
         _check_plot_works(df.boxplot, column='one', by=['indic', 'indic2'])
         _check_plot_works(df.boxplot, by='indic')
         _check_plot_works(df.boxplot, by=['indic', 'indic2'])
diff --git a/pandas/tools/merge.py b/pandas/tools/merge.py
index 3b9e1b9fd..9c9fb3b52 100644
--- a/pandas/tools/merge.py
+++ b/pandas/tools/merge.py
@@ -224,8 +224,8 @@ class _MergeOperation(object):
         if self.left_index:
             if isinstance(self.left.index, MultiIndex):
                 left_keys = [lev.values.take(lab)
-                              for lev, lab in zip(self.left.index.levels,
-                                                  self.left.index.labels)]
+                             for lev, lab in zip(self.left.index.levels,
+                                                 self.left.index.labels)]
             else:
                 left_keys = [self.left.index.values]
         else:
diff --git a/pandas/tools/pivot.py b/pandas/tools/pivot.py
index 7bc364243..fb57c6234 100644
--- a/pandas/tools/pivot.py
+++ b/pandas/tools/pivot.py
@@ -98,13 +98,7 @@ def _add_margins(table, data, values, rows=None, cols=None, aggfunc=np.mean):
 
         table_pieces = []
         margin_keys = []
-
-        if len(cols) > 0:
-            grouper = table.groupby(level=0, axis=1)
-        else:
-            grouper = ((k, table[[k]]) for k in table.columns)
-
-        for key, piece in grouper:
+        for key, piece in table.groupby(level=0, axis=1):
             all_key = (key, 'All') + ('',) * (len(cols) - 1)
             piece[all_key] = col_margin[key]
             table_pieces.append(piece)
diff --git a/pandas/tools/tests/test_merge.py b/pandas/tools/tests/test_merge.py
index f56effe9a..2375e20da 100644
--- a/pandas/tools/tests/test_merge.py
+++ b/pandas/tools/tests/test_merge.py
@@ -375,12 +375,22 @@ class TestMerge(unittest.TestCase):
                          right_on=['first', 'second'], how='inner',
                          sort=False)
 
+        expected2 = merge(to_join, data,
+                          right_on=['key1', 'key2'], left_index=True,
+                          how='inner', sort=False)
+        assert_frame_equal(joined, expected2.reindex_like(joined))
+
+        expected2 = merge(to_join, data, right_on=['key1', 'key2'],
+                          left_index=True, how='inner', sort=False)
+
         expected = expected.drop(['first', 'second'], axis=1)
         expected.index = joined.index
 
         self.assert_(joined.index.is_monotonic)
         assert_frame_equal(joined, expected)
 
+        # _assert_same_contents(expected, expected2.ix[:, expected.columns])
+
     def test_join_float64_float32(self):
         a = DataFrame(randn(10,2), columns=['a','b'])
         b = DataFrame(randn(10,1), columns=['c']).astype(np.float32)
