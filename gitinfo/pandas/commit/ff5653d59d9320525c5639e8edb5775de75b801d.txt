commit ff5653d59d9320525c5639e8edb5775de75b801d
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Sun May 15 11:09:35 2011 -0400

    sparse panel reindex unit test

diff --git a/LICENSE b/LICENSE
index b9151db8c..846dc53ae 100644
--- a/LICENSE
+++ b/LICENSE
@@ -1,4 +1,4 @@
-Copyright (c) 2008-2009 AQR Capital Management, LLC
+Copyright (c) 2008-2011 AQR Capital Management, LLC
 All rights reserved.
 
 Redistribution and use in source and binary forms, with or without
diff --git a/pandas/core/panel.py b/pandas/core/panel.py
index 56da7c2c6..f8a75da3d 100644
--- a/pandas/core/panel.py
+++ b/pandas/core/panel.py
@@ -353,6 +353,7 @@ class WidePanel(Panel, Groupable):
         ----------
         frame : DataFrame
         axis : {'items', 'major', 'minor'}
+
             Axis the input corresponds to. E.g., if axis='major', then
             the frame's columns would be items, and the index would be
             values of the minor axis
diff --git a/pandas/core/sparse.py b/pandas/core/sparse.py
index 3730614e4..be4bdd3b7 100644
--- a/pandas/core/sparse.py
+++ b/pandas/core/sparse.py
@@ -751,10 +751,6 @@ def stack_sparse_frame(frame):
     # this is pretty fast
     minor_labels = np.repeat(np.arange(len(frame.columns)), lengths)
 
-    # need to create
-    major_labels = np.empty(nobs, dtype=int)
-    stacked_values = np.empty(nobs, dtype=np.float64)
-
     inds_to_concat = []
     vals_to_concat = []
     for _, series in frame.iteritems():
@@ -927,7 +923,11 @@ class SparseWidePanel(WidePanel):
 
     def copy(self):
         """
+        Make a (shallow) copy of the sparse panel
 
+        Returns
+        -------
+        copy : SparseWidePanel
         """
         return SparseWidePanel(self._frames.copy(), items=self.items,
                                major_axis=self.major_axis,
@@ -935,7 +935,14 @@ class SparseWidePanel(WidePanel):
                                default_fill_value=self.default_fill_value,
                                default_kind=self.default_kind)
 
-    def to_long(self):
+    def to_long(self, filter_observations=True):
+        """
+        Convert SparseWidePanel to (dense) LongPanel
+
+        Returns
+        -------
+        lp : LongPanel
+        """
         pass
 
     def reindex(self, major=None, items=None, minor=None):
diff --git a/pandas/core/tests/test_sparse.py b/pandas/core/tests/test_sparse.py
index 7e534c2d9..c6b359361 100644
--- a/pandas/core/tests/test_sparse.py
+++ b/pandas/core/tests/test_sparse.py
@@ -927,8 +927,16 @@ class TestSparseWidePanel(TestCase):
         assert_sp_panel_equal(cop, self.panel)
 
     def test_reindex(self):
-        def _compare_with_dense(wp, items, major, minor):
-            pass
+        def _compare_with_dense(swp, items, major, minor):
+            swp_re = swp.reindex(items=items, major=major,
+                                 minor=minor)
+            dwp_re = swp.to_dense().reindex(items=items, major=major,
+                                            minor=minor)
+            assert_panel_equal(swp_re.to_dense(), dwp_re)
+
+        _compare_with_dense(self.panel, self.panel.items[:2],
+                            self.panel.major_axis[::2],
+                            self.panel.minor_axis[::2])
 
     def test_operators(self):
         pass
