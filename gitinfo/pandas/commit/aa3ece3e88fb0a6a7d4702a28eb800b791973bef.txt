commit aa3ece3e88fb0a6a7d4702a28eb800b791973bef
Author: Yuichiro Kaneko <spiketeika@gmail.com>
Date:   Thu Jul 21 07:16:28 2016 +0900

    CLN: Replace float64_t with int64_t in _ensure_components (#13673)

diff --git a/pandas/tslib.pyx b/pandas/tslib.pyx
index 016c49ea2..5f487eedd 100644
--- a/pandas/tslib.pyx
+++ b/pandas/tslib.pyx
@@ -2494,20 +2494,19 @@ cdef class _Timedelta(timedelta):
         """
         compute the components
         """
-        cdef int64_t sfrac, ifrac, ivalue = self.value
-        cdef float64_t frac
+        cdef int64_t sfrac, ifrac, frac, ivalue = self.value
 
         if self.is_populated:
             return
 
         # put frac in seconds
-        frac = float(ivalue)/1e9
+        frac = ivalue/(1000*1000*1000)
         if frac < 0:
             self._sign = -1
 
             # even fraction
-            if int(-frac/86400) != -frac/86400.0:
-                self._d = int(-frac/86400.0+1)
+            if (-frac % 86400) != 0:
+                self._d = -frac/86400 + 1
                 frac += 86400*self._d
             else:
                 frac = -frac
@@ -2516,39 +2515,37 @@ cdef class _Timedelta(timedelta):
             self._d = 0
 
         if frac >= 86400:
-            self._d += int(frac / 86400)
+            self._d += frac / 86400
             frac   -= self._d * 86400
 
         if frac >= 3600:
-            self._h  = int(frac / 3600)
+            self._h  = frac / 3600
             frac    -= self._h * 3600
         else:
             self._h = 0
 
         if frac >= 60:
-            self._m = int(frac / 60)
+            self._m = frac / 60
             frac   -= self._m * 60
         else:
             self._m = 0
 
         if frac >= 0:
-            self._s = int(frac)
+            self._s = frac
             frac   -= self._s
         else:
             self._s = 0
 
-        if frac != 0:
-
-            # reset so we don't lose precision
-            sfrac = int((self._h*3600 + self._m*60 + self._s)*1e9)
-            if self._sign < 0:
-                ifrac = ivalue + self._d*DAY_NS - sfrac
-            else:
-                ifrac = ivalue - (self._d*DAY_NS + sfrac)
+        sfrac = (self._h*3600 + self._m*60 + self._s)*(1000*1000*1000)
+        if self._sign < 0:
+            ifrac = ivalue + self._d*DAY_NS - sfrac
+        else:
+            ifrac = ivalue - (self._d*DAY_NS + sfrac)
 
-            self._ms = int(ifrac/1e6)
+        if ifrac != 0:
+            self._ms = ifrac/(1000*1000)
             ifrac -= self._ms*1000*1000
-            self._us = int(ifrac/1e3)
+            self._us = ifrac/1000
             ifrac -= self._us*1000
             self._ns = ifrac
         else:
