commit 3453d446d6e1755c807b6b293f020bb2ca5da81c
Author: Chang She <chang@lambdafoundry.com>
Date:   Sun Jun 24 16:34:19 2012 -0400

    BUG: workaround vstack/concat bug in numpy 1.6 #1518

diff --git a/pandas/core/internals.py b/pandas/core/internals.py
index 83278e3c9..1966b51f5 100644
--- a/pandas/core/internals.py
+++ b/pandas/core/internals.py
@@ -1389,7 +1389,7 @@ def _consolidate(blocks, items):
 def _merge_blocks(blocks, items):
     if len(blocks) == 1:
         return blocks[0]
-    new_values = np.vstack([b.values for b in blocks])
+    new_values = _vstack([b.values for b in blocks])
     new_items = blocks[0].items.append([b.items for b in blocks[1:]])
     new_block = make_block(new_values, new_items, items,
                            do_integrity_check=True)
@@ -1422,3 +1422,11 @@ def _union_items_slow(all_items):
         else:
             seen = seen.union(items)
     return seen
+
+def _vstack(to_stack):
+    if all(x.dtype == _NS_DTYPE for x in to_stack):
+        # work around NumPy 1.6 bug
+        new_values = np.vstack([x.view('i8') for x in to_stack])
+        return new_values.view(_NS_DTYPE)
+    else:
+        return np.vstack(to_stack)
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index 6ccd13911..e3794222d 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -13,6 +13,7 @@ from numpy import random, nan
 from numpy.random import randn
 import numpy as np
 import numpy.ma as ma
+from numpy.testing import assert_array_equal
 
 import pandas as pan
 import pandas.core.nanops as nanops
@@ -21,7 +22,7 @@ import pandas.core.format as fmt
 import pandas.core.datetools as datetools
 from pandas.core.api import (DataFrame, Index, Series, notnull, isnull,
                              MultiIndex, DatetimeIndex)
-from pandas.io.parsers import (ExcelFile, ExcelWriter)
+from pandas.io.parsers import (ExcelFile, ExcelWriter, read_csv)
 
 from pandas.util.testing import (assert_almost_equal,
                                  assert_series_equal,
@@ -6393,6 +6394,35 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
         self._check_bool_op('any', np.any, has_skipna=True, has_bool_only=True)
         self._check_bool_op('all', np.all, has_skipna=True, has_bool_only=True)
 
+    def test_consolidate_datetime64(self):
+        # numpy vstack bug
+
+        data = """\
+starting,ending,measure
+2012-06-21 00:00,2012-06-23 07:00,77
+2012-06-23 07:00,2012-06-23 16:30,65
+2012-06-23 16:30,2012-06-25 08:00,77
+2012-06-25 08:00,2012-06-26 12:00,0
+2012-06-26 12:00,2012-06-27 08:00,77
+"""
+        df = read_csv(StringIO(data), parse_dates=[0,1])
+
+        ser_starting = df.starting
+        ser_starting.index = ser_starting.values
+        ser_starting = ser_starting.tz_localize('US/Eastern')
+        ser_starting = ser_starting.tz_convert('UTC')
+
+        ser_ending = df.ending
+        ser_ending.index = ser_ending.values
+        ser_ending = ser_ending.tz_localize('US/Eastern')
+        ser_ending = ser_ending.tz_convert('UTC')
+
+        df.starting = ser_starting.index
+        df.ending = ser_ending.index
+
+        assert_array_equal(df.starting.values, ser_starting.index.values)
+        assert_array_equal(df.ending.values, ser_ending.index.values)
+
     def _check_bool_op(self, name, alternative, frame=None, has_skipna=True,
                        has_bool_only=False):
         if frame is None:
