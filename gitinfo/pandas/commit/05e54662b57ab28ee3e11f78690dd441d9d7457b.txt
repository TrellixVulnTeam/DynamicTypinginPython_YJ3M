commit 05e54662b57ab28ee3e11f78690dd441d9d7457b
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Wed Dec 28 13:20:42 2011 -0500

    BUG: properly exclude values from MultiIndex with other join methods when joining on level

diff --git a/pandas/core/index.py b/pandas/core/index.py
index 6f0160cea..544bfa1e8 100644
--- a/pandas/core/index.py
+++ b/pandas/core/index.py
@@ -643,8 +643,14 @@ class Index(np.ndarray):
             rev_indexer = lib.get_reverse_indexer(left_lev_indexer,
                                                   len(old_level))
 
+            new_lev_labels = rev_indexer.take(left.labels[level])
+            omit_mask = new_lev_labels != -1
+
             new_labels = list(left.labels)
-            new_labels[level] = rev_indexer.take(left.labels[level])
+            new_labels[level] = new_lev_labels
+
+            if not omit_mask.all():
+                new_labels = [lab[omit_mask] for lab in new_labels]
 
             new_levels = list(left.levels)
             new_levels[level] = new_level
diff --git a/pandas/src/internals.pyx b/pandas/src/internals.pyx
index ebf47b9e3..ed51c54d6 100644
--- a/pandas/src/internals.pyx
+++ b/pandas/src/internals.pyx
@@ -5,6 +5,7 @@ def get_reverse_indexer(ndarray[int32_t] indexer, Py_ssize_t length):
         int32_t idx
 
     rev_indexer = np.empty(length, dtype='i4')
+    rev_indexer.fill(-1)
     for i in range(n):
         idx = indexer[i]
         if idx != -1:
diff --git a/pandas/tests/test_index.py b/pandas/tests/test_index.py
index 5123596ff..ae0a2700e 100644
--- a/pandas/tests/test_index.py
+++ b/pandas/tests/test_index.py
@@ -1159,9 +1159,7 @@ class TestMultiIndex(unittest.TestCase):
         self.assertEqual(taken.names, self.index.names)
 
     def test_join_level(self):
-        other = Index(['three', 'one', 'two'])
-
-        def _check_how(how):
+        def _check_how(other, how):
             join_index, lidx, ridx = other.join(self.index, how=how,
                                                 level='second',
                                                 return_indexers=True)
@@ -1178,10 +1176,21 @@ class TestMultiIndex(unittest.TestCase):
             self.assert_(join_index.levels[0].equals(self.index.levels[0]))
             self.assert_(join_index.levels[1].equals(exp_level))
 
-        _check_how('outer')
-        _check_how('inner')
-        _check_how('left')
-        _check_how('right')
+            # pare down levels
+            mask = np.array([x[1] in exp_level for x in self.index], dtype=bool)
+            exp_values = self.index.values[mask]
+            self.assert_(np.array_equal(join_index.values, exp_values))
+            self.assert_(np.array_equal(join_index2.values, exp_values))
+
+        def _check_all(other):
+            _check_how(other, 'outer')
+            _check_how(other, 'inner')
+            _check_how(other, 'left')
+            _check_how(other, 'right')
+
+        _check_all(Index(['three', 'one', 'two']))
+        _check_all(Index(['one']))
+        _check_all(Index(['one', 'three']))
 
     def test_has_duplicates(self):
         self.assert_(not self.index.has_duplicates)
diff --git a/pandas/tests/test_multilevel.py b/pandas/tests/test_multilevel.py
index 3796cb54c..75356d87a 100644
--- a/pandas/tests/test_multilevel.py
+++ b/pandas/tests/test_multilevel.py
@@ -54,7 +54,7 @@ class TestMultiLevel(unittest.TestCase):
         result = a['A'].append(b['A'])
         tm.assert_series_equal(result, self.frame['A'])
 
-    def test_align_level(self):
+    def test_reindex_level(self):
         # axis=0
         month_sums = self.ymd.sum(level='month')
         result = month_sums.reindex(self.ymd.index, level=1)
diff --git a/setup.py b/setup.py
index c17186120..3191c3c50 100755
--- a/setup.py
+++ b/setup.py
@@ -36,7 +36,7 @@ try:
     import numpy as np
 except ImportError:
     nonumpy_msg = ("# numpy needed to finish setup.  run:\n\n"
-    "pip install numpy  \n# or easy_install numpy\n") 
+    "pip install numpy  \n# or easy_install numpy\n")
     print nonumpy_msg
     import sys
     sys.exit()
@@ -294,7 +294,7 @@ else:
 
 tseries_depends = ['reindex', 'groupby', 'skiplist', 'moments',
                    'generated', 'parsing', 'reduce', 'stats',
-                   'inference', 'properties']
+                   'inference', 'properties', 'internals']
 def srcpath(name=None, suffix='.pyx', subdir='src'):
     return pjoin('pandas', subdir, name+suffix)
 
