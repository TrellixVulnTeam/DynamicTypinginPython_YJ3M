commit 30446648b58cec064c8a738ca65759d4a26b8db4
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Mon May 7 12:25:39 2012 -0400

    REF: remove Picklable class

diff --git a/RELEASE.rst b/RELEASE.rst
index 9b496a72d..0c00ef9b3 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -58,6 +58,7 @@ pandas 0.8.0
     booleans and NAs (GH #1074)
   - Couldn't assign whole array to column in mixed-type DataFrame via .ix
     (#1142)
+  - Fix label slicing issues with float index values (#1167)
 
 pandas 0.7.3
 ============
diff --git a/pandas/core/generic.py b/pandas/core/generic.py
index 103e9426e..5bd41423c 100644
--- a/pandas/core/generic.py
+++ b/pandas/core/generic.py
@@ -8,22 +8,11 @@ from pandas.core.index import MultiIndex
 from pandas.tseries.index import DatetimeIndex
 from pandas.tseries.offsets import DateOffset
 
-#-------------------------------------------------------------------------------
-# Picklable mixin
-
-class Picklable(object):
-
-    def save(self, path):
-        save(self, path)
-
-    @classmethod
-    def load(cls, path):
-        return load(path)
-
 class PandasError(Exception):
     pass
 
-class PandasObject(Picklable):
+
+class PandasObject(object):
 
     _AXIS_NUMBERS = {
         'index' : 0,
@@ -33,6 +22,13 @@ class PandasObject(Picklable):
     _AXIS_ALIASES = {}
     _AXIS_NAMES = dict((v, k) for k, v in _AXIS_NUMBERS.iteritems())
 
+    def save(self, path):
+        save(self, path)
+
+    @classmethod
+    def load(cls, path):
+        return load(path)
+
     #----------------------------------------------------------------------
     # Axis name business
 
diff --git a/pandas/core/series.py b/pandas/core/series.py
index c2094750f..6498abc8f 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -267,8 +267,6 @@ class Series(np.ndarray, generic.PandasObject):
 
     _AXIS_NAMES = dict((v, k) for k, v in _AXIS_NUMBERS.iteritems())
 
-    __slots__ = ['_index', 'name']
-
     def __new__(cls, data=None, index=None, dtype=None, name=None,
                 copy=False):
         if data is None:
@@ -431,7 +429,6 @@ copy : boolean, default False
             from pandas.core.indexing import _is_index_slice
 
             idx_type = self.index.inferred_type
-
             if idx_type == 'floating':
                 indexer = self.ix._convert_to_indexer(key, axis=0)
             elif idx_type == 'integer' or _is_index_slice(key):
