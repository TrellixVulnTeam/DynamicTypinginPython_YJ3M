commit 89cf88f30e971f68a8164f564c555b8d0b87f9a5
Author: Dieter Vandenbussche <dvandenbussche@axioma.com>
Date:   Thu Feb 2 23:35:29 2012 -0500

    Add unittest for to_excel

diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index b902f5609..9ce8bde73 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -20,6 +20,7 @@ import pandas.core.datetools as datetools
 from pandas.core.index import NULL_INDEX
 from pandas.core.api import (DataFrame, Index, Series, notnull, isnull,
                              MultiIndex)
+from pandas.io.parsers import (ExcelFile, ExcelWriter)
 
 from pandas.util.testing import (assert_almost_equal,
                                  assert_series_equal,
@@ -2266,7 +2267,39 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
         assert_frame_equal(df, df2)
         os.remove(path)
 
-        df.to_csv(path, index=False, encoding='UTF-8')
+    def test_to_excel_from_excel(self):
+        path = '__tmp__.xls'
+
+        self.frame['A'][:5] = nan
+
+        self.frame.to_excel(path,'test1')
+        self.frame.to_excel(path,'test1', cols=['A', 'B'])
+        self.frame.to_excel(path,'test1', header=False)
+        self.frame.to_excel(path,'test1', index=False)
+
+        # test roundtrip
+        self.frame.to_excel(path,'test1')
+        reader = ExcelFile(path)
+        recons = reader.parse('test1',index_col=0)
+        assert_frame_equal(self.frame, recons)
+
+        self.tsframe.to_excel(path,'test1')
+        reader = ExcelFile(path)
+        recons = reader.parse('test1',index_col=0)
+        assert_frame_equal(self.tsframe, recons)
+
+        # Test writing to separate sheets
+        writer = ExcelWriter(path)
+        self.frame.to_excel(writer,'test1')
+        self.tsframe.to_excel(writer,'test2')
+        writer.save()
+        reader = ExcelFile(path)
+        recons = reader.parse('test1',index_col=0)
+        assert_frame_equal(self.frame, recons)
+        recons = reader.parse('test2',index_col=0)
+        assert_frame_equal(self.tsframe, recons)
+
+        os.remove(path)
 
     def test_info(self):
         io = StringIO()
