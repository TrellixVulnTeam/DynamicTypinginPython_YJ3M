commit c0c1c9a2f9ace9d9a681d47a0b9761dbd8747355
Author: jbrockmendel <jbrockmendel@gmail.com>
Date:   Wed Jul 10 09:55:54 2019 -0700

    check early for non-scalar default_fill_value (#27302)

diff --git a/pandas/core/sparse/frame.py b/pandas/core/sparse/frame.py
index f195e4b5f..60060a4a2 100644
--- a/pandas/core/sparse/frame.py
+++ b/pandas/core/sparse/frame.py
@@ -6,6 +6,7 @@ import warnings
 
 import numpy as np
 
+from pandas._libs.lib import is_scalar, item_from_zerodim
 from pandas._libs.sparse import BlockIndex, get_blocks
 from pandas.compat.numpy import function as nv
 from pandas.util._decorators import Appender
@@ -74,6 +75,8 @@ class SparseDataFrame(DataFrame):
         dtype=None,
         copy=False,
     ):
+        if not is_scalar(default_fill_value):
+            raise ValueError("'default_fill_value' must be a scalar")
 
         warnings.warn(depr_msg, FutureWarning, stacklevel=2)
         # pick up the defaults from the Sparse structures
@@ -666,7 +669,7 @@ class SparseDataFrame(DataFrame):
                 fill_value = np.nan
             else:
                 fill_value = func(np.float64(own_default), np.float64(other.fill_value))
-
+                fill_value = item_from_zerodim(fill_value)
         else:
             raise NotImplementedError(type(other))
 
diff --git a/pandas/tests/sparse/frame/test_frame.py b/pandas/tests/sparse/frame/test_frame.py
index 55a37da6b..64c81a8c1 100644
--- a/pandas/tests/sparse/frame/test_frame.py
+++ b/pandas/tests/sparse/frame/test_frame.py
@@ -136,6 +136,12 @@ class TestSparseDataFrame(SharedWithSparse):
 
         repr(float_frame)
 
+    def test_constructor_fill_value_not_scalar_raises(self):
+        d = {"b": [2, 3], "a": [0, 1]}
+        fill_value = np.array(np.nan)
+        with pytest.raises(ValueError, match="must be a scalar"):
+            SparseDataFrame(data=d, default_fill_value=fill_value)
+
     def test_constructor_dict_order(self):
         # GH19018
         # initialization ordering: by insertion order if python>= 3.6, else
