commit cb730a7510d348db63a3177f03a7cbcbd381bffb
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Tue Apr 10 00:47:23 2012 -0400

    ENH: set name attribute during DataFrame.apply computation, close #983

diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index b7c0339a4..3c02f9b5e 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -3082,7 +3082,8 @@ class DataFrame(NDFrame):
             values = self.values
             dummy = Series(np.nan, index=self._get_axis(axis),
                            dtype=values.dtype)
-            result = lib.reduce(values, func, axis=axis, dummy=dummy)
+            result = lib.reduce(values, func, axis=axis, dummy=dummy,
+                                labels=self._get_agg_axis(axis))
             return Series(result, index=self._get_agg_axis(axis))
         except Exception:
             pass
diff --git a/pandas/src/reduce.pyx b/pandas/src/reduce.pyx
index 588cd1161..36b11b7ef 100644
--- a/pandas/src/reduce.pyx
+++ b/pandas/src/reduce.pyx
@@ -8,9 +8,10 @@ cdef class Reducer:
     '''
     cdef:
         Py_ssize_t increment, chunksize, nresults
-        object arr, dummy, f
+        object arr, dummy, f, labels
 
-    def __init__(self, object arr, object f, axis=1, dummy=None):
+    def __init__(self, object arr, object f, axis=1, dummy=None,
+                 labels=None):
         n, k = arr.shape
 
         if axis == 0:
@@ -31,6 +32,7 @@ cdef class Reducer:
         self.f = f
         self.arr = arr
         self.dummy = self._check_dummy(dummy)
+        self.labels = labels
 
     def _check_dummy(self, dummy=None):
         if dummy is None:
@@ -51,14 +53,28 @@ cdef class Reducer:
             Py_ssize_t i
             flatiter it
             object res
+            bint set_label = 0
+            ndarray[object] labels
 
         arr = self.arr
         chunk = self.dummy
 
         dummy_buf = chunk.data
         chunk.data = arr.data
+
+        set_label = self.labels is not None
+
+        if set_label:
+            if not np.issubdtype(self.labels.dtype, object):
+                labels = self.labels.astype('O')
+            else:
+                labels = self.labels
+
         try:
             for i in range(self.nresults):
+                if set_label:
+                    chunk.name = labels[i]
+
                 res = self.f(chunk)
                 if i == 0:
                     result = self._get_result_array(res)
@@ -228,6 +244,6 @@ cdef class Slider:
         self.buf.shape[0] = self.orig_len
         self.buf.data = self.orig_data
 
-def reduce(arr, f, axis=0, dummy=None):
-    reducer = Reducer(arr, f, axis=axis, dummy=dummy)
+def reduce(arr, f, axis=0, dummy=None, labels=None):
+    reducer = Reducer(arr, f, axis=axis, dummy=dummy, labels=labels)
     return reducer.get_result()
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index bc6ece927..0cce01605 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -3882,6 +3882,15 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
         result = data.apply(lambda x: x, axis=1)
         assert_frame_equal(result, data)
 
+    def test_apply_attach_name(self):
+        result = self.frame.apply(lambda x: x.name)
+        expected = Series(self.frame.columns, index=self.frame.columns)
+        assert_series_equal(result, expected)
+
+        result = self.frame.apply(lambda x: x.name, axis=1)
+        expected = Series(self.frame.index, index=self.frame.index)
+        assert_series_equal(result, expected)
+
     def test_applymap(self):
         applied = self.frame.applymap(lambda x: x * 2)
         assert_frame_equal(applied, self.frame * 2)
@@ -5040,7 +5049,6 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
         exp = Y['g'].sum()
         self.assert_(isnull(Y['g']['c']))
 
-
 if __name__ == '__main__':
     # unittest.main()
     import nose
