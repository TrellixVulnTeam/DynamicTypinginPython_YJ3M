commit 22f148620b18bb373412e42d399a97a5958a6312
Author: Scott Lasley <selasley@Lappy486.local>
Date:   Tue Dec 30 23:06:52 2014 -0600

    BUG: "index_col=False" not working when "usecols" is specified in read_csv #9082

diff --git a/doc/source/whatsnew/v0.16.0.txt b/doc/source/whatsnew/v0.16.0.txt
index e202bea96..2b8ee8558 100644
--- a/doc/source/whatsnew/v0.16.0.txt
+++ b/doc/source/whatsnew/v0.16.0.txt
@@ -153,3 +153,4 @@ Bug Fixes
 
 
 - Fixed issue in the ``xlsxwriter`` engine where it added a default 'General' format to cells if no other format wass applied. This prevented other row or column formatting being applied. (:issue:`9167`)
+- Fixes issue with ``index_col=False`` when ``usecols`` is also specified in ``read_csv``. (:issue:`9082`)
diff --git a/pandas/io/tests/test_parsers.py b/pandas/io/tests/test_parsers.py
index d80572739..750e107a3 100644
--- a/pandas/io/tests/test_parsers.py
+++ b/pandas/io/tests/test_parsers.py
@@ -509,6 +509,17 @@ KORD6,19990127, 23:00:00, 22:56:00, -0.5900, 1.7100, 4.6000, 0.0000, 280.0000"""
         tm.assert_frame_equal(xp, rs)
         self.assertEqual(xp.index.name, rs.index.name)
 
+    def test_usecols_index_col_False(self):
+        # Issue 9082
+        s = "a,b,c,d\n1,2,3,4\n5,6,7,8"
+        s_malformed = "a,b,c,d\n1,2,3,4,\n5,6,7,8,"
+        cols = ['a','c','d']
+        expected = DataFrame({'a':[1,5], 'c':[3,7], 'd':[4,8]})
+        df = self.read_csv(StringIO(s), usecols=cols, index_col=False)
+        tm.assert_frame_equal(expected, df)
+        df = self.read_csv(StringIO(s_malformed), usecols=cols, index_col=False)
+        tm.assert_frame_equal(expected, df)
+
     def test_converter_index_col_bug(self):
         # 1835
         data = "A;B\n1;2\n3;4"
diff --git a/pandas/parser.pyx b/pandas/parser.pyx
index 0409ee56f..330cb63a0 100644
--- a/pandas/parser.pyx
+++ b/pandas/parser.pyx
@@ -728,7 +728,7 @@ cdef class TextReader:
             #                        'data has %d fields'
             #                        % (passed_count, field_count))
 
-            if self.has_usecols:
+            if self.has_usecols and self.allow_leading_cols:
                 nuse = len(self.usecols)
                 if nuse == passed_count:
                     self.leading_cols = 0
