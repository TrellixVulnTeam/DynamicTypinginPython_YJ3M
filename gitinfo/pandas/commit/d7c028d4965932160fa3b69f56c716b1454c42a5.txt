commit d7c028d4965932160fa3b69f56c716b1454c42a5
Author: gfyoung <gfyoung17@gmail.com>
Date:   Fri Jul 15 06:25:54 2016 -0400

    CLN: Removed levels attribute from Categorical
    
    Deprecated back in `0.15.0` and therefore long overdue.  Closes #8376.
    
    Author: gfyoung <gfyoung17@gmail.com>
    
    Closes #13612 from gfyoung/categorical-levels-remove and squashes the following commits:
    
    f1254df [gfyoung] MAINT: Relocated backwards compat categorical pickle tests
    f3321cb [gfyoung] CLN: Removed levels attribute from Categorical

diff --git a/doc/source/whatsnew/v0.19.0.txt b/doc/source/whatsnew/v0.19.0.txt
index 747fc70f8..0b9695125 100644
--- a/doc/source/whatsnew/v0.19.0.txt
+++ b/doc/source/whatsnew/v0.19.0.txt
@@ -506,6 +506,7 @@ Removal of prior version deprecations/changes
 
 - ``DataFrame.to_csv()`` has dropped the ``engine`` parameter, as was deprecated in 0.17.1 (:issue:`11274`, :issue:`13419`)
 - ``DataFrame.to_dict()`` has dropped the ``outtype`` parameter in favor of ``orient`` (:issue:`13627`, :issue:`8486`)
+- ``pd.Categorical`` has dropped the ``levels`` attribute in favour of ``categories`` (:issue:`8376`)
 
 
 .. _whatsnew_0190.performance:
diff --git a/pandas/core/categorical.py b/pandas/core/categorical.py
index 1d1a9f990..a26cc5125 100644
--- a/pandas/core/categorical.py
+++ b/pandas/core/categorical.py
@@ -228,8 +228,8 @@ class Categorical(PandasObject):
     __array_priority__ = 1000
     _typ = 'categorical'
 
-    def __init__(self, values, categories=None, ordered=False, name=None,
-                 fastpath=False, levels=None):
+    def __init__(self, values, categories=None, ordered=False,
+                 name=None, fastpath=False):
 
         if fastpath:
             # fast path
@@ -245,17 +245,6 @@ class Categorical(PandasObject):
                    "name=\"something\")'")
             warn(msg, UserWarning, stacklevel=2)
 
-        # TODO: Remove after deprecation period in 2017/ after 0.18
-        if levels is not None:
-            warn("Creating a 'Categorical' with 'levels' is deprecated, use "
-                 "'categories' instead", FutureWarning, stacklevel=2)
-            if categories is None:
-                categories = levels
-            else:
-                raise ValueError("Cannot pass in both 'categories' and "
-                                 "(deprecated) 'levels', use only "
-                                 "'categories'", stacklevel=2)
-
         # sanitize input
         if is_categorical_dtype(values):
 
@@ -580,21 +569,6 @@ class Categorical(PandasObject):
     categories = property(fget=_get_categories, fset=_set_categories,
                           doc=_categories_doc)
 
-    def _set_levels(self, levels):
-        """ set new levels (deprecated, use "categories") """
-        warn("Assigning to 'levels' is deprecated, use 'categories'",
-             FutureWarning, stacklevel=2)
-        self.categories = levels
-
-    def _get_levels(self):
-        """ Gets the levels (deprecated, use "categories") """
-        warn("Accessing 'levels' is deprecated, use 'categories'",
-             FutureWarning, stacklevel=2)
-        return self.categories
-
-    # TODO: Remove after deprecation period in 2017/ after 0.18
-    levels = property(fget=_get_levels, fset=_set_levels)
-
     _ordered = None
 
     def _set_ordered(self, value):
diff --git a/pandas/tests/data/categorical_0_14_1.pickle b/pandas/io/tests/data/categorical_0_14_1.pickle
similarity index 100%
rename from pandas/tests/data/categorical_0_14_1.pickle
rename to pandas/io/tests/data/categorical_0_14_1.pickle
diff --git a/pandas/tests/data/categorical_0_15_2.pickle b/pandas/io/tests/data/categorical_0_15_2.pickle
similarity index 100%
rename from pandas/tests/data/categorical_0_15_2.pickle
rename to pandas/io/tests/data/categorical_0_15_2.pickle
diff --git a/pandas/io/tests/test_pickle.py b/pandas/io/tests/test_pickle.py
index 55c14fee9..6019144d5 100644
--- a/pandas/io/tests/test_pickle.py
+++ b/pandas/io/tests/test_pickle.py
@@ -231,6 +231,44 @@ class TestPickle():
                         result = python_unpickler(path)
                         self.compare_element(result, expected, typ)
 
+    def test_pickle_v0_14_1(self):
+
+        # we have the name warning
+        # 10482
+        with tm.assert_produces_warning(UserWarning):
+            cat = pd.Categorical(values=['a', 'b', 'c'],
+                                 categories=['a', 'b', 'c', 'd'],
+                                 name='foobar', ordered=False)
+        pickle_path = os.path.join(tm.get_data_path(),
+                                   'categorical_0_14_1.pickle')
+        # This code was executed once on v0.14.1 to generate the pickle:
+        #
+        # cat = Categorical(labels=np.arange(3), levels=['a', 'b', 'c', 'd'],
+        #                   name='foobar')
+        # with open(pickle_path, 'wb') as f: pickle.dump(cat, f)
+        #
+        tm.assert_categorical_equal(cat, pd.read_pickle(pickle_path))
+
+    def test_pickle_v0_15_2(self):
+        # ordered -> _ordered
+        # GH 9347
+
+        # we have the name warning
+        # 10482
+        with tm.assert_produces_warning(UserWarning):
+            cat = pd.Categorical(values=['a', 'b', 'c'],
+                                 categories=['a', 'b', 'c', 'd'],
+                                 name='foobar', ordered=False)
+        pickle_path = os.path.join(tm.get_data_path(),
+                                   'categorical_0_15_2.pickle')
+        # This code was executed once on v0.15.2 to generate the pickle:
+        #
+        # cat = Categorical(labels=np.arange(3), levels=['a', 'b', 'c', 'd'],
+        #                   name='foobar')
+        # with open(pickle_path, 'wb') as f: pickle.dump(cat, f)
+        #
+        tm.assert_categorical_equal(cat, pd.read_pickle(pickle_path))
+
 
 if __name__ == '__main__':
     nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
diff --git a/pandas/tests/test_categorical.py b/pandas/tests/test_categorical.py
index dd39861ac..1edd9443f 100644
--- a/pandas/tests/test_categorical.py
+++ b/pandas/tests/test_categorical.py
@@ -1559,18 +1559,6 @@ Categories (3, object): [ああああ, いいいいい, ううううううう]""
             res = cat.labels
         self.assert_numpy_array_equal(res, exp)
 
-    def test_deprecated_levels(self):
-        # TODO: levels is deprecated and should be removed in 0.18 or 2017,
-        # whatever is earlier
-        cat = pd.Categorical([1, 2, 3, np.nan], categories=[1, 2, 3])
-        exp = cat.categories
-        with tm.assert_produces_warning(FutureWarning):
-            res = cat.levels
-        self.assert_index_equal(res, exp)
-        with tm.assert_produces_warning(FutureWarning):
-            res = pd.Categorical([1, 2, 3, np.nan], levels=[1, 2, 3])
-        self.assert_index_equal(res.categories, exp)
-
     def test_removed_names_produces_warning(self):
 
         # 10482
@@ -4431,44 +4419,6 @@ Categories (10, timedelta64[ns]): [0 days 01:00:00 < 1 days 01:00:00 < 2 days 01
             invalid.dt
         self.assertFalse(hasattr(invalid, 'str'))
 
-    def test_pickle_v0_14_1(self):
-
-        # we have the name warning
-        # 10482
-        with tm.assert_produces_warning(UserWarning):
-            cat = pd.Categorical(values=['a', 'b', 'c'],
-                                 categories=['a', 'b', 'c', 'd'],
-                                 name='foobar', ordered=False)
-        pickle_path = os.path.join(tm.get_data_path(),
-                                   'categorical_0_14_1.pickle')
-        # This code was executed once on v0.14.1 to generate the pickle:
-        #
-        # cat = Categorical(labels=np.arange(3), levels=['a', 'b', 'c', 'd'],
-        #                   name='foobar')
-        # with open(pickle_path, 'wb') as f: pickle.dump(cat, f)
-        #
-        self.assert_categorical_equal(cat, pd.read_pickle(pickle_path))
-
-    def test_pickle_v0_15_2(self):
-        # ordered -> _ordered
-        # GH 9347
-
-        # we have the name warning
-        # 10482
-        with tm.assert_produces_warning(UserWarning):
-            cat = pd.Categorical(values=['a', 'b', 'c'],
-                                 categories=['a', 'b', 'c', 'd'],
-                                 name='foobar', ordered=False)
-        pickle_path = os.path.join(tm.get_data_path(),
-                                   'categorical_0_15_2.pickle')
-        # This code was executed once on v0.15.2 to generate the pickle:
-        #
-        # cat = Categorical(labels=np.arange(3), levels=['a', 'b', 'c', 'd'],
-        #                   name='foobar')
-        # with open(pickle_path, 'wb') as f: pickle.dump(cat, f)
-        #
-        self.assert_categorical_equal(cat, pd.read_pickle(pickle_path))
-
     def test_concat_categorical(self):
         # See GH 10177
         df1 = pd.DataFrame(
diff --git a/setup.py b/setup.py
index 650357588..c77ca4d9e 100755
--- a/setup.py
+++ b/setup.py
@@ -589,6 +589,7 @@ setup(name=DISTNAME,
                                   'tests/data/legacy_msgpack/*/*.msgpack',
                                   'tests/data/*.csv*',
                                   'tests/data/*.dta',
+                                  'tests/data/*.pickle',
                                   'tests/data/*.txt',
                                   'tests/data/*.xls',
                                   'tests/data/*.xlsx',
@@ -605,8 +606,7 @@ setup(name=DISTNAME,
                                   'tests/data/html_encoding/*.html',
                                   'tests/json/data/*.json'],
                     'pandas.tools': ['tests/data/*.csv'],
-                    'pandas.tests': ['data/*.pickle',
-                                     'data/*.csv'],
+                    'pandas.tests': ['data/*.csv'],
                     'pandas.tests.formats': ['data/*.csv'],
                     'pandas.tests.indexes': ['data/*.pickle'],
                     'pandas.tseries.tests': ['data/*.pickle',
