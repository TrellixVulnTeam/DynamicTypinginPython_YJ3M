commit 304209f677ec575a42e0720a2793bd8e72994a43
Author: William Ayd <will_ayd@innobi.io>
Date:   Wed Feb 19 23:51:07 2020 -0500

    Added pd.NA to nulls_fixture (#31799)

diff --git a/pandas/conftest.py b/pandas/conftest.py
index 7851cba9c..d19bf8587 100644
--- a/pandas/conftest.py
+++ b/pandas/conftest.py
@@ -441,7 +441,7 @@ def other_closed(request):
     return request.param
 
 
-@pytest.fixture(params=[None, np.nan, pd.NaT, float("nan"), np.float("NaN")])
+@pytest.fixture(params=[None, np.nan, pd.NaT, float("nan"), np.float("NaN"), pd.NA])
 def nulls_fixture(request):
     """
     Fixture for each null type in pandas.
diff --git a/pandas/tests/arithmetic/test_interval.py b/pandas/tests/arithmetic/test_interval.py
index f9e1a5152..3f85ac8c1 100644
--- a/pandas/tests/arithmetic/test_interval.py
+++ b/pandas/tests/arithmetic/test_interval.py
@@ -129,6 +129,10 @@ class TestComparison:
     def test_compare_scalar_na(self, op, array, nulls_fixture):
         result = op(array, nulls_fixture)
         expected = self.elementwise_comparison(op, array, nulls_fixture)
+
+        if nulls_fixture is pd.NA and array.dtype != pd.IntervalDtype("int"):
+            pytest.xfail("broken for non-integer IntervalArray; see GH 31882")
+
         tm.assert_numpy_array_equal(result, expected)
 
     @pytest.mark.parametrize(
@@ -207,6 +211,10 @@ class TestComparison:
         other = [nulls_fixture] * 4
         result = op(array, other)
         expected = self.elementwise_comparison(op, array, other)
+
+        if nulls_fixture is pd.NA:
+            pytest.xfail("broken for non-integer IntervalArray; see GH 31882")
+
         tm.assert_numpy_array_equal(result, expected)
 
     @pytest.mark.parametrize(
diff --git a/pandas/tests/indexes/multi/test_indexing.py b/pandas/tests/indexes/multi/test_indexing.py
index 21a4773fa..3c9b34a4a 100644
--- a/pandas/tests/indexes/multi/test_indexing.py
+++ b/pandas/tests/indexes/multi/test_indexing.py
@@ -384,6 +384,10 @@ def test_get_loc_nan(level, nulls_fixture):
     key = ["b", "d"]
     levels[level] = np.array([0, nulls_fixture], dtype=type(nulls_fixture))
     key[level] = nulls_fixture
+
+    if nulls_fixture is pd.NA:
+        pytest.xfail("MultiIndex from pd.NA in np.array broken; see GH 31883")
+
     idx = MultiIndex.from_product(levels)
     assert idx.get_loc(tuple(key)) == 3
 
diff --git a/pandas/tests/indexes/test_base.py b/pandas/tests/indexes/test_base.py
index c64a70af6..3b4b6b09d 100644
--- a/pandas/tests/indexes/test_base.py
+++ b/pandas/tests/indexes/test_base.py
@@ -305,6 +305,10 @@ class TestIndex(Base):
         data = [ctor]
         data.insert(pos, nulls_fixture)
 
+        if nulls_fixture is pd.NA:
+            expected = Index([pd.NA, pd.NaT])
+            pytest.xfail("Broken with np.NaT ctor; see GH 31884")
+
         result = Index(data)
         tm.assert_index_equal(result, expected)
 
@@ -1964,6 +1968,9 @@ class TestIndex(Base):
             pytest.skip("pd.NaT not compatible with Float64Index")
 
         # Float64Index overrides isin, so must be checked separately
+        if nulls_fixture is pd.NA:
+            pytest.xfail("Float64Index cannot contain pd.NA")
+
         tm.assert_numpy_array_equal(
             Float64Index([1.0, nulls_fixture]).isin([np.nan]), np.array([False, True])
         )
