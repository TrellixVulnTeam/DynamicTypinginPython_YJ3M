commit 75c1fa01ebcfe3a61cb1ec9899729062336724a6
Author: Chris <chris.kerr@athion.de>
Date:   Fri Nov 10 15:24:58 2017 +0100

    ENH: allow using '+' sign in the argument to `to_offset()` (#18171)

diff --git a/doc/source/whatsnew/v0.22.0.txt b/doc/source/whatsnew/v0.22.0.txt
index 10da884d1..51cce713f 100644
--- a/doc/source/whatsnew/v0.22.0.txt
+++ b/doc/source/whatsnew/v0.22.0.txt
@@ -23,7 +23,7 @@ Other Enhancements
 ^^^^^^^^^^^^^^^^^^
 
 - Better support for ``Dataframe.style.to_excel()`` output with the ``xlsxwriter`` engine. (:issue:`16149`)
--
+- :func:`pd.tseries.frequencies.to_offset()` now accepts leading '+' signs e.g. '+1h'. (:issue:`18171`)
 -
 
 .. _whatsnew_0220.api_breaking:
diff --git a/pandas/_libs/tslibs/frequencies.pyx b/pandas/_libs/tslibs/frequencies.pyx
index 9d810bfb4..2a700d52e 100644
--- a/pandas/_libs/tslibs/frequencies.pyx
+++ b/pandas/_libs/tslibs/frequencies.pyx
@@ -15,7 +15,7 @@ from util cimport is_integer_object
 
 # hack to handle WOM-1MON
 opattern = re.compile(
-    r'([\-]?\d*|[\-]?\d*\.\d*)\s*([A-Za-z]+([\-][\dA-Za-z\-]+)?)'
+    r'([+\-]?\d*|[+\-]?\d*\.\d*)\s*([A-Za-z]+([\-][\dA-Za-z\-]+)?)'
 )
 
 _INVALID_FREQ_ERROR = "Invalid frequency: {0}"
diff --git a/pandas/tests/tseries/test_frequencies.py b/pandas/tests/tseries/test_frequencies.py
index 39a9a8714..745f3ef2e 100644
--- a/pandas/tests/tseries/test_frequencies.py
+++ b/pandas/tests/tseries/test_frequencies.py
@@ -169,6 +169,19 @@ class TestToOffset(object):
         result = frequencies.to_offset(freqstr)
         assert (result.n == -194)
 
+    def test_to_offset_leading_plus(self):
+        freqstr = '+1d'
+        result = frequencies.to_offset(freqstr)
+        assert (result.n == 1)
+
+        freqstr = '+2h30min'
+        result = frequencies.to_offset(freqstr)
+        assert (result.n == 150)
+
+        for bad_freq in ['+-1d', '-+1h', '+1', '-7', '+d', '-m']:
+            with tm.assert_raises_regex(ValueError, 'Invalid frequency:'):
+                frequencies.to_offset(bad_freq)
+
     def test_to_offset_pd_timedelta(self):
         # Tests for #9064
         td = Timedelta(days=1, seconds=1)
