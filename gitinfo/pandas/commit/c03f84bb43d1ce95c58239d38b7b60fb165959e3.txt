commit c03f84bb43d1ce95c58239d38b7b60fb165959e3
Author: jreback <jeff@reback.net>
Date:   Sat Mar 14 10:43:42 2015 -0400

    COMPAT: dtype conform on windows for panel construct from a scalar

diff --git a/pandas/tests/test_panel.py b/pandas/tests/test_panel.py
index 841df36fa..cab668b31 100644
--- a/pandas/tests/test_panel.py
+++ b/pandas/tests/test_panel.py
@@ -890,7 +890,7 @@ class TestPanel(tm.TestCase, PanelTests, CheckIndexing,
 
         # GH #8285, test when scalar data is used to construct a Panel
         # if dtype is not passed, it should be inferred
-        value_and_dtype = [(1, int), (3.14, float), ('foo', np.object_)]
+        value_and_dtype = [(1, 'int64'), (3.14, 'float64'), ('foo', np.object_)]
         for (val, dtype) in value_and_dtype:
             wp = Panel(val, items=range(2), major_axis=range(3), minor_axis=range(4))
             vals = np.empty((2, 3, 4), dtype=dtype)
@@ -898,10 +898,10 @@ class TestPanel(tm.TestCase, PanelTests, CheckIndexing,
             assert_panel_equal(wp, Panel(vals, dtype=dtype))
 
         # test the case when dtype is passed
-        wp = Panel(1, items=range(2), major_axis=range(3), minor_axis=range(4), dtype=float)
-        vals = np.empty((2, 3, 4), dtype=float)
+        wp = Panel(1, items=range(2), major_axis=range(3), minor_axis=range(4), dtype='float32')
+        vals = np.empty((2, 3, 4), dtype='float32')
         vals.fill(1)
-        assert_panel_equal(wp, Panel(vals, dtype=float))
+        assert_panel_equal(wp, Panel(vals, dtype='float32'))
 
     def test_constructor_cast(self):
         zero_filled = self.panel.fillna(0)
diff --git a/pandas/tests/test_panel4d.py b/pandas/tests/test_panel4d.py
index 7d6332879..fff3b0c54 100644
--- a/pandas/tests/test_panel4d.py
+++ b/pandas/tests/test_panel4d.py
@@ -631,7 +631,7 @@ class TestPanel4d(tm.TestCase, CheckIndexing, SafeForSparse,
 
         # GH #8285, test when scalar data is used to construct a Panel4D
         # if dtype is not passed, it should be inferred
-        value_and_dtype = [(1, int), (3.14, float), ('foo', np.object_)]
+        value_and_dtype = [(1, 'int64'), (3.14, 'float64'), ('foo', np.object_)]
         for (val, dtype) in value_and_dtype:
             panel4d = Panel4D(val, labels=range(2), items=range(3), major_axis=range(4), minor_axis=range(5))
             vals = np.empty((2, 3, 4, 5), dtype=dtype)
@@ -639,10 +639,10 @@ class TestPanel4d(tm.TestCase, CheckIndexing, SafeForSparse,
             assert_panel4d_equal(panel4d, Panel4D(vals, dtype=dtype))
 
         # test the case when dtype is passed
-        panel4d = Panel4D(1, labels=range(2), items=range(3), major_axis=range(4), minor_axis=range(5), dtype=float)
-        vals = np.empty((2, 3, 4, 5), dtype=float)
+        panel4d = Panel4D(1, labels=range(2), items=range(3), major_axis=range(4), minor_axis=range(5), dtype='float32')
+        vals = np.empty((2, 3, 4, 5), dtype='float32')
         vals.fill(1)
-        assert_panel4d_equal(panel4d, Panel4D(vals, dtype=float))
+        assert_panel4d_equal(panel4d, Panel4D(vals, dtype='float32'))
 
     def test_constructor_cast(self):
         zero_filled = self.panel4d.fillna(0)
