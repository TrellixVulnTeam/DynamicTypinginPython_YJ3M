commit dc0ae58bcf3c36d7e1634c47c3481dcdbc1bceeb
Author: Yaroslav Halchenko <debian@onerussian.com>
Date:   Tue Mar 27 14:14:05 2012 -0400

    ENH: assure elements of list are of base dict class while converting into a frame

diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index c37f9b6ab..8e4cf1269 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -4297,6 +4297,11 @@ def _list_of_dict_to_sdict(data, columns, coerce_float=False):
         gen = (x.keys() for x in data)
         columns = lib.fast_unique_multiple_list_gen(gen)
 
+    # assure that they are of the base dict class and not of derived
+    # classes
+    data = [(type(d) is dict) and d or dict(d)
+            for d in data]
+
     content = list(lib.dicts_to_array(data, list(columns)).T)
     return _convert_object_array(content, columns,
                                  coerce_float=coerce_float)
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index 79e8e7031..6aa000d68 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -1592,6 +1592,18 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
         expected = DataFrame.from_dict(sdict, orient='index')
         assert_frame_equal(result, expected)
 
+    def test_constructor_list_of_derived_dicts(self):
+        class CustomDict(dict):
+            pass
+        d = {'a': 1.5, 'b': 3}
+
+        data_custom = [CustomDict(d)]
+        data = [d]
+
+        result_custom = DataFrame(data_custom)
+        result = DataFrame(data)
+        assert_frame_equal(result, result_custom)
+
     def test_constructor_ragged(self):
         data = {'A' : randn(10),
                 'B' : randn(8)}
