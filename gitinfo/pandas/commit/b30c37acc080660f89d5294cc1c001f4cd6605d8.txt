commit b30c37acc080660f89d5294cc1c001f4cd6605d8
Author: Kevin Stone <kevinastone@gmail.com>
Date:   Thu May 2 13:54:40 2013 -0700

    Fixed Unbound Variable `edge` access when BinGrouper is empty
    
    Incorrectly accessed variable `edge` instead of pre-filled value `start`.
    
    Signed-off-by: Kevin Stone <kevinastone@gmail.com>

diff --git a/RELEASE.rst b/RELEASE.rst
index 1a86ac02b..83da3e282 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -70,6 +70,7 @@ pandas 0.11.1
     - applymap on a DataFrame with a non-unique index now works
       (removed warning) (GH2786_), and fix (GH3230_)
     - Fix to_csv to handle non-unique columns (GH3495_)
+  - Fixed bug in groupby with empty series referencing a variable before assignment. (GH3510_)
 
 .. _GH3164: https://github.com/pydata/pandas/issues/3164
 .. _GH2786: https://github.com/pydata/pandas/issues/2786
@@ -83,6 +84,7 @@ pandas 0.11.1
 .. _GH3426: https://github.com/pydata/pandas/issues/3426
 .. _GH3466: https://github.com/pydata/pandas/issues/3466
 .. _GH3038: https://github.com/pydata/pandas/issues/3038
+.. _GH3510: https://github.com/pydata/pandas/issues/3510
 .. _GH3437: https://github.com/pydata/pandas/issues/3437
 .. _GH3455: https://github.com/pydata/pandas/issues/3455
 .. _GH3457: https://github.com/pydata/pandas/issues/3457
diff --git a/pandas/core/groupby.py b/pandas/core/groupby.py
index aef44bd91..7762803b0 100644
--- a/pandas/core/groupby.py
+++ b/pandas/core/groupby.py
@@ -1012,8 +1012,8 @@ class BinGrouper(Grouper):
                 yield label, data[start:edge]
                 start = edge
 
-            if edge < len(data):
-                yield self.binlabels[-1], data[edge:]
+            if start < len(data):
+                yield self.binlabels[-1], data[start:]
         else:
             start = 0
             for edge, label in izip(self.bins, self.binlabels):
@@ -1022,8 +1022,8 @@ class BinGrouper(Grouper):
                 start = edge
 
             n = len(data.axes[axis])
-            if edge < n:
-                inds = range(edge, n)
+            if start < n:
+                inds = range(start, n)
                 yield self.binlabels[-1], data.take(inds, axis=axis)
 
     def apply(self, f, data, axis=0, keep_internal=False):
diff --git a/pandas/tests/test_groupby.py b/pandas/tests/test_groupby.py
index 0b4dbed0b..051d8c43a 100644
--- a/pandas/tests/test_groupby.py
+++ b/pandas/tests/test_groupby.py
@@ -2434,6 +2434,16 @@ class TestGroupBy(unittest.TestCase):
         # don't die
         no_toes = df_grouped.apply(lambda x: noddy(x.value, x.weight ))
 
+    def test_groupby_with_empty(self):
+        import pandas as pd
+        index = pd.DatetimeIndex(())
+        data = ()
+        series = pd.Series(data, index)
+        grouper = pd.tseries.resample.TimeGrouper('D')
+        grouped = series.groupby(grouper)
+        assert next(iter(grouped), None) is None
+
+
 def assert_fp_equal(a, b):
     assert((np.abs(a - b) < 1e-12).all())
 
