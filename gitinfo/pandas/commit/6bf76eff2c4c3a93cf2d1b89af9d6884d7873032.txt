commit 6bf76eff2c4c3a93cf2d1b89af9d6884d7873032
Author: Kevin Sheppard <bashtage@users.noreply.github.com>
Date:   Tue May 12 15:54:09 2020 +0100

    MAINT: Clarify supported Stata dta versions (#34116)
    
    Test against old Stata versions and remove text indicating support
    for versions which do not work reliably
    
    closes #26667

diff --git a/doc/source/whatsnew/v1.1.0.rst b/doc/source/whatsnew/v1.1.0.rst
index 1008faf29..8526ccb57 100644
--- a/doc/source/whatsnew/v1.1.0.rst
+++ b/doc/source/whatsnew/v1.1.0.rst
@@ -226,7 +226,8 @@ Other enhancements
 - :meth:`~pandas.core.resample.Resampler.interpolate` now supports SciPy interpolation method :class:`scipy.interpolate.CubicSpline` as method ``cubicspline`` (:issue:`33670`)
 - The ``ExtensionArray`` class has now an :meth:`~pandas.arrays.ExtensionArray.equals`
   method, similarly to :meth:`Series.equals` (:issue:`27081`).
--
+- The minimum suppported dta version has increased to 105 in :meth:`~pandas.io.stata.read_stata` and :class:`~pandas.io.stata.StataReader`  (:issue:`26667`).
+
 
 .. ---------------------------------------------------------------------------
 
diff --git a/pandas/io/stata.py b/pandas/io/stata.py
index 3ce1680c1..789e08d06 100644
--- a/pandas/io/stata.py
+++ b/pandas/io/stata.py
@@ -51,7 +51,7 @@ from pandas.io.common import get_filepath_or_buffer, stringify_path
 
 _version_error = (
     "Version of given Stata file is {version}. pandas supports importing "
-    "versions 104, 105, 108, 111 (Stata 7SE), 113 (Stata 8/9), "
+    "versions 105, 108, 111 (Stata 7SE), 113 (Stata 8/9), "
     "114 (Stata 10/11), 115 (Stata 12), 117 (Stata 13), 118 (Stata 14/15/16),"
     "and 119 (Stata 15/16, over 32,767 variables)."
 )
@@ -888,8 +888,8 @@ class StataParser:
             98: 251,  # byte
             105: 252,  # int
             108: 253,  # long
-            102: 254  # float
-            # don't know old code for double
+            102: 254,  # float
+            100: 255,  # double
         }
 
         # These missing values are the generic '.' in Stata, and are used
diff --git a/pandas/tests/io/data/stata/stata-compat-105.dta b/pandas/tests/io/data/stata/stata-compat-105.dta
new file mode 100644
index 000000000..b7092a794
Binary files /dev/null and b/pandas/tests/io/data/stata/stata-compat-105.dta differ
diff --git a/pandas/tests/io/data/stata/stata-compat-108.dta b/pandas/tests/io/data/stata/stata-compat-108.dta
new file mode 100644
index 000000000..e2e6b150e
Binary files /dev/null and b/pandas/tests/io/data/stata/stata-compat-108.dta differ
diff --git a/pandas/tests/io/data/stata/stata-compat-111.dta b/pandas/tests/io/data/stata/stata-compat-111.dta
new file mode 100644
index 000000000..30e3561d1
Binary files /dev/null and b/pandas/tests/io/data/stata/stata-compat-111.dta differ
diff --git a/pandas/tests/io/data/stata/stata-compat-113.dta b/pandas/tests/io/data/stata/stata-compat-113.dta
new file mode 100644
index 000000000..7d5ba5062
Binary files /dev/null and b/pandas/tests/io/data/stata/stata-compat-113.dta differ
diff --git a/pandas/tests/io/data/stata/stata-compat-114.dta b/pandas/tests/io/data/stata/stata-compat-114.dta
new file mode 100644
index 000000000..26b801584
Binary files /dev/null and b/pandas/tests/io/data/stata/stata-compat-114.dta differ
diff --git a/pandas/tests/io/data/stata/stata-compat-118.dta b/pandas/tests/io/data/stata/stata-compat-118.dta
new file mode 100644
index 000000000..cb4fd9b80
Binary files /dev/null and b/pandas/tests/io/data/stata/stata-compat-118.dta differ
diff --git a/pandas/tests/io/test_stata.py b/pandas/tests/io/test_stata.py
index 6839e3ed0..783e06c9b 100644
--- a/pandas/tests/io/test_stata.py
+++ b/pandas/tests/io/test_stata.py
@@ -1853,3 +1853,13 @@ the string values returned are correct."""
         with tm.ensure_clean() as path:
             with pytest.raises(ValueError, match="You must use version 119"):
                 StataWriterUTF8(path, df, version=118)
+
+
+@pytest.mark.parametrize("version", [105, 108, 111, 113, 114])
+def test_backward_compat(version, datapath):
+    data_base = datapath("io", "data", "stata")
+    ref = os.path.join(data_base, f"stata-compat-118.dta")
+    old = os.path.join(data_base, f"stata-compat-{version}.dta")
+    expected = pd.read_stata(ref)
+    old_dta = pd.read_stata(old)
+    tm.assert_frame_equal(old_dta, expected, check_dtype=False)
