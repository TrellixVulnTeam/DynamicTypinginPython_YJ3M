commit 08a4c1aeb2c13164e1d394ca58a99838eb917b2a
Author: jbrockmendel <jbrockmendel@gmail.com>
Date:   Fri Aug 2 08:59:16 2019 -0700

    BUG: DTA/TDA incorrectly accepting iNaT for setitem (#27699)

diff --git a/pandas/core/arrays/datetimelike.py b/pandas/core/arrays/datetimelike.py
index f86b307e5..47b138a9e 100644
--- a/pandas/core/arrays/datetimelike.py
+++ b/pandas/core/arrays/datetimelike.py
@@ -499,9 +499,6 @@ class DatetimeLikeArrayMixin(ExtensionOpsMixin, AttributesMixin, ExtensionArray)
             value = self._unbox_scalar(value)
         elif is_valid_nat_for_dtype(value, self.dtype):
             value = iNaT
-        elif not isna(value) and lib.is_integer(value) and value == iNaT:
-            # exclude misc e.g. object() and any NAs not allowed above
-            value = iNaT
         else:
             msg = (
                 "'value' should be a '{scalar}', 'NaT', or array of those. "
diff --git a/pandas/tests/arrays/test_datetimelike.py b/pandas/tests/arrays/test_datetimelike.py
index d9646feaf..ffda2f4de 100644
--- a/pandas/tests/arrays/test_datetimelike.py
+++ b/pandas/tests/arrays/test_datetimelike.py
@@ -682,15 +682,15 @@ def test_casting_nat_setitem_array(array, casting_nats):
     [
         (
             pd.TimedeltaIndex(["1 Day", "3 Hours", "NaT"])._data,
-            (np.datetime64("NaT", "ns"),),
+            (np.datetime64("NaT", "ns"), pd.NaT.value),
         ),
         (
             pd.date_range("2000-01-01", periods=3, freq="D")._data,
-            (np.timedelta64("NaT", "ns"),),
+            (np.timedelta64("NaT", "ns"), pd.NaT.value),
         ),
         (
             pd.period_range("2000-01-01", periods=3, freq="D")._data,
-            (np.datetime64("NaT", "ns"), np.timedelta64("NaT", "ns")),
+            (np.datetime64("NaT", "ns"), np.timedelta64("NaT", "ns"), pd.NaT.value),
         ),
     ],
     ids=lambda x: type(x).__name__,
diff --git a/pandas/tests/test_base.py b/pandas/tests/test_base.py
index d75016824..c760c75e4 100644
--- a/pandas/tests/test_base.py
+++ b/pandas/tests/test_base.py
@@ -418,7 +418,7 @@ class TestIndexOps(Ops):
                     values = o._shallow_copy(v)
                 else:
                     o = o.copy()
-                    o[0:2] = iNaT
+                    o[0:2] = pd.NaT
                     values = o._values
 
             elif needs_i8_conversion(o):
