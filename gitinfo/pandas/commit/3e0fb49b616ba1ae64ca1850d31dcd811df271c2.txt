commit 3e0fb49b616ba1ae64ca1850d31dcd811df271c2
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Thu Aug 25 20:21:32 2011 -0400

    DOC: skeleton of reorg'd docs and starting new tutorial

diff --git a/doc/source/basics.rst b/doc/source/basics.rst
new file mode 100644
index 000000000..effe14022
--- /dev/null
+++ b/doc/source/basics.rst
@@ -0,0 +1,77 @@
+.. currentmodule:: pandas
+.. _basics:
+
+*********************
+Data structure basics
+*********************
+
+This is a quick, non-comprehensive overview of the fundamental data structures
+in pandas to get you started. The fundamental behavior about data types,
+indexing, and axis labeling / alignment apply across all of the objects. To get
+started, load pandas into your namespace:
+
+.. ipython:: python
+
+   from pandas import *
+
+
+Series
+------
+
+:class:`Series` is a one-dimensional labeled array. The axis labels are
+collectively referred to as the **index**. The basic method to create a Series
+is to call:
+
+::
+
+    >>> s = Series(data, index=index)
+
+Here, **data** can be many different things:
+
+ - a Python dict
+ - an ndarray
+ - a scalar value (like 5)
+
+The passed **index** is a list of axis labels. Thus, this separates into three
+cases depending on what **data is**:
+
+**Case 1:** If **data** is an ndarray, **index** must be the same length as
+**data**. If no index is passed, one will be created having values ``[0, ...,
+len(data) - 1]``.
+
+.. ipython:: python
+
+   Series(np.random.randn(5), index=['a', 'b', 'c', 'd', 'e'])
+   Series(np.random.randn(5))
+
+**Case 2:** If **data** is a dict, if **index** is passed the values in data**
+**corresponding to the labels in the index will be pulled out. Otherwise, an
+**index will be constructed from the sorted keys of the dict, if possible.
+
+.. ipython:: python
+
+   d = {'a' : 0., 'b' : 1., 'c' : 2.}
+   Series(d)
+   Series(d, index=['b', 'c', 'd', 'a'])
+
+.. note::
+
+    NaN (not a number) is the standard missing data marker used in pandas
+
+**Case 3:** If **data** is a scalar value, an index must be provided. The value
+will be repeated to match the length of **index**
+
+.. ipython:: python
+
+   Series(5., index=['a', 'b', 'c', 'd', 'e'])
+
+DataFrame
+---------
+
+**DataFrame** is a 2-dimensional labeled data structure with columns of
+potentially different types. You can think of it like a spreadsheet or SQL
+table, or preferably a dict of Series objects. It is generally the most
+commonly used pandas object.
+
+WidePanel
+---------
diff --git a/doc/source/conform.rst b/doc/source/conform.rst
new file mode 100644
index 000000000..60d738266
--- /dev/null
+++ b/doc/source/conform.rst
@@ -0,0 +1,7 @@
+.. currentmodule:: pandas
+.. _conform:
+
+*************************
+Reindexing and conforming
+*************************
+
diff --git a/doc/source/dataframe.rst b/doc/source/dataframe.rst
index 6e60fcd8e..9695a9eb0 100644
--- a/doc/source/dataframe.rst
+++ b/doc/source/dataframe.rst
@@ -11,10 +11,9 @@ collection of identically-indexed Series objects. It supports columns having
 different types, so you can use it to store and manipulate floating point,
 integer, boolean, and arbitrary Python object data.
 
-For many users, DataFrame will be the most commonly used object in pandas, as it
-can serve as the primary container for a full data set of interest. As we will
-see below, it enables operations involving multiple time series or cross
-sections with ease.
+.. note::
+
+    DataFrame is the most commonly used object for most pandas users.
 
 .. class:: DataFrame
 
@@ -31,7 +30,10 @@ sections with ease.
            Explicit set of columns to include, defaults to range(N) if not input
 
        **dtype** : Python type alias or :class:`~numpy.dtype`
-           Type to *attempt* to cast data to
+           Data type to force, otherwise infer
+
+       **copy** : boolean, default False
+	       Copy data from inputs. Only affects DataFrame / 2d ndarray input
 
 Basics
 ------
@@ -93,7 +95,7 @@ Indexing basics
 .. seealso::
 
     :ref:`Indexing (main documentation) <indexing>` for a more complete
-	 catalogue of the indexing facilities of DataFrame
+     catalogue of the indexing facilities of DataFrame
 
 Column access
 ~~~~~~~~~~~~~
@@ -205,8 +207,8 @@ as with Series objects. The addition is the matching of column names
 between DataFrame objects or Series. We will detail how the
 interactions work in each case.
 
-DataFrame {+,-,*,/} DataFrame
-~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+Binary operation between DataFrame and DataFrame
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 
 When combining two DataFrames, both index and column values must match
 for two values to be combined. If there is no match for a particular
@@ -237,8 +239,8 @@ result but are all NaN. An argument could be made to exclude these
 columns, but it is very frequently meaningful to know that there was
 no overlap in a particular portion of the data set.
 
-DataFrame {+,-,*,/} Series
-~~~~~~~~~~~~~~~~~~~~~~~~~~
+Binary operation between DataFrame and Series
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 
 The choice of behavior between DataFrame and Series was somewhat
 arbitrary. Since the **columns** of the DataFrame are viewed as its
@@ -256,56 +258,30 @@ collection of TimeSeries. Since this is so common, the DataFrame will
 inspect the input Series and its own index to see if this is what the
 user intended.
 
-::
+.. ipython:: python
 
-    >>> df - df['A']
-               A              B              C
-    2009-01-30 00:00:00    0              -0.156567      2.63116
-    2009-02-27 00:00:00    0              0.360951       2.16298
-    2009-03-31 00:00:00    0              -0.0806571     0.10707
-    2009-04-30 00:00:00    0              -0.162378      -0.268067
-    2009-05-29 00:00:00    0              -1.2912        0.649993
-    2009-06-30 00:00:00    0              -1.14434       -1.4387
-    2009-07-31 00:00:00    0              -2.65166       -0.666625
-    2009-08-31 00:00:00    0              -1.11726       -2.29534
-    2009-09-30 00:00:00    0              0.449089       0.633559
-    2009-10-30 00:00:00    0              -0.476541      -0.597042
-    2009-11-30 00:00:00    0              -0.516716      -0.751916
+    df - df['A']
 
 Note that the same result could have been obtained by writing:
 
-::
+.. ipython:: python
 
-    >>> (df.T - df['A']).T
+    (df.T - df['A']).T
 
 but this is fairly awkward (and relatively high cost due to two
 transpose operations).
 
-DataFrame {+,-,*,/} scalar
-~~~~~~~~~~~~~~~~~~~~~~~~~~
+Binary operation with scalar value
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 
 Scalar operations work just as expected:
 
-::
+.. ipython:: python
 
-    >>> df * 5 + 2
-               A              B              C
-    2009-01-30 00:00:00    1.13256        0.349729       14.2884
-    2009-02-27 00:00:00    -6.52587       -4.72111       4.28905
-    2009-03-31 00:00:00    4.58976        4.18647        5.12511
-    2009-04-30 00:00:00    7.69571        6.88382        6.35537
-    2009-05-29 00:00:00    0.683756       -5.77223       3.93372
-    2009-06-30 00:00:00    6.97108        1.2494         -0.222412
-    2009-07-31 00:00:00    9.5632         -3.69508       6.23008
-    2009-08-31 00:00:00    3.61902        -1.96728       -7.85768
-    2009-09-30 00:00:00    1.77497        4.02042        4.94277
-    2009-10-30 00:00:00    3.34491        0.962201       0.359695
-    2009-11-30 00:00:00    4.35857        1.77499        0.59899
-
-    >>> 1 / df
-    ...
-    >>> df ** 4
-    ...
+    df = df[:5]
+    df * 5 + 2
+    1 / df
+    df ** 4
 
 Basic statistical functions
 ---------------------------
@@ -323,7 +299,7 @@ addition that the aggregation can be over either axis of the
 DataFrame. By default the statistic will be computed for each column
 (axis 0):
 
-::
+.. ipython:: python
 
     >>> df
                A              B              C              D
diff --git a/doc/source/faq.rst b/doc/source/faq.rst
new file mode 100644
index 000000000..73dac2557
--- /dev/null
+++ b/doc/source/faq.rst
@@ -0,0 +1,7 @@
+.. currentmodule:: pandas
+.. _faq:
+
+********************************
+Frequently Asked Questions (FAQ)
+********************************
+
diff --git a/doc/source/groupby.rst b/doc/source/groupby.rst
index 511ec58ce..e2a55fb29 100644
--- a/doc/source/groupby.rst
+++ b/doc/source/groupby.rst
@@ -1,9 +1,10 @@
 .. currentmodule:: pandas
 .. _groupby:
 
-==================
-GroupBy operations
-==================
+*****************************
+Group by: split-apply-combine
+*****************************
+
 
 When we talk about *group by* operations, we are referring to performing
 operations on subsets of a data structure determined by some group membership
diff --git a/doc/source/index.rst b/doc/source/index.rst
index 2ded7c4d6..fd22fd119 100755
--- a/doc/source/index.rst
+++ b/doc/source/index.rst
@@ -114,12 +114,15 @@ Library documentation
 
     install
     overview
-    core
+    basics
     indexing
+    conform
     groupby
+    merging
+    reshaping
+    timeseries
     datetools
     stats
-    r_interface
     io
 
 Other topics of interest
@@ -128,10 +131,10 @@ Other topics of interest
 .. toctree::
     :maxdepth: 2
 
-    examples
-    r_guide
+    r_interface
     missing_data
     related
+    faq
 
 Indices and tables
 ------------------
diff --git a/doc/source/indexing.rst b/doc/source/indexing.rst
index 6d19b39a5..34d51dd93 100644
--- a/doc/source/indexing.rst
+++ b/doc/source/indexing.rst
@@ -2,6 +2,10 @@
 
 .. currentmodule:: pandas
 
+**********************
+Indexing and selection
+**********************
+
 Basics
 ------
 
diff --git a/doc/source/io.rst b/doc/source/io.rst
index 8aaaf2460..b12263d34 100644
--- a/doc/source/io.rst
+++ b/doc/source/io.rst
@@ -2,9 +2,9 @@
 
 .. currentmodule:: pandas
 
-********************
-Input / Output Tools
-********************
+**************************
+IO Tools (Text, HDF5, ...)
+**************************
 
 HDF5 (PyTables)
 ---------------
diff --git a/doc/source/merging.rst b/doc/source/merging.rst
new file mode 100644
index 000000000..74c103ad3
--- /dev/null
+++ b/doc/source/merging.rst
@@ -0,0 +1,7 @@
+.. currentmodule:: pandas
+.. _merging:
+
+***************************
+Merging / Joining data sets
+***************************
+
diff --git a/doc/source/reshaping.rst b/doc/source/reshaping.rst
new file mode 100644
index 000000000..07d4c0785
--- /dev/null
+++ b/doc/source/reshaping.rst
@@ -0,0 +1,8 @@
+.. currentmodule:: pandas
+.. _reshaping:
+
+***************************
+Pivoting and reshaping data
+***************************
+
+
diff --git a/doc/source/series.rst b/doc/source/series.rst
index 20e804003..3e5fb6b64 100644
--- a/doc/source/series.rst
+++ b/doc/source/series.rst
@@ -1,11 +1,10 @@
+.. currentmodule:: pandas
 .. _series:
 
 *******************
 Series / TimeSeries
 *******************
 
-.. currentmodule:: pandas
-
 :class:`Series` is a NumPy ndarray subclass which contains a vector
 of labels corresponding to the data values. The labels, which will be
 referred to everywhere as the **index**, can be any Python object;
@@ -22,7 +21,7 @@ NumPy-based functions expecting one-dimensional ndarrays.
    1-dimensional data.
 
    :Parameters:
-       **data** : {array_like, dict}
+       **data** : {array_like, dict, scalar value}
            Data to store in the array. Any data that is valid for
            constructing a 1-D :class:`~numpy.ndarray` can be used
            here.
@@ -36,13 +35,6 @@ NumPy-based functions expecting one-dimensional ndarrays.
        **index** : {array_like}
            Sequence of labels for input data.
 
-   .. seealso::
-       :func:`Series.fromValue`
-
-.. note::
-
-    The basic concepts presented here apply to the higher dimensional
-    data structures in pandas as well
 
 Construction
 ------------
diff --git a/doc/source/timeseries.rst b/doc/source/timeseries.rst
new file mode 100644
index 000000000..eb045f710
--- /dev/null
+++ b/doc/source/timeseries.rst
@@ -0,0 +1,9 @@
+.. currentmodule:: pandas
+.. _timeseries:
+
+********************************
+Time Series / Date functionality
+********************************
+
+
+
