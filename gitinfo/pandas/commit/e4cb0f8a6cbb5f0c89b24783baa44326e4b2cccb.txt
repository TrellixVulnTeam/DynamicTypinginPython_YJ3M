commit e4cb0f8a6cbb5f0c89b24783baa44326e4b2cccb
Author: Tiago Antao <tiagoantao@gmail.com>
Date:   Sun Nov 30 13:38:37 2014 +0000

    Applying max_colwidth to the DataFrame index (#7856)
    
    justification to comply with tests

diff --git a/doc/source/whatsnew/v0.16.1.txt b/doc/source/whatsnew/v0.16.1.txt
index b99f3e2cd..524c3a81f 100755
--- a/doc/source/whatsnew/v0.16.1.txt
+++ b/doc/source/whatsnew/v0.16.1.txt
@@ -190,6 +190,7 @@ Bug Fixes
 - Bug in ``read_sql_table`` error when reading postgres table with timezone (:issue:`7139`)
 - Bug in ``DataFrame`` slicing may not retain metadata (:issue:`9776`)
 - Bug where ``TimdeltaIndex`` were not properly serialized in fixed ``HDFStore`` (:issue:`9635`)
+- Bug in ``DataFrameFormatter._get_formatted_index`` with not applying ``max_colwidth`` to the ``DataFrame`` index (:issue:`7856`)
 
 - Bug in ``groupby.apply()`` that would raise if a passed user defined function either returned only ``None`` (for all input). (:issue:`9685`)
 
diff --git a/pandas/core/format.py b/pandas/core/format.py
index 6e632e6ea..3ab41ded1 100644
--- a/pandas/core/format.py
+++ b/pandas/core/format.py
@@ -776,6 +776,9 @@ class DataFrameFormatter(TableFormatter):
                                      formatter=fmt)
         else:
             fmt_index = [index.format(name=show_index_names, formatter=fmt)]
+        fmt_index = [tuple(_make_fixed_width(
+            list(x), justify='left', minimum=(self.col_space or 0)))
+            for x in fmt_index]
 
         adjoined = adjoin(1, *fmt_index).split('\n')
 
diff --git a/pandas/tests/test_format.py b/pandas/tests/test_format.py
index b557594e8..f0afef71b 100644
--- a/pandas/tests/test_format.py
+++ b/pandas/tests/test_format.py
@@ -298,6 +298,21 @@ class TestDataFrameFormatting(tm.TestCase):
                 com.pprint_thing(df._repr_fits_horizontal_())
                 self.assertTrue(has_expanded_repr(df))
 
+    def test_str_max_colwidth(self):
+        # GH 7856
+        df = pd.DataFrame([{'a': 'foo', 'b': 'bar',
+                            'c': 'uncomfortably long line with lots of stuff',
+                            'd': 1},
+                           {'a': 'foo', 'b': 'bar', 'c': 'stuff', 'd': 1}])
+        df.set_index(['a', 'b', 'c'])
+        self.assertTrue(str(df) == '     a    b                                           c  d\n'
+                                   '0  foo  bar  uncomfortably long line with lots of stuff  1\n'
+                                   '1  foo  bar                                       stuff  1')
+        with option_context('max_colwidth', 20):
+            self.assertTrue(str(df) == '     a    b                    c  d\n'
+                                       '0  foo  bar  uncomfortably lo...  1\n'
+                                       '1  foo  bar                stuff  1')
+
     def test_auto_detect(self):
         term_width, term_height = get_terminal_size()
         fac = 1.05  # Arbitrary large factor to exceed term widht
