commit e3ef17af82a602598c29a3635fd0a890d95541d3
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Fri Apr 20 14:02:52 2012 -0400

    BUG: treat empty string as NaT in to_datetime, close #1085

diff --git a/pandas/core/datetools.py b/pandas/core/datetools.py
index f85e907a9..0545bbc8a 100644
--- a/pandas/core/datetools.py
+++ b/pandas/core/datetools.py
@@ -98,6 +98,8 @@ def to_datetime(arg, errors='ignore', dayfirst=False):
                                       dayfirst=dayfirst)
 
     try:
+        if not arg:
+            return arg
         return parser.parse(arg, dayfirst=dayfirst)
     except Exception:
         if errors == 'raise':
diff --git a/pandas/src/datetime.pyx b/pandas/src/datetime.pyx
index 3abb2c0a4..297743d93 100644
--- a/pandas/src/datetime.pyx
+++ b/pandas/src/datetime.pyx
@@ -633,6 +633,9 @@ def string_to_datetime(ndarray[object] strings, raise_=False, dayfirst=False):
             elif PyDateTime_Check(val):
                 result[i] = val
             else:
+                if len(val) == 0:
+                    result[i] = NaT
+                    continue
                 try:
                     result[i] = parse(val, dayfirst=dayfirst)
                 except Exception:
@@ -646,6 +649,9 @@ def string_to_datetime(ndarray[object] strings, raise_=False, dayfirst=False):
             if util._checknull(val):
                 oresult[i] = val
             else:
+                if len(val) == 0:
+                    oresult[i] = NaT
+                    continue
                 try:
                     oresult[i] = parse(val, dayfirst=dayfirst)
                 except Exception:
diff --git a/pandas/tests/test_timeseries.py b/pandas/tests/test_timeseries.py
index d34870876..5651ad559 100644
--- a/pandas/tests/test_timeseries.py
+++ b/pandas/tests/test_timeseries.py
@@ -335,7 +335,6 @@ class TestTimeSeries(unittest.TestCase):
         # GH #999, #858
 
         from dateutil.parser import parse
-        from pandas.core.datetools import to_datetime
 
         strings = np.array(['1/1/2000', '1/2/2000', np.nan,
                             '1/4/2000, 12:34:56'], dtype=object)
@@ -384,6 +383,13 @@ class TestTimeSeries(unittest.TestCase):
         assert_series_equal(dresult, expected)
         self.assertEquals(dresult.name, 'foo')
 
+    def test_to_datetime_empty_string(self):
+        result = to_datetime('')
+        self.assert_(result == '')
+
+        result = to_datetime(['', ''])
+        self.assert_(isnull(result).all())
+
     def test_index_to_datetime(self):
         idx = Index(['1/1/2000', '1/2/2000', '1/3/2000'])
 
