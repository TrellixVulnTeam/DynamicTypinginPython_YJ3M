commit 346b34f0cbde2a0bf1a802dc7bc71be6d786fd93
Author: Thomas Kluyver <takowl@gmail.com>
Date:   Thu Apr 19 23:38:22 2012 +0100

    Fixes for passing characters to skts_resample in Python 3

diff --git a/pandas/core/index.py b/pandas/core/index.py
index f9f4f4607..727bafe9a 100644
--- a/pandas/core/index.py
+++ b/pandas/core/index.py
@@ -8,6 +8,7 @@ import weakref
 import numpy as np
 
 from pandas.util.decorators import cache_readonly
+from pandas.util import py3compat
 import pandas.core.common as com
 import pandas._tseries as lib
 import pandas._engines as _gin
diff --git a/pandas/src/datetime.pyx b/pandas/src/datetime.pyx
index a695a7521..05c946973 100644
--- a/pandas/src/datetime.pyx
+++ b/pandas/src/datetime.pyx
@@ -1056,7 +1056,7 @@ def periodarr_to_dt64arr(ndarray[int64_t] periodarr, int base, long mult):
     return out
 
 cpdef long period_asfreq(long period_ordinal, int base1, long mult1,
-                           int base2, long mult2, object relation='E'):
+                           int base2, long mult2, object relation=b'E'):
     """
     Convert period ordinal from one frequency to another, and if upsampling,
     choose to use start ('S') or end ('E') of period.
@@ -1064,12 +1064,12 @@ cpdef long period_asfreq(long period_ordinal, int base1, long mult1,
     cdef:
         long retval
 
-    if relation not in ('S', 'E'):
+    if relation not in (b'S', b'E'):
         raise ValueError('relation argument must be one of S or E')
 
     period_ordinal = remove_mult(period_ordinal, mult1)
 
-    if mult1 != 1 and relation == 'E':
+    if mult1 != 1 and relation == b'E':
         period_ordinal += (mult1 - 1)
 
     retval = asfreq(period_ordinal, base1, base2, (<char*>relation)[0])
@@ -1078,7 +1078,7 @@ cpdef long period_asfreq(long period_ordinal, int base1, long mult1,
     return retval
 
 def period_asfreq_arr(ndarray[int64_t] arr, int base1, long mult1, int base2,
-                        long mult2, object relation='E'):
+                        long mult2, object relation=b'E'):
     """
     Convert int64-array of period ordinals from one frequency to another, and if
     upsampling, choose to use start ('S') or end ('E') of period.
@@ -1087,7 +1087,7 @@ def period_asfreq_arr(ndarray[int64_t] arr, int base1, long mult1, int base2,
         ndarray[int64_t] new_arr
         Py_ssize_t i, sz
 
-    if relation not in ('S', 'E'):
+    if relation not in (b'S', b'E'):
         raise ValueError('relation argument must be one of S or E')
 
     sz = len(arr)
diff --git a/pandas/tseries/period.py b/pandas/tseries/period.py
index 516024c2b..76d22d601 100644
--- a/pandas/tseries/period.py
+++ b/pandas/tseries/period.py
@@ -8,6 +8,7 @@ import pandas.tseries.frequencies as _freq_mod
 
 import pandas.core.common as com
 import pandas.core.datetools as datetools
+from pandas.util import py3compat
 
 from pandas._tseries import Timestamp
 import pandas._tseries as lib
@@ -164,7 +165,7 @@ class Period(object):
         base2, mult2 = _gfc(freq)
 
         new_ordinal = lib.period_asfreq(self.ordinal, base1, mult1,
-                                        base2, mult2, how)
+                                        base2, mult2, py3compat.str_to_bytes(how))
 
         return Period(new_ordinal, (base2, mult2))
 
@@ -579,7 +580,7 @@ class PeriodIndex(Int64Index):
                     base1, mult1 = _gfc(data.freq)
                     base2, mult2 = _gfc(freq)
                     data = lib.period_asfreq_arr(data.values, base1, mult1,
-                                                 base2, mult2, 'E')
+                                                 base2, mult2, b'E')
             else:
                 if freq is None:
                     raise ValueError('freq cannot be none')
@@ -619,7 +620,7 @@ class PeriodIndex(Int64Index):
 
         new_data = lib.period_asfreq_arr(self.values,
                                          base1, mult1,
-                                         base2, mult2, how)
+                                         base2, mult2, py3compat.str_to_bytes(how))
 
         return PeriodIndex(new_data, freq=freq)
 
diff --git a/pandas/util/py3compat.py b/pandas/util/py3compat.py
index afb48ef41..ddae56a09 100644
--- a/pandas/util/py3compat.py
+++ b/pandas/util/py3compat.py
@@ -5,6 +5,9 @@ PY3 = (sys.version_info[0] >= 3)
 if PY3:
     def isidentifier(s):
         return s.isidentifier()
+        
+    def str_to_bytes(s, encoding='ascii'):
+        return s.encode(encoding)
 
 else:
     # Python 2
@@ -12,3 +15,6 @@ else:
     _name_re = re.compile(r"[a-zA-Z_][a-zA-Z0-9_]*$")
     def isidentifier(s, dotted=False):
         return bool(_name_re.match(s))
+    
+    def str_to_bytes(s, encoding='ascii'):
+        return s
