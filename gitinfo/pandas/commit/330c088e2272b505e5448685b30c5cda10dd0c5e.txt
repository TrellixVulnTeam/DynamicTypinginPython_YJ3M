commit 330c088e2272b505e5448685b30c5cda10dd0c5e
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Mon Mar 19 22:28:26 2012 -0400

    ENH: raise TypeError when comparing numeric frame values with non-numeric value, close #943

diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 2df82e11c..ff8e32a50 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -2601,8 +2601,13 @@ class DataFrame(NDFrame):
     def _combine_const(self, other, func):
         if not self:
             return self
+        result_values = func(self.values, other)
 
-        return self._constructor(func(self.values, other), index=self.index,
+        if not isinstance(result_values, np.ndarray):
+            raise TypeError('Could not compare %s with DataFrame values'
+                            % repr(other))
+
+        return self._constructor(result_values, index=self.index,
                                  columns=self.columns, copy=False)
 
     def _compare_frame(self, other, func):
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index 1ca6c5feb..79e8e7031 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -2110,6 +2110,12 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
 
         _check_unary_op(operator.neg)
 
+    def test_logical_typeerror(self):
+        self.assertRaises(TypeError, self.frame.__eq__, 'foo')
+        self.assertRaises(TypeError, self.frame.__lt__, 'foo')
+        self.assertRaises(TypeError, self.frame.__gt__, 'foo')
+        self.assertRaises(TypeError, self.frame.__ne__, 'foo')
+
     def test_neg(self):
         # what to do?
         assert_frame_equal(-self.frame, -1 * self.frame)
@@ -2518,7 +2524,7 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
             reader = ExcelFile(path)
             recons = reader.parse('test1').astype(np.int64)
             assert_frame_equal(frame, recons)
-            
+
             #Test reading/writing np.bool8, roundtrip only works for xlsx
             frame = (DataFrame(np.random.randn(10,2)) >= 0)
             frame.to_excel(path,'test1')
@@ -2552,7 +2558,7 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
         recons = reader.parse('test1')
         assert_frame_equal(self.tsframe, recons)
         os.remove(path)
-            
+
         #Test roundtrip np.bool8, does not seem to work for xls
         path = '__tmp__.xlsx'
         frame = (DataFrame(np.random.randn(10,2)) >= 0)
