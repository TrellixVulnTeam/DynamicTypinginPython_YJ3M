commit 52c22b23a617148d229f946ce8301d1fc68c3ec4
Author: jbrockmendel <jbrockmendel@gmail.com>
Date:   Sat Jan 18 11:39:00 2020 -0800

    REF/CLN: Index.get_value wrapping incorrectly (#31125)

diff --git a/pandas/core/indexes/base.py b/pandas/core/indexes/base.py
index a630938af..5ce2b06ed 100644
--- a/pandas/core/indexes/base.py
+++ b/pandas/core/indexes/base.py
@@ -4639,7 +4639,8 @@ class Index(IndexOpsMixin, PandasObject):
 
         k = self._convert_scalar_indexer(key, kind="getitem")
         try:
-            return self._engine.get_value(s, k, tz=getattr(series.dtype, "tz", None))
+            loc = self._engine.get_loc(k)
+
         except KeyError as e1:
             if len(self) > 0 and (self.holds_integer() or self.is_boolean()):
                 raise
@@ -4648,19 +4649,17 @@ class Index(IndexOpsMixin, PandasObject):
                 return libindex.get_value_at(s, key)
             except IndexError:
                 raise
-            except TypeError:
-                # generator/iterator-like
-                if is_iterator(key):
-                    raise InvalidIndexError(key)
-                else:
-                    raise e1
             except Exception:
                 raise e1
         except TypeError:
             # e.g. "[False] is an invalid key"
-            if is_scalar(key):
-                raise IndexError(key)
-            raise InvalidIndexError(key)
+            raise IndexError(key)
+
+        else:
+            if is_scalar(loc):
+                tz = getattr(series.dtype, "tz", None)
+                return libindex.get_value_at(s, loc, tz=tz)
+            return series.iloc[loc]
 
     def set_value(self, arr, key, value):
         """
diff --git a/pandas/core/series.py b/pandas/core/series.py
index ec9475c6d..580e37451 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -815,18 +815,6 @@ class Series(base.IndexOpsMixin, generic.NDFrame):
         try:
             result = self.index.get_value(self, key)
 
-            if not is_scalar(result):
-                if is_list_like(result) and not isinstance(result, Series):
-
-                    # we need to box if loc of the key isn't scalar here
-                    # otherwise have inline ndarray/lists
-                    try:
-                        if not is_scalar(self.index.get_loc(key)):
-                            result = self._constructor(
-                                result, index=[key] * len(result), dtype=self.dtype
-                            ).__finalize__(self)
-                    except KeyError:
-                        pass
             return result
         except InvalidIndexError:
             pass
