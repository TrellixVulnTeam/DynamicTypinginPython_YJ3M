commit 9414a8e97f27025ae59499a0d4752962e554d7ec
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Mon May 30 00:09:38 2011 +0100

    fixed breaking unit test due to slicing int labels

diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 2b6cf87a6..586fc3fd6 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -2463,7 +2463,7 @@ def _slice_axis(frame, slice_obj, axis=0):
     axis_name = DataFrame._get_axis_name(axis)
 
     labels = getattr(frame, axis_name)
-    if _is_label_slice(slice_obj):
+    if _is_label_slice(labels, slice_obj):
         i, j = labels.slice_locs(slice_obj.start, slice_obj.stop)
         new_labels = labels[i:j]
     else:
@@ -2474,8 +2474,12 @@ def _slice_axis(frame, slice_obj, axis=0):
 def _is_list_like(obj):
     return isinstance(obj, (list, np.ndarray))
 
-def _is_label_slice(obj):
-    crit = lambda x: isinstance(x, int) or x is None
+def _is_label_slice(labels, obj):
+    def crit(x):
+        if x in labels:
+            return False
+        else:
+            return isinstance(x, int) or x is None
     return not crit(obj.start) or not crit(obj.stop)
 
 def _need_slice(obj):
diff --git a/pandas/core/series.py b/pandas/core/series.py
index 5e9ffd88b..6925f845f 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -847,12 +847,12 @@ class Series(np.ndarray, Picklable, Groupable):
 
     applymap = apply
 
-    def reindex(self, new_index, method=None, fillMethod=None):
+    def reindex(self, index=None, method=None, fillMethod=None):
         """Conform Series to new Index
 
         Parameters
         ----------
-        new_index :   array-like
+        index : array-like
             Preferably an Index object (to avoid duplicating data)
         method : {'backfill', 'pad', None}
             Method to use for filling holes in reindexed Series
@@ -870,14 +870,14 @@ class Series(np.ndarray, Picklable, Groupable):
 
             method = fillMethod
 
-        if self.index.equals(new_index):
+        if self.index.equals(index):
             return self.copy()
 
-        new_index = _ensure_index(new_index)
+        index = _ensure_index(index)
         if len(self.index) == 0:
-            return Series(NaN, index=new_index)
+            return Series(NaN, index=index)
 
-        fill_vec, mask = self.index.get_indexer(new_index, method=method)
+        fill_vec, mask = self.index.get_indexer(index, method=method)
         new_values = self.values.take(fill_vec)
 
         notmask = -mask
@@ -889,7 +889,7 @@ class Series(np.ndarray, Picklable, Groupable):
 
             np.putmask(new_values, notmask, NaN)
 
-        return Series(new_values, index=new_index)
+        return Series(new_values, index=index)
 
     def reindex_like(self, other, method=None):
         """
