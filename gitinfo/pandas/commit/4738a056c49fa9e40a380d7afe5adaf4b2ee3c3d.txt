commit 4738a056c49fa9e40a380d7afe5adaf4b2ee3c3d
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Sun Nov 13 00:16:29 2011 -0500

    TST: misc test coverage

diff --git a/pandas/core/datetools.py b/pandas/core/datetools.py
index 670b3d9e4..f02939b3f 100644
--- a/pandas/core/datetools.py
+++ b/pandas/core/datetools.py
@@ -291,8 +291,8 @@ class MonthEnd(DateOffset, CacheableOffset):
 
     def apply(self, other):
         n = self.n
-        _, nDaysInMonth = calendar.monthrange(other.year, other.month)
-        if other.day != nDaysInMonth:
+        _, days_in_month = calendar.monthrange(other.year, other.month)
+        if other.day != days_in_month:
             other = other + relativedelta(months=-1, day=31)
             if n <= 0:
                 n = n + 1
@@ -301,9 +301,9 @@ class MonthEnd(DateOffset, CacheableOffset):
 
     @classmethod
     def onOffset(cls, someDate):
-        __junk, nDaysInMonth = calendar.monthrange(someDate.year,
+        __junk, days_in_month = calendar.monthrange(someDate.year,
                                                    someDate.month)
-        return someDate.day == nDaysInMonth
+        return someDate.day == days_in_month
 
 class BMonthEnd(DateOffset, CacheableOffset):
     """DateOffset increments between business EOM dates"""
@@ -316,8 +316,8 @@ class BMonthEnd(DateOffset, CacheableOffset):
     def apply(self, other):
         n = self.n
 
-        wkday, nDaysInMonth = calendar.monthrange(other.year, other.month)
-        lastBDay = nDaysInMonth - max(((wkday + nDaysInMonth - 1) % 7) - 4, 0)
+        wkday, days_in_month = calendar.monthrange(other.year, other.month)
+        lastBDay = days_in_month - max(((wkday + days_in_month - 1) % 7) - 4, 0)
 
         if n > 0 and not other.day >= lastBDay:
             n = n - 1
@@ -476,8 +476,8 @@ class BQuarterEnd(DateOffset, CacheableOffset):
     def apply(self, other):
         n = self.n
 
-        wkday, nDaysInMonth = calendar.monthrange(other.year, other.month)
-        lastBDay = nDaysInMonth - max(((wkday + nDaysInMonth - 1) % 7) - 4, 0)
+        wkday, days_in_month = calendar.monthrange(other.year, other.month)
+        lastBDay = days_in_month - max(((wkday + days_in_month - 1) % 7) - 4, 0)
 
         monthsToGo = 3 - ((other.month - self.startingMonth) % 3)
         if monthsToGo == 3:
@@ -525,16 +525,14 @@ class QuarterEnd(DateOffset, CacheableOffset):
     def apply(self, other):
         n = self.n
 
-        wkday, nDaysInMonth = calendar.monthrange(other.year, other.month)
+        wkday, days_in_month = calendar.monthrange(other.year, other.month)
 
         monthsToGo = 3 - ((other.month - self.startingMonth) % 3)
         if monthsToGo == 3:
             monthsToGo = 0
 
-        if n > 0 and not (other.day >= nDaysInMonth and monthsToGo == 0):
+        if n > 0 and not (other.day >= days_in_month and monthsToGo == 0):
             n = n - 1
-        elif n <= 0 and other.day > nDaysInMonth and monthsToGo == 0:
-            n = n + 1
 
         other = other + relativedelta(months=monthsToGo + 3*n, day=31)
 
@@ -563,8 +561,9 @@ class BYearEnd(DateOffset, CacheableOffset):
         if self._normalizeFirst:
             other = normalize_date(other)
 
-        wkday, nDaysInMonth = calendar.monthrange(other.year, self.month)
-        lastBDay = nDaysInMonth - max(((wkday + nDaysInMonth - 1) % 7) - 4, 0)
+        wkday, days_in_month = calendar.monthrange(other.year, self.month)
+        lastBDay = (days_in_month -
+                    max(((wkday + days_in_month - 1) % 7) - 4, 0))
 
         years = n
         if n > 0:
diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index e4e071816..b437c2f55 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -2974,7 +2974,7 @@ class DataFrame(NDFrame):
         # try to make things prettier
         try:
             fig.autofmt_xdate()
-        except Exception:
+        except Exception:  # pragma: no cover
             pass
 
         if legend and not subplots:
diff --git a/pandas/core/groupby.py b/pandas/core/groupby.py
index 40d01cc6b..5c986b007 100644
--- a/pandas/core/groupby.py
+++ b/pandas/core/groupby.py
@@ -385,8 +385,6 @@ class GroupBy(object):
                 if isinstance(subgen, PandasObject):
                     size = subgen.shape[shape_axis]
                     ctchunk[i] = size
-                    if size == 0:
-                        continue
                     reschunk[i] = func(subgen, *args, **kwargs)
                 else:
                     _doit(reschunk[i], ctchunk[i], subgen,
diff --git a/pandas/core/index.py b/pandas/core/index.py
index 8abc837e0..041f523bc 100644
--- a/pandas/core/index.py
+++ b/pandas/core/index.py
@@ -920,12 +920,6 @@ class MultiIndex(Index):
         labels = self.labels[level]
         return unique_vals.take(labels)
 
-    def __contains__(self, key):
-        try:
-            return key in self.indexMap
-        except Exception:
-            return False
-
     def format(self, space=2, sparsify=True, adjoin=True, names=False):
         if len(self) == 0:
             return []
@@ -1392,9 +1386,6 @@ class MultiIndex(Index):
                 j = labels.searchsorted(loc, side='right')
                 return slice(i, j)
 
-    def _get_label_key(self, tup):
-        return tuple(lev.get_loc(v) for lev, v in zip(self.levels, tup))
-
     def truncate(self, before=None, after=None):
         """
         Slice index between two labels / tuples, return new MultiIndex
diff --git a/pandas/core/internals.py b/pandas/core/internals.py
index ca5a3c51c..49ff93f06 100644
--- a/pandas/core/internals.py
+++ b/pandas/core/internals.py
@@ -560,9 +560,6 @@ class BlockManager(object):
             # insert at end
             self.insert(len(self.items), item, value)
 
-    def set_scalar(self, tup, value):
-        pass
-
     def insert(self, loc, item, value):
         if item in self.items:
             raise Exception('cannot insert %s, already exists' % item)
diff --git a/pandas/core/reshape.py b/pandas/core/reshape.py
index e37539d87..65e3bbf8e 100644
--- a/pandas/core/reshape.py
+++ b/pandas/core/reshape.py
@@ -430,15 +430,15 @@ def melt(frame, id_vars=None, value_vars=None):
     mdata = {}
 
     if id_vars is not None:
-        idvars = list(idvars)
+        id_vars = list(id_vars)
         frame = frame.copy()
-        K -= len(idvars)
-        for col in idvars:
+        K -= len(id_vars)
+        for col in id_vars:
             mdata[col] = np.tile(frame.pop(col).values, K)
     else:
-        idvars = []
+        id_vars = []
 
-    mcolumns = idvars + ['variable', 'value']
+    mcolumns = id_vars + ['variable', 'value']
 
     mdata['value'] = frame.values.ravel('F')
     mdata['variable'] = np.asarray(frame.columns).repeat(N)
diff --git a/pandas/tests/test_daterange.py b/pandas/tests/test_daterange.py
index 073f0d7ff..2857f8b5a 100644
--- a/pandas/tests/test_daterange.py
+++ b/pandas/tests/test_daterange.py
@@ -303,6 +303,9 @@ class TestDateRange(unittest.TestCase):
         self.assertRaises(ValueError, DateRange, badly_formed_date,
                           badly_formed_date)
 
+    def test_equals(self):
+        self.assertFalse(self.rng.equals(list(self.rng)))
+
 def _skip_if_no_pytz():
     try:
         import pytz
diff --git a/pandas/tests/test_datetools.py b/pandas/tests/test_datetools.py
index a1530497b..38673fef3 100644
--- a/pandas/tests/test_datetools.py
+++ b/pandas/tests/test_datetools.py
@@ -582,7 +582,8 @@ class TestQuarterEnd(unittest.TestCase):
                        datetime(2008, 3, 15): datetime(2008, 1, 31),
                        datetime(2008, 3, 31): datetime(2008, 1, 31),
                        datetime(2008, 4, 15): datetime(2008, 1, 31),
-                       datetime(2008, 4, 30): datetime(2008, 1, 31),}))
+                       datetime(2008, 4, 30): datetime(2008, 1, 31),
+                       datetime(2008, 7, 1): datetime(2008, 4, 30)}))
 
         tests.append((QuarterEnd(startingMonth=1, n=2),
                       {datetime(2008, 1, 31): datetime(2008, 7, 31),
@@ -826,42 +827,6 @@ class TestYearEnd(unittest.TestCase):
         for offset, date, expected in tests:
             assertOnOffset(offset, date, expected)
 
-def testOnOffset():
-
-    tests = [#(QuarterEnd(1, startingMonth=1), datetime(2008, 1, 31), True),
-             #(QuarterEnd(1, startingMonth=1), datetime(2007, 12, 31), False),
-             #(QuarterEnd(1, startingMonth=1), datetime(2008, 2, 29), False),
-             #(QuarterEnd(1, startingMonth=3), datetime(2007, 3, 30), False),
-             #(QuarterEnd(1, startingMonth=3), datetime(2007, 3, 31), False),
-             #(QuarterEnd(1, startingMonth=1), datetime(2008, 4, 30), True),
-             #(QuarterEnd(1, startingMonth=2), datetime(2008, 5, 30), False),
-             #(QuarterEnd(1, startingMonth=3), datetime(2008, 6, 29), False),
-             #(QuarterEnd(1, startingMonth=3), datetime(2008, 6, 30), False),
-
-             #(QuarterEnd(1, startingMonth=2), datetime(2008, 1, 31), False),
-             #(QuarterEnd(1, startingMonth=2), datetime(2007, 12, 31), False),
-             #(QuarterEnd(1, startingMonth=2), datetime(2008, 2, 29), True),
-             #(QuarterEnd(1, startingMonth=3), datetime(2007, 3, 30), False),
-             #(QuarterEnd(1, startingMonth=3), datetime(2007, 3, 31), False),
-             #(QuarterEnd(1, startingMonth=2), datetime(2008, 4, 30), False),
-             #(QuarterEnd(1, startingMonth=2), datetime(2008, 5, 30), True),
-             #(QuarterEnd(1, startingMonth=3), datetime(2008, 6, 29), False),
-             #(QuarterEnd(1, startingMonth=3), datetime(2008, 6, 30), False),
-
-             #(QuarterEnd(1, startingMonth=3), datetime(2008, 1, 31), False),
-             #(QuarterEnd(1, startingMonth=3), datetime(2007, 12, 31), False),
-             #(QuarterEnd(1, startingMonth=3), datetime(2008, 2, 29), False),
-             #(QuarterEnd(1, startingMonth=3), datetime(2007, 3, 30), False),
-             #(QuarterEnd(1, startingMonth=3), datetime(2007, 3, 31), True),
-             #(QuarterEnd(1, startingMonth=3), datetime(2008, 4, 30), False),
-             #(QuarterEnd(1, startingMonth=3), datetime(2008, 5, 30), False),
-             #(QuarterEnd(1, startingMonth=3), datetime(2008, 6, 29), False),
-             #(QuarterEnd(1, startingMonth=3), datetime(2008, 6, 30), True),
-         ]
-
-    for offset, date, expected in tests:
-        assertOnOffset(offset, date, expected)
-
 def assertEq(dateOffset, baseDate, expected):
     actual = dateOffset + baseDate
     assert actual == expected
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index 66b2c3009..892804538 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -3560,7 +3560,9 @@ class TestDataFrameJoin(unittest.TestCase):
         a['c'] = c
         d = DataFrame(randn(30,1), columns=['d'])
 
+        # it works!
         a.join(d)
+        d.join(a)
 
     def test_join_multiindex(self):
         index1 = MultiIndex.from_arrays([['a','a','a','b','b','b'],
diff --git a/pandas/tests/test_graphics.py b/pandas/tests/test_graphics.py
index 08edde066..14435ebbe 100644
--- a/pandas/tests/test_graphics.py
+++ b/pandas/tests/test_graphics.py
@@ -62,7 +62,7 @@ class TestDataFramePlots(unittest.TestCase):
         _check_plot_works(df.plot, subplots=True, use_index=False)
 
     def test_hist(self):
-        df = tm.makeTimeDataFrame()
+        df = DataFrame(np.random.randn(100, 4))
         _check_plot_works(df.hist)
         _check_plot_works(df.hist, grid=False)
 
diff --git a/pandas/tests/test_groupby.py b/pandas/tests/test_groupby.py
index 62ed705dc..ff8e0ce91 100644
--- a/pandas/tests/test_groupby.py
+++ b/pandas/tests/test_groupby.py
@@ -588,6 +588,10 @@ class TestGroupBy(unittest.TestCase):
         self.assert_(isinstance(result2, DataFrame))
         assert_frame_equal(result2, expected2)
 
+        # corner case
+        self.assertRaises(Exception, grouped['C'].__getitem__,
+                          'D')
+
     def test_groupby_as_index_cython(self):
         data = self.df
 
diff --git a/pandas/tests/test_internals.py b/pandas/tests/test_internals.py
index f29fbad9d..eede87e4b 100644
--- a/pandas/tests/test_internals.py
+++ b/pandas/tests/test_internals.py
@@ -213,6 +213,13 @@ class TestBlockManager(unittest.TestCase):
     def test_get(self):
         pass
 
+    def test_get_scalar(self):
+        for item in self.mgr.items:
+            for i, index in enumerate(self.mgr.axes[1]):
+                res = self.mgr.get_scalar((item, index))
+                exp = self.mgr.get(item)[i]
+                assert_almost_equal(res, exp)
+
     def test_set(self):
         pass
 
diff --git a/pandas/tests/test_panel.py b/pandas/tests/test_panel.py
index 1e795b852..22d4cf6d6 100644
--- a/pandas/tests/test_panel.py
+++ b/pandas/tests/test_panel.py
@@ -358,7 +358,9 @@ class CheckIndexing(object):
 
         # scalar
         self.panel['ItemG'] = 1
-        self.panel['ItemE'] = 1
+        self.panel['ItemE'] = True
+        self.assert_(self.panel['ItemG'].values.dtype == np.int64)
+        self.assert_(self.panel['ItemE'].values.dtype == np.bool_)
 
         # object dtype
         self.panel['ItemQ'] = 'foo'
