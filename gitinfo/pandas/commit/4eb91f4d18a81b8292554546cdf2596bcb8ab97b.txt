commit 4eb91f4d18a81b8292554546cdf2596bcb8ab97b
Author: Chang She <chang@lambdafoundry.com>
Date:   Mon May 28 20:06:41 2012 -0400

    ENH: tz_convert for DataFrame #1330

diff --git a/pandas/core/generic.py b/pandas/core/generic.py
index c7aac1b00..098a199d1 100644
--- a/pandas/core/generic.py
+++ b/pandas/core/generic.py
@@ -858,6 +858,42 @@ class NDFrame(PandasObject):
             new_data = self._data.take(indices, axis=axis)
         return self._constructor(new_data)
 
+    def tz_convert(self, tz, axis=0, copy=True):
+        """
+        Convert TimeSeries to target time zone. If it is time zone naive, it
+        will be localized to the passed time zone.
+
+        Parameters
+        ----------
+        tz : string or pytz.timezone object
+        copy : boolean, default True
+            Also make a copy of the underlying data
+
+        Returns
+        -------
+        """
+        axis = self._get_axis_number(axis)
+        ax = self._get_axis(axis)
+
+        if not hasattr(ax, 'tz_convert'):
+            ax_name = self._get_axis_name(axis)
+            raise TypeError('%s is not a valid DatetimeIndex or PeriodIndex' %
+                            ax_name)
+
+        new_data = self._data
+        if copy:
+            new_data = new_data.copy()
+
+        new_obj = self._constructor(new_data)
+        new_ax = ax.tz_convert(tz)
+
+        if axis == 0:
+            new_obj._set_axis(1, new_ax)
+        elif axis == 1:
+            new_obj._set_axis(0, new_ax)
+
+        return new_obj
+
 # Good for either Series or DataFrame
 
 def truncate(self, before=None, after=None, copy=True):
diff --git a/pandas/tseries/tests/test_timezones.py b/pandas/tseries/tests/test_timezones.py
index 90cb02f03..9fb6e58ec 100644
--- a/pandas/tseries/tests/test_timezones.py
+++ b/pandas/tseries/tests/test_timezones.py
@@ -277,6 +277,18 @@ class TestTimeZones(unittest.TestCase):
         result = ts.tz_convert('utc')
         self.assert_(result.index.tz.zone == 'UTC')
 
+        df = DataFrame({'a': 1}, index=rng)
+        result = df.tz_convert('utc')
+        expected = DataFrame({'a': 1}, rng.tz_convert('UTC'))
+        self.assert_(result.index.tz.zone == 'UTC')
+        assert_frame_equal(result, expected)
+        foo
+
+        df = df.T
+        result = df.tz_convert('utc', axis=1)
+        self.assert_(result.columns.tz.zone == 'UTC')
+        assert_frame_equal(result, expected.T)
+
     def test_join_utc_convert(self):
         rng = date_range('1/1/2011', periods=100, freq='H', tz='utc')
 
