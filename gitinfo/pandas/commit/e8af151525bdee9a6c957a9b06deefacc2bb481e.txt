commit e8af151525bdee9a6c957a9b06deefacc2bb481e
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Mon May 14 16:28:08 2012 -0400

    ENH: accept list of tuples, preserving function order in SeriesGroupBy.aggregate

diff --git a/RELEASE.rst b/RELEASE.rst
index 54a3d0c0d..8f619e7dd 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -44,6 +44,8 @@ pandas 0.8.0
   - Dates can be split across multiple columns (#1227, #1186)
   - Add experimental support for converting pandas DataFrame to R data.frame
     via rpy2 (#350, #1212)
+  - Can pass list of (name, function) to GroupBy.aggregate to get aggregates in
+    a particular order (#610)
 
 **Improvements to existing features**
 
diff --git a/doc/source/whatsnew.rst b/doc/source/whatsnew.rst
index 85c47d46b..b930bdbbd 100644
--- a/doc/source/whatsnew.rst
+++ b/doc/source/whatsnew.rst
@@ -16,6 +16,8 @@ What's New
 
 These are new features and improvements of note in each release.
 
+.. include:: whatsnew/v0.8.0.txt
+
 .. include:: whatsnew/v0.7.3.txt
 
 .. include:: whatsnew/v0.7.2.txt
diff --git a/doc/source/whatsnew/v0.8.0.txt b/doc/source/whatsnew/v0.8.0.txt
new file mode 100644
index 000000000..98f90d525
--- /dev/null
+++ b/doc/source/whatsnew/v0.8.0.txt
@@ -0,0 +1,4 @@
+.. _whatsnew_080:
+
+v.0.8.0 (TDB May, 2012)
+-----------------------
diff --git a/pandas/core/groupby.py b/pandas/core/groupby.py
index 471ebc76c..36b80af0f 100644
--- a/pandas/core/groupby.py
+++ b/pandas/core/groupby.py
@@ -1207,15 +1207,23 @@ class SeriesGroupBy(GroupBy):
         return ret
 
     def _aggregate_multiple_funcs(self, arg):
-        if not isinstance(arg, dict):
-            arg = dict((func.__name__, func) for func in arg)
+        if isinstance(arg, dict):
+            columns = arg.keys()
+            arg = arg.items()
+        elif isinstance(arg[0], (tuple, list)):
+            # indicated column order
+            columns = zip(*arg)[0]
+        else:
+            # list of functions
+            columns = [func.__name__ for func in arg]
+            arg = zip(columns, arg)
 
         results = {}
 
-        for name, func in arg.iteritems():
+        for name, func in arg:
             results[name] = self.aggregate(func)
 
-        return DataFrame(results)
+        return DataFrame(results, columns=columns)
 
     def _wrap_aggregated_output(self, output, names=None):
         # sort of a kludge
diff --git a/pandas/tests/test_groupby.py b/pandas/tests/test_groupby.py
index d42326f50..a4fbe444d 100644
--- a/pandas/tests/test_groupby.py
+++ b/pandas/tests/test_groupby.py
@@ -1729,6 +1729,15 @@ class TestGroupBy(unittest.TestCase):
         assert_frame_equal(result, expected)
         assert_frame_equal(result2, expected)
 
+    def test_agg_multiple_functions_maintain_order(self):
+
+        funcs = [('mean', np.mean), ('max', np.max), ('min', np.min)]
+        result = self.df.groupby('A')['C'].agg(funcs)
+        exp_cols = ['mean', 'max', 'min']
+
+        self.assert_(np.array_equal(result.columns, exp_cols))
+
+
 def _check_groupby(df, result, keys, field, f=lambda x: x.sum()):
     tups = map(tuple, df[keys].values)
     tups = com._asarray_tuplesafe(tups)
