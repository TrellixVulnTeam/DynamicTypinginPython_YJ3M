commit f42f96b3b88611c678dc2579ffadbb3b3f5c3eea
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Tue May 15 15:54:10 2012 -0400

    BUG: ensure_platform_int actually makes lots of copies

diff --git a/pandas/src/generate_code.py b/pandas/src/generate_code.py
index 5c3c3784f..643d70831 100644
--- a/pandas/src/generate_code.py
+++ b/pandas/src/generate_code.py
@@ -44,6 +44,18 @@ PyDateTime_IMPORT
 # initialize numpy
 import_array()
 import_ufunc()
+
+cdef int PLATFORM_INT = (<ndarray> np.arange(0, dtype=np.int_)).descr.type_num
+
+cpdef ensure_platform_int(object arr):
+    if util.is_array(arr):
+        if (<ndarray> arr).descr.type_num == PLATFORM_INT:
+            return arr
+        else:
+            return arr.astype(np.int_)
+    else:
+        return np.array(arr, dtype=np.int_)
+
 """
 
 take_1d_template = """@cython.wraparound(False)
@@ -828,7 +840,7 @@ ensure_functions = [
     ('float64', 'FLOAT64', 'float64'),
     ('int32', 'INT32', 'int32'),
     ('int64', 'INT64', 'int64'),
-    ('platform_int', 'INT', 'int_'),
+    # ('platform_int', 'INT', 'int_'),
     ('object', 'OBJECT', 'object_'),
 ]
 
diff --git a/pandas/src/generated.pyx b/pandas/src/generated.pyx
index 96f989d8c..9a275c806 100644
--- a/pandas/src/generated.pyx
+++ b/pandas/src/generated.pyx
@@ -43,6 +43,18 @@ PyDateTime_IMPORT
 import_array()
 import_ufunc()
 
+cdef int PLATFORM_INT = (<ndarray> np.arange(0, dtype=np.int_)).descr.type_num
+
+cpdef ensure_platform_int(object arr):
+    if util.is_array(arr):
+        if (<ndarray> arr).descr.type_num == PLATFORM_INT:
+            return arr
+        else:
+            return arr.astype(np.int_)
+    else:
+        return np.array(arr, dtype=np.int_)
+
+
 @cython.wraparound(False)
 @cython.boundscheck(False)
 cpdef map_indices_float64(ndarray[float64_t] index):
@@ -3337,16 +3349,6 @@ cpdef ensure_int64(object arr):
         return np.array(arr, dtype=np.int64)
 
 
-cpdef ensure_platform_int(object arr):
-    if util.is_array(arr):
-        if (<ndarray> arr).descr.type_num == NPY_INT:
-            return arr
-        else:
-            return arr.astype(np.int_)
-    else:
-        return np.array(arr, dtype=np.int_)
-
-
 cpdef ensure_object(object arr):
     if util.is_array(arr):
         if (<ndarray> arr).descr.type_num == NPY_OBJECT:
diff --git a/pandas/tests/test_tseries.py b/pandas/tests/test_tseries.py
index a25dc6005..318f78237 100644
--- a/pandas/tests/test_tseries.py
+++ b/pandas/tests/test_tseries.py
@@ -163,6 +163,11 @@ def test_groupsort_indexer():
     expected = np.lexsort((b, a))
     assert(np.array_equal(result, expected))
 
+def test_ensure_platform_int():
+    arr = np.arange(100)
+
+    result = algos.ensure_platform_int(arr)
+    assert(result is arr)
 
 def test_duplicated_with_nas():
     keys = [0, 1, nan, 0, 2, nan]
