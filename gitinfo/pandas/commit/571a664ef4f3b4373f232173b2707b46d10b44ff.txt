commit 571a664ef4f3b4373f232173b2707b46d10b44ff
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Sun Sep 25 00:52:19 2011 -0400

    BUG: count_level did not handle zero-length data case, caused segfault with NumPy < 1.6 for some.
    Fixes GH #169

diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index edc43ec9e..65ab180f1 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -2317,6 +2317,11 @@ class DataFrame(NDFrame):
 
         level_index = axis_index.levels[level]
 
+        if len(self) == 0:
+            return DataFrame(np.zeros((len(level_index),
+                                       len(self.columns)), dtype=int),
+                             index=level_index, columns=self.columns)
+
         n = len(level_index)
         locs = axis_index.labels[level].searchsorted(np.arange(n))
 
diff --git a/pandas/core/series.py b/pandas/core/series.py
index 76e6c07e0..f7fcc5d60 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -493,6 +493,9 @@ copy : boolean, default False
 
         level_index = obj.index.levels[level]
 
+        if len(self) == 0:
+            return Series(0, index=level_index)
+
         n = len(level_index)
         locs = obj.index.labels[level].searchsorted(np.arange(n))
 
diff --git a/pandas/tests/test_multilevel.py b/pandas/tests/test_multilevel.py
index 7ccdc5cc5..720ae8a40 100644
--- a/pandas/tests/test_multilevel.py
+++ b/pandas/tests/test_multilevel.py
@@ -252,6 +252,18 @@ class TestMultiLevel(unittest.TestCase):
         df = tm.makeTimeDataFrame()
         self.assertRaises(Exception, df.count, level=0)
 
+    def test_count_level_corner(self):
+        s = self.frame['A'][:0]
+        result = s.count(level=0)
+        expected = Series(0, index=s.index.levels[0])
+        assert_series_equal(result, expected)
+
+        df = self.frame[:0]
+        result = df.count(level=0)
+        expected = DataFrame({}, index=s.index.levels[0],
+                             columns=df.columns).fillna(0).astype(int)
+        assert_frame_equal(result, expected)
+
     def test_unstack(self):
         # just check that it works for now
         unstacked = self.ymd.unstack()
diff --git a/scripts/bench_join.py b/scripts/bench_join.py
index 1ca19c8b2..c4dd6d776 100644
--- a/scripts/bench_join.py
+++ b/scripts/bench_join.py
@@ -86,7 +86,6 @@ def do_outer_join_multi(a, b, av, bv):
     _, bk = bv.shape
     result_index, rindexer, lindexer = lib.outer_join_indexer(a, b)
     result = np.empty((ak + bk, len(result_index)), dtype=np.float64)
-
     lib.take_axis0(av, rindexer, out=result[:ak].T)
     lib.take_axis0(bv, lindexer, out=result[ak:].T)
     return result_index, result
