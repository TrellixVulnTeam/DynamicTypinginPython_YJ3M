commit bd76ce9401b5f3c9506191b2802e96730f42d7cb
Author: Joris Van den Bossche <jorisvandenbossche@gmail.com>
Date:   Sat Feb 24 15:39:07 2018 +0100

    DOC: remove deprecated from_items from dsintro docs (#19837)

diff --git a/doc/source/dsintro.rst b/doc/source/dsintro.rst
index e8f73a9ec..1ba00b8fb 100644
--- a/doc/source/dsintro.rst
+++ b/doc/source/dsintro.rst
@@ -364,6 +364,19 @@ and returns a DataFrame. It operates like the ``DataFrame`` constructor except
 for the ``orient`` parameter which is ``'columns'`` by default, but which can be
 set to ``'index'`` in order to use the dict keys as row labels.
 
+
+.. ipython:: python
+
+   pd.DataFrame.from_dict(dict([('A', [1, 2, 3]), ('B', [4, 5, 6])]))
+
+If you pass ``orient='index'``, the keys will be the row labels. In this
+case, you can also pass the desired column names:
+
+.. ipython:: python
+
+   pd.DataFrame.from_dict(dict([('A', [1, 2, 3]), ('B', [4, 5, 6])]),
+                          orient='index', columns=['one', 'two', 'three'])
+
 .. _basics.dataframe.from_records:
 
 **DataFrame.from_records**
@@ -378,28 +391,6 @@ dtype. For example:
    data
    pd.DataFrame.from_records(data, index='C')
 
-.. _basics.dataframe.from_items:
-
-**DataFrame.from_items**
-
-``DataFrame.from_items`` works analogously to the form of the ``dict``
-constructor that takes a sequence of ``(key, value)`` pairs, where the keys are
-column (or row, in the case of ``orient='index'``) names, and the value are the
-column values (or row values). This can be useful for constructing a DataFrame
-with the columns in a particular order without having to pass an explicit list
-of columns:
-
-.. ipython:: python
-
-   pd.DataFrame.from_items([('A', [1, 2, 3]), ('B', [4, 5, 6])])
-
-If you pass ``orient='index'``, the keys will be the row labels. But in this
-case you must also pass the desired column names:
-
-.. ipython:: python
-
-   pd.DataFrame.from_items([('A', [1, 2, 3]), ('B', [4, 5, 6])],
-                           orient='index', columns=['one', 'two', 'three'])
 
 Column selection, addition, deletion
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 1c5cf87d6..061b69f25 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -1255,12 +1255,14 @@ class DataFrame(NDFrame):
 
     @classmethod
     def from_items(cls, items, columns=None, orient='columns'):
-        """
+        """Construct a dataframe from a list of tuples
+
         .. deprecated:: 0.23.0
-            from_items is deprecated and will be removed in a
-            future version. Use :meth:`DataFrame.from_dict(dict())`
-            instead. :meth:`DataFrame.from_dict(OrderedDict(...))` may be used
-            to preserve the key order.
+          `from_items` is deprecated and will be removed in a future version.
+          Use :meth:`DataFrame.from_dict(dict(items)) <DataFrame.from_dict>`
+          instead.
+          :meth:`DataFrame.from_dict(OrderedDict(items)) <DataFrame.from_dict>`
+          may be used to preserve the key order.
 
         Convert (key, value) pairs to DataFrame. The keys will be the axis
         index (usually the columns, but depends on the specified
@@ -1284,8 +1286,8 @@ class DataFrame(NDFrame):
         """
 
         warnings.warn("from_items is deprecated. Please use "
-                      "DataFrame.from_dict(dict()) instead. "
-                      "DataFrame.from_dict(OrderedDict()) may be used to "
+                      "DataFrame.from_dict(dict(items), ...) instead. "
+                      "DataFrame.from_dict(OrderedDict(items)) may be used to "
                       "preserve the key order.",
                       FutureWarning, stacklevel=2)
 
