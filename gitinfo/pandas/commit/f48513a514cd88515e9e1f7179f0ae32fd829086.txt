commit f48513a514cd88515e9e1f7179f0ae32fd829086
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Fri May 25 18:08:22 2012 -0400

    BUG: unpickling length-0 DateRange as Series.index, close #1274

diff --git a/pandas/core/index.py b/pandas/core/index.py
index cd0ad3c10..b4c0d4cf3 100644
--- a/pandas/core/index.py
+++ b/pandas/core/index.py
@@ -2396,8 +2396,13 @@ def _handle_legacy_indexes(indexes):
     converted = []
     for index in indexes:
         if isinstance(index, DateRange):
-            index = DatetimeIndex(start=index[0], end=index[-1],
-                                  freq=index.offset, tz=index.tzinfo)
+            if len(index) == 0:
+                kwds = dict(data=[], freq=index.offset, tz=index.tzinfo)
+            else:
+                kwds = dict(start=index[0], end=index[-1],
+                            freq=index.offset, tz=index.tzinfo)
+
+            index = DatetimeIndex(**kwds)
 
         converted.append(index)
 
diff --git a/pandas/tseries/tests/data/series_daterange0.pickle b/pandas/tseries/tests/data/series_daterange0.pickle
new file mode 100644
index 000000000..07e214403
Binary files /dev/null and b/pandas/tseries/tests/data/series_daterange0.pickle differ
diff --git a/pandas/tseries/tests/test_timeseries.py b/pandas/tseries/tests/test_timeseries.py
index 2bd140ac6..691a046af 100644
--- a/pandas/tseries/tests/test_timeseries.py
+++ b/pandas/tseries/tests/test_timeseries.py
@@ -782,6 +782,18 @@ class TestLegacySupport(unittest.TestCase):
         self.assert_((unpickled.index == dtindex).all())
         self.assertEquals(unpickled.index.offset, BDay(1, normalize=True))
 
+    def test_unpickle_legacy_len0_daterange(self):
+        pth, _ = os.path.split(os.path.abspath(__file__))
+        filepath = os.path.join(pth, 'data', 'series_daterange0.pickle')
+
+        result = com.load(filepath)
+
+        ex_index = DatetimeIndex([], freq='B')
+
+        self.assert_(result.index.equals(ex_index))
+        self.assert_(isinstance(result.index.freq, offsets.BDay))
+        self.assert_(len(result) == 0)
+
     def test_arithmetic_interaction(self):
         index = self.frame.index
         obj_index = index.asobject
