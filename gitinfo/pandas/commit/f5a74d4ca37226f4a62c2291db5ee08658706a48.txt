commit f5a74d4ca37226f4a62c2291db5ee08658706a48
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Tue Jul 24 18:30:46 2012 -0400

    BUG: fix MM-YYYY string parsing case for time series indexing, close #1672

diff --git a/RELEASE.rst b/RELEASE.rst
index 9cf1f6405..3173d9d58 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -31,6 +31,10 @@ pandas 0.8.2
 
   - Add ``flags`` option for ``re.compile`` in some Series.str methods (#1659)
 
+**Bug fixes**
+
+  - Fix MM-YYYY time series indexing case (#1672)
+
 pandas 0.8.1
 ============
 
diff --git a/pandas/tseries/tests/test_timeseries.py b/pandas/tseries/tests/test_timeseries.py
index 2db0d4ff0..57adabf69 100644
--- a/pandas/tseries/tests/test_timeseries.py
+++ b/pandas/tseries/tests/test_timeseries.py
@@ -1434,6 +1434,8 @@ class TestLegacySupport(unittest.TestCase):
         df = DataFrame(np.random.rand(len(dti), 5), index=dti)
         self.assertEquals(len(df.ix['2005-11']), 30)
 
+        assert_series_equal(s['2005-11'], s['11-2005'])
+
     def test_partial_slice(self):
         rng = DatetimeIndex(freq='D', start=datetime(2005,1,1), periods=500)
         s = Series(np.arange(len(rng)), index=rng)
diff --git a/pandas/tseries/tools.py b/pandas/tseries/tools.py
index 506466d64..1cd1b1f28 100644
--- a/pandas/tseries/tools.py
+++ b/pandas/tseries/tools.py
@@ -200,24 +200,10 @@ def parse_time_string(arg, freq=None):
             except Exception:
                 pass
 
-    # f7u12
-    try:
-        ret = datetime.strptime(arg, '%Y-%m')
-        return ret, ret, 'month'
-    except Exception:
-        pass
-
-    try:
-        ret = datetime.strptime(arg, '%b %Y')
-        return ret, ret, 'month'
-    except Exception:
-        pass
-
-    try:
-        ret = datetime.strptime(arg, '%b-%Y')
-        return ret, ret, 'month'
-    except Exception:
-        pass
+    # montly f7u12
+    mresult = _attempt_monthly(arg)
+    if mresult:
+        return mresult
 
     dayfirst = print_config.date_dayfirst
     yearfirst = print_config.date_yearfirst
@@ -247,6 +233,16 @@ def parse_time_string(arg, freq=None):
     ret = default.replace(**repl)
     return ret, parsed, reso  # datetime, resolution
 
+def _attempt_monthly(val):
+    pats = ['%Y-%m', '%m-%Y', '%b %Y', '%b-%Y']
+    for pat in pats:
+        try:
+            ret = datetime.strptime(val, pat)
+            return ret, ret, 'month'
+        except Exception:
+            pass
+
+
 def _try_parse_monthly(arg):
     base = 2000
     add_base = False
