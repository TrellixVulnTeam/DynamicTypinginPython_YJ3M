commit d7de334359f1872b52abd34e5e42d2a77f97e55d
Author: Jasper J.F. van den Bosch <japsai@gmail.com>
Date:   Fri Oct 25 18:01:29 2019 +0100

    BUG: fixes formatted value error for missing sheet (#27676) (#27677)

diff --git a/doc/source/whatsnew/v1.0.0.rst b/doc/source/whatsnew/v1.0.0.rst
index 97fba5a8e..4007ecd5a 100644
--- a/doc/source/whatsnew/v1.0.0.rst
+++ b/doc/source/whatsnew/v1.0.0.rst
@@ -382,6 +382,7 @@ I/O
 - Bug in :func:`read_hdf` closing stores that it didn't open when Exceptions are raised (:issue:`28699`)
 - Bug in :meth:`DataFrame.read_json` where using ``orient="index"`` would not maintain the order (:issue:`28557`)
 - Bug in :meth:`DataFrame.to_html` where the length of the ``formatters`` argument was not verified (:issue:`28469`)
+- Bug in :meth:`DataFrame.read_excel` with ``engine='ods'`` when ``sheet_name`` argument references a non-existent sheet (:issue:`27676`)
 - Bug in :meth:`pandas.io.formats.style.Styler` formatting for floating values not displaying decimals correctly (:issue:`13257`)
 - Bug in :meth:`DataFrame.to_html` when using ``formatters=<list>`` and ``max_cols`` together. (:issue:`25955`)
 
diff --git a/pandas/io/excel/_odfreader.py b/pandas/io/excel/_odfreader.py
index 66a186161..3a67f8306 100644
--- a/pandas/io/excel/_odfreader.py
+++ b/pandas/io/excel/_odfreader.py
@@ -61,7 +61,7 @@ class _ODFReader(_BaseExcelReader):
             if table.getAttribute("name") == name:
                 return table
 
-        raise ValueError("sheet {name} not found".format(name))
+        raise ValueError("sheet {} not found".format(name))
 
     def get_sheet_data(self, sheet, convert_float: bool) -> List[List[Scalar]]:
         """Parse an ODF Table into a list of lists
diff --git a/pandas/tests/io/excel/test_odf.py b/pandas/tests/io/excel/test_odf.py
index 76871eddf..47e610562 100644
--- a/pandas/tests/io/excel/test_odf.py
+++ b/pandas/tests/io/excel/test_odf.py
@@ -36,3 +36,11 @@ def test_read_writer_table():
     result = pd.read_excel("writertable.odt", "Table1", index_col=0)
 
     tm.assert_frame_equal(result, expected)
+
+
+def test_nonexistent_sheetname_raises(read_ext):
+    # GH-27676
+    # Specifying a non-existent sheet_name parameter should throw an error
+    # with the sheet name.
+    with pytest.raises(ValueError, match="sheet xyz not found"):
+        pd.read_excel("blank.ods", sheet_name="xyz")
