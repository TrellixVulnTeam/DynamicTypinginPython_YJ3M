commit 04a6815f7da0f6d879725d553c7a45f47bb4a15c
Author: jbrockmendel <jbrockmendel@gmail.com>
Date:   Tue Jan 16 16:15:30 2018 -0800

    put mgr_locs setter next to property definition (#19264)

diff --git a/pandas/core/internals.py b/pandas/core/internals.py
index 3c9231334..43fdd4542 100644
--- a/pandas/core/internals.py
+++ b/pandas/core/internals.py
@@ -191,6 +191,13 @@ class Block(PandasObject):
     def mgr_locs(self):
         return self._mgr_locs
 
+    @mgr_locs.setter
+    def mgr_locs(self, new_mgr_locs):
+        if not isinstance(new_mgr_locs, BlockPlacement):
+            new_mgr_locs = BlockPlacement(new_mgr_locs)
+
+        self._mgr_locs = new_mgr_locs
+
     @property
     def array_dtype(self):
         """ the dtype to return if I want to construct this block as an
@@ -224,13 +231,6 @@ class Block(PandasObject):
         return make_block(values, placement=placement, klass=self.__class__,
                           fastpath=fastpath, **kwargs)
 
-    @mgr_locs.setter
-    def mgr_locs(self, new_mgr_locs):
-        if not isinstance(new_mgr_locs, BlockPlacement):
-            new_mgr_locs = BlockPlacement(new_mgr_locs)
-
-        self._mgr_locs = new_mgr_locs
-
     def __unicode__(self):
 
         # don't want to print out all of the items here
@@ -840,7 +840,6 @@ class Block(PandasObject):
 
         transf = (lambda x: x.T) if self.ndim == 2 else (lambda x: x)
         values = transf(values)
-        l = len(values)
 
         # length checking
         # boolean with truth values == len of the value is ok too
@@ -855,7 +854,7 @@ class Block(PandasObject):
         # slice
         elif isinstance(indexer, slice):
 
-            if is_list_like(value) and l:
+            if is_list_like(value) and len(values):
                 if len(value) != length_of_indexer(indexer, values):
                     raise ValueError("cannot set using a slice indexer with a "
                                      "different length than the value")
