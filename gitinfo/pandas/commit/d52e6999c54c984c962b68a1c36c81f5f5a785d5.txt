commit d52e6999c54c984c962b68a1c36c81f5f5a785d5
Author: jreback <jeff@reback.net>
Date:   Thu Jun 13 18:44:49 2013 -0400

    TST: json tests to int64 to avoid dtype issues

diff --git a/pandas/io/json.py b/pandas/io/json.py
index fcecb31bb..ce95c3394 100644
--- a/pandas/io/json.py
+++ b/pandas/io/json.py
@@ -268,6 +268,15 @@ class Parser(object):
             except:
                 pass
 
+        if data.dtype == 'float':
+            
+            # coerce floats to 64
+            try:
+                data = data.astype('float64')
+                result = True
+            except:
+                pass
+
         # do't coerce 0-len data
         if len(data) and (data.dtype == 'float' or data.dtype == 'object'):
 
@@ -280,6 +289,16 @@ class Parser(object):
             except:
                 pass
 
+        # coerce ints to 64
+        if data.dtype == 'int':
+            
+            # coerce floats to 64
+            try:
+                data = data.astype('int64')
+                result = True
+            except:
+                pass
+
         return data, result
 
     def _try_convert_to_date(self, data):
diff --git a/pandas/io/tests/test_json/test_pandas.py b/pandas/io/tests/test_json/test_pandas.py
index bdd700bdb..fe717f56e 100644
--- a/pandas/io/tests/test_json/test_pandas.py
+++ b/pandas/io/tests/test_json/test_pandas.py
@@ -26,7 +26,7 @@ _tsd = tm.getTimeSeriesData()
 
 _frame = DataFrame(_seriesd)
 _frame2 = DataFrame(_seriesd, columns=['D', 'C', 'B', 'A'])
-_intframe = DataFrame(dict((k, v.astype(int))
+_intframe = DataFrame(dict((k, v.astype(np.int64))
                            for k, v in _seriesd.iteritems()))
 
 _tsframe = DataFrame(_tsd)
@@ -71,6 +71,9 @@ class TestPandasObjects(unittest.TestCase):
                     
             unser = unser.sort()
 
+            if dtype is False:
+                check_dtype=False
+
             if not convert_axes and df.index.dtype.type == np.datetime64:
                 unser.index = DatetimeIndex(unser.index.values.astype('i8'))
             if orient == "records":
@@ -288,7 +291,7 @@ class TestPandasObjects(unittest.TestCase):
 
     def test_typ(self):
 
-        s = Series(range(6), index=['a','b','c','d','e','f'])
+        s = Series(range(6), index=['a','b','c','d','e','f'], dtype='int64')
         result = read_json(s.to_json(),typ=None)
         assert_series_equal(result,s)
 
