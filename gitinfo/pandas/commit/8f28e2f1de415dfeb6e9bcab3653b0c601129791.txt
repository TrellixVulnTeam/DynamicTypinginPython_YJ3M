commit 8f28e2f1de415dfeb6e9bcab3653b0c601129791
Author: Dan Miller <dnmiller@gmail.com>
Date:   Sun Sep 23 20:52:53 2012 -0700

    DOC: Adding details on normalization for variance functions.

diff --git a/doc/source/gotchas.rst b/doc/source/gotchas.rst
index 941fb6707..0f7be37c5 100644
--- a/doc/source/gotchas.rst
+++ b/doc/source/gotchas.rst
@@ -302,3 +302,13 @@ of the new set of columns rather than the original ones:
    :suppress:
 
    os.remove('tmp.csv')
+
+
+Differences with NumPy 
+----------------------
+For Series and DataFrame objects, ``var`` normalizes by ``N-1`` to produce
+unbiased estimates of the sample variance, while NumPy's ``var`` normalizes
+by N, which measures the variance of the sample. Note that ``cov``
+normalizes by ``N-1`` in both pandas and NumPy.
+
+
diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 768a189a4..5326b9ae4 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -4052,6 +4052,9 @@ class DataFrame(NDFrame):
         Returns
         -------
         y : DataFrame
+
+        y contains the covariance matrix of the DataFrame's time series.
+        The covariance is normalized by N-1 (unbiased estimator).
         """
         numeric_df = self._get_numeric_data()
         cols = numeric_df.columns
@@ -4368,7 +4371,10 @@ class DataFrame(NDFrame):
 
     @Substitution(name='variance', shortname='var',
                   na_action=_doc_exclude_na, extras='')
-    @Appender(_stat_doc)
+    @Appender(_stat_doc +
+        """
+        Normalized by N-1 (unbiased estimator).
+        """)
     def var(self, axis=0, skipna=True, level=None, ddof=1):
         if level is not None:
             return self._agg_by_level('var', axis=axis, level=level,
@@ -4378,7 +4384,10 @@ class DataFrame(NDFrame):
 
     @Substitution(name='standard deviation', shortname='std',
                   na_action=_doc_exclude_na, extras='')
-    @Appender(_stat_doc)
+    @Appender(_stat_doc + 
+        """
+        Normalized by N-1 (unbiased estimator).
+        """)
     def std(self, axis=0, skipna=True, level=None, ddof=1):
         if level is not None:
             return self._agg_by_level('std', axis=axis, level=level,
diff --git a/pandas/core/series.py b/pandas/core/series.py
index 14c025303..7400aa5bd 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -1151,7 +1151,10 @@ copy : boolean, default False
 
     @Substitution(name='standard deviation', shortname='stdev',
                   na_action=_doc_exclude_na, extras='')
-    @Appender(_stat_doc)
+    @Appender(_stat_doc + 
+        """
+        Normalized by N-1 (unbiased estimator).
+        """)
     def std(self, axis=None, dtype=None, out=None, ddof=1, skipna=True,
             level=None):
         if level is not None:
@@ -1161,7 +1164,10 @@ copy : boolean, default False
 
     @Substitution(name='variance', shortname='var',
                   na_action=_doc_exclude_na, extras='')
-    @Appender(_stat_doc)
+    @Appender(_stat_doc + 
+        """
+        Normalized by N-1 (unbiased estimator).
+        """)
     def var(self, axis=None, dtype=None, out=None, ddof=1, skipna=True,
             level=None):
         if level is not None:
@@ -1474,6 +1480,8 @@ copy : boolean, default False
         Returns
         -------
         covariance : float
+
+        Normalized by N-1 (unbiased estimator).
         """
         this, other = self.align(other, join='inner')
         if len(this) == 0:
