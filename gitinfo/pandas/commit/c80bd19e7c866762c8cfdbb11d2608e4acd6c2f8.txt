commit c80bd19e7c866762c8cfdbb11d2608e4acd6c2f8
Author: Jeff Reback <jeff@reback.net>
Date:   Sun Mar 26 11:12:18 2017 -0400

    DOC: remove warnings for .sort / .order deprecation removals (#15808)

diff --git a/doc/source/whatsnew/v0.13.1.txt b/doc/source/whatsnew/v0.13.1.txt
index d5d54ba43..5e5653945 100644
--- a/doc/source/whatsnew/v0.13.1.txt
+++ b/doc/source/whatsnew/v0.13.1.txt
@@ -125,7 +125,7 @@ API changes
       df = DataFrame({'col':['foo', 0, np.nan]})
       df2 = DataFrame({'col':[np.nan, 0, 'foo']}, index=[2,1,0])
       df.equals(df2)
-      df.equals(df2.sort())
+      df.equals(df2.sort_index())
 
       import pandas.core.common as com
       com.array_equivalent(np.array([0, np.nan]), np.array([0, np.nan]))
diff --git a/doc/source/whatsnew/v0.15.0.txt b/doc/source/whatsnew/v0.15.0.txt
index aff8ec909..6282f15b6 100644
--- a/doc/source/whatsnew/v0.15.0.txt
+++ b/doc/source/whatsnew/v0.15.0.txt
@@ -80,7 +80,7 @@ For full docs, see the :ref:`categorical introduction <categorical>` and the
     # Reorder the categories and simultaneously add the missing categories
     df["grade"] = df["grade"].cat.set_categories(["very bad", "bad", "medium", "good", "very good"])
     df["grade"]
-    df.sort("grade")
+    df.sort_values("grade")
     df.groupby("grade").size()
 
 - ``pandas.core.group_agg`` and ``pandas.core.factor_agg`` were removed. As an alternative, construct
diff --git a/doc/source/whatsnew/v0.20.0.txt b/doc/source/whatsnew/v0.20.0.txt
index f96fc41c7..38109d544 100644
--- a/doc/source/whatsnew/v0.20.0.txt
+++ b/doc/source/whatsnew/v0.20.0.txt
@@ -35,6 +35,11 @@ New features
 
 The ``dtype`` keyword argument in the :func:`read_csv` function for specifying the types of parsed columns is now supported with the ``'python'`` engine (:issue:`14295`). See the :ref:`io docs <io.dtypes>` for more information.
 
+.. ipython:: python
+   :suppress:
+
+   from pandas.compat import StringIO
+
 .. ipython:: python
 
    data = "a,b\n1,2\n3,4"
diff --git a/doc/source/whatsnew/v0.7.3.txt b/doc/source/whatsnew/v0.7.3.txt
index 21aa16e5f..6b5199c55 100644
--- a/doc/source/whatsnew/v0.7.3.txt
+++ b/doc/source/whatsnew/v0.7.3.txt
@@ -93,4 +93,4 @@ Series, to be more consistent with the ``groupby`` behavior with DataFrame:
     df
     grouped = df.groupby('A')['C']
     grouped.describe()
-    grouped.apply(lambda x: x.order()[-2:]) # top 2 values
+    grouped.apply(lambda x: x.sort_values()[-2:]) # top 2 values
diff --git a/doc/source/whatsnew/v0.9.1.txt b/doc/source/whatsnew/v0.9.1.txt
index 9dd29a5fe..4faf38219 100644
--- a/doc/source/whatsnew/v0.9.1.txt
+++ b/doc/source/whatsnew/v0.9.1.txt
@@ -20,13 +20,20 @@ New features
   - `Series.sort`, `DataFrame.sort`, and `DataFrame.sort_index` can now be
     specified in a per-column manner to support multiple sort orders (:issue:`928`)
 
-    .. ipython:: python
-        :okwarning:
+    .. code-block:: ipython
 
-        df = DataFrame(np.random.randint(0, 2, (6, 3)), columns=['A', 'B', 'C'])
+       In [2]:  df = DataFrame(np.random.randint(0, 2, (6, 3)), columns=['A', 'B', 'C'])
 
-        df.sort(['A', 'B'], ascending=[1, 0])
+       In [3]: df.sort(['A', 'B'], ascending=[1, 0])
 
+       Out[3]:
+          A  B  C
+       3  0  1  1
+       4  0  1  1
+       2  0  0  1
+       0  1  0  0
+       1  1  0  0
+       5  1  0  0
 
   - `DataFrame.rank` now supports additional argument values for the
     `na_option` parameter so missing values can be assigned either the largest
