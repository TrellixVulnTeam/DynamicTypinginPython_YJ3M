commit f927fed36323d94afa1f77cf19063c114e43bbfc
Author: Jeffrey Tratner <jeffrey.tratner@gmail.com>
Date:   Sat Jun 8 21:42:06 2013 -0400

    BUG: Remove broken frame mod and floordiv str_rep
    
    `%` (modulus) intermittently causes floating point exceptions when used with
    numexpr.
    
    `//` (floordiv) is inconsistent between unaccelerated and accelerated
    when dividing by zero (unaccelerated produces 0.0000, accelerated
    produces `inf`)

diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 7c8dc3d61..47142daa8 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -854,11 +854,16 @@ class DataFrame(NDFrame):
     __mul__ = _arith_method(operator.mul, '__mul__', '*', default_axis=None)
     __truediv__ = _arith_method(operator.truediv, '__truediv__', '/',
                                 default_axis=None, fill_zeros=np.inf, truediv=True)
+    # numexpr produces a different value (python/numpy: 0.000, numexpr: inf)
+    # when dividing by zero, so can't use floordiv speed up (yet)
+    # __floordiv__ = _arith_method(operator.floordiv, '__floordiv__', '//',
     __floordiv__ = _arith_method(operator.floordiv, '__floordiv__',
                                  default_axis=None, fill_zeros=np.inf)
     __pow__ = _arith_method(operator.pow, '__pow__', '**', default_axis=None)
 
-    __mod__ = _arith_method(operator.mod, '__mod__', '*', default_axis=None, fill_zeros=np.nan)
+    # currently causes a floating point exception to occur - so sticking with unaccelerated for now
+    # __mod__ = _arith_method(operator.mod, '__mod__', '%', default_axis=None, fill_zeros=np.nan)
+    __mod__ = _arith_method(operator.mod, '__mod__', default_axis=None, fill_zeros=np.nan)
 
     __radd__ = _arith_method(_radd_compat, '__radd__', default_axis=None)
     __rmul__ = _arith_method(operator.mul, '__rmul__', default_axis=None)
