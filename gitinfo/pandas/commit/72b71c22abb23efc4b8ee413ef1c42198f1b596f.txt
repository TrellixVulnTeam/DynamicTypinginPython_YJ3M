commit 72b71c22abb23efc4b8ee413ef1c42198f1b596f
Author: Skipper Seabold <jsseabold@gmail.com>
Date:   Sun Feb 10 11:24:43 2013 -0500

    ENH: Add title string method

diff --git a/pandas/core/strings.py b/pandas/core/strings.py
index cac9e8441..a24b213c4 100644
--- a/pandas/core/strings.py
+++ b/pandas/core/strings.py
@@ -111,6 +111,16 @@ def _map(f, arr, na_mask=False, na_value=np.nan):
     else:
         return lib.map_infer(arr, f)
 
+def str_title(arr):
+    """
+    Convert strings to titlecased version
+
+    Returns
+    -------
+    titled : array
+    """
+    return _na_map(lambda x: x.title(), arr)
+
 
 def str_count(arr, pat, flags=0):
     """
@@ -744,3 +754,4 @@ class StringMethods(object):
     len = _noarg_wrapper(str_len)
     lower = _noarg_wrapper(str_lower)
     upper = _noarg_wrapper(str_upper)
+    title = _noarg_wrapper(str_title)
diff --git a/pandas/tests/test_strings.py b/pandas/tests/test_strings.py
index 910bfda73..a75ea8dc8 100644
--- a/pandas/tests/test_strings.py
+++ b/pandas/tests/test_strings.py
@@ -184,6 +184,28 @@ class TestStringMethods(unittest.TestCase):
         result = values.str.endswith('foo', na=False)
         tm.assert_series_equal(result, exp.fillna(False).astype(bool))
 
+    def test_title(self):
+        values = Series(["FOO", "BAR", NA, "Blah", "blurg"])
+
+        result = values.str.title()
+        exp = Series(["Foo", "Bar", NA, "Blah", "Blurg"])
+        tm.assert_series_equal(result, exp)
+
+        # mixed
+        mixed = Series(["FOO", NA, "bar", True, datetime.today(),
+                        "blah", None, 1, 2.])
+        mixed = mixed.str.title()
+        exp = Series(["Foo", NA, "Bar", NA, NA, "Blah", NA, NA, NA])
+        tm.assert_almost_equal(mixed, exp)
+
+        # unicode
+        values = Series([u"FOO", NA, u"bar", u"Blurg"])
+
+        results = values.str.title()
+        exp = Series([u"Foo", NA, u"Bar", u"Blurg"])
+
+        tm.assert_series_equal(results, exp)
+
     def test_lower_upper(self):
         values = Series(['om', NA, 'nom', 'nom'])
 
