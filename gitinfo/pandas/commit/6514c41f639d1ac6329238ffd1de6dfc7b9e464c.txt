commit 6514c41f639d1ac6329238ffd1de6dfc7b9e464c
Author: Jeff Reback <jeff@reback.net>
Date:   Sun Mar 8 20:23:36 2015 -0400

    DOC: change link positions

diff --git a/doc/source/whatsnew/v0.16.0.txt b/doc/source/whatsnew/v0.16.0.txt
index 19bda851e..3a52cb383 100644
--- a/doc/source/whatsnew/v0.16.0.txt
+++ b/doc/source/whatsnew/v0.16.0.txt
@@ -22,11 +22,11 @@ users upgrade to this version.
 
 - :ref:`Bug Fixes <whatsnew_0160.bug_fixes>`
 
+.. _whatsnew_0160.enhancements:
+
 New features
 ~~~~~~~~~~~~
 
-.. _whatsnew_0160.enhancements:
-
 - Reindex now supports ``method='nearest'`` for frames or series with a monotonic increasing or decreasing index (:issue:`9258`):
 
   .. ipython:: python
@@ -70,11 +70,11 @@ New features
 - Added ``days_in_month`` (compatibility alias ``daysinmonth``) property to ``Timestamp``, ``DatetimeIndex``, ``Period``, ``PeriodIndex``, and ``Series.dt`` (:issue:`9572`)
 - Added ``decimal`` option in ``to_csv`` to provide formatting for non-'.' decimal separators (:issue:`781`)
 
+.. _whatsnew_0160.enhancements.assign:
+
 DataFrame Assign
 ~~~~~~~~~~~~~~~~
 
-.. _whatsnew_0160.enhancements.assign:
-
 Inspired by `dplyr's
 <http://cran.rstudio.com/web/packages/dplyr/vignettes/introduction.html#mutate>`__ ``mutate`` verb, DataFrame has a new
 :meth:`~pandas.DataFrame.assign` method.
@@ -116,11 +116,11 @@ calculate the ratio, and plot
 See the :ref:`documentation <dsintro.chained_assignment>` for more. (:issue:`9229`)
 
 
+.. _whatsnew_0160.enhancements.sparse:
+
 Interaction with scipy.sparse
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 
-.. _whatsnew_0160.enhancements.sparse:
-
 Added :meth:`SparseSeries.to_coo` and :meth:`SparseSeries.from_coo` methods (:issue:`8048`) for converting to and from ``scipy.sparse.coo_matrix`` instances (see :ref:`here <sparse.scipysparse>`). For example, given a SparseSeries with MultiIndex we can convert to a `scipy.sparse.coo_matrix` by specifying the row and column labels as index levels:
 
 .. ipython:: python
@@ -171,6 +171,9 @@ Backwards incompatible API changes
 
 .. _whatsnew_0160.api_breaking.timedelta:
 
+Changes in Timedelta
+~~~~~~~~~~~~~~~~~~~~
+
 In v0.15.0 a new scalar type ``Timedelta`` was introduced, that is a
 sub-class of ``datetime.timedelta``. Mentioned :ref:`here <whatsnew_0150.timedeltaindex>` was a notice of an API change w.r.t. the ``.seconds`` accessor. The intent was to provide a user-friendly set of accessors that give the 'natural' value for that unit, e.g. if you had a ``Timedelta('1 day, 10:11:12')``, then ``.seconds`` would return 12. However, this is at odds with the definition of ``datetime.timedelta``, which defines ``.seconds`` as ``10 * 3600 + 11 * 60 + 12 == 36672``.
 
@@ -207,11 +210,11 @@ Using ``.components`` allows the full component access
    t.components
    t.components.seconds
 
+.. _whatsnew_0160.api_breaking.indexing:
+
 Indexing Changes
 ~~~~~~~~~~~~~~~~
 
-.. _whatsnew_0160.api_breaking.indexing:
-
 The behavior of a small sub-set of edge cases for using ``.loc`` have changed (:issue:`8613`). Furthermore we have improved the content of the error messages that are raised:
 
 - slicing with ``.loc`` where the start and/or stop bound is not found in the index is now allowed; this previously would raise a ``KeyError``. This makes the behavior the same as ``.ix`` in this case. This change is only for slicing, not when indexing with a single label.
@@ -274,11 +277,11 @@ The behavior of a small sub-set of edge cases for using ``.loc`` have changed (:
      TypeError: Cannot do slice indexing on <class 'pandas.tseries.index.DatetimeIndex'> with <type 'int'> keys
 
 
+.. _whatsnew_0160.api:
+
 API Changes
 ~~~~~~~~~~~
 
-.. _whatsnew_0160.api:
-
 - ``Index.duplicated`` now returns ``np.array(dtype=bool)`` rather than ``Index(dtype=object)`` containing ``bool`` values. (:issue:`8875`)
 - ``DataFrame.to_json`` now returns accurate type serialisation for each column for frames of mixed dtype (:issue:`9037`)
 
@@ -395,11 +398,11 @@ Removal of prior version deprecations/changes
 - Removed ``convert_dummies`` in favor of ``get_dummies`` (:issue:`6581`)
 - Removed ``value_range`` in favor of ``describe`` (:issue:`6581`)
 
+.. _whatsnew_0160.performance:
+
 Performance
 ~~~~~~~~~~~
 
-.. _whatsnew_0160.performance:
-
 - Fixed a performance regression for ``.loc`` indexing with an array or list-like (:issue:`9126`:).
 - ``DataFrame.to_json`` 30x performance improvement for mixed dtype frames. (:issue:`9037`)
 - Performance improvements in ``MultiIndex.duplicated`` by working with labels instead of values (:issue:`9125`)
@@ -412,11 +415,11 @@ Performance
 - Performance and memory usage improvements in ``DataFrame.duplicated`` (:issue:`9398`)
 - Cythonized ``Period`` (:issue:`9440`)
 
+.. _whatsnew_0160.bug_fixes:
+
 Bug Fixes
 ~~~~~~~~~
 
-.. _whatsnew_0160.bug_fixes:
-
 - Changed ``.to_html`` to remove leading/trailing spaces in table body (:issue:`4987`)
 - Fixed issue using ``read_csv`` on s3 with Python 3 (:issue:`9452`)
 - Fixed compatibility issue in ``DatetimeIndex`` affecting architectures where ``numpy.int_`` defaults to ``numpy.int32`` (:issue:`8943`)
