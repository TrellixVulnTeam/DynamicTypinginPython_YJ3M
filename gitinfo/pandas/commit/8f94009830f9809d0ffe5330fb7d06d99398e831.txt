commit 8f94009830f9809d0ffe5330fb7d06d99398e831
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Mon Jun 11 20:28:16 2012 -0400

    ENH: clearer out of bounds error message in cut/qcut, close #1409

diff --git a/RELEASE.rst b/RELEASE.rst
index 24f18893c..a1c7772e3 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -123,6 +123,7 @@ pandas 0.8.0
   - Use index name as xlabel/ylabel in plots (#1415)
   - Add ``convert_dtype`` option to Series.apply to be able to leave data as
     dtype=object (#1414)
+  - Can specify all index level names in concat (#1419)
 
 **API Changes**
 
diff --git a/pandas/core/algorithms.py b/pandas/core/algorithms.py
index 4b41b0a45..b7608ee62 100644
--- a/pandas/core/algorithms.py
+++ b/pandas/core/algorithms.py
@@ -156,6 +156,9 @@ def value_counts(values, sort=True, ascending=False):
     """
     from pandas.core.series import Series
     from collections import defaultdict
+
+    values = np.asarray(values)
+
     if com.is_integer_dtype(values.dtype):
         values = com._ensure_int64(values)
         keys, counts = lib.value_count_int64(values)
diff --git a/pandas/tests/test_factor.py b/pandas/tests/test_factor.py
index 94421eed5..e61565f12 100644
--- a/pandas/tests/test_factor.py
+++ b/pandas/tests/test_factor.py
@@ -6,6 +6,7 @@ import nose
 
 import numpy as np
 
+from pandas.core.api import value_counts
 from pandas.core.factor import Factor
 from pandas.core.index import Index, Int64Index, MultiIndex
 from pandas.util.testing import assert_almost_equal
@@ -82,6 +83,18 @@ class TestFactor(unittest.TestCase):
         expected = np.repeat(False, len(self.factor))
         self.assert_(np.array_equal(result, expected))
 
+    def test_value_counts(self):
+        from pandas.tools.tile import cut
+
+        arr = np.random.randn(4)
+        factor = cut(arr, 4)
+
+        self.assert_(isinstance(factor, Factor))
+
+        result = value_counts(factor)
+        expected = value_counts(np.asarray(factor))
+        tm.assert_series_equal(result, expected)
+
 if __name__ == '__main__':
     import nose
     nose.runmodule(argv=[__file__,'-vvs','-x','--pdb', '--pdb-failure'],
diff --git a/pandas/tools/tests/test_tile.py b/pandas/tools/tests/test_tile.py
index e61250fe3..cd2f31084 100644
--- a/pandas/tools/tests/test_tile.py
+++ b/pandas/tools/tests/test_tile.py
@@ -109,6 +109,15 @@ class TestCut(unittest.TestCase):
         factor = qcut(arr, 10, labels=False)
         self.assert_(len(np.unique(factor)) == 10)
 
+    def test_cut_out_of_bounds(self):
+        np.random.seed(12345)
+
+        arr = np.random.randn(100)
+        self.assertRaises(ValueError, cut, arr, [-1, 0, 1])
+
+        arr = np.where(arr < -1, 0, arr)
+        self.assertRaises(ValueError, cut, arr, [-1, 0, 1])
+
 if __name__ == '__main__':
     nose.runmodule(argv=[__file__,'-vvs','-x','--pdb', '--pdb-failure'],
                    exit=False)
diff --git a/pandas/tools/tile.py b/pandas/tools/tile.py
index 975c02d26..87802edf6 100644
--- a/pandas/tools/tile.py
+++ b/pandas/tools/tile.py
@@ -146,6 +146,16 @@ def _bins_to_cuts(x, bins, right=True, labels=None, retbins=False,
     side = 'left' if right else 'right'
     ids = bins.searchsorted(x, side=side)
 
+    na_mask = com.notnull(x)
+    above = na_mask & (ids == len(bins))
+    below = na_mask & (ids == 0)
+
+    if above.any():
+        raise ValueError('Values fall past last bin: %s' % str(x[above]))
+
+    if below.any():
+        raise ValueError('Values fall before first bin: %s' % str(x[below]))
+
     mask = com.isnull(x)
     has_nas = mask.any()
 
