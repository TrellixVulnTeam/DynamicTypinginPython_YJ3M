commit f9e50690418672b34cfd314e5f60132eeafa7727
Author: Ka Wo Chen <kawoc@tepper.cmu.edu>
Date:   Sat Mar 12 12:45:31 2016 -0500

    BUG: GH12558 where nulls contributed to normalized value_counts
    
    Closes #12558
    
    Author: Ka Wo Chen <kawoc@tepper.cmu.edu>
    
    Closes #12566 from kawochen/BUG-FIX-12558 and squashes the following commits:
    
    d24c59e [Ka Wo Chen] BUG: GH12558 where nulls contributed to normalized value_counts

diff --git a/doc/source/whatsnew/v0.18.1.txt b/doc/source/whatsnew/v0.18.1.txt
index a57df796e..dbe446f0a 100644
--- a/doc/source/whatsnew/v0.18.1.txt
+++ b/doc/source/whatsnew/v0.18.1.txt
@@ -87,3 +87,5 @@ Performance Improvements
 
 Bug Fixes
 ~~~~~~~~~
+
+- Bug in ``value_counts`` when ``normalize=True`` and ``dropna=True`` where nulls still contributed to the normalized count (:issue:`12558`)
diff --git a/pandas/core/algorithms.py b/pandas/core/algorithms.py
index ad1efa21e..de38c0c39 100644
--- a/pandas/core/algorithms.py
+++ b/pandas/core/algorithms.py
@@ -342,7 +342,7 @@ def value_counts(values, sort=True, ascending=False, normalize=False,
         result = result.sort_values(ascending=ascending)
 
     if normalize:
-        result = result / float(values.size)
+        result = result / float(counts.sum())
 
     return result
 
diff --git a/pandas/core/groupby.py b/pandas/core/groupby.py
index c8598639d..f3fe5a5a2 100644
--- a/pandas/core/groupby.py
+++ b/pandas/core/groupby.py
@@ -11,7 +11,7 @@ from pandas.compat import(
     callable, map
 )
 from pandas import compat
-
+from pandas.compat.numpy_compat import _np_version_under1p8
 from pandas.core.base import (PandasObject, SelectionMixin, GroupByError,
                               DataError, SpecificationError)
 from pandas.core.categorical import Categorical
@@ -2949,8 +2949,18 @@ class SeriesGroupBy(GroupBy):
 
         if normalize:
             out = out.astype('float')
-            acc = rep(np.diff(np.r_[idx, len(ids)]))
-            out /= acc[mask] if dropna else acc
+            d = np.diff(np.r_[idx, len(ids)])
+            if dropna:
+                m = ids[lab == -1]
+                if _np_version_under1p8:
+                    mi, ml = algos.factorize(m)
+                    d[ml] = d[ml] - np.bincount(mi)
+                else:
+                    np.add.at(d, m, -1)
+                acc = rep(d)[mask]
+            else:
+                acc = rep(d)
+            out /= acc
 
         if sort and bins is None:
             cat = ids[inc][mask] if dropna else ids[inc]
diff --git a/pandas/tests/test_algos.py b/pandas/tests/test_algos.py
index b9a438460..5c83cdb14 100644
--- a/pandas/tests/test_algos.py
+++ b/pandas/tests/test_algos.py
@@ -517,6 +517,22 @@ class TestValueCounts(tm.TestCase):
                 pd.Series([10.3, 5., 5., None]).value_counts(dropna=False),
                 pd.Series([2, 1, 1], index=[5., 10.3, np.nan]))
 
+    def test_value_counts_normalized(self):
+        # GH12558
+        s = Series([1, 2, np.nan, np.nan, np.nan])
+        dtypes = (np.float64, np.object, 'M8[ns]')
+        for t in dtypes:
+            s_typed = s.astype(t)
+            result = s_typed.value_counts(normalize=True, dropna=False)
+            expected = Series([0.6, 0.2, 0.2],
+                              index=Series([np.nan, 2.0, 1.0], dtype=t))
+            tm.assert_series_equal(result, expected)
+
+            result = s_typed.value_counts(normalize=True, dropna=True)
+            expected = Series([0.5, 0.5],
+                              index=Series([2.0, 1.0], dtype=t))
+            tm.assert_series_equal(result, expected)
+
 
 class GroupVarTestMixin(object):
 
