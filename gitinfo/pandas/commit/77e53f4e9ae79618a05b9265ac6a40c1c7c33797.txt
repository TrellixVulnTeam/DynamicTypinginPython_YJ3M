commit 77e53f4e9ae79618a05b9265ac6a40c1c7c33797
Author: Adam Klein <adamklein@gmail.com>
Date:   Fri Feb 24 12:45:09 2012 -0500

    BUG: fix offset names, relativedelta namespace issue

diff --git a/pandas/core/daterange.py b/pandas/core/daterange.py
index 41651ba10..d6b4b5f08 100644
--- a/pandas/core/daterange.py
+++ b/pandas/core/daterange.py
@@ -20,6 +20,8 @@ class DateRange(DatetimeIndex):
         # use old mapping
         if time_rule is not None:
             offset = datetools._offsetMap[time_rule]
+        elif 'timeRule' in kwds and kwds['timeRule'] is not None:
+            offset = datetools._offsetMap[kwds['timeRule']]
 
         return super(DateRange, cls).__new__(cls, start=start, end=end,
                 periods=periods, offset=offset, tzinfo=tzinfo, name=name,
diff --git a/pandas/core/datetools.py b/pandas/core/datetools.py
index 613672cf2..553631464 100644
--- a/pandas/core/datetools.py
+++ b/pandas/core/datetools.py
@@ -21,6 +21,9 @@ except ImportError: # pragma: no cover
 
 import calendar #NOTE: replace with _tseries.monthrange
 
+# for backward compatibility
+relativedelta = lib.Delta
+
 #-------------------------------------------------------------------------------
 # Boxing and unboxing
 
@@ -177,10 +180,6 @@ class DateOffset(object):
             self._offset = lib.Delta(**kwds)
         else:
             self._offset = timedelta(1)
-        if 'name' in kwds:
-            self.name = kwds['name']
-        else:
-            self.name = ''
 
     def apply(self, other):
         if len(self.kwds) > 0:
@@ -202,7 +201,7 @@ class DateOffset(object):
 
     def _params(self):
         attrs = [(k, v) for k, v in vars(self).iteritems()
-                 if k not in ['kwds', '_offset']]
+                 if k not in ['kwds', '_offset', 'name']]
         attrs.extend(self.kwds.items())
         attrs = sorted(set(attrs))
 
@@ -319,6 +318,9 @@ class BDay(DateOffset, CacheableOffset):
         self.normalize = kwds.get('normalize', True)
 
     def __repr__(self):
+        if hasattr(self, 'name') and len(self.name):
+            return self.name
+
         className = getattr(self, '_outputName', self.__class__.__name__)
         attrs = []
 
@@ -902,7 +904,7 @@ class Second(Tick):
     _inc = timedelta(0, 1)
 
 day = DateOffset()
-bday = BDay(normalize=True)
+bday = BDay()
 businessDay = bday
 monthEnd = MonthEnd()
 yearEnd = YearEnd()
@@ -1104,7 +1106,6 @@ for i, weekday in enumerate(['MON', 'TUE', 'WED', 'THU', 'FRI']):
     for iweek in xrange(4):
         _offsetMap['WOM@%d%s' % (iweek + 1, weekday)] = \
             WeekOfMonth(week=iweek, weekday=i)
-        #NOTE: don't delete. this is for new map
         _newOffsetMap['WOM@%d%s' % (iweek + 1, weekday)] = \
             WeekOfMonth(week=iweek, weekday=i)
 
@@ -1113,14 +1114,16 @@ for i, weekday in enumerate(['MON', 'TUE', 'WED', 'THU', 'FRI']):
 _offsetNames = {}
 for name, offset in _offsetMap.iteritems():
     offset.name = name
-    _offsetNames[name] = offset
+    _offsetNames[offset] = name
+
+_offsetNames = dict([(v, k) for k, v in _offsetMap.iteritems()])
 
 _newOffsetNames = {}
 for name, offset in _newOffsetMap.iteritems():
     if offset is None:
         continue
     offset.name = name
-    _newOffsetNames[name] = offset
+    _newOffsetNames[offset] = offset
 
 def inferTimeRule(index, _deprecated=True):
     if len(index) < 3:
diff --git a/pandas/core/index.py b/pandas/core/index.py
index 6cfe21faf..2373bea40 100644
--- a/pandas/core/index.py
+++ b/pandas/core/index.py
@@ -1107,7 +1107,7 @@ class DatetimeIndex(Int64Index):
     def __new__(cls, data=None,
                 offset=None, start=None, end=None, periods=None,
                 dtype=None, copy=False, name=None, tzinfo=None,
-                _deprecated=False):
+                _deprecated=False, **kwds):
 
         if isinstance(offset, basestring):
             offset = datetools.getOffset(offset, _deprecated=_deprecated)
diff --git a/pandas/core/series.py b/pandas/core/series.py
index f31dc5e74..3d059da0a 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -2052,7 +2052,10 @@ copy : boolean, default False
 
         if kind == 'line':
             if use_index:
-                x = np.asarray(self.index)
+                if isinstance(self.index, DatetimeIndex):
+                    x = np.asarray(self.index.asobject())
+                else:
+                    x = np.asarray(self.index)
             else:
                 x = range(len(self))
 
