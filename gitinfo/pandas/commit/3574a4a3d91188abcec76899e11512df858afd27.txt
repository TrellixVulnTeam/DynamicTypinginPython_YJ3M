commit 3574a4a3d91188abcec76899e11512df858afd27
Author: jreback <jeff@reback.net>
Date:   Wed Dec 18 10:37:53 2013 -0500

    BUG: Bug in multi-index selection in PY3 when using certain keys (GH5725)

diff --git a/doc/source/release.rst b/doc/source/release.rst
index dc82550be..3a22de3cb 100644
--- a/doc/source/release.rst
+++ b/doc/source/release.rst
@@ -826,6 +826,7 @@ Bug Fixes
   - Bug in repeated indexing of object with resultant non-unique index (:issue:`5678`)
   - Bug in fillna with Series and a passed series/dict (:issue:`5703`)
   - Bug in groupby transform with a datetime-like grouper (:issue:`5712`)
+  - Bug in multi-index selection in PY3 when using certain keys (:issue:`5725`)
 
 pandas 0.12.0
 -------------
diff --git a/pandas/core/index.py b/pandas/core/index.py
index 7ae273d08..30f93564d 100644
--- a/pandas/core/index.py
+++ b/pandas/core/index.py
@@ -2300,8 +2300,14 @@ class MultiIndex(Index):
 
             # a Timestamp will raise a TypeError in a multi-index
             # rather than a KeyError, try it here
+            # note that a string that 'looks' like a Timestamp will raise
+            # a KeyError! (GH5725)
             if isinstance(key, (datetime.datetime, np.datetime64)) or (
                     compat.PY3 and isinstance(key, compat.string_types)):
+                try:
+                    return _try_mi(key)
+                except:
+                    pass
                 try:
                     return _try_mi(Timestamp(key))
                 except:
diff --git a/pandas/tests/test_indexing.py b/pandas/tests/test_indexing.py
index d1d6e5214..e601755ba 100644
--- a/pandas/tests/test_indexing.py
+++ b/pandas/tests/test_indexing.py
@@ -253,7 +253,7 @@ class TestIndexing(tm.TestCase):
         # GH5727
         # make sure that indexers are in the _internal_names_set
         n = 1000001
-        arrays = [lrange(n), np.empty(n)]
+        arrays = [lrange(n), lrange(n)]
         index = MultiIndex.from_tuples(lzip(*arrays))
         s = Series(np.zeros(n), index=index)
         str(s)
@@ -839,6 +839,20 @@ class TestIndexing(tm.TestCase):
         expected.columns = expected.columns.droplevel('lvl1')
         assert_frame_equal(result, expected)
 
+    def test_getitem_multiindex(self):
+
+        # GH 5725
+        # the 'A' happens to be a valid Timestamp so the doesn't raise the appropriate
+        # error, only in PY3 of course!
+        index = MultiIndex(levels=[['A', 'B', 'C'], [0, 26, 27, 37, 57, 67, 75, 82]],
+                           labels=[[0, 0, 0, 1, 2, 2, 2, 2, 2, 2], [1, 3, 4, 6, 0, 2, 2, 3, 5, 7]],
+                           names=['tag', 'day'])
+        arr = np.random.randn(len(index),1)
+        df = DataFrame(arr,index=index,columns=['val'])
+        result = df.val['A']
+        expected = Series(arr.ravel()[0:3],name='val',index=Index([26,37,57],name='day'))
+        assert_series_equal(result,expected)
+
     def test_setitem_dtype_upcast(self):
 
         # GH3216
