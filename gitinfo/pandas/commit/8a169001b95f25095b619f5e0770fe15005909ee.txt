commit 8a169001b95f25095b619f5e0770fe15005909ee
Author: klonuo <klonuo@gmail.com>
Date:   Sat Sep 20 00:26:43 2014 +0200

    BUG: to_clipboard output formatting (GH8305)

diff --git a/doc/source/v0.15.0.txt b/doc/source/v0.15.0.txt
index a6e035b26..770a9ece5 100644
--- a/doc/source/v0.15.0.txt
+++ b/doc/source/v0.15.0.txt
@@ -966,7 +966,7 @@ Bug Fixes
 - Bug with messed variables in ``radviz`` visualization (:issue:`8199`).
 - Bug in interpolation methods with the ``limit`` keyword when no values needed interpolating (:issue:`7173`).
 - Bug where ``col_space`` was ignored in ``DataFrame.to_string()`` when ``header=False`` (:issue:`8230`).
-
+- Bug in ``to_clipboard`` that would clip long column data (:issue:`8305`)
 - Bug in DataFrame terminal display: Setting max_column/max_rows to zero did not trigger auto-resizing of dfs to fit terminal width/height (:issue:`7180`).
 - Bug in OLS where running with "cluster" and "nw_lags" parameters did not work correctly, but also did not throw an error
   (:issue:`5884').
diff --git a/pandas/io/clipboard.py b/pandas/io/clipboard.py
index 204eeab74..dfa46156a 100644
--- a/pandas/io/clipboard.py
+++ b/pandas/io/clipboard.py
@@ -1,5 +1,5 @@
 """ io on the clipboard """
-from pandas import compat, get_option, DataFrame
+from pandas import compat, get_option, option_context, DataFrame
 from pandas.compat import StringIO
 
 
@@ -91,7 +91,8 @@ def to_clipboard(obj, excel=None, sep=None, **kwargs):  # pragma: no cover
 
     if isinstance(obj, DataFrame):
         # str(df) has various unhelpful defaults, like truncation
-        objstr = obj.to_string()
+        with option_context('display.max_colwidth', 999999):
+            objstr = obj.to_string(**kwargs)
     else:
         objstr = str(obj)
     clipboard_set(objstr)
diff --git a/pandas/io/tests/test_clipboard.py b/pandas/io/tests/test_clipboard.py
index 33e53fe0b..4855b715e 100644
--- a/pandas/io/tests/test_clipboard.py
+++ b/pandas/io/tests/test_clipboard.py
@@ -35,6 +35,12 @@ class TestClipboard(tm.TestCase):
         cls.data['mixed'] = DataFrame({'a': np.arange(1.0, 6.0) + 0.01,
                                        'b': np.arange(1, 6),
                                        'c': list('abcde')})
+
+        # Test columns exceeding "max_colwidth" (GH8305)
+        _cw = get_option('display.max_colwidth') + 1
+        cls.data['colwidth'] = mkdf(5, 3, data_gen_f=lambda *args: 'x' * _cw,
+                                   c_idx_type='s', r_idx_type='i',
+                                   c_idx_names=[None], r_idx_names=[None])
         # Test GH-5346
         max_rows = get_option('display.max_rows')
         cls.data['longdf'] = mkdf(max_rows+1, 3, data_gen_f=lambda *args: randint(2),
