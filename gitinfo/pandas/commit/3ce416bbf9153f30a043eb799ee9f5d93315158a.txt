commit 3ce416bbf9153f30a043eb799ee9f5d93315158a
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Wed Jul 11 19:55:07 2012 -0400

    BUG: avoid unnecessary copies when passed dtype matches DataFrame/ndarray in DataFrame constructor close #1572

diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index f83ec7fd2..f532e8df1 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -434,8 +434,9 @@ class DataFrame(NDFrame):
         if copy and dtype is None:
             mgr = mgr.copy()
         elif dtype is not None:
-            # no choice but to copy
-            mgr = mgr.astype(dtype)
+            # avoid copy if we can
+            if len(mgr.blocks) > 1 or mgr.blocks[0].values.dtype != dtype:
+                mgr = mgr.astype(dtype)
         return mgr
 
     def _init_dict(self, data, index, columns, dtype=None):
@@ -482,10 +483,11 @@ class DataFrame(NDFrame):
         values = _prep_ndarray(values, copy=copy)
 
         if dtype is not None:
-            try:
-                values = values.astype(dtype)
-            except Exception:
-                raise ValueError('failed to cast to %s' % dtype)
+            if values.dtype != dtype:
+                try:
+                    values = values.astype(dtype)
+                except Exception:
+                    raise ValueError('failed to cast to %s' % dtype)
 
         N, K = values.shape
 
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index bc76da056..de6837a6d 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -1468,6 +1468,16 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
         foo = DataFrame({'a': ['a', 'b', 'c']}, dtype=np.float64)
         self.assert_(foo['a'].dtype == object)
 
+    def test_constructor_dtype_nocast_view(self):
+        df = DataFrame([[1, 2]])
+        should_be_view = DataFrame(df, dtype=df[0].dtype)
+        should_be_view[0][0] = 99
+        self.assertEqual(df.values[0, 0], 99)
+
+        should_be_view = DataFrame(df.values, dtype=df[0].dtype)
+        should_be_view[0][0] = 97
+        self.assertEqual(df.values[0, 0], 97)
+
     def test_constructor_rec(self):
         rec = self.frame.to_records(index=False)
 
diff --git a/pandas/tests/test_series.py b/pandas/tests/test_series.py
index 1dba08335..5ad88a67c 100644
--- a/pandas/tests/test_series.py
+++ b/pandas/tests/test_series.py
@@ -291,6 +291,15 @@ class TestSeries(unittest.TestCase, CheckNameIntegration):
     def test_constructor_cast(self):
         self.assertRaises(ValueError, Series, ['a', 'b', 'c'], dtype=float)
 
+    def test_constructor_dtype_nocast(self):
+        # #1572
+        s = Series([1, 2, 3])
+
+        s2 = Series(s, dtype=np.int64)
+
+        s2[1] = 5
+        self.assertEquals(s[1], 5)
+
     def test_constructor_dict(self):
         d = {'a' : 0., 'b' : 1., 'c' : 2.}
         result = Series(d, index=['b', 'c', 'd', 'a'])
