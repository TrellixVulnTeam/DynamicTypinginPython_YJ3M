commit 802917ce0028d8807918428a2205e5bf94fb89a9
Author: Kevin Sheppard <kevin.sheppard@economics.ox.ac.uk>
Date:   Wed Dec 3 07:39:47 2014 -0500

    FIX: Workaround for integer hashing
    
    Force conversion to integer for missing values when
    they must be integer to avoid hash errors on 32 bit
    platforms.
    
    closes #8968

diff --git a/pandas/io/stata.py b/pandas/io/stata.py
index 45d327408..6ef8de269 100644
--- a/pandas/io/stata.py
+++ b/pandas/io/stata.py
@@ -611,9 +611,10 @@ class StataMissingValue(StringMixin):
     MISSING_VALUES = {}
     bases = (101, 32741, 2147483621)
     for b in bases:
-        MISSING_VALUES[b] = '.'
+        # Conversion to long to avoid hash issues on 32 bit platforms #8968
+        MISSING_VALUES[compat.long(b)] = '.'
         for i in range(1, 27):
-            MISSING_VALUES[i + b] = '.' + chr(96 + i)
+            MISSING_VALUES[compat.long(i + b)] = '.' + chr(96 + i)
 
     float32_base = b'\x00\x00\x00\x7f'
     increment = struct.unpack('<i', b'\x00\x08\x00\x00')[0]
@@ -643,6 +644,8 @@ class StataMissingValue(StringMixin):
 
     def __init__(self, value):
         self._value = value
+        # Conversion to long to avoid hash issues on 32 bit platforms #8968
+        value = compat.long(value) if value < 2147483648 else float(value)
         self._str = self.MISSING_VALUES[value]
 
     string = property(lambda self: self._str,
@@ -1375,13 +1378,6 @@ def _pad_bytes(name, length):
     return name + "\x00" * (length - len(name))
 
 
-def _default_names(nvar):
-    """
-    Returns default Stata names v1, v2, ... vnvar
-    """
-    return ["v%d" % i for i in range(1, nvar+1)]
-
-
 def _convert_datetime_to_stata_type(fmt):
     """
     Converts from one of the stata date formats to a type in TYPE_MAP
