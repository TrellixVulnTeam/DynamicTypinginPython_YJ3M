commit 4e4b2f533be658026aa05acb26e2dc15349c4232
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Sat Feb 18 19:11:38 2012 -0500

    ENH: implement Series.between for NA-friendly range selection, GH #802

diff --git a/pandas/core/series.py b/pandas/core/series.py
index 3d8ccaaa1..374b7b917 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -1978,8 +1978,8 @@ copy : boolean, default False
 
     def between(self, left, right, inclusive=True):
         """
-        Return boolean Series equivalent to left <= series <= right, taking NAs
-        (if any) into account
+        Return boolean Series equivalent to left <= series <= right. NA values
+        will be treated as False
 
         Parameters
         ----------
@@ -1993,7 +1993,19 @@ copy : boolean, default False
         is_between : Series
             NAs, if any, will be preserved
         """
-        pass
+        if inclusive:
+            lmask = self >= left
+            rmask = self <= right
+        else:
+            lmask = self > left
+            rmask = self < right
+
+        mask = lmask & rmask
+        if mask.dtype == np.object_:
+            np.putmask(mask, isnull(mask), False)
+            mask = mask.astype(bool)
+
+        return mask
 
 #----------------------------------------------------------------------
 # Miscellaneous
diff --git a/pandas/tests/test_series.py b/pandas/tests/test_series.py
index 0a85d8e05..425b5a8fa 100644
--- a/pandas/tests/test_series.py
+++ b/pandas/tests/test_series.py
@@ -1130,6 +1130,20 @@ class TestSeries(unittest.TestCase, CheckNameIntegration):
             expected = f(s.dropna() < s[9], s.dropna() > s[3]).reindex(s.index)
             assert_series_equal(result, expected)
 
+    def test_between(self):
+        from pandas import DateRange
+
+        s = Series(DateRange('1/1/2000', periods=20), dtype=object)
+        s[::2] = np.nan
+
+        result = s[s.between(s[3], s[17])]
+        expected = s[3:18].dropna()
+        assert_series_equal(result, expected)
+
+        result = s[s.between(s[3], s[17], inclusive=False)]
+        expected = s[5:16].dropna()
+        assert_series_equal(result, expected)
+
     def test_idxmin(self):
         # test idxmin
         # _check_stat_op approach can not be used here because of isnull check.
