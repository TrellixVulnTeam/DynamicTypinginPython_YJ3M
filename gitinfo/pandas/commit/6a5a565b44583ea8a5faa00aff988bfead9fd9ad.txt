commit 6a5a565b44583ea8a5faa00aff988bfead9fd9ad
Author: Marc Garcia <garcia.marc@gmail.com>
Date:   Thu Jun 21 11:10:31 2018 +0100

    DOC: Fixing spaces around backticks, and linting (#21570)

diff --git a/ci/lint.sh b/ci/lint.sh
index 2cbf6f7ae..9bcee55e1 100755
--- a/ci/lint.sh
+++ b/ci/lint.sh
@@ -174,6 +174,14 @@ if [ "$LINT" ]; then
     fi
     echo "Check for old-style classes DONE"
     
+    echo "Check for backticks incorrectly rendering because of missing spaces"
+    grep -R --include="*.rst" -E "[a-zA-Z0-9]\`\`?[a-zA-Z0-9]" doc/source/
+
+    if [ $? = "0" ]; then
+        RET=1
+    fi
+    echo "Check for backticks incorrectly rendering because of missing spaces DONE"
+
 else
     echo "NOT Linting"
 fi
diff --git a/doc/source/merging.rst b/doc/source/merging.rst
index b2cb388e3..2eb5962ea 100644
--- a/doc/source/merging.rst
+++ b/doc/source/merging.rst
@@ -279,9 +279,9 @@ need to be:
 
 Ignoring indexes on the concatenation axis
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-For ``DataFrame``s which don't have a meaningful index, you may wish to append
-them and ignore the fact that they may have overlapping indexes. To do this, use
-the ``ignore_index`` argument:
+For ``DataFrame`` objects which don't have a meaningful index, you may wish
+to append them and ignore the fact that they may have overlapping indexes. To
+do this, use the ``ignore_index`` argument:
 
 .. ipython:: python
 
@@ -314,7 +314,7 @@ This is also a valid argument to :meth:`DataFrame.append`:
 Concatenating with mixed ndims
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 
-You can concatenate a mix of ``Series`` and ``DataFrame``s. The
+You can concatenate a mix of ``Series`` and ``DataFrame`` objects. The
 ``Series`` will be transformed to ``DataFrame`` with the column name as
 the name of the ``Series``.
 
diff --git a/doc/source/release.rst b/doc/source/release.rst
index 7bbd4ba43..16fe896d9 100644
--- a/doc/source/release.rst
+++ b/doc/source/release.rst
@@ -2641,7 +2641,7 @@ Improvements to existing features
   option it is no longer possible to round trip Excel files with merged
   MultiIndex and Hierarchical Rows. Set the ``merge_cells`` to ``False`` to
   restore the previous behaviour.  (:issue:`5254`)
-- The FRED DataReader now accepts multiple series (:issue`3413`)
+- The FRED DataReader now accepts multiple series (:issue:`3413`)
 - StataWriter adjusts variable names to Stata's limitations (:issue:`5709`)
 
 API Changes
@@ -2837,7 +2837,7 @@ API Changes
   copy through chained assignment is detected, settable via option ``mode.chained_assignment``
 - test the list of ``NA`` values in the csv parser. add ``N/A``, ``#NA`` as independent default
   na values (:issue:`5521`)
-- The refactoring involving``Series`` deriving from ``NDFrame`` breaks ``rpy2<=2.3.8``. an Issue
+- The refactoring involving ``Series`` deriving from ``NDFrame`` breaks ``rpy2<=2.3.8``. an Issue
   has been opened against rpy2 and a workaround is detailed in :issue:`5698`. Thanks @JanSchulz.
 - ``Series.argmin`` and ``Series.argmax`` are now aliased to ``Series.idxmin`` and ``Series.idxmax``.
   These return the *index* of the min or max element respectively. Prior to 0.13.0 these would return
diff --git a/doc/source/reshaping.rst b/doc/source/reshaping.rst
index 88b7114cf..7d9925d80 100644
--- a/doc/source/reshaping.rst
+++ b/doc/source/reshaping.rst
@@ -654,7 +654,7 @@ When a column contains only one level, it will be omitted in the result.
     pd.get_dummies(df, drop_first=True)
 
 By default new columns will have ``np.uint8`` dtype.
-To choose another dtype, use the``dtype`` argument:
+To choose another dtype, use the ``dtype`` argument:
 
 .. ipython:: python
 
diff --git a/doc/source/timeseries.rst b/doc/source/timeseries.rst
index 111572643..9e01296d9 100644
--- a/doc/source/timeseries.rst
+++ b/doc/source/timeseries.rst
@@ -2169,8 +2169,8 @@ still considered to be equal even if they are in different time zones:
    rng_berlin[5]
    rng_eastern[5] == rng_berlin[5]
 
-Like ``Series``, ``DataFrame``, and ``DatetimeIndex``, ``Timestamp``s can be converted to other
-time zones using ``tz_convert``:
+Like ``Series``, ``DataFrame``, and ``DatetimeIndex``; ``Timestamp`` objects
+can be converted to other time zones using ``tz_convert``:
 
 .. ipython:: python
 
