commit 38e4d4660912c9132d2baa5f3fe1fc0d84e45e33
Author: jreback <jeff@reback.net>
Date:   Wed Oct 9 09:53:40 2013 -0400

    BUG: apply Timestamp to resultant datetimes when operating on offsets

diff --git a/pandas/tseries/offsets.py b/pandas/tseries/offsets.py
index e496bf46c..ad7d3ba03 100644
--- a/pandas/tseries/offsets.py
+++ b/pandas/tseries/offsets.py
@@ -8,6 +8,7 @@ from pandas.tseries.tools import to_datetime
 # import after tools, dateutil check
 from dateutil.relativedelta import relativedelta
 import pandas.tslib as tslib
+from pandas.tslib import Timestamp
 import numpy as np
 from pandas import _np_version_under1p7
 
@@ -92,9 +93,9 @@ class DateOffset(object):
             else:
                 for i in range(-self.n):
                     other = other - self._offset
-            return other
+            return Timestamp(other)
         else:
-            return other + timedelta(self.n)
+            return Timestamp(other + timedelta(self.n))
 
     def isAnchored(self):
         return (self.n == 1)
@@ -373,7 +374,7 @@ class BusinessDay(CacheableOffset, DateOffset):
             if self.offset:
                 result = result + self.offset
 
-            return result
+            return Timestamp(result)
 
         elif isinstance(other, (timedelta, Tick)):
             return BDay(self.n, offset=self.offset + other,
@@ -516,7 +517,7 @@ class MonthEnd(CacheableOffset, DateOffset):
             if n <= 0:
                 n = n + 1
         other = other + relativedelta(months=n, day=31)
-        return other
+        return Timestamp(other)
 
     @classmethod
     def onOffset(cls, dt):
@@ -538,7 +539,7 @@ class MonthBegin(CacheableOffset, DateOffset):
             n += 1
 
         other = other + relativedelta(months=n, day=1)
-        return other
+        return Timestamp(other)
 
     @classmethod
     def onOffset(cls, dt):
@@ -660,7 +661,7 @@ class Week(CacheableOffset, DateOffset):
                 other = other + timedelta((self.weekday - otherDay) % 7)
             for i in range(-k):
                 other = other - self._inc
-        return other
+        return Timestamp(other)
 
     def onOffset(self, dt):
         return dt.weekday() == self.weekday
@@ -901,7 +902,7 @@ class QuarterEnd(CacheableOffset, DateOffset):
 
         other = other + relativedelta(months=monthsToGo + 3 * n, day=31)
 
-        return other
+        return Timestamp(other)
 
     def onOffset(self, dt):
         modMonth = (dt.month - self.startingMonth) % 3
@@ -941,7 +942,7 @@ class QuarterBegin(CacheableOffset, DateOffset):
             n = n + 1
 
         other = other + relativedelta(months=3 * n - monthsSince, day=1)
-        return other
+        return Timestamp(other)
 
     @property
     def rule_code(self):
@@ -1093,7 +1094,7 @@ class YearEnd(CacheableOffset, DateOffset):
             # n == 0, roll forward
             result = _rollf(result)
 
-        return result
+        return Timestamp(result)
 
     def onOffset(self, dt):
         wkday, days_in_month = tslib.monthrange(dt.year, self.month)
@@ -1151,7 +1152,7 @@ class YearBegin(CacheableOffset, DateOffset):
             # n == 0, roll forward
             result = _rollf(result)
 
-        return result
+        return Timestamp(result)
 
     def onOffset(self, dt):
         return dt.month == self.month and dt.day == 1
