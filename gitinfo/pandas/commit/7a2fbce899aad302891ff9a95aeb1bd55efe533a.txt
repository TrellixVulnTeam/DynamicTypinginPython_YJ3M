commit 7a2fbce899aad302891ff9a95aeb1bd55efe533a
Author: chris-b1 <cbartak@gmail.com>
Date:   Thu Jul 26 12:32:29 2018 -0500

    BUG: rolling with MSVC 2017 build (#21813)
    
    * Appveyor 3.7
    
    * ci package list
    
    * change image type
    
    * try hack fix
    
    * lint
    
    * use isnan on problem function
    
    * use numpy compat isnan
    
    * use right isnan
    
    * work around OSX math undefs
    
    * cleanup const
    
    * fix reversion
    
    * ...

diff --git a/appveyor.yml b/appveyor.yml
index f70fc829e..c6199c149 100644
--- a/appveyor.yml
+++ b/appveyor.yml
@@ -20,12 +20,14 @@ environment:
   matrix:
 
     - CONDA_ROOT: "C:\\Miniconda3_64"
+      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
       PYTHON_VERSION: "3.6"
       PYTHON_ARCH: "64"
       CONDA_PY: "36"
       CONDA_NPY: "113"
 
     - CONDA_ROOT: "C:\\Miniconda3_64"
+      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
       PYTHON_VERSION: "2.7"
       PYTHON_ARCH: "64"
       CONDA_PY: "27"
diff --git a/doc/source/whatsnew/v0.23.4.txt b/doc/source/whatsnew/v0.23.4.txt
index 69525aaea..c17f4ffdd 100644
--- a/doc/source/whatsnew/v0.23.4.txt
+++ b/doc/source/whatsnew/v0.23.4.txt
@@ -20,7 +20,7 @@ and bug fixes. We recommend that all users upgrade to this version.
 Fixed Regressions
 ~~~~~~~~~~~~~~~~~
 
-- 
+- Python 3.7 with Windows gave all missing values for rolling variance calculations (:issue:`21813`)
 -
 
 .. _whatsnew_0234.bug_fixes:
diff --git a/pandas/_libs/src/headers/cmath b/pandas/_libs/src/headers/cmath
index d8e223940..2bccf9bb1 100644
--- a/pandas/_libs/src/headers/cmath
+++ b/pandas/_libs/src/headers/cmath
@@ -6,6 +6,7 @@
 #if defined(_MSC_VER) && (_MSC_VER < 1800)
 #include <cmath>
 namespace std {
+  __inline int isnan(double x) { return _isnan(x); }
   __inline int signbit(double num) { return _copysign(1.0, num) < 0; }
 }
 #else
diff --git a/pandas/_libs/window.pyx b/pandas/_libs/window.pyx
index c52bd99c3..6453b5ed2 100644
--- a/pandas/_libs/window.pyx
+++ b/pandas/_libs/window.pyx
@@ -14,6 +14,7 @@ cnp.import_array()
 
 
 cdef extern from "src/headers/cmath" namespace "std":
+    bint isnan(double) nogil
     int signbit(double) nogil
     double sqrt(double x) nogil
 
@@ -653,16 +654,16 @@ cdef inline void add_var(double val, double *nobs, double *mean_x,
                          double *ssqdm_x) nogil:
     """ add a value from the var calc """
     cdef double delta
-
-    # Not NaN
-    if val == val:
-        nobs[0] = nobs[0] + 1
-
-        # a part of Welford's method for the online variance-calculation
-        # https://en.wikipedia.org/wiki/Algorithms_for_calculating_variance
-        delta = val - mean_x[0]
-        mean_x[0] = mean_x[0] + delta / nobs[0]
-        ssqdm_x[0] = ssqdm_x[0] + ((nobs[0] - 1) * delta ** 2) / nobs[0]
+    # `isnan` instead of equality as fix for GH-21813, msvc 2017 bug
+    if isnan(val):
+        return
+
+    nobs[0] = nobs[0] + 1
+    # a part of Welford's method for the online variance-calculation
+    # https://en.wikipedia.org/wiki/Algorithms_for_calculating_variance
+    delta = val - mean_x[0]
+    mean_x[0] = mean_x[0] + delta / nobs[0]
+    ssqdm_x[0] = ssqdm_x[0] + ((nobs[0] - 1) * delta ** 2) / nobs[0]
 
 
 cdef inline void remove_var(double val, double *nobs, double *mean_x,
