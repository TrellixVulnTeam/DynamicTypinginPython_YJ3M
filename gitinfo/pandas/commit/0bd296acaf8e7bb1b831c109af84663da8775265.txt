commit 0bd296acaf8e7bb1b831c109af84663da8775265
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Fri Oct 28 11:11:00 2011 -0400

    BUG: clear Series caches on consolidation, address GH #304

diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index ea704b276..d341d038f 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -641,7 +641,7 @@ class DataFrame(NDFrame):
 
     def _set_columns(self, value):
         self._data.set_axis(0, value)
-        self._series_cache.clear()
+        self._clear_caches()
     columns = property(fset=_set_columns, fget=_get_columns)
 
     def _get_index(self):
@@ -649,9 +649,16 @@ class DataFrame(NDFrame):
 
     def _set_index(self, value):
         self._data.set_axis(1, value)
-        self._series_cache.clear()
+        self._clear_caches()
     index = property(fset=_set_index, fget=_get_index)
 
+    def _clear_caches(self):
+        self._series_cache.clear()
+
+    def _consolidate_inplace(self):
+        self._clear_caches()
+        NDFrame._consolidate_inplace(self)
+
     def as_matrix(self, columns=None):
         """
         Convert the frame to its Numpy-array matrix representation. Columns
@@ -1479,11 +1486,11 @@ class DataFrame(NDFrame):
 
     def _rename_index_inplace(self, mapper):
         self._data = self._data.rename_axis(mapper, axis=1)
-        self._series_cache.clear()
+        self._clear_caches()
 
     def _rename_columns_inplace(self, mapper):
         self._data = self._data.rename_items(mapper, copydata=False)
-        self._series_cache.clear()
+        self._clear_caches()
 
     #----------------------------------------------------------------------
     # Arithmetic / combination related
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index 6eafe4661..dc5bca73e 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -238,6 +238,21 @@ class CheckIndexing(object):
         # self.assert_(dm.objects is not None)
         self.assert_(dm[2].dtype == np.object_)
 
+    def test_setitem_clear_caches(self):
+        # GH #304
+        df = DataFrame({'x': [1.1, 2.1, 3.1, 4.1], 'y': [5.1, 6.1, 7.1, 8.1]},
+                       index=[0,1,2,3])
+        df.insert(2, 'z', np.nan)
+
+        # cache it
+        foo = df['z']
+
+        df.ix[2:, 'z'] = 42
+
+        expected = Series([np.nan, np.nan, 42, 42], index=df.index)
+        self.assert_(df['z'] is not foo)
+        assert_series_equal(df['z'], expected)
+
     def test_delitem_corner(self):
         f = self.frame.copy()
         del f['D']
