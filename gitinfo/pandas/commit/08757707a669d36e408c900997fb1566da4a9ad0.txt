commit 08757707a669d36e408c900997fb1566da4a9ad0
Author: jreback <jeff@reback.net>
Date:   Fri Jun 28 14:23:34 2013 -0400

    CLN: have _consolidate_inplace invalidate the cache when needed

diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 9b1f144ee..9c5108f74 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -2100,15 +2100,10 @@ class DataFrame(NDFrame):
         else:
             mgr_axis = 0
 
-        # Super bad smell, need to review all this cache inval / block business
-        blocks_before = len(self._data.blocks)
+        self._consolidate_inplace()
         new_data = self._data.get_slice(slobj, axis=mgr_axis,
                                         raise_on_error=raise_on_error)
 
-        # Internal consolidation requires cache invalidation
-        if len(self._data.blocks) != blocks_before:
-            self._clear_item_cache()
-
         return self._constructor(new_data)
 
     def _box_item_values(self, key, values):
diff --git a/pandas/core/generic.py b/pandas/core/generic.py
index b90368ab7..c41b02fdd 100644
--- a/pandas/core/generic.py
+++ b/pandas/core/generic.py
@@ -747,8 +747,8 @@ class NDFrame(PandasObject):
     # Consolidation of internals
 
     def _consolidate_inplace(self):
-        self._clear_item_cache()
-        self._data = self._data.consolidate()
+        f = lambda: self._data.consolidate()
+        self._data = self._protect_consolidate(f)
 
     def consolidate(self, inplace=False):
         """
@@ -768,7 +768,8 @@ class NDFrame(PandasObject):
         if inplace:
             self._consolidate_inplace()
         else:
-            cons_data = self._data.consolidate()
+            f = lambda: self._data.consolidate()
+            cons_data = self._protect_consolidate(f)
             if cons_data is self._data:
                 cons_data = cons_data.copy()
             return self._constructor(cons_data)
