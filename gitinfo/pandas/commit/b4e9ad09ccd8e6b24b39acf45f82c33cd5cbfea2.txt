commit b4e9ad09ccd8e6b24b39acf45f82c33cd5cbfea2
Author: gfyoung <gfyoung17+GitHub@gmail.com>
Date:   Thu Oct 31 01:06:02 2019 -0700

    TST: Test DataFrame rename with ChainMap (#29306)

diff --git a/pandas/tests/frame/test_alter_axes.py b/pandas/tests/frame/test_alter_axes.py
index 017cbea7e..11d73fc37 100644
--- a/pandas/tests/frame/test_alter_axes.py
+++ b/pandas/tests/frame/test_alter_axes.py
@@ -1,3 +1,4 @@
+from collections import ChainMap
 from datetime import datetime, timedelta
 import inspect
 
@@ -691,6 +692,24 @@ class TestDataFrameAlterAxes:
         tm.assert_index_equal(renamed.index, Index(["bar", "foo"], name="name"))
         assert renamed.index.name == renamer.index.name
 
+    @pytest.mark.parametrize(
+        "args,kwargs",
+        [
+            ((ChainMap({"A": "a"}, {"B": "b"}),), dict(axis="columns")),
+            ((), dict(columns=ChainMap({"A": "a"}, {"B": "b"}))),
+        ],
+    )
+    def test_rename_chainmap(self, args, kwargs):
+        # see gh-23859
+        colAData = range(1, 11)
+        colBdata = np.random.randn(10)
+
+        df = DataFrame({"A": colAData, "B": colBdata})
+        result = df.rename(*args, **kwargs)
+
+        expected = DataFrame({"a": colAData, "b": colBdata})
+        tm.assert_frame_equal(result, expected)
+
     def test_rename_axis_inplace(self, float_frame):
         # GH 15704
         expected = float_frame.rename_axis("foo")
