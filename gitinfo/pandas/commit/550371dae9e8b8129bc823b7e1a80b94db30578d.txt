commit 550371dae9e8b8129bc823b7e1a80b94db30578d
Author: Thomas Kluyver <takowl@gmail.com>
Date:   Wed Oct 5 19:40:29 2011 +0100

    Pandas can now be imported successfully in Python 3.
    
    Most of the changes were to do with division methods, as operator.div no longer exists.

diff --git a/pandas/core/common.py b/pandas/core/common.py
index ad9ddec52..1c46bc572 100644
--- a/pandas/core/common.py
+++ b/pandas/core/common.py
@@ -480,7 +480,10 @@ class groupby(dict):
         for value in seq:
             k = key(value)
             self.setdefault(k, []).append(value)
-    __iter__ = dict.iteritems
+    try:
+        __iter__ = dict.iteritems
+    except AttributeError:  # Python 3
+        __iter__ = dict.items
 
 def map_indices_py(arr):
     """
diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 1dc58738c..eaf731040 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -30,6 +30,7 @@ from pandas.core.indexing import _NDFrameIndexer, _maybe_droplevels
 from pandas.core.internals import BlockManager, make_block, form_blocks
 from pandas.core.series import Series, _is_bool_indexer
 from pandas.util.decorators import deprecate
+from pandas.util import py3compat
 import pandas.core.common as common
 import pandas.core.datetools as datetools
 import pandas._tseries as _tseries
@@ -292,7 +293,7 @@ class DataFrame(NDFrame):
     add = _arith_method(operator.add, 'add')
     mul = _arith_method(operator.mul, 'multiply')
     sub = _arith_method(operator.sub, 'subtract')
-    div = _arith_method(operator.div, 'divide')
+    div = _arith_method(lambda x, y: x / y, 'divide')
 
     radd = _arith_method(operator.add, 'add')
     rmul = _arith_method(operator.mul, 'multiply')
@@ -302,19 +303,26 @@ class DataFrame(NDFrame):
     __add__ = _arith_method(operator.add, '__add__', default_axis=None)
     __sub__ = _arith_method(operator.sub, '__sub__', default_axis=None)
     __mul__ = _arith_method(operator.mul, '__mul__', default_axis=None)
-    __div__ = _arith_method(operator.div, '__div__', default_axis=None)
     __truediv__ = _arith_method(operator.truediv, '__truediv__',
                                default_axis=None)
+    __floordiv__ = _arith_method(operator.floordiv, '__floordiv__',
+                               default_axis=None)
     __pow__ = _arith_method(operator.pow, '__pow__', default_axis=None)
 
     __radd__ = _arith_method(operator.add, '__radd__', default_axis=None)
     __rmul__ = _arith_method(operator.mul, '__rmul__', default_axis=None)
     __rsub__ = _arith_method(lambda x, y: y - x, '__rsub__', default_axis=None)
-    __rdiv__ = _arith_method(lambda x, y: y / x, '__rdiv__', default_axis=None)
     __rtruediv__ = _arith_method(lambda x, y: y / x, '__rtruediv__',
                                 default_axis=None)
+    __rfloordiv__ = _arith_method(lambda x, y: y // x, '__rfloordiv__',
+                               default_axis=None)
     __rpow__ = _arith_method(lambda x, y: y ** x, '__rpow__',
                              default_axis=None)
+    
+    # Python 2 division methods
+    if not py3compat.PY3:
+        __div__ = _arith_method(operator.div, '__div__', default_axis=None)
+        __rdiv__ = _arith_method(lambda x, y: y / x, '__rdiv__', default_axis=None)
 
     def __neg__(self):
         return self * -1
diff --git a/pandas/core/panel.py b/pandas/core/panel.py
index b06f90b24..4a1e9160d 100644
--- a/pandas/core/panel.py
+++ b/pandas/core/panel.py
@@ -15,6 +15,7 @@ from pandas.core.frame import DataFrame, _union_indexes
 from pandas.core.generic import AxisProperty, NDFrame
 from pandas.core.series import Series
 from pandas.util.decorators import deprecate
+from pandas.util import py3compat
 import pandas.core.common as common
 import pandas._tseries as _tseries
 
@@ -170,16 +171,22 @@ class Panel(NDFrame):
 
     __add__ = _arith_method(operator.add, '__add__')
     __sub__ = _arith_method(operator.sub, '__sub__')
+    __truediv__ = _arith_method(operator.truediv, '__truediv__')
+    __floordiv__ = _arith_method(operator.floordiv, '__floordiv__')
     __mul__ = _arith_method(operator.mul, '__mul__')
-    __div__ = _arith_method(operator.div, '__div__')
     __pow__ = _arith_method(operator.pow, '__pow__')
 
     __radd__ = _arith_method(operator.add, '__radd__')
     __rmul__ = _arith_method(operator.mul, '__rmul__')
     __rsub__ = _arith_method(lambda x, y: y - x, '__rsub__')
-    __rdiv__ = _arith_method(lambda x, y: y / x, '__rdiv__')
+    __rtruediv__ = _arith_method(lambda x, y: y / x, '__rtruediv__')
+    __rfloordiv__ = _arith_method(lambda x, y: y // x, '__rfloordiv__')
     __rpow__ = _arith_method(lambda x, y: y ** x, '__rpow__')
 
+    if not py3compat.PY3:
+        __div__ = _arith_method(operator.div, '__div__')
+        __rdiv__ = _arith_method(lambda x, y: y / x, '__rdiv__')
+
     def __init__(self, data, items=None, major_axis=None, minor_axis=None,
                  copy=False, dtype=None):
         """
@@ -642,8 +649,12 @@ class Panel(NDFrame):
 
     add = _panel_arith_method(operator.add, 'add')
     subtract = sub = _panel_arith_method(operator.sub, 'subtract')
-    divide = div = _panel_arith_method(operator.div, 'divide')
     multiply = mul = _panel_arith_method(operator.mul, 'multiply')
+    
+    try:
+        divide = div = _panel_arith_method(operator.div, 'divide')
+    except AttributeError:   # Python 3
+        divide = div = _panel_arith_method(operator.truediv, 'divide')
 
     def major_xs(self, key, copy=True):
         """
@@ -1214,8 +1225,12 @@ class LongPanel(DataFrame):
 
     add = _panel_arith_method(operator.add, 'add')
     subtract = sub = _panel_arith_method(operator.sub, 'subtract')
-    divide = div = _panel_arith_method(operator.div, 'divide')
     multiply = mul = _panel_arith_method(operator.mul, 'multiply')
+    
+    try:
+        divide = div = _panel_arith_method(operator.div, 'divide')
+    except AttributeError:   # Python 3
+        divide = div = _panel_arith_method(operator.truediv, 'divide')
 
     def to_wide(self):
         """
diff --git a/pandas/core/series.py b/pandas/core/series.py
index 74e2fdc64..ea9750624 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -21,6 +21,7 @@ from pandas.core.generic import PandasObject
 from pandas.core.index import Index, MultiIndex, _ensure_index
 from pandas.core.indexing import _SeriesIndexer, _maybe_droplevels
 from pandas.util.decorators import deprecate
+from pandas.util import py3compat
 import pandas.core.common as common
 import pandas.core.datetools as datetools
 import pandas._tseries as lib
@@ -425,24 +426,30 @@ copy : boolean, default False
     __add__ = _arith_method(operator.add, '__add__')
     __sub__ = _arith_method(operator.sub, '__sub__')
     __mul__ = _arith_method(operator.mul, '__mul__')
-    __div__ = _arith_method(operator.div, '__div__')
     __truediv__ = _arith_method(operator.truediv, '__truediv__')
+    __floordiv__ = _arith_method(operator.floordiv, '__floordiv__')
     __pow__ = _arith_method(operator.pow, '__pow__')
-    __truediv__ = _arith_method(operator.truediv, '__truediv__')
 
     __radd__ = _arith_method(operator.add, '__add__')
     __rmul__ = _arith_method(operator.mul, '__mul__')
     __rsub__ = _arith_method(lambda x, y: y - x, '__sub__')
-    __rdiv__ = _arith_method(lambda x, y: y / x, '__div__')
     __rtruediv__ = _arith_method(lambda x, y: y / x, '__truediv__')
+    __rfloordiv__ = _arith_method(lambda x, y: y // x, '__floordiv__')
     __rpow__ = _arith_method(lambda x, y: y ** x, '__pow__')
 
     # Inplace operators
     __iadd__ = __add__
     __isub__ = __sub__
     __imul__ = __mul__
-    __idiv__ = __div__
+    __itruediv__ = __truediv__
+    __ifloordiv__ = __floordiv__
     __ipow__ = __pow__
+    
+    # Python 2 division operators
+    if not py3compat.PY3:
+        __div__ = _arith_method(operator.div, '__div__')
+        __rdiv__ = _arith_method(lambda x, y: y / x, '__div__')
+        __idiv__ = __div__
 
     #----------------------------------------------------------------------
     # Misc public methods
@@ -1031,7 +1038,10 @@ copy : boolean, default False
     add = _flex_method(operator.add, 'add')
     sub = _flex_method(operator.sub, 'subtract')
     mul = _flex_method(operator.mul, 'multiply')
-    div = _flex_method(operator.div, 'divide')
+    try:
+        div = _flex_method(operator.div, 'divide')
+    except AttributeError:    # Python 3
+        div = _flex_method(operator.truediv, 'divide')
 
     def combine(self, other, func, fill_value=nan):
         """
diff --git a/pandas/core/sparse.py b/pandas/core/sparse.py
index f77bdff56..b7422f3e0 100644
--- a/pandas/core/sparse.py
+++ b/pandas/core/sparse.py
@@ -20,6 +20,8 @@ from pandas.core.panel import Panel, LongPanel
 import pandas.core.common as common
 import pandas.core.datetools as datetools
 
+from pandas.util import py3compat
+
 from pandas._sparse import BlockIndex, IntIndex
 import pandas._sparse as splib
 
@@ -296,24 +298,31 @@ to sparse
     __add__ = _sparse_op_wrap(operator.add, 'add')
     __sub__ = _sparse_op_wrap(operator.sub, 'sub')
     __mul__ = _sparse_op_wrap(operator.mul, 'mul')
-    __div__ = _sparse_op_wrap(operator.div, 'div')
     __truediv__ = _sparse_op_wrap(operator.truediv, 'truediv')
+    __floordiv__ = _sparse_op_wrap(operator.floordiv, 'floordiv')
     __pow__ = _sparse_op_wrap(operator.pow, 'pow')
 
     # reverse operators
     __radd__ = _sparse_op_wrap(operator.add, '__radd__')
-    __rmul__ = _sparse_op_wrap(operator.mul, '__rmul__')
     __rsub__ = _sparse_op_wrap(lambda x, y: y - x, '__rsub__')
-    __rdiv__ = _sparse_op_wrap(lambda x, y: y / x, '__rdiv__')
+    __rmul__ = _sparse_op_wrap(operator.mul, '__rmul__')
     __rtruediv__ = _sparse_op_wrap(lambda x, y: y / x, '__rtruediv__')
+    __rfloordiv__ = _sparse_op_wrap(lambda x, y: y // x, 'floordiv')
     __rpow__ = _sparse_op_wrap(lambda x, y: y ** x, '__rpow__')
 
     # Inplace operators
     __iadd__ = __add__
     __isub__ = __sub__
     __imul__ = __mul__
-    __idiv__ = __div__
+    __itruediv__ = __truediv__
+    __ifloordiv__ = __floordiv__
     __ipow__ = __pow__
+    
+    # Python 2 division operators
+    if not py3compat.PY3:
+        __div__ = _sparse_op_wrap(operator.div, 'div')
+        __rdiv__ = _sparse_op_wrap(lambda x, y: y / x, '__rdiv__')
+        __idiv__ = __div__
 
     @property
     def values(self):
diff --git a/pandas/util/py3compat.py b/pandas/util/py3compat.py
new file mode 100644
index 000000000..e8bb212e2
--- /dev/null
+++ b/pandas/util/py3compat.py
@@ -0,0 +1,3 @@
+import sys
+
+PY3 = (sys.version_info[0] >= 3)
