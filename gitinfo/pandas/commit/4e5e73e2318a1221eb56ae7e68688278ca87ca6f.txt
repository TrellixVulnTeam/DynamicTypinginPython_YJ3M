commit 4e5e73e2318a1221eb56ae7e68688278ca87ca6f
Author: jbrockmendel <jbrockmendel@gmail.com>
Date:   Fri Feb 28 03:49:23 2020 -0800

    TST: remove invalid internals tests (#32297)

diff --git a/pandas/core/internals/managers.py b/pandas/core/internals/managers.py
index 329bfdf54..e397167e4 100644
--- a/pandas/core/internals/managers.py
+++ b/pandas/core/internals/managers.py
@@ -711,16 +711,16 @@ class BlockManager(PandasObject):
         return type(self)(new_blocks, axes, do_integrity_check=False)
 
     def get_slice(self, slobj: slice, axis: int = 0):
-        if axis >= self.ndim:
-            raise IndexError("Requested axis not found in manager")
 
         if axis == 0:
             new_blocks = self._slice_take_blocks_ax0(slobj)
-        else:
+        elif axis == 1:
             _slicer = [slice(None)] * (axis + 1)
             _slicer[axis] = slobj
             slicer = tuple(_slicer)
             new_blocks = [blk.getitem_block(slicer) for blk in self.blocks]
+        else:
+            raise IndexError("Requested axis not found in manager")
 
         new_axes = list(self.axes)
         new_axes[axis] = new_axes[axis][slobj]
diff --git a/pandas/tests/internals/test_internals.py b/pandas/tests/internals/test_internals.py
index 27b050098..0b9d84d26 100644
--- a/pandas/tests/internals/test_internals.py
+++ b/pandas/tests/internals/test_internals.py
@@ -748,11 +748,6 @@ class TestIndexing:
         create_mgr("a,b,c,d,e,f: i8", item_shape=(N,)),
         create_mgr("a,b: f8; c,d: i8; e,f: string", item_shape=(N,)),
         create_mgr("a,b: f8; c,d: i8; e,f: f8", item_shape=(N,)),
-        # 3-dim
-        create_mgr("a,b,c,d,e,f: f8", item_shape=(N, N)),
-        create_mgr("a,b,c,d,e,f: i8", item_shape=(N, N)),
-        create_mgr("a,b: f8; c,d: i8; e,f: string", item_shape=(N, N)),
-        create_mgr("a,b: f8; c,d: i8; e,f: f8", item_shape=(N, N)),
     ]
 
     @pytest.mark.parametrize("mgr", MANAGERS)
@@ -775,6 +770,7 @@ class TestIndexing:
             )
             tm.assert_index_equal(mgr.axes[axis][slobj], sliced.axes[axis])
 
+        assert mgr.ndim <= 2, mgr.ndim
         for ax in range(mgr.ndim):
             # slice
             assert_slice_ok(mgr, ax, slice(None))
