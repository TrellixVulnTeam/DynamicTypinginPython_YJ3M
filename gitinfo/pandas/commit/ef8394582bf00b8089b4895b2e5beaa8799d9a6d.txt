commit ef8394582bf00b8089b4895b2e5beaa8799d9a6d
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Tue Jun 19 12:33:53 2012 -0400

    BUG: fix datetime64 boxing issue with non-integer index, close #1499

diff --git a/pandas/core/index.py b/pandas/core/index.py
index 2d689b722..927885cde 100644
--- a/pandas/core/index.py
+++ b/pandas/core/index.py
@@ -644,7 +644,7 @@ class Index(np.ndarray):
                 raise
 
             try:
-                return lib.get_value_at(series, key)
+                return lib.get_value_box(series, key)
             except IndexError:
                 raise
             except TypeError:
diff --git a/pandas/src/datetime.pyx b/pandas/src/datetime.pyx
index a40ed3076..e70b9ae85 100644
--- a/pandas/src/datetime.pyx
+++ b/pandas/src/datetime.pyx
@@ -269,6 +269,29 @@ def is_timestamp_array(ndarray[object] values):
             return False
     return True
 
+
+cpdef object get_value_box(ndarray arr, object loc):
+    cdef:
+        Py_ssize_t i, sz
+        void* data_ptr
+    if util.is_float_object(loc):
+        casted = int(loc)
+        if casted == loc:
+            loc = casted
+    i = <Py_ssize_t> loc
+    sz = cnp.PyArray_SIZE(arr)
+
+    if i < 0 and sz > 0:
+        i += sz
+    elif i >= sz or sz == 0:
+        raise IndexError('index out of bounds')
+
+    if arr.descr.type_num == NPY_DATETIME:
+        return Timestamp(util.get_value_1d(arr, i))
+    else:
+        return util.get_value_1d(arr, i)
+
+
 #----------------------------------------------------------------------
 # Frequency inference
 
diff --git a/pandas/tseries/tests/test_timeseries.py b/pandas/tseries/tests/test_timeseries.py
index b3cf8a67d..369523bf0 100644
--- a/pandas/tseries/tests/test_timeseries.py
+++ b/pandas/tseries/tests/test_timeseries.py
@@ -155,6 +155,10 @@ class TestTimeSeries(unittest.TestCase):
 
         self.assert_(isinstance(s[5], Timestamp))
 
+        rng = date_range('20090415', '20090519', freq='B')
+        s = Series(rng, index=rng)
+        self.assert_(isinstance(s[5], Timestamp))
+
     def test_timestamp_to_datetime(self):
         _skip_if_no_pytz()
         rng = date_range('20090415', '20090519',
