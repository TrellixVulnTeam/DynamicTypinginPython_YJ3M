commit c7300ea9ccf6c8b4eeb5a4ae59dc2419753c9b18
Author: abaldenko <abaldenko@massmutual.com>
Date:   Thu Feb 16 12:39:27 2017 -0500

    BUG: Concat with inner join and empty DataFrame
    
    closes #15328
    
    Author: abaldenko <abaldenko@massmutual.com>
    
    Closes #15397 from abaldenko/concat_empty_dataframe and squashes the following commits:
    
    47c8735 [abaldenko] BUG: Concat with inner join and empty DataFrame
    fc473b7 [abaldenko] BUG: Concat with inner join and empty DataFrame
    b86dcb6 [abaldenko] BUG: Concat with inner join and empty DataFrame

diff --git a/doc/source/whatsnew/v0.20.0.txt b/doc/source/whatsnew/v0.20.0.txt
index 09551cfc0..ddb908803 100644
--- a/doc/source/whatsnew/v0.20.0.txt
+++ b/doc/source/whatsnew/v0.20.0.txt
@@ -576,7 +576,7 @@ Bug Fixes
 - Bug in ``pd.read_csv()`` with ``float_precision='round_trip'`` which caused a segfault when a text entry is parsed (:issue:`15140`)
 
 - Bug in ``DataFrame.to_stata()`` and ``StataWriter`` which produces incorrectly formatted files to be produced for some locales (:issue:`13856`)
-
+- Bug in ``pd.concat()`` in which concatting with an empty dataframe with ``join='inner'`` was being improperly handled (:issue:`15328`)
 
 
 
diff --git a/pandas/tests/tools/test_concat.py b/pandas/tests/tools/test_concat.py
index 87a0dda34..2a28fccdc 100644
--- a/pandas/tests/tools/test_concat.py
+++ b/pandas/tests/tools/test_concat.py
@@ -1825,6 +1825,16 @@ class TestConcatenate(ConcatenateBase):
         result = concat([df1, df2], axis=1)
         assert_frame_equal(result, expected)
 
+    def test_concat_inner_join_empty(self):
+        # GH 15328
+        df_empty = pd.DataFrame()
+        df_a = pd.DataFrame({'a': [1, 2]}, index=[0, 1], dtype='int64')
+        df_expected = pd.DataFrame({'a': []}, index=[], dtype='int64')
+
+        for how, expected in [('inner', df_expected), ('outer', df_a)]:
+            result = pd.concat([df_a, df_empty], axis=1, join=how)
+            assert_frame_equal(result, expected)
+
     def test_concat_series_axis1_same_names_ignore_index(self):
         dates = date_range('01-Jan-2013', '01-Jan-2014', freq='MS')[0:-1]
         s1 = Series(randn(len(dates)), index=dates, name='value')
diff --git a/pandas/tests/tools/test_merge.py b/pandas/tests/tools/test_merge.py
index 472d8674f..b3b5e7e29 100644
--- a/pandas/tests/tools/test_merge.py
+++ b/pandas/tests/tools/test_merge.py
@@ -52,6 +52,14 @@ class TestMerge(tm.TestCase):
         self.right = DataFrame({'v2': np.random.randn(4)},
                                index=['d', 'b', 'c', 'a'])
 
+    def test_merge_inner_join_empty(self):
+        # GH 15328
+        df_empty = pd.DataFrame()
+        df_a = pd.DataFrame({'a': [1, 2]}, index=[0, 1], dtype='int64')
+        result = pd.merge(df_empty, df_a, left_index=True, right_index=True)
+        expected = pd.DataFrame({'a': []}, index=[], dtype='int64')
+        assert_frame_equal(result, expected)
+
     def test_merge_common(self):
         joined = merge(self.df, self.df2)
         exp = merge(self.df, self.df2, on=['key1', 'key2'])
diff --git a/pandas/tools/concat.py b/pandas/tools/concat.py
index dbbc831b1..31d7a9eb9 100644
--- a/pandas/tools/concat.py
+++ b/pandas/tools/concat.py
@@ -284,7 +284,9 @@ class _Concatenator(object):
                            if sum(obj.shape) > 0 or isinstance(obj, Series)]
 
             if (len(non_empties) and (keys is None and names is None and
-                                      levels is None and join_axes is None)):
+                                      levels is None and
+                                      join_axes is None and
+                                      not self.intersect)):
                 objs = non_empties
                 sample = objs[0]
 
