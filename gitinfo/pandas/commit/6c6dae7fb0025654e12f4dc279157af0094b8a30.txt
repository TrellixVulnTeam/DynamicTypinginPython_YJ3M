commit 6c6dae7fb0025654e12f4dc279157af0094b8a30
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Tue Nov 27 21:47:28 2012 -0500

    BUG: prevent uint64->int64 casting overflows. close #2355

diff --git a/pandas/core/internals.py b/pandas/core/internals.py
index a2329450a..fef873a15 100644
--- a/pandas/core/internals.py
+++ b/pandas/core/internals.py
@@ -1307,6 +1307,11 @@ def form_blocks(arrays, names, axes):
             else:
                 datetime_items.append((k, v))
         elif issubclass(v.dtype.type, np.integer):
+            if v.dtype == np.uint64:
+                # HACK #2355 definite overflow
+                if (v > 2**63 - 1).any():
+                    object_items.append((k, v))
+                    continue
             int_items.append((k, v))
         elif v.dtype == np.bool_:
             bool_items.append((k, v))
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index b76d9ea1e..9ac9a5b67 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -1762,6 +1762,24 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
                         1 : np.zeros(10, dtype=bool)})
         self.assertEqual(df.values.dtype, np.bool_)
 
+    def test_constructor_overflow_int64(self):
+        values = np.array([2**64 - i for i in range(1, 10)],
+                          dtype=np.uint64)
+
+        result = DataFrame({'a': values})
+        self.assert_(result['a'].dtype == object)
+
+        # #2355
+        data_scores = [(6311132704823138710, 273), (2685045978526272070, 23),
+                       (8921811264899370420, 45), (17019687244989530680L, 270),
+                       (9930107427299601010L, 273)]
+        dtype = [('uid', 'u8'), ('score', 'u8')]
+        data = np.zeros((len(data_scores),),dtype=dtype)
+        data[:] = data_scores
+        df_crawls = DataFrame(data)
+        self.assert_(df_crawls['uid'].dtype == object)
+
+
     def test_is_mixed_type(self):
         self.assert_(not self.frame._is_mixed_type)
         self.assert_(self.mixed_frame._is_mixed_type)
