commit 1b30cfc4244206e411de2e5c3734c6d6f6164bbe
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Fri Oct 21 11:42:29 2011 -0400

    TST: be less lazy about empty MultiIndex set difference, check names

diff --git a/pandas/core/index.py b/pandas/core/index.py
index a692da421..b7e4830c2 100644
--- a/pandas/core/index.py
+++ b/pandas/core/index.py
@@ -1531,12 +1531,16 @@ class MultiIndex(Index):
         """
         self._assert_can_do_setop(other)
 
+        result_names = self.names if self.names == other.names else None
+
         if self.equals(other):
-            return self[:0]
+            return MultiIndex(levels=[[]]*self.nlevels,
+                              labels=[[]]*self.nlevels,
+                              names=result_names)
 
         difference = sorted(set(self.values) - set(other.values))
         return MultiIndex.from_tuples(difference, sortorder=0,
-                                      names=self.names)
+                                      names=result_names)
 
     def _assert_can_do_setop(self, other):
         if not isinstance(other, MultiIndex):
diff --git a/pandas/tests/test_index.py b/pandas/tests/test_index.py
index 9bb2a048f..0b6ff7abb 100644
--- a/pandas/tests/test_index.py
+++ b/pandas/tests/test_index.py
@@ -907,10 +907,17 @@ class TestMultiIndex(unittest.TestCase):
         self.assert_(result.equals(expected))
         self.assertEqual(result.names, self.index.names)
 
+        # empty difference
         result = first - first
         expected = first[:0]
         self.assert_(result.equals(expected))
 
+        # names not the same
+        chunklet = self.index[-3:]
+        chunklet.names = ['foo', 'baz']
+        result = first - chunklet
+        self.assertEqual(result.names, [None, None])
+
     def test_argsort(self):
         result = self.index.argsort()
         expected = self.index.get_tuple_index().argsort()
