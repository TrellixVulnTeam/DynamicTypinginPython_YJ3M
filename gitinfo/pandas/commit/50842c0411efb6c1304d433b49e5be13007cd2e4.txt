commit 50842c0411efb6c1304d433b49e5be13007cd2e4
Author: Tom Augspurger <TomAugspurger@users.noreply.github.com>
Date:   Wed Jan 8 08:09:39 2020 -0600

    API: Store name outside attrs (#30798)
    
    * API: Store name outside attrs
    
    This aligns with xarray and h5py:
    https://github.com/pandas-dev/pandas/pull/29062#issuecomment-545703586

diff --git a/doc/source/reference/frame.rst b/doc/source/reference/frame.rst
index 4c9df35ea..01aa6c60e 100644
--- a/doc/source/reference/frame.rst
+++ b/doc/source/reference/frame.rst
@@ -273,6 +273,8 @@ Metadata
 
 :attr:`DataFrame.attrs` is a dictionary for storing global metadata for this DataFrame.
 
+.. warning:: ``DataFrame.attrs`` is considered experimental and may change without warning.
+
 .. autosummary::
    :toctree: api/
 
diff --git a/doc/source/reference/series.rst b/doc/source/reference/series.rst
index 0639730e2..4ad6a7b01 100644
--- a/doc/source/reference/series.rst
+++ b/doc/source/reference/series.rst
@@ -525,6 +525,8 @@ Metadata
 
 :attr:`Series.attrs` is a dictionary for storing global metadata for this Series.
 
+.. warning:: ``Series.attrs`` is considered experimental and may change without warning.
+
 .. autosummary::
    :toctree: api/
 
diff --git a/doc/source/whatsnew/v1.0.0.rst b/doc/source/whatsnew/v1.0.0.rst
index 1a12630b0..78a8ba5cd 100755
--- a/doc/source/whatsnew/v1.0.0.rst
+++ b/doc/source/whatsnew/v1.0.0.rst
@@ -218,6 +218,7 @@ Other enhancements
 - Added new writer for exporting Stata dta files in version 118, ``StataWriter118``.  This format supports exporting strings containing Unicode characters (:issue:`23573`)
 - :meth:`Series.map` now accepts ``collections.abc.Mapping`` subclasses as a mapper (:issue:`29733`)
 - The ``pandas.datetime`` class is now deprecated. Import from ``datetime`` instead (:issue:`30296`)
+- Added an experimental :attr:`~DataFrame.attrs` for storing global metadata about a dataset (:issue:`29062`)
 - :meth:`Timestamp.fromisocalendar` is now compatible with python 3.8 and above (:issue:`28115`)
 
 
diff --git a/pandas/core/generic.py b/pandas/core/generic.py
index 63bb04371..22655bf98 100644
--- a/pandas/core/generic.py
+++ b/pandas/core/generic.py
@@ -231,6 +231,10 @@ class NDFrame(PandasObject, SelectionMixin, indexing.IndexingMixin):
     def attrs(self) -> Dict[Optional[Hashable], Any]:
         """
         Dictionary of global attributes on this object.
+
+        .. warning::
+
+           attrs is experimental and may change without warning.
         """
         if self._attrs is None:
             self._attrs = {}
diff --git a/pandas/core/series.py b/pandas/core/series.py
index b81659920..446654374 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -159,7 +159,8 @@ class Series(base.IndexOpsMixin, generic.NDFrame):
 
     _typ = "series"
 
-    _metadata: List[str] = []
+    _name: Optional[Hashable]
+    _metadata: List[str] = ["name"]
     _accessors = {"dt", "cat", "str", "sparse"}
     _deprecations = (
         base.IndexOpsMixin._deprecations
@@ -425,13 +426,13 @@ class Series(base.IndexOpsMixin, generic.NDFrame):
 
     @property
     def name(self) -> Optional[Hashable]:
-        return self.attrs.get("name", None)
+        return self._name
 
     @name.setter
     def name(self, value: Optional[Hashable]) -> None:
         if not is_hashable(value):
             raise TypeError("Series.name must be a hashable type")
-        self.attrs["name"] = value
+        object.__setattr__(self, "_name", value)
 
     @property
     def values(self):
diff --git a/pandas/tests/frame/test_api.py b/pandas/tests/frame/test_api.py
index 26d6a917f..9263409f7 100644
--- a/pandas/tests/frame/test_api.py
+++ b/pandas/tests/frame/test_api.py
@@ -551,3 +551,11 @@ class TestDataFrameMisc:
         with tm.assert_produces_warning(None):
             with provisionalcompleter("ignore"):
                 list(ip.Completer.completions("df.", 1))
+
+    def test_attrs(self):
+        df = pd.DataFrame({"A": [2, 3]})
+        assert df.attrs == {}
+        df.attrs["version"] = 1
+
+        result = df.rename(columns=str)
+        assert result.attrs == {"version": 1}
diff --git a/pandas/tests/series/test_api.py b/pandas/tests/series/test_api.py
index d235e51d0..f96d6ddfc 100644
--- a/pandas/tests/series/test_api.py
+++ b/pandas/tests/series/test_api.py
@@ -512,6 +512,13 @@ class TestSeriesMisc:
         s = Series(range(9), dtype="Int64")
         assert s.size == 9
 
+    def test_attrs(self):
+        s = pd.Series([0, 1], name="abc")
+        assert s.attrs == {}
+        s.attrs["version"] = 1
+        result = s + 1
+        assert result.attrs == {"version": 1}
+
 
 class TestCategoricalSeries:
     @pytest.mark.parametrize(
