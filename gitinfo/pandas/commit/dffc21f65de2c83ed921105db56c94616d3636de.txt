commit dffc21f65de2c83ed921105db56c94616d3636de
Author: jreback <jeff@reback.net>
Date:   Tue Dec 10 09:25:57 2013 -0500

    BUG: HDFStore improperly inferring a freq on datetimeindexes

diff --git a/doc/source/io.rst b/doc/source/io.rst
index d2ad38f1a..3e3ced2b8 100644
--- a/doc/source/io.rst
+++ b/doc/source/io.rst
@@ -2089,6 +2089,7 @@ dict:
 
 .. ipython:: python
 
+   np.random.seed(1234)
    index = date_range('1/1/2000', periods=8)
    s = Series(randn(5), index=['a', 'b', 'c', 'd', 'e'])
    df = DataFrame(randn(8, 3), index=index,
@@ -2513,6 +2514,7 @@ be data_columns
    df_dc.ix[4:6,'string'] = np.nan
    df_dc.ix[7:9,'string'] = 'bar'
    df_dc['string2'] = 'cool'
+   df_dc.ix[1:3,['B','C']] = 1.0
    df_dc
 
    # on-disk operations
@@ -2520,7 +2522,7 @@ be data_columns
    store.select('df_dc', [ Term('B>0') ])
 
    # getting creative
-   store.select('df_dc', ['B > 0', 'C > 0', 'string == foo'])
+   store.select('df_dc', 'B > 0 & C > 0 & string == foo')
 
    # this is in-memory version of this type of selection
    df_dc[(df_dc.B > 0) & (df_dc.C > 0) & (df_dc.string == 'foo')]
diff --git a/pandas/io/pytables.py b/pandas/io/pytables.py
index 6ebc33afd..09618b77a 100644
--- a/pandas/io/pytables.py
+++ b/pandas/io/pytables.py
@@ -1434,12 +1434,11 @@ class IndexCol(StringMixin):
             self.values = Index(values, **kwargs)
         except:
 
-            # if the output freq is different that what we recorded, then infer
-            # it
+            # if the output freq is different that what we recorded,
+            # it should be None (see also 'doc example part 2')
             if 'freq' in kwargs:
-                kwargs['freq'] = 'infer'
-            self.values = Index(
-                _maybe_convert(values, self.kind, encoding), **kwargs)
+                kwargs['freq'] = None
+            self.values = Index(values, **kwargs)
 
         # set the timezone if indicated
         # we stored in utc, so reverse to local timezone
diff --git a/pandas/io/tests/test_pytables.py b/pandas/io/tests/test_pytables.py
index 1953f7948..e9c04932a 100644
--- a/pandas/io/tests/test_pytables.py
+++ b/pandas/io/tests/test_pytables.py
@@ -1327,6 +1327,29 @@ class TestHDFStore(tm.TestCase):
                     df_dc.string == 'foo')]
             tm.assert_frame_equal(result, expected)
 
+        with ensure_clean_store(self.path) as store:
+            # doc example part 2
+            np.random.seed(1234)
+            index = date_range('1/1/2000', periods=8)
+            df_dc = DataFrame(np.random.randn(8, 3), index=index,
+                              columns=['A', 'B', 'C'])
+            df_dc['string'] = 'foo'
+            df_dc.ix[4:6,'string'] = np.nan
+            df_dc.ix[7:9,'string'] = 'bar'
+            df_dc.ix[:,['B','C']] = df_dc.ix[:,['B','C']].abs()
+            df_dc['string2'] = 'cool'
+
+            # on-disk operations
+            store.append('df_dc', df_dc, data_columns = ['B', 'C', 'string', 'string2'])
+
+            result = store.select('df_dc', [ Term('B>0') ])
+            expected = df_dc[df_dc.B>0]
+            tm.assert_frame_equal(result,expected)
+
+            result = store.select('df_dc', ['B > 0', 'C > 0', 'string == "foo"'])
+            expected = df_dc[(df_dc.B > 0) & (df_dc.C > 0) & (df_dc.string == 'foo')]
+            tm.assert_frame_equal(result,expected)
+
     def test_create_table_index(self):
 
         with ensure_clean_store(self.path) as store:
