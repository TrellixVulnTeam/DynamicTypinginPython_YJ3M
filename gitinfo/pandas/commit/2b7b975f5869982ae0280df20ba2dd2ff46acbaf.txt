commit 2b7b975f5869982ae0280df20ba2dd2ff46acbaf
Author: jbrockmendel <jbrockmendel@gmail.com>
Date:   Thu Jul 2 07:42:05 2020 -0700

    TYP: types for tz_compare (#35093)

diff --git a/pandas/_libs/lib.pyx b/pandas/_libs/lib.pyx
index ea97bab21..37d83a73c 100644
--- a/pandas/_libs/lib.pyx
+++ b/pandas/_libs/lib.pyx
@@ -73,7 +73,7 @@ from pandas._libs.tslibs.nattype cimport (
 )
 from pandas._libs.tslibs.conversion cimport convert_to_tsobject
 from pandas._libs.tslibs.timedeltas cimport convert_to_timedelta64
-from pandas._libs.tslibs.timezones cimport get_timezone, tz_compare
+from pandas._libs.tslibs.timezones cimport tz_compare
 from pandas._libs.tslibs.period cimport is_period_object
 from pandas._libs.tslibs.offsets cimport is_offset_object
 
@@ -1789,7 +1789,7 @@ def is_datetime_with_singletz_array(values: ndarray) -> bool:
     for i in range(n):
         base_val = values[i]
         if base_val is not NaT:
-            base_tz = get_timezone(getattr(base_val, 'tzinfo', None))
+            base_tz = getattr(base_val, 'tzinfo', None)
             break
 
     for j in range(i, n):
diff --git a/pandas/_libs/tslibs/timezones.pxd b/pandas/_libs/tslibs/timezones.pxd
index 78483bd6f..0179be3cd 100644
--- a/pandas/_libs/tslibs/timezones.pxd
+++ b/pandas/_libs/tslibs/timezones.pxd
@@ -7,7 +7,7 @@ cdef bint is_tzlocal(tzinfo tz)
 
 cdef bint treat_tz_as_pytz(tzinfo tz)
 
-cpdef bint tz_compare(object start, object end)
+cpdef bint tz_compare(tzinfo start, tzinfo end)
 cpdef object get_timezone(object tz)
 cpdef object maybe_get_tz(object tz)
 
diff --git a/pandas/_libs/tslibs/timezones.pyx b/pandas/_libs/tslibs/timezones.pyx
index 112da2eb5..5bf47efec 100644
--- a/pandas/_libs/tslibs/timezones.pyx
+++ b/pandas/_libs/tslibs/timezones.pyx
@@ -301,7 +301,7 @@ def infer_tzinfo(datetime start, datetime end):
     return tz
 
 
-cpdef bint tz_compare(object start, object end):
+cpdef bint tz_compare(tzinfo start, tzinfo end):
     """
     Compare string representations of timezones
 
@@ -324,7 +324,6 @@ cpdef bint tz_compare(object start, object end):
     Returns:
     -------
     bool
-
     """
     # GH 18523
     return get_timezone(start) == get_timezone(end)
diff --git a/pandas/core/arrays/datetimes.py b/pandas/core/arrays/datetimes.py
index 296f11583..12eefec0c 100644
--- a/pandas/core/arrays/datetimes.py
+++ b/pandas/core/arrays/datetimes.py
@@ -2266,7 +2266,9 @@ def validate_tz_from_dtype(dtype, tz: Optional[tzinfo]) -> Optional[tzinfo]:
     return tz
 
 
-def _infer_tz_from_endpoints(start, end, tz):
+def _infer_tz_from_endpoints(
+    start: Timestamp, end: Timestamp, tz: Optional[tzinfo]
+) -> Optional[tzinfo]:
     """
     If a timezone is not explicitly given via `tz`, see if one can
     be inferred from the `start` and `end` endpoints.  If more than one
