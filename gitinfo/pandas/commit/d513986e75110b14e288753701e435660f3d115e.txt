commit d513986e75110b14e288753701e435660f3d115e
Author: Bernard Willers <bwillers@gmail.com>
Date:   Thu May 28 21:07:35 2015 -0400

    BUG:  Holiday(..) with both offset and observance raises NotImplementedError #10217
    
    GH10217

diff --git a/doc/source/whatsnew/v0.17.0.txt b/doc/source/whatsnew/v0.17.0.txt
index dae1342c3..95d9fd3a3 100644
--- a/doc/source/whatsnew/v0.17.0.txt
+++ b/doc/source/whatsnew/v0.17.0.txt
@@ -38,6 +38,8 @@ Backwards incompatible API changes
 Other API Changes
 ^^^^^^^^^^^^^^^^^
 
+- ``Holiday`` now raises ``NotImplementedError`` if both ``offset`` and ``observance`` are used in constructor. (:issue:`102171`)
+
 .. _whatsnew_0170.deprecations:
 
 Deprecations
diff --git a/pandas/tests/test_tseries.py b/pandas/tests/test_tseries.py
index 1b796ed2d..035b3ac07 100644
--- a/pandas/tests/test_tseries.py
+++ b/pandas/tests/test_tseries.py
@@ -9,6 +9,8 @@ from pandas.compat import range, lrange, zip
 import pandas.lib as lib
 import pandas._period as period
 import pandas.algos as algos
+from pandas.tseries.holiday import Holiday, SA, next_monday
+from pandas import DateOffset
 
 
 class TestTseriesUtil(tm.TestCase):
@@ -737,6 +739,17 @@ class TestPeriodField(tm.TestCase):
     def test_get_period_field_array_raises_on_out_of_range(self):
         self.assertRaises(ValueError, period.get_period_field_arr, -1, np.empty(1), 0)
 
+
+class TestHolidayConflictingArguments(tm.TestCase):
+
+    # GH 10217
+
+    def test_both_offset_observance_raises(self):
+
+        with self.assertRaises(NotImplementedError) as cm:
+            h = Holiday("Cyber Monday", month=11, day=1,
+                        offset=[DateOffset(weekday=SA(4))], observance=next_monday)
+
 if __name__ == '__main__':
     import nose
     nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
diff --git a/pandas/tseries/holiday.py b/pandas/tseries/holiday.py
index 799be98a3..f55569302 100644
--- a/pandas/tseries/holiday.py
+++ b/pandas/tseries/holiday.py
@@ -148,6 +148,9 @@ class Holiday(object):
         >>> July3rd = Holiday('July 3rd', month=7, day=3,
                               days_of_week=(0, 1, 2, 3))
         """
+        if offset is not None and observance is not None:
+            raise NotImplementedError("Cannot use both offset and observance.")
+
         self.name = name
         self.year = year
         self.month = month
