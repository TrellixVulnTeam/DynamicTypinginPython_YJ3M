commit f23bc67f9158f806e14db700d7ec6876d60876ac
Author: Chang She <chang@lambdafoundry.com>
Date:   Mon May 7 15:54:30 2012 -0400

    BUG: alias offset freq to closest period freq when plotting #1202

diff --git a/pandas/tseries/frequencies.py b/pandas/tseries/frequencies.py
index abad140d2..5f7719550 100644
--- a/pandas/tseries/frequencies.py
+++ b/pandas/tseries/frequencies.py
@@ -241,6 +241,32 @@ _offset_map = {
     'W': Week()
 }
 
+_offset_to_period_map = {
+    'WEEKDAY' : 'D',
+    'EOM' : 'M',
+    'B' : 'D',
+    'BM' : 'M',
+    'BQS' : 'Q',
+    'QS' : 'Q',
+    'BQ' : 'Q',
+    'BA' : 'A',
+    'AS' : 'A',
+    'BAS' : 'A',
+    'MS' : 'M'
+}
+
+need_suffix = ['QS', 'BQ', 'BQS', 'AS', 'BA', 'BAS']
+months = ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP',
+          'OCT', 'NOV', 'DEC']
+for prefix in need_suffix:
+    for m in months:
+        _offset_to_period_map['%s-%s' % (prefix, m)] = \
+            _offset_to_period_map[prefix]
+
+def offset_to_period_alias(offset_str):
+    """ alias to closest period strings BQ->Q etc"""
+    return _offset_to_period_map.get(offset_str, offset_str)
+
 _rule_aliases = {
     # Legacy rules that will continue to map to their original values
     # essentially for the rest of time
diff --git a/pandas/tseries/plotting.py b/pandas/tseries/plotting.py
index 08b461b5c..eefdde30f 100644
--- a/pandas/tseries/plotting.py
+++ b/pandas/tseries/plotting.py
@@ -74,6 +74,7 @@ def tsplot(series, plotf, *args, **kwargs):
     if isinstance(freq, DateOffset):
         freq = freq.rule_code
 
+    freq = frequencies.offset_to_period_alias(freq)
     # Convert DatetimeIndex to PeriodIndex
     if isinstance(series.index, DatetimeIndex):
         idx = series.index.to_period(freq=freq)
diff --git a/pandas/tseries/tests/test_plotting.py b/pandas/tseries/tests/test_plotting.py
index 92f9493d2..8aa9674a9 100644
--- a/pandas/tseries/tests/test_plotting.py
+++ b/pandas/tseries/tests/test_plotting.py
@@ -90,6 +90,15 @@ class TestTSPlot(unittest.TestCase):
             ser = ser[[0, 3, 5, 6]]
             _check_plot_works(ser.plot)
 
+    @slow
+    def test_aplot_offset_freq(self):
+        ser = tm.makeTimeSeries()
+        _check_plot_works(ser.plot)
+
+        dr = date_range(ser.index[0], freq='BQS', periods=10)
+        ser = Series(np.random.randn(len(dr)), dr)
+        _check_plot_works(ser.plot)
+
 
 PNG_PATH = 'tmp.png'
 def _check_plot_works(f, freq=None, series=None, *args, **kwargs):
