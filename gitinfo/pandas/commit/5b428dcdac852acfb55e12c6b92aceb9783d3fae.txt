commit 5b428dcdac852acfb55e12c6b92aceb9783d3fae
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Sun May 27 13:11:49 2012 -0400

    REF: rename pandas._tseries to pandas.lib, close #1315

diff --git a/pandas/__init__.py b/pandas/__init__.py
index 98393e93d..d5039f977 100644
--- a/pandas/__init__.py
+++ b/pandas/__init__.py
@@ -7,7 +7,7 @@ from datetime import datetime
 import numpy as np
 
 try:
-    import pandas._tseries as lib
+    import pandas.lib as lib
 except Exception:  # pragma: no cover
     import sys
     e = sys.exc_info()[1] # Py25 and Py3 current exception syntax conflict
@@ -25,7 +25,7 @@ from pandas.core.api import *
 from pandas.sparse.api import *
 from pandas.stats.api import *
 from pandas.tseries.api import *
-from pandas._tseries import NaT
+from pandas.lib import NaT
 
 from pandas.core.format import (set_printoptions, reset_printoptions,
                                 set_eng_float_format)
diff --git a/pandas/core/algorithms.py b/pandas/core/algorithms.py
index d46a199a2..894acdb6a 100644
--- a/pandas/core/algorithms.py
+++ b/pandas/core/algorithms.py
@@ -6,7 +6,7 @@ intended for public consumption
 import numpy as np
 
 import pandas.core.common as com
-import pandas._tseries as lib
+import pandas.lib as lib
 
 def match(to_match, values, na_sentinel=-1):
     """
diff --git a/pandas/core/common.py b/pandas/core/common.py
index 515bc21ac..1944be0f8 100644
--- a/pandas/core/common.py
+++ b/pandas/core/common.py
@@ -19,7 +19,7 @@ from numpy.lib.format import read_array, write_array
 import numpy as np
 
 import pandas._algos as _algos
-import pandas._tseries as lib
+import pandas.lib as lib
 from pandas.util import py3compat
 import codecs
 import csv
diff --git a/pandas/core/factor.py b/pandas/core/factor.py
index 6bc45924a..ac745a1ab 100644
--- a/pandas/core/factor.py
+++ b/pandas/core/factor.py
@@ -1,6 +1,6 @@
 import numpy as np
 import pandas.core.common as com
-import pandas._tseries as lib
+import pandas.lib as lib
 
 
 class Factor(np.ndarray):
diff --git a/pandas/core/format.py b/pandas/core/format.py
index ca8a517c8..53b9052e1 100644
--- a/pandas/core/format.py
+++ b/pandas/core/format.py
@@ -10,7 +10,7 @@ from pandas.core.index import MultiIndex, _ensure_index
 from pandas.util import py3compat
 
 import pandas.core.common as com
-import pandas._tseries as lib
+import pandas.lib as lib
 
 import numpy as np
 
diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index a8906f7c1..df3387cc3 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -43,7 +43,7 @@ import pandas.core.nanops as nanops
 import pandas.core.common as com
 import pandas.core.generic as generic
 import pandas.core.datetools as datetools
-import pandas._tseries as lib
+import pandas.lib as lib
 
 #----------------------------------------------------------------------
 # Docstring templates
diff --git a/pandas/core/groupby.py b/pandas/core/groupby.py
index f9f41bd2f..d03e74ee9 100644
--- a/pandas/core/groupby.py
+++ b/pandas/core/groupby.py
@@ -11,7 +11,7 @@ from pandas.core.panel import Panel
 from pandas.util.decorators import cache_readonly, Appender
 import pandas.core.algorithms as algos
 import pandas.core.common as com
-import pandas._tseries as lib
+import pandas.lib as lib
 
 
 class GroupByError(Exception):
diff --git a/pandas/core/index.py b/pandas/core/index.py
index 153d2c4bb..1debdd03e 100644
--- a/pandas/core/index.py
+++ b/pandas/core/index.py
@@ -11,7 +11,7 @@ from pandas.core.common import ndtake
 from pandas.util.decorators import cache_readonly
 from pandas.util import py3compat
 import pandas.core.common as com
-import pandas._tseries as lib
+import pandas.lib as lib
 import pandas._algos as _algos
 
 
diff --git a/pandas/core/internals.py b/pandas/core/internals.py
index 68e61d0dc..684b9dada 100644
--- a/pandas/core/internals.py
+++ b/pandas/core/internals.py
@@ -6,7 +6,7 @@ import numpy as np
 
 from pandas.core.index import Index, _ensure_index, _handle_legacy_indexes
 import pandas.core.common as com
-import pandas._tseries as lib
+import pandas.lib as lib
 
 class Block(object):
     """
diff --git a/pandas/core/nanops.py b/pandas/core/nanops.py
index bfbdb6fae..92f105027 100644
--- a/pandas/core/nanops.py
+++ b/pandas/core/nanops.py
@@ -4,7 +4,7 @@ import numpy as np
 
 from pandas.core.common import isnull, notnull
 import pandas.core.common as com
-import pandas._tseries as lib
+import pandas.lib as lib
 
 try:
     import bottleneck as bn
diff --git a/pandas/core/panel.py b/pandas/core/panel.py
index b8b014e2b..08539060b 100644
--- a/pandas/core/panel.py
+++ b/pandas/core/panel.py
@@ -20,7 +20,7 @@ from pandas.util import py3compat
 from pandas.util.decorators import deprecate, Appender, Substitution
 import pandas.core.common as com
 import pandas.core.nanops as nanops
-import pandas._tseries as lib
+import pandas.lib as lib
 
 
 def _ensure_like_indices(time, panels):
diff --git a/pandas/core/series.py b/pandas/core/series.py
index 3da598e15..e2be35c1d 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -28,7 +28,7 @@ import pandas.core.datetools as datetools
 import pandas.core.format as fmt
 import pandas.core.generic as generic
 import pandas.core.nanops as nanops
-import pandas._tseries as lib
+import pandas.lib as lib
 from pandas.util.decorators import Appender, Substitution
 
 from pandas.compat.scipy import scoreatpercentile as _quantile
diff --git a/pandas/io/date_converters.py b/pandas/io/date_converters.py
index bae9d19fd..fe424eeab 100644
--- a/pandas/io/date_converters.py
+++ b/pandas/io/date_converters.py
@@ -1,6 +1,6 @@
 """This module is designed for community supported date conversion functions"""
 import numpy as np
-import pandas._tseries as lib
+import pandas.lib as lib
 
 def parse_date_time(date_col, time_col):
     date_col = _maybe_cast(date_col)
diff --git a/pandas/io/parsers.py b/pandas/io/parsers.py
index 8ac9d88ce..f227cfbbc 100644
--- a/pandas/io/parsers.py
+++ b/pandas/io/parsers.py
@@ -19,7 +19,7 @@ from pandas.core.index import Index, MultiIndex
 from pandas.core.frame import DataFrame
 import datetime
 import pandas.core.common as com
-import pandas._tseries as lib
+import pandas.lib as lib
 from pandas.util import py3compat
 from pandas.io.date_converters import generic_parser
 
diff --git a/pandas/io/pytables.py b/pandas/io/pytables.py
index cfcfe46c3..93c805b6a 100644
--- a/pandas/io/pytables.py
+++ b/pandas/io/pytables.py
@@ -24,7 +24,7 @@ from pandas.core.internals import BlockManager, make_block
 from pandas.core.reshape import block2d_to_block3d
 import pandas.core.common as com
 
-import pandas._tseries as lib
+import pandas.lib as lib
 from contextlib import contextmanager
 
 # reading and writing the full object in one go
diff --git a/pandas/io/tests/test_date_converters.py b/pandas/io/tests/test_date_converters.py
index 58bf5c4d0..f0549358e 100644
--- a/pandas/io/tests/test_date_converters.py
+++ b/pandas/io/tests/test_date_converters.py
@@ -18,9 +18,9 @@ from pandas.io.parsers import (read_csv, read_table, read_fwf,
                                ExcelFile, TextParser)
 from pandas.util.testing import (assert_almost_equal, assert_frame_equal,
                                  assert_series_equal, network)
-import pandas._tseries as lib
+import pandas.lib as lib
 from pandas.util import py3compat
-from pandas._tseries import Timestamp
+from pandas.lib import Timestamp
 import pandas.io.date_converters as conv
 
 class TestConverters(unittest.TestCase):
diff --git a/pandas/io/tests/test_parsers.py b/pandas/io/tests/test_parsers.py
index f565cee7a..45386ccec 100644
--- a/pandas/io/tests/test_parsers.py
+++ b/pandas/io/tests/test_parsers.py
@@ -17,9 +17,9 @@ from pandas.io.parsers import (read_csv, read_table, read_fwf,
                                ExcelFile, TextParser)
 from pandas.util.testing import (assert_almost_equal, assert_frame_equal,
                                  assert_series_equal, network)
-import pandas._tseries as lib
+import pandas.lib as lib
 from pandas.util import py3compat
-from pandas._tseries import Timestamp
+from pandas.lib import Timestamp
 
 from numpy.testing.decorators import slow
 from pandas.io.date_converters import (
diff --git a/pandas/sparse/array.py b/pandas/sparse/array.py
index 06d1710f6..aa183dd47 100644
--- a/pandas/sparse/array.py
+++ b/pandas/sparse/array.py
@@ -14,7 +14,7 @@ from pandas.util import py3compat
 
 from pandas._sparse import BlockIndex, IntIndex
 import pandas._sparse as splib
-import pandas._tseries as lib
+import pandas.lib as lib
 
 
 def _sparse_op_wrap(op, name):
diff --git a/pandas/src/generate_code.py b/pandas/src/generate_code.py
index 4ea1ef3d8..9439bb377 100644
--- a/pandas/src/generate_code.py
+++ b/pandas/src/generate_code.py
@@ -599,7 +599,7 @@ def arrmap_%(name)s(ndarray[%(c_type)s] index, object func):
 
     cdef ndarray[object] result = np.empty(length, dtype=np.object_)
 
-    from _tseries import maybe_convert_objects
+    from pandas.lib import maybe_convert_objects
 
     for i in range(length):
         result[i] = func(index[i])
diff --git a/pandas/src/generated.pyx b/pandas/src/generated.pyx
index 2eae3581c..ce311823c 100644
--- a/pandas/src/generated.pyx
+++ b/pandas/src/generated.pyx
@@ -1849,7 +1849,7 @@ def arrmap_float64(ndarray[float64_t] index, object func):
 
     cdef ndarray[object] result = np.empty(length, dtype=np.object_)
 
-    from _tseries import maybe_convert_objects
+    from pandas.lib import maybe_convert_objects
 
     for i in range(length):
         result[i] = func(index[i])
@@ -1864,7 +1864,7 @@ def arrmap_object(ndarray[object] index, object func):
 
     cdef ndarray[object] result = np.empty(length, dtype=np.object_)
 
-    from _tseries import maybe_convert_objects
+    from pandas.lib import maybe_convert_objects
 
     for i in range(length):
         result[i] = func(index[i])
@@ -1879,7 +1879,7 @@ def arrmap_int32(ndarray[int32_t] index, object func):
 
     cdef ndarray[object] result = np.empty(length, dtype=np.object_)
 
-    from _tseries import maybe_convert_objects
+    from pandas.lib import maybe_convert_objects
 
     for i in range(length):
         result[i] = func(index[i])
@@ -1894,7 +1894,7 @@ def arrmap_int64(ndarray[int64_t] index, object func):
 
     cdef ndarray[object] result = np.empty(length, dtype=np.object_)
 
-    from _tseries import maybe_convert_objects
+    from pandas.lib import maybe_convert_objects
 
     for i in range(length):
         result[i] = func(index[i])
@@ -1909,7 +1909,7 @@ def arrmap_bool(ndarray[uint8_t] index, object func):
 
     cdef ndarray[object] result = np.empty(length, dtype=np.object_)
 
-    from _tseries import maybe_convert_objects
+    from pandas.lib import maybe_convert_objects
 
     for i in range(length):
         result[i] = func(index[i])
diff --git a/pandas/stats/moments.py b/pandas/stats/moments.py
index 3f3425c0c..a4036bfaf 100644
--- a/pandas/stats/moments.py
+++ b/pandas/stats/moments.py
@@ -10,7 +10,7 @@ from numpy import NaN
 import numpy as np
 
 from pandas.core.api import DataFrame, Series, notnull
-import pandas._tseries as _tseries
+import pandas.lib as _tseries
 
 from pandas.util.decorators import Substitution, Appender
 
diff --git a/pandas/tests/test_common.py b/pandas/tests/test_common.py
index c11886162..472e0dce0 100644
--- a/pandas/tests/test_common.py
+++ b/pandas/tests/test_common.py
@@ -48,7 +48,7 @@ def test_isnull_datetime():
     idx = date_range('1/1/1990', periods=20)
     assert(notnull(idx).all())
 
-    import pandas._tseries as lib
+    import pandas.lib as lib
     idx = np.asarray(idx)
     idx[0] = lib.iNaT
     idx = DatetimeIndex(idx)
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index d43bb58c4..e5d964b32 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -30,7 +30,7 @@ from pandas.util.testing import (assert_almost_equal,
                                  assert_frame_equal)
 
 import pandas.util.testing as tm
-import pandas._tseries as lib
+import pandas.lib as lib
 
 #-------------------------------------------------------------------------------
 # DataFrame test cases
diff --git a/pandas/tests/test_series.py b/pandas/tests/test_series.py
index 882e7b054..a30fd0bbf 100644
--- a/pandas/tests/test_series.py
+++ b/pandas/tests/test_series.py
@@ -16,7 +16,7 @@ from pandas import (Index, Series, TimeSeries, DataFrame, isnull, notnull,
 from pandas.core.index import MultiIndex
 from pandas.tseries.index import Timestamp, DatetimeIndex
 import pandas.core.series as smod
-import pandas._tseries as lib
+import pandas.lib as lib
 
 import pandas.core.datetools as datetools
 import pandas.core.nanops as nanops
diff --git a/pandas/tests/test_tseries.py b/pandas/tests/test_tseries.py
index bf1d5d877..d16bf2d0d 100644
--- a/pandas/tests/test_tseries.py
+++ b/pandas/tests/test_tseries.py
@@ -5,7 +5,7 @@ import numpy as np
 from pandas import Index, isnull
 from pandas.util.testing import assert_almost_equal
 import pandas.util.testing as common
-import pandas._tseries as lib
+import pandas.lib as lib
 import pandas._algos as algos
 from datetime import datetime
 
diff --git a/pandas/tests/test_ujson.py b/pandas/tests/test_ujson.py
index bfe83d5a6..ab441fce7 100644
--- a/pandas/tests/test_ujson.py
+++ b/pandas/tests/test_ujson.py
@@ -272,7 +272,7 @@ class UltraJSONTests(TestCase):
 
     def test_datetime_nanosecond_unit(self):
         from datetime import datetime
-        from pandas._tseries import Timestamp
+        from pandas.lib import Timestamp
 
         val = datetime.now()
         stamp = Timestamp(val)
diff --git a/pandas/tools/merge.py b/pandas/tools/merge.py
index f031dca4c..46290b0c8 100644
--- a/pandas/tools/merge.py
+++ b/pandas/tools/merge.py
@@ -18,7 +18,7 @@ from pandas.util.decorators import cache_readonly, Appender, Substitution
 from pandas.sparse.frame import SparseDataFrame
 import pandas.core.common as com
 
-import pandas._tseries as lib
+import pandas.lib as lib
 
 @Substitution('\nleft : DataFrame')
 @Appender(_merge_doc, indents=0)
diff --git a/pandas/tools/tests/test_merge.py b/pandas/tools/tests/test_merge.py
index b6ab8976d..35530a4bb 100644
--- a/pandas/tools/tests/test_merge.py
+++ b/pandas/tools/tests/test_merge.py
@@ -14,7 +14,7 @@ from pandas.tseries.index import DatetimeIndex
 from pandas.tools.merge import merge, concat, ordered_merge, MergeError
 from pandas.util.testing import (assert_frame_equal, assert_series_equal,
                                  assert_almost_equal, rands)
-import pandas._tseries as lib
+import pandas.lib as lib
 import pandas.util.testing as tm
 
 a_ = np.array
diff --git a/pandas/tseries/frequencies.py b/pandas/tseries/frequencies.py
index ede8c127e..6577c7f20 100644
--- a/pandas/tseries/frequencies.py
+++ b/pandas/tseries/frequencies.py
@@ -6,7 +6,7 @@ import numpy as np
 from pandas.tseries.offsets import DateOffset
 from pandas.util.decorators import cache_readonly
 import pandas.tseries.offsets as offsets
-import pandas._tseries as lib
+import pandas.lib as lib
 
 class FreqGroup(object):
     FR_ANN = 1000
diff --git a/pandas/tseries/index.py b/pandas/tseries/index.py
index 5c1c3545f..eaa034b8c 100644
--- a/pandas/tseries/index.py
+++ b/pandas/tseries/index.py
@@ -14,8 +14,8 @@ import pandas.core.common as com
 import pandas.tseries.offsets as offsets
 import pandas.tseries.tools as tools
 
-from pandas._tseries import Timestamp
-import pandas._tseries as lib
+from pandas.lib import Timestamp
+import pandas.lib as lib
 import pandas._algos as _algos
 
 def _utc():
diff --git a/pandas/tseries/offsets.py b/pandas/tseries/offsets.py
index fe268003c..30142faf8 100644
--- a/pandas/tseries/offsets.py
+++ b/pandas/tseries/offsets.py
@@ -9,8 +9,8 @@ from pandas.util.decorators import cache_readonly
 # import after tools, dateutil check
 from dateutil.relativedelta import relativedelta
 
-from pandas._tseries import Timestamp
-import pandas._tseries as lib
+from pandas.lib import Timestamp
+import pandas.lib as lib
 
 #----------------------------------------------------------------------
 # DateOffset
diff --git a/pandas/tseries/period.py b/pandas/tseries/period.py
index ac6a5bc42..a96e7533b 100644
--- a/pandas/tseries/period.py
+++ b/pandas/tseries/period.py
@@ -11,8 +11,8 @@ import pandas.tseries.frequencies as _freq_mod
 
 import pandas.core.common as com
 
-from pandas._tseries import Timestamp
-import pandas._tseries as lib
+from pandas.lib import Timestamp
+import pandas.lib as lib
 
 
 #---------------
diff --git a/pandas/tseries/resample.py b/pandas/tseries/resample.py
index e1fb75a3e..f75c7b45c 100644
--- a/pandas/tseries/resample.py
+++ b/pandas/tseries/resample.py
@@ -10,8 +10,8 @@ from pandas.tseries.period import Period, PeriodIndex, period_range
 from pandas.util.decorators import cache_readonly
 import pandas.core.common as com
 
-from pandas._tseries import Timestamp
-import pandas._tseries as lib
+from pandas.lib import Timestamp
+import pandas.lib as lib
 
 
 class TimeGrouper(CustomGrouper):
diff --git a/pandas/tseries/tests/test_frequencies.py b/pandas/tseries/tests/test_frequencies.py
index ccfbbb743..c4853efb5 100644
--- a/pandas/tseries/tests/test_frequencies.py
+++ b/pandas/tseries/tests/test_frequencies.py
@@ -13,7 +13,7 @@ from pandas.tseries.frequencies import to_offset, infer_freq
 from pandas.tseries.tools import to_datetime
 import pandas.tseries.offsets as offsets
 
-import pandas._tseries as lib
+import pandas.lib as lib
 
 def test_to_offset_multiple():
     freqstr = '2h30min'
diff --git a/pandas/tseries/tests/test_offsets.py b/pandas/tseries/tests/test_offsets.py
index d5febc10c..e3c57cf6b 100644
--- a/pandas/tseries/tests/test_offsets.py
+++ b/pandas/tseries/tests/test_offsets.py
@@ -16,8 +16,8 @@ from pandas.tseries.tools import parse_time_string
 
 from nose.tools import assert_raises
 
-import pandas._tseries as lib
-from pandas._tseries import Timestamp
+import pandas.lib as lib
+from pandas.lib import Timestamp
 
 def test_monthrange():
     import calendar
diff --git a/pandas/tseries/tests/test_timeseries.py b/pandas/tseries/tests/test_timeseries.py
index cc9a7ad11..9d1cf965d 100644
--- a/pandas/tseries/tests/test_timeseries.py
+++ b/pandas/tseries/tests/test_timeseries.py
@@ -24,7 +24,7 @@ import pandas.tseries.frequencies as fmod
 from pandas.util.testing import assert_series_equal, assert_almost_equal
 import pandas.util.testing as tm
 
-import pandas._tseries as lib
+import pandas.lib as lib
 import cPickle as pickle
 import pandas.core.datetools as dt
 from numpy.random import rand
@@ -725,7 +725,7 @@ class TestTimeSeries(unittest.TestCase):
 
     def test_timestamp_fields(self):
         # extra fields from DatetimeIndex like quarter and week
-        from pandas._tseries import Timestamp
+        from pandas.lib import Timestamp
         idx = tm.makeDateIndex(10)
 
         fields = ['dayofweek', 'dayofyear', 'week', 'weekofyear', 'quarter']
diff --git a/pandas/tseries/tests/test_timezones.py b/pandas/tseries/tests/test_timezones.py
index 6b3b3dba1..50dca8468 100644
--- a/pandas/tseries/tests/test_timezones.py
+++ b/pandas/tseries/tests/test_timezones.py
@@ -24,7 +24,7 @@ import pandas.tseries.tools as tools
 from pandas.util.testing import assert_series_equal, assert_almost_equal
 import pandas.util.testing as tm
 
-import pandas._tseries as lib
+import pandas.lib as lib
 import cPickle as pickle
 import pandas.core.datetools as dt
 from numpy.random import rand
diff --git a/pandas/tseries/tools.py b/pandas/tseries/tools.py
index f2060ad84..68129ba60 100644
--- a/pandas/tseries/tools.py
+++ b/pandas/tseries/tools.py
@@ -4,7 +4,7 @@ import sys
 
 import numpy as np
 
-import pandas._tseries as lib
+import pandas.lib as lib
 import pandas.core.common as com
 
 try:
diff --git a/pandas/util/decorators.py b/pandas/util/decorators.py
index ebf914d51..5f535c778 100644
--- a/pandas/util/decorators.py
+++ b/pandas/util/decorators.py
@@ -1,5 +1,5 @@
 from pandas.util.py3compat import StringIO
-from pandas._tseries import cache_readonly
+from pandas.lib import cache_readonly
 import sys
 import warnings
 
diff --git a/scripts/bench_join.py b/scripts/bench_join.py
index 56d97599b..d838cf938 100644
--- a/scripts/bench_join.py
+++ b/scripts/bench_join.py
@@ -1,5 +1,5 @@
 import numpy as np
-import pandas._tseries as lib
+import pandas.lib as lib
 from pandas import *
 from copy import deepcopy
 import time
diff --git a/scripts/bench_join_multi.py b/scripts/bench_join_multi.py
index 6ea851366..a0babaf59 100644
--- a/scripts/bench_join_multi.py
+++ b/scripts/bench_join_multi.py
@@ -3,7 +3,7 @@ from pandas import *
 import numpy as np
 from itertools import izip
 from pandas.util.testing import rands
-import pandas._tseries as lib
+import pandas.lib as lib
 
 N = 100000
 
diff --git a/scripts/groupby_test.py b/scripts/groupby_test.py
index 55bee2f10..6e4177e2f 100644
--- a/scripts/groupby_test.py
+++ b/scripts/groupby_test.py
@@ -5,7 +5,7 @@ import numpy as np
 
 from pandas import *
 
-import pandas._tseries as tseries
+import pandas.lib as tseries
 import pandas.core.groupby as gp
 import pandas.util.testing as tm
 reload(gp)
diff --git a/scripts/roll_median_leak.py b/scripts/roll_median_leak.py
index 19ba946ca..b7e412390 100644
--- a/scripts/roll_median_leak.py
+++ b/scripts/roll_median_leak.py
@@ -5,7 +5,7 @@ import os
 
 from vbench.api import Benchmark
 from pandas.util.testing import rands
-import pandas._tseries as lib
+import pandas.lib as lib
 import pandas._sandbox as sbx
 import time
 
diff --git a/setup.py b/setup.py
index 3b8cf1112..71e7bc37b 100755
--- a/setup.py
+++ b/setup.py
@@ -362,24 +362,16 @@ algos_ext = Extension('pandas._algos',
                       include_dirs=[np.get_include()],
                       )
 
-tseries_ext = Extension('pandas._tseries',
-                      depends=tseries_depends + ['pandas/src/numpy_helper.h'],
-                      sources=[srcpath('tseries', suffix=suffix),
-                               'pandas/src/period.c',
-                               'pandas/src/datetime/np_datetime.c',
-                               'pandas/src/datetime/np_datetime_strings.c'],
-                      include_dirs=[np.get_include()],
-                      # pyrex_gdb=True,
-                      # extra_compile_args=['-Wconversion']
-                      )
-
-# tseries_ext = Extension('pandas._tseries',
-#                         depends=tseries_depends + ['pandas/src/numpy_helper.h'],
-#                         sources=[srcpath('datetime', suffix=suffix)],
-#                         include_dirs=[np.get_include()],
-#                         # pyrex_gdb=True,
-#                         # extra_compile_args=['-Wconversion']
-#                         )
+lib_ext = Extension('pandas.lib',
+                    depends=tseries_depends + ['pandas/src/numpy_helper.h'],
+                    sources=[srcpath('tseries', suffix=suffix),
+                             'pandas/src/period.c',
+                             'pandas/src/datetime/np_datetime.c',
+                             'pandas/src/datetime/np_datetime_strings.c'],
+                    include_dirs=[np.get_include()],
+                    # pyrex_gdb=True,
+                    # extra_compile_args=['-Wconversion']
+                    )
 
 
 sparse_ext = Extension('pandas._sparse',
@@ -420,7 +412,7 @@ cppsandbox_ext = Extension('pandas._cppsandbox',
                            sources=[srcpath('cppsandbox', suffix=suffix)],
                            include_dirs=[np.get_include()])
 
-extensions = [algos_ext, tseries_ext, sparse_ext, ujson_ext]
+extensions = [algos_ext, lib_ext, sparse_ext, ujson_ext]
 
 if not ISRELEASED:
     extensions.extend([sandbox_ext])
