commit f39118095198ea3d79e9ee21e689e174c5db95a3
Author: y-p <yoval@gmx.com>
Date:   Mon Oct 15 21:50:17 2012 +0200

    ENH: Eliminate __setitem__ in pd.Index
    
    `Index` inherits from np.ndarray, yet implements an immutable datatype,
    Pythonic duck-typing would suggest that the presence of __setitem__
    signals a mutable datatype, while the overriden implementaion
    just raises an exception - a bait and switch.
    Python does not offer a really clean way to eliminate an attribute
    inherited from a superclass, but overriding __getattribute__ gives
    us the same end result.
    squash with 218fe0a

diff --git a/pandas/core/index.py b/pandas/core/index.py
index 08d1c593d..7e924a2a8 100644
--- a/pandas/core/index.py
+++ b/pandas/core/index.py
@@ -305,9 +305,11 @@ class Index(np.ndarray):
     def __hash__(self):
         return hash(self.view(np.ndarray))
 
-    def __setitem__(self, key, value):
-        """Disable the setting of values."""
-        raise Exception(str(self.__class__) + ' object is immutable')
+    def __getattribute__(self,name):
+        if name=="__setitem__": # emulate an Immutable ndarray
+            raise AttributeError(str(self.__class__) + ' object is immutable')
+        else:
+            return object.__getattribute__(self,name)
 
     def __getitem__(self, key):
         """Override numpy.ndarray's __getitem__ method to work as desired"""
diff --git a/pandas/tests/test_format.py b/pandas/tests/test_format.py
index 5f5dd666e..6155729ea 100644
--- a/pandas/tests/test_format.py
+++ b/pandas/tests/test_format.py
@@ -765,7 +765,7 @@ class TestDataFrameFormatting(unittest.TestCase):
             <table border="1" class="dataframe sortable draggable">
               <tbody>
                 <tr>
-                  <td>Index([], dtype=object)</td>
+                  <td>Index((), dtype=object)</td>
                   <td>Empty DataFrame</td>
                 </tr>
               </tbody>
diff --git a/pandas/tests/test_index.py b/pandas/tests/test_index.py
index 3a2005fff..56cd50705 100644
--- a/pandas/tests/test_index.py
+++ b/pandas/tests/test_index.py
@@ -57,8 +57,7 @@ class TestIndex(unittest.TestCase):
         self.assertRaises(Exception, self.strIndex.sort)
 
     def test_mutability(self):
-        self.assertRaises(Exception, self.strIndex.__setitem__, 5, 0)
-        self.assertRaises(Exception, self.strIndex.__setitem__, slice(1,5), 0)
+        self.assertFalse(hasattr(self.strIndex,"__setitem__"))
 
     def test_constructor(self):
         # regular instance creation
