commit c22da50977ec0b8145b5a0b2fb84dd7c4499f7a2
Author: y-p <yoval@gmx.com>
Date:   Wed Nov 14 03:21:56 2012 +0200

    TST: str(x)/unicode(x),bytes(x)/str(x) should always work if x is a df/series containing unicode

diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index fea84f5a8..4eb1be94e 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -27,6 +27,7 @@ from pandas.io.parsers import (ExcelFile, ExcelWriter, read_csv)
 from pandas.util.testing import (assert_almost_equal,
                                  assert_series_equal,
                                  assert_frame_equal)
+from pandas.util import py3compat
 
 import pandas.util.testing as tm
 import pandas.lib as lib
@@ -2916,6 +2917,21 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
         result = repr(df)
         self.assertEqual(result.split('\n')[0].rstrip(), ex_top)
 
+    def test_unicode_string_with_unicode(self):
+        df = DataFrame({'A': [u"\u05d0"]})
+
+        if py3compat.PY3:
+            str(df)
+        else:
+            unicode(df)
+
+    def test_bytestring_with_unicode(self):
+        df = DataFrame({'A': [u"\u05d0"]})
+        if py3compat.PY3:
+            bytes(df)
+        else:
+            str(df)
+
     def test_very_wide_info_repr(self):
         df = DataFrame(np.random.randn(10, 20),
                        columns=[tm.rands(10) for _ in xrange(20)])
diff --git a/pandas/tests/test_series.py b/pandas/tests/test_series.py
index db0a37978..96de4784f 100644
--- a/pandas/tests/test_series.py
+++ b/pandas/tests/test_series.py
@@ -1083,6 +1083,22 @@ class TestSeries(unittest.TestCase, CheckNameIntegration):
         df=Series(data,index=index1)
         self.assertTrue(type(df.__repr__() == str)) # both py2 / 3
 
+
+    def test_unicode_string_with_unicode(self):
+        df = Series([u"\u05d0"],name=u"\u05d1")
+        if py3compat.PY3:
+            str(df)
+        else:
+            unicode(df)
+
+    def test_bytestring_with_unicode(self):
+        df = Series([u"\u05d0"],name=u"\u05d1")
+        if py3compat.PY3:
+            bytes(df)
+        else:
+            str(df)
+
+
     def test_timeseries_repr_object_dtype(self):
         index = Index([datetime(2000, 1, 1) + timedelta(i)
                        for i in range(1000)], dtype=object)
