commit ea513d51ce2f36400d41d655914bc75a433d20f9
Author: y-p <yoval@gmx.com>
Date:   Wed Apr 10 00:40:27 2013 +0300

    TST: Panel ctor and from_dict should respect ordering when given OrderedDict GH3303

diff --git a/pandas/core/panel.py b/pandas/core/panel.py
index d1f87e4e7..84a0570e4 100644
--- a/pandas/core/panel.py
+++ b/pandas/core/panel.py
@@ -13,7 +13,7 @@ from pandas.core.categorical import Factor
 from pandas.core.index import (Index, MultiIndex, _ensure_index,
                                _get_combined_index)
 from pandas.core.indexing import _maybe_droplevels, _is_list_like
-from pandas.core.internals import (BlockManager, 
+from pandas.core.internals import (BlockManager,
                                    create_block_manager_from_arrays,
                                    create_block_manager_from_blocks)
 from pandas.core.series import Series
diff --git a/pandas/tests/test_panel.py b/pandas/tests/test_panel.py
index 921097e34..437f8b727 100644
--- a/pandas/tests/test_panel.py
+++ b/pandas/tests/test_panel.py
@@ -19,7 +19,9 @@ from pandas.util.testing import (assert_panel_equal,
                                  assert_frame_equal,
                                  assert_series_equal,
                                  assert_almost_equal,
-                                 ensure_clean)
+                                 ensure_clean,
+                                 makeCustomDataframe as mkdf
+    )
 import pandas.core.panel as panelm
 import pandas.util.testing as tm
 
@@ -904,6 +906,16 @@ class TestPanel(unittest.TestCase, PanelTests, CheckIndexing,
         data['ItemB'] = self.panel['ItemB'].values[:, :-1]
         self.assertRaises(Exception, Panel, data)
 
+    def test_ctor_orderedDict(self):
+        from pandas.util.compat import OrderedDict
+        keys = list(set(np.random.randint(0,5000,100)))[:50] # unique random int  keys
+        d = OrderedDict([(k,mkdf(10,5)) for k in keys])
+        p = Panel(d)
+        self.assertTrue(list(p.items) == keys)
+
+        p = Panel.from_dict(d)
+        self.assertTrue(list(p.items) == keys)
+
     def test_constructor_resize(self):
         data = self.panel._data
         items = self.panel.items[:-1]
