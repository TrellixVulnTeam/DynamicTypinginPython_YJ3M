commit 849bc7dd69ef70bfea44b4f1d88fe2341bfba8fd
Author: Jeff Reback <jeff@reback.net>
Date:   Wed Oct 14 15:25:05 2015 -0400

    BUG: Bug in DataFrame.replace with a datetime64[ns, tz] and a non-compat to_replace #11326

diff --git a/doc/source/whatsnew/v0.17.1.txt b/doc/source/whatsnew/v0.17.1.txt
index e9614ec4f..0df8984cc 100755
--- a/doc/source/whatsnew/v0.17.1.txt
+++ b/doc/source/whatsnew/v0.17.1.txt
@@ -74,6 +74,8 @@ Bug Fixes
 
 - Bug in tz-conversions with an ambiguous time and ``.dt`` accessors (:issue:`11295`)
 - Bug in comparisons of Series vs list-likes (:issue:`11339`)
+- Bug in ``DataFrame.replace`` with a ``datetime64[ns, tz]`` and a non-compat to_replace (:issue:`11326`)
+
 
 - Bug in list-like indexing with a mixed-integer Index (:issue:`11320`)
 
diff --git a/pandas/core/internals.py b/pandas/core/internals.py
index c8c834180..4fc7ece6e 100644
--- a/pandas/core/internals.py
+++ b/pandas/core/internals.py
@@ -565,7 +565,8 @@ class Block(PandasObject):
         blocks here this is just a call to putmask. regex is not used here.
         It is used in ObjectBlocks.  It is here for API
         compatibility."""
-        mask = com.mask_missing(self.values, to_replace)
+        values, to_replace = self._try_coerce_args(self.values, to_replace)
+        mask = com.mask_missing(values, to_replace)
         if filter is not None:
             filtered_out = ~self.mgr_locs.isin(filter)
             mask[filtered_out.nonzero()[0]] = False
@@ -2110,7 +2111,7 @@ class DatetimeTZBlock(NonConsolidatableMixIn, DatetimeBlock):
             if other.tz != self.values.tz:
                 raise ValueError("incompatible or non tz-aware value")
             other = other.tz_localize(None).asi8
-        else:
+        elif isinstance(other, (np.datetime64, datetime)):
             other = lib.Timestamp(other)
             if not getattr(other, 'tz', None):
                 raise ValueError("incompatible or non tz-aware value")
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index 0972b2e17..798fdca1c 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -9953,6 +9953,25 @@ class TestDataFrame(tm.TestCase, CheckIndexing,
         result = df.replace(d)
         tm.assert_frame_equal(result, expected)
 
+    def test_replace_datetimetz(self):
+
+        # GH 11326
+        # behaving poorly when presented with a datetime64[ns, tz]
+        df = DataFrame({'A' : date_range('20130101',periods=3,tz='US/Eastern'),
+                        'B' : [0, np.nan, 2]})
+        result = df.replace(np.nan,1)
+        expected = DataFrame({'A' : date_range('20130101',periods=3,tz='US/Eastern'),
+                              'B' : Series([0, 1, 2],dtype='float64')})
+        assert_frame_equal(result, expected)
+
+        result = df.fillna(1)
+        assert_frame_equal(result, expected)
+
+        result = df.replace(0,np.nan)
+        expected = DataFrame({'A' : date_range('20130101',periods=3,tz='US/Eastern'),
+                              'B' : [np.nan, np.nan, 2]})
+        assert_frame_equal(result, expected)
+
     def test_combine_multiple_frames_dtypes(self):
 
         # GH 2759
