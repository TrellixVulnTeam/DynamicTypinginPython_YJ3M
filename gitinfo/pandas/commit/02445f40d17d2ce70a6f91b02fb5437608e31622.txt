commit 02445f40d17d2ce70a6f91b02fb5437608e31622
Author: y-p <yoval@gmx.com>
Date:   Tue Apr 9 06:16:39 2013 +0300

    BUG: pprint_thing mishandles sets GH3294
    
    closes #3294

diff --git a/RELEASE.rst b/RELEASE.rst
index 3c11b3199..b7a79e3e2 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -284,7 +284,9 @@ pandas 0.11.0
     a simple index (GH2893_)
   - Fix Python ascii file parsing when integer falls outside of floating point
     spacing (GH3258_)
+  - fixed pretty priniting of sets (GH3294_)
 
+.. _GH3294: https://github.com/pydata/pandas/issues/3294
 .. _GH622: https://github.com/pydata/pandas/issues/622
 .. _GH797: https://github.com/pydata/pandas/issues/797
 .. _GH1893: https://github.com/pydata/pandas/issues/1893
diff --git a/pandas/core/common.py b/pandas/core/common.py
index c58a14938..09b2c338d 100644
--- a/pandas/core/common.py
+++ b/pandas/core/common.py
@@ -1798,12 +1798,22 @@ def _pprint_seq(seq, _nest_lvl=0, **kwds):
     """
     internal. pprinter for iterables. you should probably use pprint_thing()
     rather then calling this directly.
+
+    bounds length of printed sequence, depending on options
     """
-    fmt = u"[%s]" if hasattr(seq, '__setitem__') else u"(%s)"
+    if isinstance(seq,set):
+        fmt = u"set([%s])"
+    else:
+        fmt = u"[%s]" if hasattr(seq, '__setitem__') else u"(%s)"
 
     nitems = get_option("max_seq_items") or len(seq)
-    body = ", ".join(pprint_thing(e, _nest_lvl + 1, **kwds)
-                                    for e in seq[:nitems])
+
+    s = iter(seq)
+    r = []
+    for i in range(min(nitems,len(seq))): # handle sets, no slicing
+        r.append(pprint_thing(next(s), _nest_lvl + 1, **kwds))
+    body = ", ".join(r)
+
     if nitems < len(seq):
         body+= ", ..."
     elif isinstance(seq,tuple) and len(seq) == 1:
diff --git a/pandas/tests/test_common.py b/pandas/tests/test_common.py
index 18ec0d52e..db00041c1 100644
--- a/pandas/tests/test_common.py
+++ b/pandas/tests/test_common.py
@@ -308,7 +308,9 @@ def test_pprint_thing():
     # escape embedded tabs in string
     # GH #2038
     assert not "\t" in pp_t("a\tb", escape_chars=("\t",))
+
     assert(pp_t((1,)) == u'(1,)')
+    assert("set" in pp_t(set([1,2,3]))) # it works
 
 class TestTake(unittest.TestCase):
 
@@ -684,7 +686,7 @@ class TestTake(unittest.TestCase):
         expected = arr.take(indexer, axis=1)
         expected[:, [2, 4]] = np.nan
         tm.assert_almost_equal(result, expected)
-    
+
     def test_2d_datetime64(self):
         # 2005/01/01 - 2006/01/01
         arr = np.random.randint(11045376L, 11360736L, (5,3))*100000000000
