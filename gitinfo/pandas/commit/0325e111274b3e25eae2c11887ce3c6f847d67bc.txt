commit 0325e111274b3e25eae2c11887ce3c6f847d67bc
Author: Mateusz Wo≈õ <wos.mateusz16@gmail.com>
Date:   Thu Jan 3 03:57:20 2019 +0100

    Fix import format at pandas/tests/io/dtypes directory (#24578)

diff --git a/pandas/tests/dtypes/test_cast.py b/pandas/tests/dtypes/test_cast.py
index fcdcf9609..871e71ea2 100644
--- a/pandas/tests/dtypes/test_cast.py
+++ b/pandas/tests/dtypes/test_cast.py
@@ -5,30 +5,24 @@ These test the private routines in types/cast.py
 
 """
 
-import pytest
-from datetime import datetime, timedelta, date
-import numpy as np
+from datetime import date, datetime, timedelta
 
-import pandas as pd
-from pandas import (Timedelta, Timestamp, DatetimeIndex,
-                    DataFrame, NaT, Period, Series)
+import numpy as np
+import pytest
 
 from pandas.core.dtypes.cast import (
-    maybe_downcast_to_dtype,
-    maybe_convert_objects,
-    cast_scalar_to_array,
-    infer_dtype_from_scalar,
-    infer_dtype_from_array,
-    find_common_type,
-    construct_1d_object_array_from_listlike,
+    cast_scalar_to_array, construct_1d_arraylike_from_scalar,
     construct_1d_ndarray_preserving_na,
-    construct_1d_arraylike_from_scalar)
+    construct_1d_object_array_from_listlike, find_common_type,
+    infer_dtype_from_array, infer_dtype_from_scalar, maybe_convert_objects,
+    maybe_downcast_to_dtype)
+from pandas.core.dtypes.common import is_dtype_equal
 from pandas.core.dtypes.dtypes import (
-    CategoricalDtype,
-    DatetimeTZDtype,
-    PeriodDtype)
-from pandas.core.dtypes.common import (
-    is_dtype_equal)
+    CategoricalDtype, DatetimeTZDtype, PeriodDtype)
+
+import pandas as pd
+from pandas import (
+    DataFrame, DatetimeIndex, NaT, Period, Series, Timedelta, Timestamp)
 from pandas.util import testing as tm
 
 
diff --git a/pandas/tests/dtypes/test_common.py b/pandas/tests/dtypes/test_common.py
index 2d6d3101f..5fcf19b0b 100644
--- a/pandas/tests/dtypes/test_common.py
+++ b/pandas/tests/dtypes/test_common.py
@@ -1,15 +1,16 @@
 # -*- coding: utf-8 -*-
 
-import pytest
 import numpy as np
-import pandas as pd
+import pytest
 
-from pandas.core.dtypes.dtypes import (DatetimeTZDtype, PeriodDtype,
-                                       CategoricalDtype, IntervalDtype)
-from pandas.core.sparse.api import SparseDtype
+import pandas.util._test_decorators as td
 
 import pandas.core.dtypes.common as com
-import pandas.util._test_decorators as td
+from pandas.core.dtypes.dtypes import (
+    CategoricalDtype, DatetimeTZDtype, IntervalDtype, PeriodDtype)
+
+import pandas as pd
+from pandas.core.sparse.api import SparseDtype
 import pandas.util.testing as tm
 
 
diff --git a/pandas/tests/dtypes/test_concat.py b/pandas/tests/dtypes/test_concat.py
index 356234155..d58f8ee3b 100644
--- a/pandas/tests/dtypes/test_concat.py
+++ b/pandas/tests/dtypes/test_concat.py
@@ -1,9 +1,11 @@
 # -*- coding: utf-8 -*-
 
 import pytest
+
 import pandas.core.dtypes.concat as _concat
+
 from pandas import (
-    Index, DatetimeIndex, PeriodIndex, TimedeltaIndex, Series, Period)
+    DatetimeIndex, Index, Period, PeriodIndex, Series, TimedeltaIndex)
 
 
 @pytest.mark.parametrize('to_concat, expected', [
diff --git a/pandas/tests/dtypes/test_dtypes.py b/pandas/tests/dtypes/test_dtypes.py
index aa29473dd..ab52a8a81 100644
--- a/pandas/tests/dtypes/test_dtypes.py
+++ b/pandas/tests/dtypes/test_dtypes.py
@@ -1,24 +1,20 @@
 # -*- coding: utf-8 -*-
 import re
-import pytest
 
 import numpy as np
-import pandas as pd
-from pandas import (
-    Series, Categorical, CategoricalIndex, IntervalIndex, date_range)
+import pytest
 
-from pandas.core.dtypes.dtypes import (
-    DatetimeTZDtype, PeriodDtype,
-    IntervalDtype, CategoricalDtype, registry)
 from pandas.core.dtypes.common import (
-    is_categorical_dtype, is_categorical,
-    is_datetime64tz_dtype, is_datetimetz,
-    is_period_dtype, is_period,
-    is_dtype_equal, is_datetime64_ns_dtype,
-    is_datetime64_dtype, is_interval_dtype,
-    is_datetime64_any_dtype, is_string_dtype,
-    is_bool_dtype,
-)
+    is_bool_dtype, is_categorical, is_categorical_dtype,
+    is_datetime64_any_dtype, is_datetime64_dtype, is_datetime64_ns_dtype,
+    is_datetime64tz_dtype, is_datetimetz, is_dtype_equal, is_interval_dtype,
+    is_period, is_period_dtype, is_string_dtype)
+from pandas.core.dtypes.dtypes import (
+    CategoricalDtype, DatetimeTZDtype, IntervalDtype, PeriodDtype, registry)
+
+import pandas as pd
+from pandas import (
+    Categorical, CategoricalIndex, IntervalIndex, Series, date_range)
 from pandas.core.sparse.api import SparseDtype
 import pandas.util.testing as tm
 
diff --git a/pandas/tests/dtypes/test_generic.py b/pandas/tests/dtypes/test_generic.py
index 53fa482bd..96f92fccc 100644
--- a/pandas/tests/dtypes/test_generic.py
+++ b/pandas/tests/dtypes/test_generic.py
@@ -1,9 +1,12 @@
 # -*- coding: utf-8 -*-
 
 from warnings import catch_warnings, simplefilter
+
 import numpy as np
-import pandas as pd
+
 from pandas.core.dtypes import generic as gt
+
+import pandas as pd
 from pandas.util import testing as tm
 
 
diff --git a/pandas/tests/dtypes/test_inference.py b/pandas/tests/dtypes/test_inference.py
index fff91991e..cc2aa64b9 100644
--- a/pandas/tests/dtypes/test_inference.py
+++ b/pandas/tests/dtypes/test_inference.py
@@ -5,42 +5,34 @@ These the test the public routines exposed in types/common.py
 related to inference and not otherwise tested in types/test_common.py
 
 """
-from warnings import catch_warnings, simplefilter
 import collections
-import re
-from datetime import datetime, date, timedelta, time
+from datetime import date, datetime, time, timedelta
 from decimal import Decimal
-from numbers import Number
 from fractions import Fraction
+from numbers import Number
+import re
+from warnings import catch_warnings, simplefilter
+
 import numpy as np
-import pytz
 import pytest
-import pandas as pd
-from pandas._libs import lib, iNaT, missing as libmissing
-from pandas import (Series, Index, DataFrame, Timedelta,
-                    DatetimeIndex, TimedeltaIndex, Timestamp,
-                    Panel, Period, Categorical, isna, Interval,
-                    DateOffset)
-from pandas import compat
-from pandas.compat import u, PY2, StringIO, lrange
+import pytz
+
+from pandas._libs import iNaT, lib, missing as libmissing
+from pandas.compat import PY2, StringIO, lrange, u
+import pandas.util._test_decorators as td
+
 from pandas.core.dtypes import inference
 from pandas.core.dtypes.common import (
-    is_timedelta64_dtype,
-    is_timedelta64_ns_dtype,
-    is_datetime64_dtype,
-    is_datetime64_ns_dtype,
-    is_datetime64_any_dtype,
-    is_datetime64tz_dtype,
-    is_number,
-    is_integer,
-    is_float,
-    is_bool,
-    is_scalar,
-    is_scipy_sparse,
-    ensure_int32,
-    ensure_categorical)
+    ensure_categorical, ensure_int32, is_bool, is_datetime64_any_dtype,
+    is_datetime64_dtype, is_datetime64_ns_dtype, is_datetime64tz_dtype,
+    is_float, is_integer, is_number, is_scalar, is_scipy_sparse,
+    is_timedelta64_dtype, is_timedelta64_ns_dtype)
+
+import pandas as pd
+from pandas import (
+    Categorical, DataFrame, DateOffset, DatetimeIndex, Index, Interval, Panel,
+    Period, Series, Timedelta, TimedeltaIndex, Timestamp, compat, isna)
 from pandas.util import testing as tm
-import pandas.util._test_decorators as td
 
 
 @pytest.fixture(params=[True, False], ids=str)
diff --git a/pandas/tests/dtypes/test_missing.py b/pandas/tests/dtypes/test_missing.py
index cb3f5933c..56c9395d0 100644
--- a/pandas/tests/dtypes/test_missing.py
+++ b/pandas/tests/dtypes/test_missing.py
@@ -1,25 +1,26 @@
 # -*- coding: utf-8 -*-
 
-import pytest
-from warnings import catch_warnings, simplefilter
-import numpy as np
 from datetime import datetime
-from pandas.util import testing as tm
+from warnings import catch_warnings, simplefilter
 
-import pandas as pd
-from pandas.core import config as cf
-from pandas.compat import u
+import numpy as np
+import pytest
 
 from pandas._libs import missing as libmissing
 from pandas._libs.tslib import iNaT
-from pandas import (NaT, Float64Index, Series,
-                    DatetimeIndex, TimedeltaIndex, date_range)
+from pandas.compat import u
+
 from pandas.core.dtypes.common import is_scalar
 from pandas.core.dtypes.dtypes import (
-    DatetimeTZDtype, PeriodDtype, IntervalDtype)
+    DatetimeTZDtype, IntervalDtype, PeriodDtype)
 from pandas.core.dtypes.missing import (
-    array_equivalent, isna, notna, isnull, notnull,
-    na_value_for_dtype)
+    array_equivalent, isna, isnull, na_value_for_dtype, notna, notnull)
+
+import pandas as pd
+from pandas import (
+    DatetimeIndex, Float64Index, NaT, Series, TimedeltaIndex, date_range)
+from pandas.core import config as cf
+from pandas.util import testing as tm
 
 
 @pytest.mark.parametrize('notna_f', [notna, notnull])
diff --git a/setup.cfg b/setup.cfg
index 032a41df9..c21f09f13 100644
--- a/setup.cfg
+++ b/setup.cfg
@@ -121,13 +121,6 @@ skip=
     pandas/tests/api/test_types.py,
     pandas/tests/api/test_api.py,
     pandas/tests/tools/test_numeric.py,
-    pandas/tests/dtypes/test_concat.py,
-    pandas/tests/dtypes/test_generic.py,
-    pandas/tests/dtypes/test_common.py,
-    pandas/tests/dtypes/test_cast.py,
-    pandas/tests/dtypes/test_dtypes.py,
-    pandas/tests/dtypes/test_inference.py,
-    pandas/tests/dtypes/test_missing.py,
     pandas/tests/arithmetic/test_numeric.py,
     pandas/tests/arithmetic/test_object.py,
     pandas/tests/arithmetic/test_period.py,
