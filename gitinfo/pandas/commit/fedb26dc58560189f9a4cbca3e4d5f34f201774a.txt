commit fedb26dc58560189f9a4cbca3e4d5f34f201774a
Author: Richard T. Guy <richardtguy84@gmail.com>
Date:   Mon Sep 23 15:29:01 2013 -0400

    BUG: fix issue #4678 for Python parser

diff --git a/pandas/io/parsers.py b/pandas/io/parsers.py
index bbf568e48..c109508ea 100644
--- a/pandas/io/parsers.py
+++ b/pandas/io/parsers.py
@@ -1277,6 +1277,7 @@ class PythonParser(ParserBase):
             self._make_reader(f)
         else:
             self.data = f
+
         self.columns = self._infer_columns()
 
         # we are processing a multi index column
@@ -1300,6 +1301,38 @@ class PythonParser(ParserBase):
                 self.index_names = index_names
         self._first_chunk = True
 
+        if self.parse_dates:
+            self._no_thousands_columns = self._set_no_thousands_columns()
+        else:
+            self._no_thousands_columns = None
+
+    def _set_no_thousands_columns(self):
+        # Create a set of column ids that are not to be stripped of thousands operators.
+        noconvert_columns = set()
+
+        def _set(x):
+            if com.is_integer(x):
+                noconvert_columns.add(x)
+            else:
+                noconvert_columns.add(self.columns.index(x))
+
+        if isinstance(self.parse_dates, list):
+            for val in self.parse_dates:
+                if isinstance(val, list):
+                    for k in val:
+                        _set(k)
+                else:
+                    _set(val)
+
+        elif isinstance(self.parse_dates, dict):
+            for val in self.parse_dates.values():
+                if isinstance(val, list):
+                    for k in val:
+                        _set(k)
+                else:
+                    _set(val)
+        return noconvert_columns
+
     def _make_reader(self, f):
         sep = self.delimiter
 
@@ -1508,7 +1541,6 @@ class PythonParser(ParserBase):
             line = next(self.data)
 
         line = self._check_comments([line])[0]
-        line = self._check_thousands([line])[0]
 
         self.pos += 1
         self.buf.append(line)
@@ -1540,9 +1572,10 @@ class PythonParser(ParserBase):
         ret = []
         for l in lines:
             rl = []
-            for x in l:
+            for i, x in enumerate(l):
                 if (not isinstance(x, compat.string_types) or
                     self.thousands not in x or
+                    (self._no_thousands_columns and i in self._no_thousands_columns) or
                         nonnum.search(x.strip())):
                     rl.append(x)
                 else:
@@ -1616,7 +1649,6 @@ class PythonParser(ParserBase):
             raise AssertionError()
 
         if col_len != zip_len and self.index_col is not False:
-            row_num = -1
             i = 0
             for (i, l) in enumerate(content):
                 if len(l) != col_len:
diff --git a/pandas/io/tests/test_parsers.py b/pandas/io/tests/test_parsers.py
index acb3eb36b..6c32224dc 100644
--- a/pandas/io/tests/test_parsers.py
+++ b/pandas/io/tests/test_parsers.py
@@ -1952,9 +1952,6 @@ c   1   2   3   4
         df = self.read_table(StringIO(data), sep='|', thousands=',')
         tm.assert_frame_equal(df, expected)
 
-    def test_separator_date_conflict(self):
-        raise nose.SkipTest("Not supported in Python parser.")
-
     def test_comment_fwf(self):
         data = """
   1   2.   4  #hello world
