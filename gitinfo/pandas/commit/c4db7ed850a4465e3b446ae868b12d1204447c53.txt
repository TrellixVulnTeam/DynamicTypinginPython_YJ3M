commit c4db7ed850a4465e3b446ae868b12d1204447c53
Author: Joris Van den Bossche <jorisvandenbossche@gmail.com>
Date:   Fri Jun 12 10:17:12 2015 +0200

    DOC: small clean up whatsnew 0.16.2

diff --git a/doc/source/options.rst b/doc/source/options.rst
index 4b6901535..9ede87422 100644
--- a/doc/source/options.rst
+++ b/doc/source/options.rst
@@ -142,6 +142,7 @@ More information can be found in the `ipython documentation
   pd.set_option('display.max_rows', 999)
   pd.set_option('precision', 5)
 
+.. _options.frequently_used:
 
 Frequently Used Options
 -----------------------
diff --git a/doc/source/release.rst b/doc/source/release.rst
index 1c861ae60..d8f8d8cef 100644
--- a/doc/source/release.rst
+++ b/doc/source/release.rst
@@ -52,10 +52,9 @@ pandas 0.16.2
 
 This is a minor release from 0.16.1 and includes a large number of bug fixes
 along with several new features, enhancements, and performance improvements.
-A small number of API changes were necessary to fix existing bugs.
 
 See the :ref:`v0.16.2 Whatsnew <whatsnew_0162>` overview for an extensive list
-of all API changes, enhancements and bugs that have been fixed in 0.16.2.
+of all enhancements and bugs that have been fixed in 0.16.2.
 
 Thanks
 ~~~~~~
diff --git a/doc/source/whatsnew/v0.16.2.txt b/doc/source/whatsnew/v0.16.2.txt
index 8314c1cff..a7f523505 100644
--- a/doc/source/whatsnew/v0.16.2.txt
+++ b/doc/source/whatsnew/v0.16.2.txt
@@ -4,13 +4,14 @@ v0.16.2 (June 12, 2015)
 -----------------------
 
 This is a minor bug-fix release from 0.16.1 and includes a a large number of
-bug fixes along several new features, enhancements, and performance improvements.
+bug fixes along some new features (:meth:`~DataFrame.pipe` method), enhancements, and performance improvements.
+
 We recommend that all users upgrade to this version.
 
 Highlights include:
 
-- Documentation on how to use ``numba`` with *pandas*, see :ref:`here <enhancingperf.numba>`
 - A new ``pipe`` method, see :ref:`here <whatsnew_0162.enhancements.pipe>`
+- Documentation on how to use ``numba`` with *pandas*, see :ref:`here <enhancingperf.numba>`
 
 Check the :ref:`API Changes <whatsnew_0162.api>` before updating.
 
@@ -86,17 +87,26 @@ See the :ref:`documentation <basics.pipe>` for more. (:issue:`10129`)
 Other Enhancements
 ^^^^^^^^^^^^^^^^^^
 
-- Removed the duplicate scroll bars in the ``DataFrame`` HTML representation when displaying in an ``IPython notebook`` v3.0 or greater. Note that the notebook has a ``toggle output scrolling`` feature to automate the display of very large frames. (:issue:`10231`)
+- Removed the hard-coded size limits on the ``DataFrame`` HTML representation
+  in the IPython notebook, and leave this to IPython itself (only for IPython
+  v3.0 or greater). This eliminates the duplicate scroll bars that appeared in
+  the notebook with large frames (:issue:`10231`).
+
+  Note that the notebook has a ``toggle output scrolling`` feature to limit the
+  display of very large frames (by clicking left of the output).
+  You can also configure the way DataFrames are displayed using the pandas
+  options, see here :ref:`here <options.frequently_used>`.
+
+- ``axis`` parameter of ``DataFrame.quantile`` now accepts also ``index``
+  and ``column``. (:issue:`9543`)
 
 .. _whatsnew_0162.api:
 
-Other API Changes
-^^^^^^^^^^^^^^^^^
+API Changes
+~~~~~~~~~~~
 
 - ``Holiday`` now raises ``NotImplementedError`` if both ``offset`` and ``observance`` are used in constructor instead of returning an incorrect result (:issue:`10217`).
-- ``axis`` parameter of ``DataFrame.quantile`` now accepts also ``index`` and``column``. (:issue:`9543`)
 
-- Adding empty ``DataFrame``s results in a ``DataFrame`` that ``.equals`` an empty ``DataFrame`` (:issue:`10181`)
 
 .. _whatsnew_0162.performance:
 
@@ -116,61 +126,42 @@ Bug Fixes
   multi-indexed (:issue:`7212`)
 - Bug in ``Categorical`` repr with ``display.width`` of ``None`` in Python 3 (:issue:`10087`)
 - Bug in ``to_json`` with certain orients and a ``CategoricalIndex`` would segfault (:issue:`10317`)
-
 - Bug where some of the nan funcs do not have consistent return dtypes (:issue:`10251`)
-
 - Bug in ``DataFrame.quantile`` on checking that a valid axis was passed (:issue:`9543`)
-
 - Bug in groupby.apply aggregation for Categorical not preserving categories (:issue:`10138`)
 - Bug in ``to_csv`` where ``date_format`` is ignored if the ``datetime`` is fractional (:issue:`10209`)
 - Bug in ``DataFrame.to_json`` with mixed data types (:issue:`10289`)
-
 - Bug in cache updating when consolidating (:issue:`10264`)
-
 - Bug in ``mean()`` where integer dtypes can overflow (:issue:`10172`)
 - Bug where Panel.from_dict does not set dtype when specified (:issue:`10058`)
 - Bug in ``Index.union`` raises ``AttributeError`` when passing array-likes. (:issue:`10149`)
 - Bug in ``Timestamp``'s' ``microsecond``, ``quarter``, ``dayofyear``, ``week`` and ``daysinmonth`` properties return ``np.int`` type, not built-in ``int``. (:issue:`10050`)
 - Bug in ``NaT`` raises ``AttributeError`` when accessing to ``daysinmonth``, ``dayofweek`` properties. (:issue:`10096`)
-
 - Bug in Index repr when using the ``max_seq_items=None`` setting (:issue:`10182`).
-
 - Bug in getting timezone data with ``dateutil`` on various platforms ( :issue:`9059`, :issue:`8639`, :issue:`9663`, :issue:`10121`)
 - Bug in display datetimes with mixed frequencies uniformly; display 'ms' datetimes to the proper precision. (:issue:`10170`)
 - Bug in ``setitem`` where type pormotion is applied to entire block (:issue:`10280`)
-
 - Bug in ``Series`` arithmetic methods may incorrectly hold names (:issue:`10068`)
-
 - Bug in ``GroupBy.get_group`` when grouping on multiple keys, one of which is categorical. (:issue:`10132`)
-
 - Bug in ``DatetimeIndex`` and ``TimedeltaIndex`` names are lost after timedelta arithmetics ( :issue:`9926`)
 - Bug in ``DataFrame`` construction from nested ``dict`` with ``datetime64`` (:issue:`10160`)
 - Bug in ``Series`` construction from ``dict`` with ``datetime64`` keys (:issue:`9456`)
 - Bug in `Series.plot(label="LABEL")` not correctly setting the label (:issue:`10119`)
-
 - Bug in `plot` not defaulting to matplotlib `axes.grid` setting (:issue:`9792`)
-
 - Bug causing strings containing an exponent but no decimal to be parsed as ints instead of floats in python csv parser. (:issue:`9565`)
-
 - Bug in ``Series.align`` resets ``name`` when ``fill_value`` is specified (:issue:`10067`)
 - Bug in ``read_csv`` causing index name not to be set on an empty DataFrame (:issue:`10184`)
 - Bug in ``SparseSeries.abs`` resets ``name`` (:issue:`10241`)
 - Bug in ``TimedeltaIndex`` slicing may reset freq (:issue:`10292`)
-
 - Bug in GroupBy.get_group raises ValueError when group key contains NaT (:issue:`6992`)
 - Bug in ``SparseSeries`` constructor ignores input data name (:issue:`10258`)
-
 - Bug in ``Categorical.remove_categories`` causing a ValueError when removing the ``NaN`` category if underlying dtype is floating-point (:issue:`10156`)
-
 - Bug where infer_freq infers timerule (WOM-5XXX) unsupported by to_offset (:issue:`9425`)
 - Bug in ``DataFrame.to_hdf()`` where table format would raise a seemingly unrelated error for invalid (non-string) column names. This is now explicitly forbidden. (:issue:`9057`)
-- Bug to handle masking empty ``DataFrame``(:issue:`10126`)
-
+- Bug to handle masking empty ``DataFrame`` (:issue:`10126`).
 - Bug where MySQL interface could not handle numeric table/column names (:issue:`10255`)
-
 - Bug in ``read_csv`` with a ``date_parser`` that returned a ``datetime64`` array of other time resolution than ``[ns]`` (:issue:`10245`)
-
 - Bug in ``Panel.apply`` when the result has ndim = 0 (:issue:`10332`)
-
 - Bug in ``read_hdf`` where ``auto_close`` could not be passed (:issue:`9327`).
 - Bug in ``read_hdf`` where open stores could not be used (:issue:`10330`).
+- Bug in adding empty ``DataFrame``s, now results in a ``DataFrame`` that ``.equals`` an empty ``DataFrame`` (:issue:`10181`).
