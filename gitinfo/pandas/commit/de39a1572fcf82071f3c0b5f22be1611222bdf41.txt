commit de39a1572fcf82071f3c0b5f22be1611222bdf41
Author: topper-123 <terji78@gmail.com>
Date:   Sun Feb 4 21:44:39 2018 +0000

    DOC: minor groupby and resampler improvements (#19514)

diff --git a/doc/source/groupby.rst b/doc/source/groupby.rst
index 413138b1e..407fad39b 100644
--- a/doc/source/groupby.rst
+++ b/doc/source/groupby.rst
@@ -1219,8 +1219,8 @@ see :ref:`here <basics.pipe>`.
 Combining ``.groupby`` and ``.pipe`` is often useful when you need to reuse
 GroupBy objects.
 
-For an example, imagine having a DataFrame with columns for stores, products,
-revenue and sold quantity. We'd like to do a groupwise calculation of *prices*
+As an example, imagine having a DataFrame with columns for stores, products,
+revenue and quantity sold. We'd like to do a groupwise calculation of *prices*
 (i.e. revenue/quantity) per store and per product. We could do this in a
 multi-step operation, but expressing it in terms of piping can make the
 code more readable. First we set the data:
@@ -1230,7 +1230,8 @@ code more readable. First we set the data:
    import numpy as np
    n = 1000
    df = pd.DataFrame({'Store': np.random.choice(['Store_1', 'Store_2'], n),
-                      'Product': np.random.choice(['Product_1', 'Product_2', 'Product_3'], n),
+                      'Product': np.random.choice(['Product_1',
+                                                   'Product_2'], n),
                       'Revenue': (np.random.random(n)*50+10).round(2),
                       'Quantity': np.random.randint(1, 10, size=n)})
    df.head(2)
diff --git a/pandas/core/generic.py b/pandas/core/generic.py
index 0f038cd68..cb4bbb7b2 100644
--- a/pandas/core/generic.py
+++ b/pandas/core/generic.py
@@ -5691,6 +5691,10 @@ class NDFrame(PandasObject, SelectionMixin):
             reduce the dimensionality of the return type if possible,
             otherwise return a consistent type
 
+        Returns
+        -------
+        GroupBy object
+
         Examples
         --------
         DataFrame results
@@ -5702,10 +5706,15 @@ class NDFrame(PandasObject, SelectionMixin):
 
         >>> data.groupby(['col1', 'col2']).mean()
 
-        Returns
-        -------
-        GroupBy object
+        Notes
+        -----
+        See the `user guide
+        <http://pandas.pydata.org/pandas-docs/stable/groupby.html>`_ for more.
 
+        See also
+        --------
+        resample : Convenience method for frequency conversion and resampling
+            of time series.
         """
         from pandas.core.groupby import groupby
 
@@ -5904,8 +5913,16 @@ class NDFrame(PandasObject, SelectionMixin):
 
             .. versionadded:: 0.19.0
 
+        Returns
+        -------
+        Resampler object
+
         Notes
         -----
+        See the `user guide
+        <http://pandas.pydata.org/pandas-docs/stable/timeseries.html#resampling>`_
+        for more.
+
         To learn more about the offset strings, please see `this link
         <http://pandas.pydata.org/pandas-docs/stable/timeseries.html#offset-aliases>`__.
 
@@ -6071,6 +6088,10 @@ class NDFrame(PandasObject, SelectionMixin):
                              a  b   c   d
         2000-01-01 00:00:00  0  6  12  18
         2000-01-01 00:03:00  0  4   8  12
+
+        See also
+        --------
+        groupby : Group by mapping, function, label, or list of labels.
         """
         from pandas.core.resample import (resample,
                                           _maybe_process_deprecations)
diff --git a/pandas/core/groupby.py b/pandas/core/groupby.py
index 2c1deb9db..88af80e29 100644
--- a/pandas/core/groupby.py
+++ b/pandas/core/groupby.py
@@ -230,7 +230,7 @@ object : the return type of ``func``.
 Notes
 -----
 See more `here
-<http://pandas.pydata.org/pandas-docs/stable/groupby.html#pipe>`_
+<http://pandas.pydata.org/pandas-docs/stable/groupby.html#piping-function-calls>`_
 
 Examples
 --------
