commit 5d869c2bb85a0f262aae51c5dc3d1e04682e04c0
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Tue Jun 5 17:19:08 2012 -0400

    ENH: boundscheck take_1d

diff --git a/pandas/src/generate_code.py b/pandas/src/generate_code.py
index b82375368..d77c19e88 100644
--- a/pandas/src/generate_code.py
+++ b/pandas/src/generate_code.py
@@ -61,7 +61,6 @@ cpdef ensure_platform_int(object arr):
 
 
 take_1d_template = """@cython.wraparound(False)
-@cython.boundscheck(False)
 def take_1d_%(name)s(ndarray[%(c_type)s] values,
                      ndarray[int64_t] indexer,
                      out=None, fill_value=np.nan):
diff --git a/pandas/src/generated.pyx b/pandas/src/generated.pyx
index ce311823c..d9439410e 100644
--- a/pandas/src/generated.pyx
+++ b/pandas/src/generated.pyx
@@ -1414,7 +1414,6 @@ def backfill_2d_inplace_bool(ndarray[uint8_t, ndim=2] values,
                 val = values[j, i]
 
 @cython.wraparound(False)
-@cython.boundscheck(False)
 def take_1d_float64(ndarray[float64_t] values,
                      ndarray[int64_t] indexer,
                      out=None, fill_value=np.nan):
@@ -1447,7 +1446,6 @@ def take_1d_float64(ndarray[float64_t] values,
                 outbuf[i] = values[idx]
 
 @cython.wraparound(False)
-@cython.boundscheck(False)
 def take_1d_object(ndarray[object] values,
                      ndarray[int64_t] indexer,
                      out=None, fill_value=np.nan):
@@ -1480,7 +1478,6 @@ def take_1d_object(ndarray[object] values,
                 outbuf[i] = values[idx]
 
 @cython.wraparound(False)
-@cython.boundscheck(False)
 def take_1d_int32(ndarray[int32_t] values,
                      ndarray[int64_t] indexer,
                      out=None, fill_value=np.nan):
@@ -1513,7 +1510,6 @@ def take_1d_int32(ndarray[int32_t] values,
                 outbuf[i] = values[idx]
 
 @cython.wraparound(False)
-@cython.boundscheck(False)
 def take_1d_int64(ndarray[int64_t] values,
                      ndarray[int64_t] indexer,
                      out=None, fill_value=np.nan):
@@ -1546,7 +1542,6 @@ def take_1d_int64(ndarray[int64_t] values,
                 outbuf[i] = values[idx]
 
 @cython.wraparound(False)
-@cython.boundscheck(False)
 def take_1d_bool(ndarray[uint8_t] values,
                      ndarray[int64_t] indexer,
                      out=None, fill_value=np.nan):
