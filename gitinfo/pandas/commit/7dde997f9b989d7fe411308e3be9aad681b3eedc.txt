commit 7dde997f9b989d7fe411308e3be9aad681b3eedc
Author: Phillip Cloud <cpcloud@gmail.com>
Date:   Sat Feb 15 11:42:51 2014 -0500

    BUG: disallow comparisons in replace_list with malformed types

diff --git a/pandas/core/internals.py b/pandas/core/internals.py
index 2fd579e5d..b83e7df74 100644
--- a/pandas/core/internals.py
+++ b/pandas/core/internals.py
@@ -1,5 +1,6 @@
 import itertools
 import re
+import operator
 from datetime import datetime, timedelta
 import copy
 from collections import defaultdict
@@ -2453,7 +2454,8 @@ class BlockManager(PandasObject):
         def comp(s):
             if isnull(s):
                 return isnull(values)
-            return values == getattr(s, 'asm8', s)
+            return _possibly_compare(values, getattr(s, 'asm8', s),
+                                     operator.eq)
         masks = [comp(s) for i, s in enumerate(src_list)]
 
         result_blocks = []
@@ -4153,3 +4155,20 @@ def _possibly_convert_to_indexer(loc):
     elif isinstance(loc, slice):
         loc = lrange(loc.start, loc.stop)
     return loc
+
+
+def _possibly_compare(a, b, op):
+    res = op(a, b)
+    is_a_array = isinstance(a, np.ndarray)
+    is_b_array = isinstance(b, np.ndarray)
+    if np.isscalar(res) and (is_a_array or is_b_array):
+        type_names = [type(a).__name__, type(b).__name__]
+
+        if is_a_array:
+            type_names[0] = 'ndarray(dtype=%s)' % a.dtype
+
+        if is_b_array:
+            type_names[1] = 'ndarray(dtype=%s)' % b.dtype
+
+        raise TypeError("Cannot compare types %r and %r" % tuple(type_names))
+    return res
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index 9322e1ca8..f21bb9da4 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -8005,9 +8005,8 @@ class TestDataFrame(tm.TestCase, CheckIndexing,
 
     def test_replace_with_dict_with_bool_keys(self):
         df = DataFrame({0: [True, False], 1: [False, True]})
-        result = df.replace({'asdf': 'asdb', True: 'yes'})
-        expected = DataFrame({0: ['yes', False], 1: [False, 'yes']})
-        tm.assert_frame_equal(expected, result)
+        with tm.assertRaisesRegexp(TypeError, 'Cannot compare types .+'):
+            df.replace({'asdf': 'asdb', True: 'yes'})
 
     def test_combine_multiple_frames_dtypes(self):
         from pandas import concat
diff --git a/pandas/tests/test_series.py b/pandas/tests/test_series.py
index 38aae8ad2..06c8fdfef 100644
--- a/pandas/tests/test_series.py
+++ b/pandas/tests/test_series.py
@@ -5264,7 +5264,11 @@ class TestSeries(tm.TestCase, CheckNameIntegration):
 
         # malformed
         self.assertRaises(ValueError, ser.replace, [1, 2, 3], [np.nan, 0])
-        self.assertRaises(TypeError, ser.replace, range(1, 3), [np.nan, 0])
+
+        # make sure that we aren't just masking a TypeError because bools don't
+        # implement indexing
+        with tm.assertRaisesRegexp(TypeError, 'Cannot compare types .+'):
+            ser.replace([1, 2], [np.nan, 0])
 
         ser = Series([0, 1, 2, 3, 4])
         result = ser.replace([0, 1, 2, 3, 4], [4, 3, 2, 1, 0])
@@ -5369,9 +5373,8 @@ class TestSeries(tm.TestCase, CheckNameIntegration):
 
     def test_replace_with_dict_with_bool_keys(self):
         s = Series([True, False, True])
-        result = s.replace({'asdf': 'asdb', True: 'yes'})
-        expected = Series(['yes', False, 'yes'])
-        tm.assert_series_equal(expected, result)
+        with tm.assertRaisesRegexp(TypeError, 'Cannot compare types .+'):
+            s.replace({'asdf': 'asdb', True: 'yes'})
 
     def test_asfreq(self):
         ts = Series([0., 1., 2.], index=[datetime(2009, 10, 30),
