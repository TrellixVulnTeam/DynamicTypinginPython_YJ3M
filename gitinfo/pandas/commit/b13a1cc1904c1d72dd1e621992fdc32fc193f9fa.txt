commit b13a1cc1904c1d72dd1e621992fdc32fc193f9fa
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Sun Feb 10 16:09:10 2013 -0500

    TST: handle #2804 bug in cython

diff --git a/pandas/tseries/index.py b/pandas/tseries/index.py
index 823b24631..0916056cd 100644
--- a/pandas/tseries/index.py
+++ b/pandas/tseries/index.py
@@ -228,7 +228,7 @@ class DatetimeIndex(Int64Index):
                     offset = data.offset
                     verify_integrity = False
             else:
-                if data.dtype != _NS_DTYPE and data.size:
+                if data.dtype != _NS_DTYPE:
                     subarr = tslib.cast_to_nanoseconds(data)
                 else:
                     subarr = data
@@ -1138,7 +1138,7 @@ class DatetimeIndex(Int64Index):
 
             if isinstance(key, time):
                 return self.indexer_at_time(key)
-            
+
             try:
                 stamp = Timestamp(key, tz=self.tz)
                 return self._engine.get_loc(stamp)
diff --git a/pandas/tslib.pyx b/pandas/tslib.pyx
index 43173ac9a..b52cfe036 100644
--- a/pandas/tslib.pyx
+++ b/pandas/tslib.pyx
@@ -81,7 +81,7 @@ def ints_to_pydatetime(ndarray[int64_t] arr, tz=None):
                     # Adjust datetime64 timestamp, recompute datetimestruct
                     pos = trans.searchsorted(arr[i]) - 1
                     inf = tz._transition_info[pos]
-                    
+
                     pandas_datetime_to_datetimestruct(arr[i] + deltas[pos],
                                                       PANDAS_FR_ns, &dts)
                     result[i] = datetime(dts.year, dts.month, dts.day, dts.hour,
@@ -914,6 +914,9 @@ def cast_to_nanoseconds(ndarray arr):
     result = np.empty(shape, dtype='M8[ns]')
     iresult = result.ravel().view(np.int64)
 
+    if len(iresult) == 0:
+        return result
+
     unit = get_datetime64_unit(arr.flat[0])
     if unit == 3:
         raise ValueError('NumPy 1.6.1 business freq not supported')
