commit b1330135008d7c19c407d9a297ee806b6f51cca0
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Fri Oct 21 17:54:09 2011 -0400

    BUG: could not parse dates with implicit first column

diff --git a/pandas/io/parsers.py b/pandas/io/parsers.py
index 36323414a..8ac9ed569 100644
--- a/pandas/io/parsers.py
+++ b/pandas/io/parsers.py
@@ -288,7 +288,10 @@ class TextParser(object):
         index_name = None
         if implicit_first_cols > 0:
             if self.index_col is None:
-                self.index_col = range(implicit_first_cols)
+                if implicit_first_cols == 1:
+                    self.index_col = 0
+                else:
+                    self.index_col = range(implicit_first_cols)
             index_name = None
         elif np.isscalar(self.index_col):
             index_name = columns.pop(self.index_col)
diff --git a/pandas/io/tests/test_parsers.py b/pandas/io/tests/test_parsers.py
index 79fc39f77..11b47dfb4 100644
--- a/pandas/io/tests/test_parsers.py
+++ b/pandas/io/tests/test_parsers.py
@@ -110,6 +110,17 @@ c,4,5
         expected = read_csv(StringIO(data), parse_dates=True)
         assert_frame_equal(df, expected)
 
+    def test_parse_dates_implicit_first_col(self):
+        data = """A,B,C
+20090101,a,1,2
+20090102,b,3,4
+20090103,c,4,5
+"""
+        df = read_csv(StringIO(data), parse_dates=True)
+        expected = read_csv(StringIO(data), index_col=0, parse_dates=True)
+        self.assert_(isinstance(df.index[0], datetime))
+        assert_frame_equal(df, expected)
+
     def test_no_header(self):
         data = """1,2,3,4,5
 6,7,8,9,10
@@ -222,6 +233,15 @@ baz,7,8,9
         data = read_csv(StringIO(data))
         self.assert_(data.index.equals(Index(['foo', 'bar', 'baz'])))
 
+    def test_sniff_delimiter(self):
+        data = """index|A|B|C
+foo|1|2|3
+bar|4|5|6
+baz|7|8|9
+"""
+        data = read_csv(StringIO(data), index_col=0)
+        self.assert_(data.index.equals(Index(['foo', 'bar', 'baz'])))
+
     def test_read_nrows(self):
         df = read_csv(StringIO(self.data1), nrows=3)
         expected = read_csv(StringIO(self.data1))[:3]
