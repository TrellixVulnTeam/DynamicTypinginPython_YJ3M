commit 601c35fe3463660d141729bb0b0c8a0271e7d4ad
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Wed Jan 18 21:14:05 2012 -0500

    BLD: python 3 compat

diff --git a/pandas/core/common.py b/pandas/core/common.py
index 13af4971d..3b2e72d50 100644
--- a/pandas/core/common.py
+++ b/pandas/core/common.py
@@ -756,6 +756,10 @@ def is_integer(obj):
 def is_float(obj):
     return isinstance(obj, (float, np.floating))
 
+def is_iterator(obj):
+    # python 3 generators have __next__ instead of next
+    return hasattr(obj, 'next') or hasattr(obj, '__next__')
+
 def is_integer_dtype(arr_or_dtype):
     if isinstance(arr_or_dtype, np.dtype):
         tipo = arr_or_dtype.type
diff --git a/pandas/core/index.py b/pandas/core/index.py
index edc369b42..a9978d9a0 100644
--- a/pandas/core/index.py
+++ b/pandas/core/index.py
@@ -494,7 +494,7 @@ class Index(np.ndarray):
                 raise
             except TypeError:
                 # generator/iterator-like
-                if hasattr(key, 'next'):
+                if com.is_iterator(key):
                     raise InvalidIndexError(key)
                 else:
                     raise e1
@@ -1143,7 +1143,7 @@ class MultiIndex(Index):
                 raise
             except TypeError:
                 # generator/iterator-like
-                if hasattr(key, 'next'):
+                if com.is_iterator(key):
                     raise InvalidIndexError(key)
                 else:
                     raise e1
diff --git a/pandas/core/series.py b/pandas/core/series.py
index 07333b656..e27be44cc 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -286,7 +286,7 @@ copy : boolean, default False
         except Exception:
             raise
 
-        if hasattr(key, 'next'):
+        if com.is_iterator(key):
             key = list(key)
 
         # boolean
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index 9a6c9c4b6..f4ca27978 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -3300,10 +3300,9 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
         try:
             transformed = data.apply(transform, axis=1)
         except Exception, e:
-            pass
+            self.assertEqual(len(e.args), 2)
+            self.assertEqual(e.args[1], 'occurred at index 4')
 
-        self.assertEqual(len(e.args), 2)
-        self.assertEqual(e.args[1], 'occurred at index 4')
 
     def test_apply_convert_objects(self):
         data = DataFrame({'A' : ['foo', 'foo', 'foo', 'foo',
@@ -4346,5 +4345,5 @@ if __name__ == '__main__':
     import nose
     # nose.runmodule(argv=[__file__,'-vvs','-x', '--ipdb-failure'],
     #                exit=False)
-    nose.runmodule(argv=[__file__,'-vvs','-x','--ipdb', '--ipdb-failure'],
+    nose.runmodule(argv=[__file__,'-vvs','-x','--pdb', '--pdb-failure'],
                    exit=False)
diff --git a/pandas/tests/test_index.py b/pandas/tests/test_index.py
index f05cc2059..2d39dbadb 100644
--- a/pandas/tests/test_index.py
+++ b/pandas/tests/test_index.py
@@ -4,11 +4,14 @@ from datetime import datetime, timedelta
 import operator
 import pickle
 import unittest
+import nose
 
 import numpy as np
 
 from pandas.core.index import Index, Int64Index, Factor, MultiIndex
 from pandas.util.testing import assert_almost_equal
+from pandas.util import py3compat
+
 import pandas.util.testing as tm
 import pandas._tseries as tseries
 
@@ -735,6 +738,9 @@ class TestMultiIndex(unittest.TestCase):
         self.assert_(self.index.equals(unpickled))
 
     def test_legacy_pickle(self):
+        if py3compat.PY3:
+            raise nose.SkipTest
+
         import os
         def curpath():
             pth, _ = os.path.split(os.path.abspath(__file__))
diff --git a/pandas/tests/test_panel.py b/pandas/tests/test_panel.py
index df558511c..b6720e5d2 100644
--- a/pandas/tests/test_panel.py
+++ b/pandas/tests/test_panel.py
@@ -677,7 +677,7 @@ class TestPanel(unittest.TestCase, PanelTests, CheckIndexing,
         expected = Panel(dict((k, v.astype(int)) for k, v in d.iteritems()))
 
     def test_constructor_dict_mixed(self):
-        data = dict((k, v.values) for k, v in self.panel.iteritems())
+        data = dict((k, v.values) for k, v in self.panel.iterkv())
         result = Panel(data)
         exp_major = Index(np.arange(len(self.panel.major_axis)))
         self.assert_(result.major_axis.equals(exp_major))
diff --git a/pandas/tools/tests/test_merge.py b/pandas/tools/tests/test_merge.py
index c9368520e..2f08974ff 100644
--- a/pandas/tools/tests/test_merge.py
+++ b/pandas/tools/tests/test_merge.py
@@ -23,7 +23,7 @@ JOIN_TYPES = ['inner', 'outer', 'left', 'right']
 
 def get_test_data(ngroups=NGROUPS, n=N):
     unique_groups = range(ngroups)
-    arr = np.asarray(np.tile(unique_groups, n / ngroups), dtype=object)
+    arr = np.asarray(np.tile(unique_groups, n // ngroups), dtype=object)
 
     if len(arr) < n:
         arr = np.asarray(list(arr) + unique_groups[:n - len(arr)],
diff --git a/setup.py b/setup.py
index 5703488a0..d2ac1d77c 100755
--- a/setup.py
+++ b/setup.py
@@ -50,6 +50,7 @@ if sys.version_info[0] >= 3:
 else:
     setuptools_kwargs = {
         'install_requires': ['python-dateutil < 2', 'numpy'],
+        'zip_safe' : False,
     }
     if not _have_setuptools:
         try:
