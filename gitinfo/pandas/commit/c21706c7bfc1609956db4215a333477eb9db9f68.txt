commit c21706c7bfc1609956db4215a333477eb9db9f68
Author: y-p <yoval@gmx.com>
Date:   Mon Apr 22 20:47:21 2013 +0300

    BUG: fix broken validators again
    
    PTF

diff --git a/pandas/core/config.py b/pandas/core/config.py
index dc551bc6c..59d2772c8 100644
--- a/pandas/core/config.py
+++ b/pandas/core/config.py
@@ -701,7 +701,12 @@ def is_instance_factory(_type):
     """
 
     def inner(x):
-        if not isinstance(x, _type):
+        if isinstance(_type,(tuple,list)) :
+            if not any([isinstance(x,t) for t in _type]):
+                from pandas.core.common import pprint_thing as pp
+                pp_values = map(pp, _type)
+                raise ValueError("Value must be an instance of %s" % pp("|".join(pp_values)))
+        elif not isinstance(x, _type):
             raise ValueError("Value must be an instance of '%s'" % str(_type))
 
     return inner
diff --git a/pandas/core/config_init.py b/pandas/core/config_init.py
index f93006db7..71b453926 100644
--- a/pandas/core/config_init.py
+++ b/pandas/core/config_init.py
@@ -212,10 +212,10 @@ with cf.config_prefix('display'):
     cf.register_option('max_info_rows', 1690785, pc_max_info_rows_doc,
                        validator=is_instance_factory((int, type(None))))
     cf.register_option('max_rows', 60, pc_max_rows_doc,
-                        validator=is_one_of_factory([type(None), int]))
+                       validator=is_instance_factory([type(None), int]))
     cf.register_option('max_colwidth', 50, max_colwidth_doc, validator=is_int)
     cf.register_option('max_columns', 20, pc_max_cols_doc,
-                        validator=is_one_of_factory([type(None), int]))
+                       validator=is_instance_factory([type(None), int]))
     cf.register_option('max_info_columns', 100, pc_max_info_cols_doc,
                        validator=is_int)
     cf.register_option('colheader_justify', 'right', colheader_justify_doc,
@@ -236,12 +236,12 @@ with cf.config_prefix('display'):
     cf.register_option('chop_threshold', None, pc_chop_threshold_doc)
     cf.register_option('max_seq_items', None, pc_max_seq_items)
     cf.register_option('mpl_style', None, pc_mpl_style_doc,
-                       validator=is_one_of_factory([type(None), False, 'default']),
+                       validator=is_one_of_factory([None, False, 'default']),
                        cb=mpl_style_cb)
     cf.register_option('height', 60, pc_height_doc,
-                           validator=is_one_of_factory([type(None), int]))
+                       validator=is_instance_factory([type(None), int]))
     cf.register_option('width',80, pc_width_doc,
-                       validator=is_one_of_factory([type(None), int]))
+                       validator=is_instance_factory([type(None), int]))
     # redirected to width, make defval identical
     cf.register_option('line_width', get_default_val('display.width'), pc_line_width_doc)
 cf.deprecate_option('display.line_width',
diff --git a/pandas/tests/test_config.py b/pandas/tests/test_config.py
index 29620526d..c1231df02 100644
--- a/pandas/tests/test_config.py
+++ b/pandas/tests/test_config.py
@@ -40,7 +40,7 @@ class TestConfig(unittest.TestCase):
         self.assertTrue(hasattr(pd, 'describe_option'))
 
     def test_is_one_of_factory(self):
-        v = self.cf.is_one_of_factory([type(None),int])
+        v = self.cf.is_one_of_factory([None,12])
 
         v(12)
         v(None)
