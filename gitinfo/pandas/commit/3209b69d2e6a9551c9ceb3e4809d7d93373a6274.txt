commit 3209b69d2e6a9551c9ceb3e4809d7d93373a6274
Author: RaisaDZ <34237447+RaisaDZ@users.noreply.github.com>
Date:   Thu Apr 2 01:13:26 2020 +0100

    DOC: Add examples to the method MultiIndex.is_lexsorted() (#32312)

diff --git a/pandas/core/indexes/multi.py b/pandas/core/indexes/multi.py
index 0338a0de7..10d62b522 100644
--- a/pandas/core/indexes/multi.py
+++ b/pandas/core/indexes/multi.py
@@ -1653,6 +1653,30 @@ class MultiIndex(Index):
         Returns
         -------
         bool
+
+        Examples
+        --------
+        In the below examples, the first level of the MultiIndex is sorted because
+        a<b<c, so there is no need to look at the next level.
+
+        >>> pd.MultiIndex.from_arrays([['a', 'b', 'c'], ['d', 'e', 'f']]).is_lexsorted()
+        True
+        >>> pd.MultiIndex.from_arrays([['a', 'b', 'c'], ['d', 'f', 'e']]).is_lexsorted()
+        True
+
+        In case there is a tie, the lexicographical sorting looks
+        at the next level of the MultiIndex.
+
+        >>> pd.MultiIndex.from_arrays([[0, 1, 1], ['a', 'b', 'c']]).is_lexsorted()
+        True
+        >>> pd.MultiIndex.from_arrays([[0, 1, 1], ['a', 'c', 'b']]).is_lexsorted()
+        False
+        >>> pd.MultiIndex.from_arrays([['a', 'a', 'b', 'b'],
+        ...                            ['aa', 'bb', 'aa', 'bb']]).is_lexsorted()
+        True
+        >>> pd.MultiIndex.from_arrays([['a', 'a', 'b', 'b'],
+        ...                            ['bb', 'aa', 'aa', 'bb']]).is_lexsorted()
+        False
         """
         return self.lexsort_depth == self.nlevels
 
