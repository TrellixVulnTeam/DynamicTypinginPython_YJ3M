commit deceebe01aa9a3e4631828cb5b7453b25e9620bb
Author: jbrockmendel <jbrockmendel@gmail.com>
Date:   Sun Nov 17 15:01:50 2019 -0800

    BUG: IndexError in __repr__ (#29681)

diff --git a/pandas/core/computation/pytables.py b/pandas/core/computation/pytables.py
index 13a481406..4eb398982 100644
--- a/pandas/core/computation/pytables.py
+++ b/pandas/core/computation/pytables.py
@@ -2,7 +2,7 @@
 
 import ast
 from functools import partial
-from typing import Optional
+from typing import Any, Optional, Tuple
 
 import numpy as np
 
@@ -72,7 +72,6 @@ class BinOp(ops.BinOp):
         super().__init__(op, lhs, rhs)
         self.queryables = queryables
         self.encoding = encoding
-        self.filter = None
         self.condition = None
 
     def _disallow_scalar_only_bool_ops(self):
@@ -230,7 +229,11 @@ class BinOp(ops.BinOp):
 
 
 class FilterBinOp(BinOp):
+    filter: Optional[Tuple[Any, Any, pd.Index]] = None
+
     def __repr__(self) -> str:
+        if self.filter is None:
+            return "Filter: Not Initialized"
         return pprint_thing(
             "[Filter : [{lhs}] -> [{op}]".format(lhs=self.filter[0], op=self.filter[1])
         )
diff --git a/pandas/io/pytables.py b/pandas/io/pytables.py
index 7c7b78720..f41c767d0 100644
--- a/pandas/io/pytables.py
+++ b/pandas/io/pytables.py
@@ -3868,30 +3868,21 @@ class Table(Fixed):
             else:
                 existing_col = None
 
-            try:
-                col = klass.create_for_block(i=i, name=name, version=self.version)
-                col.set_atom(
-                    block=b,
-                    block_items=b_items,
-                    existing_col=existing_col,
-                    min_itemsize=min_itemsize,
-                    nan_rep=nan_rep,
-                    encoding=self.encoding,
-                    errors=self.errors,
-                    info=self.info,
-                )
-                col.set_pos(j)
+            col = klass.create_for_block(i=i, name=name, version=self.version)
+            col.set_atom(
+                block=b,
+                block_items=b_items,
+                existing_col=existing_col,
+                min_itemsize=min_itemsize,
+                nan_rep=nan_rep,
+                encoding=self.encoding,
+                errors=self.errors,
+                info=self.info,
+            )
+            col.set_pos(j)
+
+            self.values_axes.append(col)
 
-                self.values_axes.append(col)
-            except (NotImplementedError, ValueError, TypeError) as e:
-                raise e
-            except Exception as detail:
-                raise Exception(
-                    "cannot find the correct atom type -> "
-                    "[dtype->{name},items->{items}] {detail!s}".format(
-                        name=b.dtype.name, items=b_items, detail=detail
-                    )
-                )
             j += 1
 
         # validate our min_itemsize
