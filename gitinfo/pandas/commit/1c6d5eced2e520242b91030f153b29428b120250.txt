commit 1c6d5eced2e520242b91030f153b29428b120250
Author: jbrockmendel <jbrockmendel@gmail.com>
Date:   Tue Oct 22 05:31:51 2019 -0700

    REF: avoid getattr pattern for diff_2d; use fused types (#29120)

diff --git a/pandas/_libs/algos_common_helper.pxi.in b/pandas/_libs/algos_common_helper.pxi.in
index eb6d68989..0ae809476 100644
--- a/pandas/_libs/algos_common_helper.pxi.in
+++ b/pandas/_libs/algos_common_helper.pxi.in
@@ -4,32 +4,34 @@ Template for each `dtype` helper function using 1-d template
 WARNING: DO NOT edit .pxi FILE directly, .pxi is generated from .pxi.in
 """
 
-{{py:
-
-# name, c_type, dest_type
-dtypes = [('float64', 'float64_t', 'float64_t'),
-          ('float32', 'float32_t', 'float32_t'),
-          ('int8',  'int8_t',  'float32_t'),
-          ('int16', 'int16_t', 'float32_t'),
-          ('int32', 'int32_t', 'float64_t'),
-          ('int64', 'int64_t', 'float64_t')]
-
-def get_dispatch(dtypes):
-
-    for name, c_type, dest_type, in dtypes:
-        yield name, c_type, dest_type
+ctypedef fused diff_t:
+    float64_t
+    float32_t
+    int8_t
+    int16_t
+    int32_t
+    int64_t
 
-}}
-
-{{for name, c_type, dest_type
-      in get_dispatch(dtypes)}}
+ctypedef fused out_t:
+    float32_t
+    float64_t
 
 
 @cython.boundscheck(False)
 @cython.wraparound(False)
-def diff_2d_{{name}}(ndarray[{{c_type}}, ndim=2] arr,
-                     ndarray[{{dest_type}}, ndim=2] out,
-                     Py_ssize_t periods, int axis):
+def diff_2d(ndarray[diff_t, ndim=2] arr,
+            ndarray[out_t, ndim=2] out,
+            Py_ssize_t periods, int axis):
+
+    # Disable for unsupported dtype combinations,
+    #  see https://github.com/cython/cython/issues/2646
+    if out_t is float32_t:
+        if not (diff_t is float32_t or diff_t is int8_t or diff_t is int16_t):
+            raise NotImplementedError
+    else:
+        if (diff_t is float32_t or diff_t is int8_t or diff_t is int16_t):
+            raise NotImplementedError
+
     cdef:
         Py_ssize_t i, j, sx, sy
 
@@ -69,7 +71,6 @@ def diff_2d_{{name}}(ndarray[{{c_type}}, ndim=2] arr,
                 for j in range(start, stop):
                     out[i, j] = arr[i, j] - arr[i, j - periods]
 
-{{endfor}}
 
 # ----------------------------------------------------------------------
 # ensure_dtype
diff --git a/pandas/core/algorithms.py b/pandas/core/algorithms.py
index 60748839b..2c9f632e8 100644
--- a/pandas/core/algorithms.py
+++ b/pandas/core/algorithms.py
@@ -1850,14 +1850,7 @@ def searchsorted(arr, value, side="left", sorter=None):
 # diff #
 # ---- #
 
-_diff_special = {
-    "float64": algos.diff_2d_float64,
-    "float32": algos.diff_2d_float32,
-    "int64": algos.diff_2d_int64,
-    "int32": algos.diff_2d_int32,
-    "int16": algos.diff_2d_int16,
-    "int8": algos.diff_2d_int8,
-}
+_diff_special = {"float64", "float32", "int64", "int32", "int16", "int8"}
 
 
 def diff(arr, n: int, axis: int = 0):
@@ -1905,7 +1898,7 @@ def diff(arr, n: int, axis: int = 0):
     out_arr[tuple(na_indexer)] = na
 
     if arr.ndim == 2 and arr.dtype.name in _diff_special:
-        f = _diff_special[arr.dtype.name]
+        f = algos.diff_2d
         f(arr, out_arr, n, axis)
     else:
         # To keep mypy happy, _res_indexer is a list while res_indexer is
