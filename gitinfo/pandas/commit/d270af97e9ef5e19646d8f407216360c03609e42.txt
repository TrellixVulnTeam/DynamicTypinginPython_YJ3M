commit d270af97e9ef5e19646d8f407216360c03609e42
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Sun Aug 12 15:05:25 2012 -0400

    BUG: don't plot empty columns as an array of zeros close #1696

diff --git a/RELEASE.rst b/RELEASE.rst
index df95d1b05..a5f72fbe0 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -76,6 +76,7 @@ pandas 0.8.2
   - Hack to support storing data with a zero-length axis in HDFStore (#1707)
   - Fix DatetimeIndex tz-aware range generation issue (#1674)
   - Fix method='time' interpolation with intraday data (#1698)
+  - Don't plot all-NA DataFrame columns as zeros (#1696)
 
 pandas 0.8.1
 ============
diff --git a/pandas/core/strings.py b/pandas/core/strings.py
index e589b73ed..95bd2c48e 100644
--- a/pandas/core/strings.py
+++ b/pandas/core/strings.py
@@ -606,6 +606,21 @@ def str_decode(arr, encoding):
     f = lambda x: x.decode(encoding)
     return _na_map(f, arr)
 
+def str_encode(arr, encoding):
+    """
+    Encode character string to unicode using indicated encoding
+
+    Parameters
+    ----------
+    encoding : string
+
+    Returns
+    -------
+    encoded : array
+    """
+    f = lambda x: x.encode(encoding)
+    return _na_map(f, arr)
+
 def _noarg_wrapper(f):
     def wrapper(self):
         result = f(self.series)
@@ -728,6 +743,11 @@ class StringMethods(object):
         result = str_decode(self.series, encoding)
         return self._wrap_result(result)
 
+    @copy(str_encode)
+    def encode(self, encoding):
+        result = str_encode(self.series, encoding)
+        return self._wrap_result(result)
+
     count = _pat_wrapper(str_count, flags=True)
     startswith = _pat_wrapper(str_startswith)
     endswith = _pat_wrapper(str_endswith)
diff --git a/pandas/tests/test_strings.py b/pandas/tests/test_strings.py
index e2d53e5ea..175348604 100644
--- a/pandas/tests/test_strings.py
+++ b/pandas/tests/test_strings.py
@@ -658,8 +658,9 @@ class TestStringMethods(unittest.TestCase):
         result = data.str.contains(pat, flags=re.IGNORECASE)
         self.assertEquals(result[0], True)
 
-    def test_decode(self):
-        series = Series(['a', 'b', '\xc3\xa4'])
+    def test_encode_decode(self):
+        base = Series([u'a', u'b', u'\xe4'])
+        series = base.str.encode('utf-8')
 
         f = lambda x: x.decode('utf-8')
         result = series.str.decode('utf-8')
diff --git a/pandas/tools/plotting.py b/pandas/tools/plotting.py
index f495ca042..fe6026eee 100644
--- a/pandas/tools/plotting.py
+++ b/pandas/tools/plotting.py
@@ -551,11 +551,11 @@ class MPLPlot(object):
                 columns = df.columns
 
             for col in columns:
-                empty = df[col].count() == 0
-                # is this right?
-                values = df[col].values if not empty else np.zeros(len(df))
-
+                # # is this right?
+                # empty = df[col].count() == 0
+                # values = df[col].values if not empty else np.zeros(len(df))
 
+                values = df[col].values
                 yield col, values
 
     @property
