commit 75718ecbfe30a29227678be4d61e0d3ae83aeb2d
Author: jreback <jeff@reback.net>
Date:   Wed Jan 29 20:16:12 2014 -0500

    DOC: minor doc corrections

diff --git a/doc/source/basics.rst b/doc/source/basics.rst
index 4eeb09914..c26425017 100644
--- a/doc/source/basics.rst
+++ b/doc/source/basics.rst
@@ -275,6 +275,9 @@ See :ref:`gotchas<gotchas.truth>` for a more detailed discussion.
 
 .. _basics.equals:
 
+Comparing if objects are equivalent
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+
 Often you may find there is more than one way to compute the same
 result.  As a simple example, consider ``df+df`` and ``df*2``. To test
 that these two computations produce the same result, given the tools
@@ -302,7 +305,6 @@ locations treated as equal.
    (df+df).equals(df*2)
 
 
-
 Combining overlapping data sets
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 
@@ -718,7 +720,9 @@ the z-score across the ``major_axis``.
 
 .. ipython:: python
 
-   result = panel.apply(lambda x: (x-x.mean())/x.std(), axis='major_axis')
+   result = panel.apply(
+              lambda x: (x-x.mean())/x.std(),
+              axis='major_axis')
    result
    result['ItemA']
 
@@ -737,7 +741,8 @@ This is equivalent to the following
 
 .. ipython:: python
 
-   result = Panel(dict([ (ax,f(panel.loc[:,:,ax])) for ax in panel.minor_axis ]))
+   result = Panel(dict([ (ax,f(panel.loc[:,:,ax]))
+                           for ax in panel.minor_axis ]))
    result
    result.loc[:,:,'ItemA']
 
diff --git a/doc/source/release.rst b/doc/source/release.rst
index e08289c19..d701d1dac 100644
--- a/doc/source/release.rst
+++ b/doc/source/release.rst
@@ -53,7 +53,7 @@ pandas 0.13.1
 New features
 ~~~~~~~~~~~~
 
-  - Added ``date_format`` and ``datetime_format`` attribute to ExcelWriter.
+  - Added ``date_format`` and ``datetime_format`` attribute to ``ExcelWriter``.
     (:issue:`4133`)
 
 API Changes
@@ -91,14 +91,14 @@ Improvements to existing features
     allow multiple axes to be used to operate on slabs of a ``Panel``
   - The ``ArrayFormatter`` for ``datetime`` and ``timedelta64`` now intelligently
     limit precision based on the values in the array (:issue:`3401`)
-  - pd.show_versions() is now available for convenience when reporting issues.
+  - ``pd.show_versions()`` is now available for convenience when reporting issues.
   - perf improvements to Series.str.extract (:issue:`5944`)
   - perf improvments in ``dtypes/ftypes`` methods (:issue:`5968`)
   - perf improvments in indexing with object dtypes (:issue:`5968`)
-  - improved dtype inference for ``timedelta`` like passed to constructors (:issue:`5458`,:issue:`5689`)
+  - improved dtype inference for ``timedelta`` like passed to constructors (:issue:`5458`, :issue:`5689`)
   - escape special characters when writing to latex (:issue: `5374`)
   - perf improvements in ``DataFrame.apply`` (:issue:`6013`)
-  - pd.to_csv and pd.to_datetime learned a new ``infer_datetime_format`` keyword which greatly
+  - ``pd.read_csv`` and ``pd.to_datetime`` learned a new ``infer_datetime_format`` keyword which greatly
     improves parsing perf in many cases. Thanks to @lexual for suggesting and @danbirken
     for rapidly implementing. (:issue:`5490`,:issue:`6021`)
   - add ability to recognize '%p' format code (am/pm) to date parsers when the specific format
@@ -134,7 +134,7 @@ Bug Fixes
   - ``pd.match`` not returning passed sentinel
   - ``Panel.to_frame()`` no longer fails when ``major_axis`` is a
     ``MultiIndex`` (:issue:`5402`).
-  - Bug in ``pd.read_msgpack`` with inferring a ``DateTimeIndex`` frequencey
+  - Bug in ``pd.read_msgpack`` with inferring a ``DateTimeIndex`` frequency
     incorrectly (:issue:`5947`)
   - Fixed ``to_datetime`` for array with both Tz-aware datetimes and ``NaT``'s  (:issue:`5961`)
   - Bug in rolling skew/kurtosis when passed a Series with bad data (:issue:`5749`)
@@ -169,8 +169,7 @@ Bug Fixes
   - Bug in DataFrame construction with recarray and non-ns datetime dtype (:issue:`6140`)
   - Bug in ``.loc`` setitem indexing with a datafrme on rhs, multiple item setting, and
     a datetimelike (:issue:`6152`)
-  - Fixed a stack overflow bug in ``query``/``eval`` during lexicographic
-    string comparisons (:issue:`6155`).
+  - Fixed a bug in ``query``/``eval`` during lexicographic string comparisons (:issue:`6155`).
   - Fixed a bug in ``query`` where the index of a single-element ``Series`` was
     being thrown away (:issue:`6148`).
   - Bug in ``HDFStore`` on appending a dataframe with multi-indexed columns to
diff --git a/doc/source/v0.13.1.txt b/doc/source/v0.13.1.txt
index 9dfb721dd..30fc01f78 100644
--- a/doc/source/v0.13.1.txt
+++ b/doc/source/v0.13.1.txt
@@ -101,7 +101,7 @@ API changes
 Prior Version Deprecations/Changes
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 
-These were announced changes in 0.13 or prior that are taking effect as of 0.13.1
+There are no announced changes in 0.13 or prior that are taking effect as of 0.13.1
 
 Deprecations
 ~~~~~~~~~~~~
@@ -111,7 +111,7 @@ There are no deprecations of prior behavior in 0.13.1
 Enhancements
 ~~~~~~~~~~~~
 
-- pd.to_csv and pd.to_datetime learned a new ``infer_datetime_format`` keyword which greatly
+- ``pd.read_csv`` and ``pd.to_datetime`` learned a new ``infer_datetime_format`` keyword which greatly
   improves parsing perf in many cases. Thanks to @lexual for suggesting and @danbirken
   for rapidly implementing. (:issue:`5490`, :issue:`6021`)
 
@@ -160,7 +160,7 @@ Enhancements
      df['diff'] = df['today']-df['age']
      df
 
-- Add ``show_dimensions`` display option for the new DataFrame repr:
+- Add ``show_dimensions`` display option for the new DataFrame repr to control whether the dimensions print.
 
    .. ipython:: python
 
@@ -202,7 +202,9 @@ Enhancements
 
   .. ipython:: python
 
-     result = panel.apply(lambda x: (x-x.mean())/x.std(), axis='major_axis')
+     result = panel.apply(
+                lambda x: (x-x.mean())/x.std(),
+                axis='major_axis')
      result
      result['ItemA']
 
@@ -220,7 +222,8 @@ Enhancements
 
   .. ipython:: python
 
-     result = Panel(dict([ (ax,f(panel.loc[:,:,ax])) for ax in panel.minor_axis ]))
+     result = Panel(dict([ (ax,f(panel.loc[:,:,ax]))
+                             for ax in panel.minor_axis ]))
      result
      result.loc[:,:,'ItemA']
 
@@ -237,6 +240,7 @@ Performance improvements for 0.13.1
 - indexing with object dtypes (:issue:`5968`)
 - ``DataFrame.apply`` (:issue:`6013`)
 - Regression in JSON IO (:issue:`5765`)
+- Index construction from Series (:issue:`6150`)
 
 Experimental
 ~~~~~~~~~~~~
