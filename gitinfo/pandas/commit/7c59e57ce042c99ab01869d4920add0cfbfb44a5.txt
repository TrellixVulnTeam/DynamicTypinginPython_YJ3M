commit 7c59e57ce042c99ab01869d4920add0cfbfb44a5
Author: y-p <yoval@gmx.com>
Date:   Mon Apr 22 14:59:17 2013 +0300

    ENH: fix df.repr() for scripts (keep GH1611 away), accept None for max_cols/rows

diff --git a/pandas/core/config_init.py b/pandas/core/config_init.py
index 6f7179875..4ee9d564d 100644
--- a/pandas/core/config_init.py
+++ b/pandas/core/config_init.py
@@ -35,6 +35,7 @@ pc_max_rows_doc = """
     This sets the maximum number of rows pandas should output when printing
     out various output. For example, this value determines whether the repr()
     for a dataframe prints out fully or just a summary repr.
+    'None' value means unlimited.
 """
 
 pc_max_cols_doc = """
@@ -46,6 +47,7 @@ pc_max_cols_doc = """
     format in case all columns would not fit vertically. The IPython notebook,
     IPython qtconsole, or IDLE do not run in a terminal and hence it is not
     possible to do correct auto-detection.
+    'None' value means unlimited.
 """
 
 pc_max_info_cols_doc = """
diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 835fd28a6..217a0ecfb 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -602,14 +602,20 @@ class DataFrame(NDFrame):
     def _repr_fits_vertical_(self):
         """
         Check if full repr fits in vertical boundaries imposed by the display
-        options height and max_rows.  In case off non-interactive session,
+        options height and max_rows.  In case of non-interactive session,
         no boundaries apply.
         """
         width, height = fmt.get_console_size()
+        max_rows = get_option("display.max_rows")
 
-        # excluding column axis area
-        max_rows = get_option("display.max_rows") or height
-        return len(self) <= min(max_rows, height)
+        if height is None and max_rows is None:
+            return True
+
+        else:
+            # min of two, where one may be None
+            height = height or max_rows +1
+            max_rows = max_rows or height +1
+            return len(self) <= min(max_rows, height)
 
     def _repr_fits_horizontal_(self):
         """
@@ -618,13 +624,18 @@ class DataFrame(NDFrame):
         boundaries apply.
         """
         width, height = fmt.get_console_size()
-
         max_columns = get_option("display.max_columns")
         nb_columns = len(self.columns)
+
+        # exceed max columns
         if ((max_columns and nb_columns > max_columns) or
-            (nb_columns > (width // 2))):
+            (width and nb_columns > (width // 2))):
             return False
 
+        if width is None:
+            # no sense finding width of repr if no width set
+            return True
+
         buf = StringIO()
 
         # only care about the stuff we'll actually print out
@@ -635,7 +646,7 @@ class DataFrame(NDFrame):
             # min of two, where one may be None
             height = height or max_rows +1
             max_rows = max_rows or height +1
-            d=d.iloc[:min(max_rows, height)]
+            d=d.iloc[:min(max_rows, height,len(d))]
 
         d.to_string(buf=buf)
         value = buf.getvalue()
@@ -1593,7 +1604,7 @@ class DataFrame(NDFrame):
 
         # hack
         if max_cols is None:
-            max_cols = get_option('display.max_info_columns')
+            max_cols = get_option('display.max_info_columns',len(self.columns)+1)
 
         if verbose and len(self.columns) <= max_cols:
             lines.append('Data columns (total %d columns):' % len(self.columns))
