commit 3187a909d7f0263c54147dbc4a53cb5829b35bfc
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Sun Sep 9 17:56:56 2012 -0400

    BUG: normalize_date revert handling of datetime.date

diff --git a/RELEASE.rst b/RELEASE.rst
index e0ad1d73a..e233737b2 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -106,7 +106,7 @@ pandas 0.9.0
   - Fix DatetimeIndex.isin to function properly (#1763)
   - Fix conversion of array of tz-aware datetime.datetime to DatetimeIndex with
     right time zone (#1777)
-  - Fix DST issues with generating anchored date ranges (#1778)
+  - Fix DST issues with generating ancxhored date ranges (#1778)
   - Fix issue calling sort on result of Series.unique (#1807)
   - Fix numerical issue leading to square root of negative number in
     rolling_std (#1840)
@@ -130,6 +130,8 @@ pandas 0.9.0
     strings now too (#1791)
   - Fix Timestamp comparisons with datetime values outside the nanosecond range
     (1677-2262)
+  - Revert to prior behavior of normalize_date with datetime.date objects
+    (return datetime)
 
 pandas 0.8.1
 ============
diff --git a/pandas/src/datetime.pyx b/pandas/src/datetime.pyx
index c6cc8d4d4..6458f2f8e 100644
--- a/pandas/src/datetime.pyx
+++ b/pandas/src/datetime.pyx
@@ -1426,3 +1426,19 @@ def monthrange(int64_t year, int64_t month):
 cdef inline int64_t ts_dayofweek(_TSObject ts):
     return dayofweek(ts.dts.year, ts.dts.month, ts.dts.day)
 
+
+cpdef normalize_date(object dt):
+    '''
+    Normalize datetime.datetime value to midnight. Returns datetime.date as a
+    datetime.datetime at midnight
+
+    Returns
+    -------
+    normalized : datetime.datetime or Timestamp
+    '''
+    if PyDateTime_Check(dt):
+        return dt.replace(hour=0, minute=0, second=0, microsecond=0)
+    elif PyDate_Check(dt):
+        return datetime(dt.year, dt.month, dt.day)
+    else:
+        raise TypeError('Unrecognized type: %s' % type(dt))
diff --git a/pandas/tseries/tests/test_util.py b/pandas/tseries/tests/test_util.py
index 02a98858e..1b634d2e4 100644
--- a/pandas/tseries/tests/test_util.py
+++ b/pandas/tseries/tests/test_util.py
@@ -6,6 +6,9 @@ import numpy as np
 from pandas import Series, date_range
 import pandas.util.testing as tm
 
+from datetime import datetime, date
+
+from pandas.tseries.tools import normalize_date
 from pandas.tseries.util import pivot_annual, isleapyear
 
 class TestPivotAnnual(unittest.TestCase):
@@ -58,6 +61,18 @@ class TestPivotAnnual(unittest.TestCase):
     def test_period_weekly(self):
         pass
 
+
+def test_normalize_date():
+    value = date(2012, 9, 7)
+
+    result = normalize_date(value)
+    assert(result == datetime(2012, 9, 7))
+
+    value = datetime(2012, 9, 7, 12)
+
+    result = normalize_date(value)
+    assert(result == datetime(2012, 9, 7))
+
 if __name__ == '__main__':
     nose.runmodule(argv=[__file__,'-vvs','-x','--pdb', '--pdb-failure'],
                    exit=False)
diff --git a/pandas/tseries/tools.py b/pandas/tseries/tools.py
index f839f3ba6..9d98c12d1 100644
--- a/pandas/tseries/tools.py
+++ b/pandas/tseries/tools.py
@@ -258,8 +258,8 @@ def _try_parse_monthly(arg):
     ret = default.replace(year=y, month=m)
     return ret
 
-def normalize_date(dt):
-    return dt.replace(hour=0, minute=0, second=0, microsecond=0)
+
+normalize_date = lib.normalize_date
 
 
 def format(dt):
