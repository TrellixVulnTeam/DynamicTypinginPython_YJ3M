commit 16eeb8437ca8f8fea796ef03e11fc5b682982a4d
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Thu Sep 22 09:36:56 2011 -0400

    BUG: unicode and tuple fixes, address GH #138

diff --git a/pandas/core/common.py b/pandas/core/common.py
index cde918769..7928c3832 100644
--- a/pandas/core/common.py
+++ b/pandas/core/common.py
@@ -196,7 +196,8 @@ def _pfixed(s, space, nanRep=None, float_format=None):
 
         return formatted.ljust(space)
     else:
-        return (' %s' % s)[:space].ljust(space)
+        stringified = _stringify(s)
+        return (' %s' % stringified)[:space].ljust(space)
 
 def _stringify(col):
     # unicode workaround
@@ -210,7 +211,7 @@ def _format(s, nanRep=None, float_format=None):
         if nanRep is not None and isnull(s):
             if np.isnan(s):
                 s = nanRep
-            return (' %s' % str(s))
+            return ' %s' % s
 
         if float_format:
             formatted = float_format(s)
@@ -225,7 +226,7 @@ def _format(s, nanRep=None, float_format=None):
 
         return formatted
     else:
-        return ' %s' % str(s)
+        return ' %s' % _stringify(s)
 
 #-------------------------------------------------------------------------------
 # miscellaneous python tools
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index 788a45670..2b8edf81d 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -1163,6 +1163,34 @@ class TestDataFrame(unittest.TestCase, CheckIndexing):
         common.set_printoptions(precision=3, column_space=10)
         repr(self.frame)
 
+    def test_repr_tuples(self):
+        buf = StringIO()
+
+        arr = np.empty(10, dtype=object)
+        arr[:] = zip(range(10), range(10))
+        df = DataFrame({'tups' : arr})
+        repr(df)
+        df.to_string(colSpace=10, buf=buf)
+
+    def test_to_string_unicode(self):
+        buf = StringIO()
+
+        unicode_values = [u'\u03c3'] * 10
+        unicode_values = np.array(unicode_values, dtype=object)
+        df = DataFrame({'unicode' : unicode_values})
+        df.to_string(colSpace=10, buf=buf)
+
+    def test_to_string_unicode_columns(self):
+        df = DataFrame({u'\u03c3' : np.arange(10.)})
+
+        buf = StringIO()
+        df.to_string(buf=buf)
+        buf.getvalue()
+
+        buf = StringIO()
+        df.info(buf=buf)
+        buf.getvalue()
+
     def test_head_tail(self):
         assert_frame_equal(self.frame.head(), self.frame[:5])
         assert_frame_equal(self.frame.tail(), self.frame[-5:])
@@ -1195,17 +1223,6 @@ class TestDataFrame(unittest.TestCase, CheckIndexing):
         frame = DataFrame(index=np.arange(1000))
         frame.to_string(buf=buf)
 
-    def test_to_string_unicode_columns(self):
-        df = DataFrame({u'\u03c3' : np.arange(10.)})
-
-        buf = StringIO()
-        df.to_string(buf=buf)
-        buf.getvalue()
-
-        buf = StringIO()
-        df.info(buf=buf)
-        buf.getvalue()
-
     def test_insert(self):
         df = DataFrame(np.random.randn(5, 3), index=np.arange(5),
                        columns=['c', 'b', 'a'])
