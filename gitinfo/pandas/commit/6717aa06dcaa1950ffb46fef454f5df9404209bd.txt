commit 6717aa06dcaa1950ffb46fef454f5df9404209bd
Author: Jeff Reback <jeff@reback.net>
Date:   Fri Feb 13 17:51:09 2015 -0500

    import msgpack deps only as needed (GH9482)

diff --git a/pandas/io/packers.py b/pandas/io/packers.py
index 7da86565b..a8ad8c058 100644
--- a/pandas/io/packers.py
+++ b/pandas/io/packers.py
@@ -61,18 +61,30 @@ from pandas.core.internals import BlockManager, make_block
 import pandas.core.internals as internals
 
 from pandas.msgpack import Unpacker as _Unpacker, Packer as _Packer
-import zlib
-
-try:
-    import blosc
-    _BLOSC = True
-except:
-    _BLOSC = False
 
 # until we can pass this into our conversion functions,
 # this is pretty hacky
 compressor = None
+_IMPORTS = False
+_BLOSC = False
+
+def _importers():
+    # import things we need
+    # but make this done on a first use basis
+
+    global _IMPORTS
+    if _IMPORTS:
+        return
+
+    _IMPORTS = True
 
+    global  _BLOSC
+    import zlib
+    try:
+        import blosc
+        _BLOSC = True
+    except:
+        pass
 
 def to_msgpack(path_or_buf, *args, **kwargs):
     """
@@ -91,6 +103,7 @@ def to_msgpack(path_or_buf, *args, **kwargs):
     compress : type of compressor (zlib or blosc), default to None (no
                compression)
     """
+    _importers()
     global compressor
     compressor = kwargs.pop('compress', None)
     append = kwargs.pop('append', None)
@@ -133,6 +146,7 @@ def read_msgpack(path_or_buf, iterator=False, **kwargs):
     obj : type of object stored in file
 
     """
+    _importers()
     path_or_buf, _ = get_filepath_or_buffer(path_or_buf)
     if iterator:
         return Iterator(path_or_buf)
