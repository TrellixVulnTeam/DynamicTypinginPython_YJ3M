commit cfc9c0e3fa3d9e7e7df3884cd3eac1c62e59b5e3
Author: jbrockmendel <jbrockmendel@gmail.com>
Date:   Sun Jun 14 07:13:00 2020 -0700

    BUG: DataFrame.unstack with non-consolidated (#34709)

diff --git a/pandas/core/reshape/reshape.py b/pandas/core/reshape/reshape.py
index 133fba024..391313fbb 100644
--- a/pandas/core/reshape/reshape.py
+++ b/pandas/core/reshape/reshape.py
@@ -41,8 +41,7 @@ class _Unstacker:
 
     Parameters
     ----------
-    index : object
-        Pandas ``Index``
+    index : MultiIndex
     level : int or str, default last level
         Level to "unstack". Accepts a name for the level.
     fill_value : scalar, optional
@@ -83,7 +82,7 @@ class _Unstacker:
     """
 
     def __init__(
-        self, index, level=-1, constructor=None,
+        self, index: MultiIndex, level=-1, constructor=None,
     ):
 
         if constructor is None:
@@ -415,7 +414,7 @@ def unstack(obj, level, fill_value=None):
         level = obj.index._get_level_number(level)
 
     if isinstance(obj, DataFrame):
-        if isinstance(obj.index, MultiIndex) or not obj._can_fast_transpose:
+        if isinstance(obj.index, MultiIndex):
             return _unstack_frame(obj, level, fill_value=fill_value)
         else:
             return obj.T.stack(dropna=False)
diff --git a/pandas/tests/frame/test_reshape.py b/pandas/tests/frame/test_reshape.py
index 2e707342a..a6c4089dc 100644
--- a/pandas/tests/frame/test_reshape.py
+++ b/pandas/tests/frame/test_reshape.py
@@ -140,6 +140,17 @@ class TestDataFrameReshape:
         expected = expected[["a", "b"]]
         tm.assert_frame_equal(result, expected)
 
+    def test_unstack_not_consolidated(self):
+        # Gh#34708
+        df = pd.DataFrame({"x": [1, 2, np.NaN], "y": [3.0, 4, np.NaN]})
+        df2 = df[["x"]]
+        df2["y"] = df["y"]
+        assert len(df2._mgr.blocks) == 2
+
+        res = df2.unstack()
+        expected = df.unstack()
+        tm.assert_series_equal(res, expected)
+
     def test_unstack_fill(self):
 
         # GH #9746: fill_value keyword argument for Series
