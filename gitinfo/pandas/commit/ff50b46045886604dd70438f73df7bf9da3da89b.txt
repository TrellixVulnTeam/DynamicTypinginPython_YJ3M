commit ff50b46045886604dd70438f73df7bf9da3da89b
Author: jbrockmendel <jbrockmendel@gmail.com>
Date:   Wed Jun 26 08:56:34 2019 -0700

    CLN: Remove no-longer-used BlockManager.xs (#27043)
    
    * Remove no-longer-used BlockManager.xs

diff --git a/pandas/core/internals/blocks.py b/pandas/core/internals/blocks.py
index 92ea93694..c6be56df7 100644
--- a/pandas/core/internals/blocks.py
+++ b/pandas/core/internals/blocks.py
@@ -647,24 +647,13 @@ class Block(PandasObject):
         if self.is_integer or self.is_bool or self.is_datetime:
             pass
         elif self.is_float and result.dtype == self.dtype:
-
             # protect against a bool/object showing up here
             if isinstance(dtype, str) and dtype == 'infer':
                 return result
-            if not isinstance(dtype, type):
-                dtype = dtype.type
-            if issubclass(dtype, (np.bool_, np.object_)):
-                if issubclass(dtype, np.bool_):
-                    if isna(result).all():
-                        return result.astype(np.bool_)
-                    else:
-                        result = result.astype(np.object_)
-                        result[result == 1] = True
-                        result[result == 0] = False
-                        return result
-                else:
-                    return result.astype(np.object_)
 
+            # This is only reached via Block.setitem, where dtype is always
+            #  either "infer", self.dtype, or values.dtype.
+            assert dtype == self.dtype, (dtype, self.dtype)
             return result
 
         # may need to change the dtype here
diff --git a/pandas/core/internals/managers.py b/pandas/core/internals/managers.py
index 26b6920c1..aff39d765 100644
--- a/pandas/core/internals/managers.py
+++ b/pandas/core/internals/managers.py
@@ -816,48 +816,6 @@ class BlockManager(PandasObject):
         return {dtype: self.combine(blocks, copy=copy)
                 for dtype, blocks in bd.items()}
 
-    def xs(self, key, axis=1, copy=True, takeable=False):
-        if axis < 1:
-            raise AssertionError(
-                'Can only take xs across axis >= 1, got {ax}'.format(ax=axis))
-
-        # take by position
-        if takeable:
-            loc = key
-        else:
-            loc = self.axes[axis].get_loc(key)
-
-        slicer = [slice(None, None) for _ in range(self.ndim)]
-        slicer[axis] = loc
-        slicer = tuple(slicer)
-
-        new_axes = list(self.axes)
-
-        # could be an array indexer!
-        if isinstance(loc, (slice, np.ndarray)):
-            new_axes[axis] = new_axes[axis][loc]
-        else:
-            new_axes.pop(axis)
-
-        new_blocks = []
-        if len(self.blocks) > 1:
-            # we must copy here as we are mixed type
-            for blk in self.blocks:
-                newb = make_block(values=blk.values[slicer],
-                                  klass=blk.__class__,
-                                  placement=blk.mgr_locs)
-                new_blocks.append(newb)
-        elif len(self.blocks) == 1:
-            block = self.blocks[0]
-            vals = block.values[slicer]
-            if copy:
-                vals = vals.copy()
-            new_blocks = [make_block(values=vals,
-                                     placement=block.mgr_locs,
-                                     klass=block.__class__)]
-
-        return self.__class__(new_blocks, new_axes)
-
     def fast_xs(self, loc):
         """
         get a cross sectional for a given location in the
diff --git a/pandas/core/panel.py b/pandas/core/panel.py
index 9d6b7333c..c0340fc97 100644
--- a/pandas/core/panel.py
+++ b/pandas/core/panel.py
@@ -856,13 +856,7 @@ class Panel(NDFrame):
         if axis == 0:
             return self[key]
 
-        self._consolidate_inplace()
-        axis_number = self._get_axis_number(axis)
-        new_data = self._data.xs(key, axis=axis_number, copy=False)
-        result = self._construct_return_type(new_data)
-        copy = new_data.is_mixed_type
-        result._set_is_copy(self, copy=copy)
-        return result
+        raise NotImplementedError("Panel is removed in pandas 0.25.0")
 
     _xs = xs
 
diff --git a/pandas/tests/internals/test_internals.py b/pandas/tests/internals/test_internals.py
index fbd821f8e..b997e2b6e 100644
--- a/pandas/tests/internals/test_internals.py
+++ b/pandas/tests/internals/test_internals.py
@@ -705,21 +705,6 @@ class TestBlockManager:
             mgr.get('d').internal_values(),
             reindexed.get('d').internal_values())
 
-    def test_multiindex_xs(self):
-        mgr = create_mgr('a,b,c: f8; d,e,f: i8')
-
-        index = MultiIndex(levels=[['foo', 'bar', 'baz', 'qux'], ['one', 'two',
-                                                                  'three']],
-                           codes=[[0, 0, 0, 1, 1, 2, 2, 3, 3, 3],
-                                  [0, 1, 2, 0, 1, 1, 2, 0, 1, 2]],
-                           names=['first', 'second'])
-
-        mgr.set_axis(1, index)
-        result = mgr.xs('bar', axis=1)
-        assert result.shape == (6, 2)
-        assert result.axes[1][0] == ('bar', 'one')
-        assert result.axes[1][1] == ('bar', 'two')
-
     def test_get_numeric_data(self):
         mgr = create_mgr('int: int; float: float; complex: complex;'
                          'str: object; bool: bool; obj: object; dt: datetime',
