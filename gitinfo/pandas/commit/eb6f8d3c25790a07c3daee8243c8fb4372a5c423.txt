commit eb6f8d3c25790a07c3daee8243c8fb4372a5c423
Author: jbrockmendel <jbrockmendel@gmail.com>
Date:   Thu Feb 27 04:35:34 2020 -0800

    test_droplevel (#32272)

diff --git a/pandas/tests/frame/methods/test_droplevel.py b/pandas/tests/frame/methods/test_droplevel.py
new file mode 100644
index 000000000..517905cf2
--- /dev/null
+++ b/pandas/tests/frame/methods/test_droplevel.py
@@ -0,0 +1,23 @@
+from pandas import DataFrame, Index, MultiIndex
+import pandas._testing as tm
+
+
+class TestDropLevel:
+    def test_droplevel(self):
+        # GH#20342
+        df = DataFrame([[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12]])
+        df = df.set_index([0, 1]).rename_axis(["a", "b"])
+        df.columns = MultiIndex.from_tuples(
+            [("c", "e"), ("d", "f")], names=["level_1", "level_2"]
+        )
+
+        # test that dropping of a level in index works
+        expected = df.reset_index("a", drop=True)
+        result = df.droplevel("a", axis="index")
+        tm.assert_frame_equal(result, expected)
+
+        # test that dropping of a level in columns works
+        expected = df.copy()
+        expected.columns = Index(["c", "d"], name="level_1")
+        result = df.droplevel("level_2", axis="columns")
+        tm.assert_frame_equal(result, expected)
diff --git a/pandas/tests/frame/test_alter_axes.py b/pandas/tests/frame/test_alter_axes.py
index 751ed1dfd..34df8bb57 100644
--- a/pandas/tests/frame/test_alter_axes.py
+++ b/pandas/tests/frame/test_alter_axes.py
@@ -840,25 +840,6 @@ class TestDataFrameAlterAxes:
             "tolerance",
         }
 
-    def test_droplevel(self):
-        # GH20342
-        df = DataFrame([[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12]])
-        df = df.set_index([0, 1]).rename_axis(["a", "b"])
-        df.columns = MultiIndex.from_tuples(
-            [("c", "e"), ("d", "f")], names=["level_1", "level_2"]
-        )
-
-        # test that dropping of a level in index works
-        expected = df.reset_index("a", drop=True)
-        result = df.droplevel("a", axis="index")
-        tm.assert_frame_equal(result, expected)
-
-        # test that dropping of a level in columns works
-        expected = df.copy()
-        expected.columns = Index(["c", "d"], name="level_1")
-        result = df.droplevel("level_2", axis="columns")
-        tm.assert_frame_equal(result, expected)
-
 
 class TestIntervalIndex:
     def test_setitem(self):
diff --git a/pandas/tests/series/methods/test_droplevel.py b/pandas/tests/series/methods/test_droplevel.py
new file mode 100644
index 000000000..435eb5751
--- /dev/null
+++ b/pandas/tests/series/methods/test_droplevel.py
@@ -0,0 +1,19 @@
+import pytest
+
+from pandas import MultiIndex, Series
+import pandas._testing as tm
+
+
+class TestDropLevel:
+    def test_droplevel(self):
+        # GH#20342
+        ser = Series([1, 2, 3, 4])
+        ser.index = MultiIndex.from_arrays(
+            [(1, 2, 3, 4), (5, 6, 7, 8)], names=["a", "b"]
+        )
+        expected = ser.reset_index("b", drop=True)
+        result = ser.droplevel("b", axis="index")
+        tm.assert_series_equal(result, expected)
+        # test that droplevel raises ValueError on axis != 0
+        with pytest.raises(ValueError):
+            ser.droplevel(1, axis="columns")
diff --git a/pandas/tests/series/test_alter_axes.py b/pandas/tests/series/test_alter_axes.py
index 9be8744d7..f6ca93b0c 100644
--- a/pandas/tests/series/test_alter_axes.py
+++ b/pandas/tests/series/test_alter_axes.py
@@ -152,16 +152,3 @@ class TestSeriesAlterAxes:
         for axis in [2, "foo"]:
             with pytest.raises(ValueError, match="No axis named"):
                 s.set_axis(list("abcd"), axis=axis, inplace=False)
-
-    def test_droplevel(self):
-        # GH20342
-        ser = Series([1, 2, 3, 4])
-        ser.index = MultiIndex.from_arrays(
-            [(1, 2, 3, 4), (5, 6, 7, 8)], names=["a", "b"]
-        )
-        expected = ser.reset_index("b", drop=True)
-        result = ser.droplevel("b", axis="index")
-        tm.assert_series_equal(result, expected)
-        # test that droplevel raises ValueError on axis != 0
-        with pytest.raises(ValueError):
-            ser.droplevel(1, axis="columns")
