commit 73dcb953efd1646fc1c53540637dde058f36fe92
Author: Gabriel Araujo <gabrielaraujof@outlook.com.br>
Date:   Tue Aug 18 14:24:47 2015 -0300

    ENH: Index orientation option when converting a DataFrame into a dict, #10844
    
    Added an index orient option for DataFrame.to_dict method.
    
    Updated tests with index option.

diff --git a/doc/source/whatsnew/v0.17.0.txt b/doc/source/whatsnew/v0.17.0.txt
index ca84123e7..77130343c 100644
--- a/doc/source/whatsnew/v0.17.0.txt
+++ b/doc/source/whatsnew/v0.17.0.txt
@@ -175,6 +175,8 @@ Other enhancements
 
 - ``msgpack`` submodule has been updated to 0.4.6 with backward compatibility (:issue:`10581`)
 
+- ``DataFrame.to_dict`` now accepts the *index* option in ``orient`` keyword argument (:issue:`10844`).
+
 .. ipython :: python
 
    s = pd.Series(['A', 'B', 'C', 'A', 'B', 'D'])
diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 4e73766e5..da350a726 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -747,7 +747,7 @@ class DataFrame(NDFrame):
 
         Parameters
         ----------
-        orient : str {'dict', 'list', 'series', 'split', 'records'}
+        orient : str {'dict', 'list', 'series', 'split', 'records', 'index'}
             Determines the type of the values of the dictionary.
 
             - dict (default) : dict like {column -> {index -> value}}
@@ -757,6 +757,9 @@ class DataFrame(NDFrame):
               {index -> [index], columns -> [columns], data -> [values]}
             - records : list like
               [{column -> value}, ... , {column -> value}]
+            - index : dict like {index -> {column -> value}}
+
+              .. versionadded:: 0.17.0
 
             Abbreviations are allowed. `s` indicates `series` and `sp`
             indicates `split`.
@@ -781,6 +784,8 @@ class DataFrame(NDFrame):
         elif orient.lower().startswith('r'):
             return [dict((k, v) for k, v in zip(self.columns, row))
                     for row in self.values]
+        elif orient.lower().startswith('i'):
+            return dict((k, v.to_dict()) for k, v in self.iterrows())
         else:
             raise ValueError("orient '%s' not understood" % orient)
 
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index a559de53b..c790c9228 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -4467,9 +4467,16 @@ class TestDataFrame(tm.TestCase, CheckIndexing,
 
         tm.assert_almost_equal(recons_data, expected_records)
 
+        # GH10844
+        recons_data = DataFrame(test_data).to_dict("i")
+
+        for k, v in compat.iteritems(test_data):
+            for k2, v2 in compat.iteritems(v):
+                self.assertEqual(v2, recons_data[k2][k])
+
     def test_to_dict_invalid_orient(self):
         df = DataFrame({'A':[0, 1]})
-        self.assertRaises(ValueError, df.to_dict, orient='invalid')
+        self.assertRaises(ValueError, df.to_dict, orient='xinvalid')
 
     def test_to_records_dt64(self):
         df = DataFrame([["one", "two", "three"],
