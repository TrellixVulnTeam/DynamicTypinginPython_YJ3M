commit 0155a3b20c6ff740ba36b46f1295371771440c47
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Fri Jan 20 20:26:02 2012 -0500

    BUG: handling of tuples in MultiIndex level

diff --git a/pandas/core/index.py b/pandas/core/index.py
index af7dccc1b..53fb44c0e 100644
--- a/pandas/core/index.py
+++ b/pandas/core/index.py
@@ -1641,8 +1641,8 @@ class MultiIndex(Index):
 
     def _partial_tup_index(self, tup, side='left'):
         if len(tup) > self.lexsort_depth:
-            raise Exception('MultiIndex lexsort depth %d, key was length %d' %
-                            (self.lexsort_depth, len(tup)))
+            raise KeyError('MultiIndex lexsort depth %d, key was length %d' %
+                           (self.lexsort_depth, len(tup)))
 
         n = len(tup)
         start, end = 0, len(self)
diff --git a/pandas/tests/test_multilevel.py b/pandas/tests/test_multilevel.py
index 7e4bb6ae9..279cbeb30 100644
--- a/pandas/tests/test_multilevel.py
+++ b/pandas/tests/test_multilevel.py
@@ -955,6 +955,28 @@ x   q   30      3    -0.6662 -0.5243 -0.3580  0.89145  2.5838"""
         self.ymd.T.to_html()
 
     def test_level_with_tuples(self):
+        index = MultiIndex(levels=[[('foo', 'bar', 0), ('foo', 'baz', 0),
+                                    ('foo', 'qux', 0)],
+                                   [0, 1]],
+                           labels=[[0, 0, 1, 1, 2, 2], [0, 1, 0, 1, 0, 1]])
+
+        series = Series(np.random.randn(6), index=index)
+        frame = DataFrame(np.random.randn(6, 4), index=index)
+
+        result = series[('foo', 'bar', 0)]
+        result2 = series.ix[('foo', 'bar', 0)]
+        expected = series[:2]
+        expected.index = expected.index.droplevel(0)
+        assert_series_equal(result, expected)
+        assert_series_equal(result2, expected)
+
+        result = frame.ix[('foo', 'bar', 0)]
+        result2 = frame.xs(('foo', 'bar', 0))
+        expected = frame[:2]
+        expected.index = expected.index.droplevel(0)
+        assert_frame_equal(result, expected)
+        assert_frame_equal(result2, expected)
+
         index = MultiIndex(levels=[[('foo', 'bar'), ('foo', 'baz'),
                                     ('foo', 'qux')],
                                    [0, 1]],
