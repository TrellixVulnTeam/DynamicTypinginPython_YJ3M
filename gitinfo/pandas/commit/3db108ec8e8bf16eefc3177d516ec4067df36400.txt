commit 3db108ec8e8bf16eefc3177d516ec4067df36400
Author: Steve <lespaul85@gmail.com>
Date:   Tue Feb 21 19:49:32 2012 -0500

    incorrect fix when dealing with date objects since they do not store microsecond information.
    Also added simple test case for checking that fractional seconds are stored

diff --git a/pandas/io/pytables.py b/pandas/io/pytables.py
index 525639ce2..ad1cfbec2 100644
--- a/pandas/io/pytables.py
+++ b/pandas/io/pytables.py
@@ -713,12 +713,15 @@ def _convert_index(index):
     if isinstance(values[0], (datetime, date)):
         if isinstance(values[0], datetime):
             kind = 'datetime'
+            converted = np.array([(time.mktime(v.timetuple()) +
+                                   v.microsecond / 1E6) for v in values],
+                                   dtype=np.float64)
+            return converted, kind, _tables().Time64Col()
         else:
             kind = 'date'
-        converted = np.array([(time.mktime(v.timetuple()) +
-                               v.microsecond / 1E6) for v in values],
-                               dtype=np.float64)
-        return converted, kind, _tables().Time64Col()
+            converted = np.array([time.mktime(v.timetuple()) for v in values],
+                              dtype=np.float64)
+            return converted, kind, _tables().Time64Col()
     elif isinstance(values[0], basestring):
         converted = np.array(list(values), dtype=np.str_)
         itemsize = converted.dtype.itemsize
diff --git a/pandas/io/tests/test_pytables.py b/pandas/io/tests/test_pytables.py
index f6070fb2b..e347b6720 100644
--- a/pandas/io/tests/test_pytables.py
+++ b/pandas/io/tests/test_pytables.py
@@ -3,6 +3,7 @@ import unittest
 import os
 import sys
 
+from datetime import datetime
 import numpy as np
 
 from pandas import Series, DataFrame, Panel, DateRange, MultiIndex
@@ -466,6 +467,11 @@ class TesttHDFStore(unittest.TestCase):
         store['d']
         store.close()
 
+    def test_store_datetime_fractional_secs(self):
+        series = Series([0], [datetime(2012, 1, 2, 3, 4, 5, 123456)])
+        self.store['a'] = series
+        self.assertEquals(self.store['a'].index[0].microsecond, 123456)
+
 def curpath():
     pth, _ = os.path.split(os.path.abspath(__file__))
     return pth
