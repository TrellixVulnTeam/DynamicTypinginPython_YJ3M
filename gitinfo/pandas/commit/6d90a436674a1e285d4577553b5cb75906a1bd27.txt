commit 6d90a436674a1e285d4577553b5cb75906a1bd27
Author: Christopher C. Aycock <chris@chrisaycock.com>
Date:   Fri Apr 7 16:37:41 2017 -0400

    BUG: use entire size of DatetimeTZBlock when coercing result (#15855) (#15924)
    
    * BUG: use entire size of DatetimeTZBlock when coercing result (#15855)
    
    * Moved test
    
    * Removed unnecessary 'self'
    
    * Removed unnecessary 'self', again

diff --git a/doc/source/whatsnew/v0.20.0.txt b/doc/source/whatsnew/v0.20.0.txt
index d3207ffa8..0b98e57c6 100644
--- a/doc/source/whatsnew/v0.20.0.txt
+++ b/doc/source/whatsnew/v0.20.0.txt
@@ -1144,6 +1144,7 @@ Conversion
 - Bug in ``DataFrame.fillna()`` where the argument ``downcast`` was ignored when fillna value was of type ``dict`` (:issue:`15277`)
 - Bug in ``.asfreq()``, where frequency was not set for empty ``Series`` (:issue:`14320`)
 - Bug in ``DataFrame`` construction with nulls and datetimes in a list-like (:issue:`15869`)
+- Bug in ``DataFrame.fillna()`` with tz-aware datetimes (:issue:`15855`)
 
 Indexing
 ^^^^^^^^
diff --git a/pandas/core/internals.py b/pandas/core/internals.py
index 8db801f8e..57361886e 100644
--- a/pandas/core/internals.py
+++ b/pandas/core/internals.py
@@ -2475,7 +2475,7 @@ class DatetimeTZBlock(NonConsolidatableMixIn, DatetimeBlock):
         if isinstance(result, np.ndarray):
             # allow passing of > 1dim if its trivial
             if result.ndim > 1:
-                result = result.reshape(len(result))
+                result = result.reshape(np.prod(result.shape))
             result = self.values._shallow_copy(result)
 
         return result
diff --git a/pandas/tests/frame/test_missing.py b/pandas/tests/frame/test_missing.py
index 93c3ba78a..eacf032bb 100644
--- a/pandas/tests/frame/test_missing.py
+++ b/pandas/tests/frame/test_missing.py
@@ -257,6 +257,20 @@ class TestDataFrameMissingData(tm.TestCase, TestData):
         result = df.fillna(value={'Date': df['Date2']})
         assert_frame_equal(result, expected)
 
+        # with timezone
+        # GH 15855
+        df = pd.DataFrame({'A': [pd.Timestamp('2012-11-11 00:00:00+01:00'),
+                                 pd.NaT]})
+        exp = pd.DataFrame({'A': [pd.Timestamp('2012-11-11 00:00:00+01:00'),
+                                  pd.Timestamp('2012-11-11 00:00:00+01:00')]})
+        assert_frame_equal(df.fillna(method='pad'), exp)
+
+        df = pd.DataFrame({'A': [pd.NaT,
+                                 pd.Timestamp('2012-11-11 00:00:00+01:00')]})
+        exp = pd.DataFrame({'A': [pd.Timestamp('2012-11-11 00:00:00+01:00'),
+                                  pd.Timestamp('2012-11-11 00:00:00+01:00')]})
+        assert_frame_equal(df.fillna(method='bfill'), exp)
+
     def test_fillna_downcast(self):
         # GH 15277
         # infer int64 from float64
diff --git a/pandas/tests/series/test_missing.py b/pandas/tests/series/test_missing.py
index 717428349..ea49abeee 100644
--- a/pandas/tests/series/test_missing.py
+++ b/pandas/tests/series/test_missing.py
@@ -258,6 +258,18 @@ class TestSeriesMissingData(TestData, tm.TestCase):
             self.assert_series_equal(expected, result)
             self.assert_series_equal(pd.isnull(s), null_loc)
 
+        # with timezone
+        # GH 15855
+        df = pd.Series([pd.Timestamp('2012-11-11 00:00:00+01:00'), pd.NaT])
+        exp = pd.Series([pd.Timestamp('2012-11-11 00:00:00+01:00'),
+                         pd.Timestamp('2012-11-11 00:00:00+01:00')])
+        assert_series_equal(df.fillna(method='pad'), exp)
+
+        df = pd.Series([pd.NaT, pd.Timestamp('2012-11-11 00:00:00+01:00')])
+        exp = pd.Series([pd.Timestamp('2012-11-11 00:00:00+01:00'),
+                         pd.Timestamp('2012-11-11 00:00:00+01:00')])
+        assert_series_equal(df.fillna(method='bfill'), exp)
+
     def test_datetime64tz_fillna_round_issue(self):
         # GH 14872
 
