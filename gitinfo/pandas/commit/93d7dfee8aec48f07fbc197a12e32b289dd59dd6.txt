commit 93d7dfee8aec48f07fbc197a12e32b289dd59dd6
Author: Chang She <chang@lambdafoundry.com>
Date:   Tue May 1 16:11:26 2012 -0400

    Cleaning up tools.plotting

diff --git a/pandas/tests/test_common.py b/pandas/tests/test_common.py
index fa94d7c68..3d3ffe7a7 100644
--- a/pandas/tests/test_common.py
+++ b/pandas/tests/test_common.py
@@ -1,4 +1,5 @@
 from datetime import datetime
+import sys
 
 import unittest
 
@@ -150,7 +151,6 @@ def test_ensure_int32():
     result = com._ensure_int32(values)
     assert(result.dtype == np.int32)
 
-
 class TestTake(unittest.TestCase):
 
     def test_1d_with_out(self):
diff --git a/pandas/tools/plotting.py b/pandas/tools/plotting.py
index e56c5c144..6e3f62454 100644
--- a/pandas/tools/plotting.py
+++ b/pandas/tools/plotting.py
@@ -6,6 +6,10 @@ import numpy as np
 
 from pandas.util.decorators import cache_readonly
 import pandas.core.common as com
+from pandas.core.series import Series
+from pandas.tseries.index import DatetimeIndex
+from pandas.tseries.period import PeriodIndex
+from pandas.tseries.offsets import DateOffset
 
 def scatter_matrix(frame, alpha=0.5, figsize=None, ax=None, grid=False,
                    **kwds):
@@ -180,8 +184,6 @@ class MPLPlot(object):
 
     def _iter_data(self):
         from pandas.core.frame import DataFrame
-        from pandas.core.series import Series
-
         if isinstance(self.data, (Series, np.ndarray)):
             yield com._stringify(self.label), np.asarray(self.data)
         elif isinstance(self.data, DataFrame):
@@ -331,10 +333,7 @@ class LinePlot(MPLPlot):
 
     @property
     def has_ts_index(self):
-        from pandas.core.series import Series
         from pandas.core.frame import DataFrame
-        from pandas.tseries.index import DatetimeIndex
-        from pandas.tseries.period import PeriodIndex
         if isinstance(self.data, (Series, DataFrame)):
             if isinstance(self.data.index, (DatetimeIndex, PeriodIndex)):
                 has_freq = (hasattr(self.data.index, 'freq') and
@@ -382,10 +381,7 @@ class LinePlot(MPLPlot):
     def _maybe_convert_index(self, data):
         # tsplot converts automatically, but don't want to convert index
         # over and over for DataFrames
-        from pandas.tseries.offsets import DateOffset
-        from pandas.tseries.index import DatetimeIndex
         from pandas.core.frame import DataFrame
-
         if (isinstance(data.index, DatetimeIndex) and
             isinstance(data, DataFrame)):
             freq = getattr(data.index, 'freq', None)
@@ -401,8 +397,6 @@ class LinePlot(MPLPlot):
         return data
 
     def _make_ts_plot(self, data, **kwargs):
-        from pandas.core.series import Series
-        from pandas.core.frame import DataFrame
         import pandas.tseries.plotting as plot
 
         if isinstance(data, Series):
diff --git a/pandas/tseries/tests/test_plotting.py b/pandas/tseries/tests/test_plotting.py
index 60136b408..e418871c3 100644
--- a/pandas/tseries/tests/test_plotting.py
+++ b/pandas/tseries/tests/test_plotting.py
@@ -72,12 +72,13 @@ class TestTSPlot(unittest.TestCase):
         for ser in self.datetime_ser:
             ser = Series(ser.values, Index(np.asarray(ser.index)))
             _check_plot_works(ser.plot, ser.index.inferred_freq)
-            ser.inferred_freq = None
-            _check_plot_works(ser.plot, ser.index.inferred_freq)
+
+            ser = ser[[0, 3, 5, 6]]
+            _check_plot_works(ser.plot)
 
 
 PNG_PATH = 'tmp.png'
-def _check_plot_works(f, freq, *args, **kwargs):
+def _check_plot_works(f, freq=None, *args, **kwargs):
     import matplotlib.pyplot as plt
 
     fig = plt.gcf()
@@ -91,7 +92,8 @@ def _check_plot_works(f, freq, *args, **kwargs):
     if series is not None:
         assert(orig_ax.freq == series.index.freq)
 
-    assert(orig_ax.freq == freq)
+    if freq is not None:
+        assert(orig_ax.freq == freq)
 
     ax = fig.add_subplot(212)
     try:
