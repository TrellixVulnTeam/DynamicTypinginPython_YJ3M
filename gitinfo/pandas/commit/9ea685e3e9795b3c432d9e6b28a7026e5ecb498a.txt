commit 9ea685e3e9795b3c432d9e6b28a7026e5ecb498a
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Mon Apr 9 10:58:45 2012 -0400

    BUG: raise ValueError when attempting to cast NaN to integer, close #846

diff --git a/pandas/core/common.py b/pandas/core/common.py
index be605d57e..c4063bf8a 100644
--- a/pandas/core/common.py
+++ b/pandas/core/common.py
@@ -586,6 +586,15 @@ def _ensure_object(arr):
         arr = arr.astype('O')
     return arr
 
+def _astype_nansafe(arr, dtype):
+    if (np.issubdtype(arr.dtype, np.floating) and
+        np.issubdtype(dtype, np.integer)):
+
+        if np.isnan(arr).any():
+            raise ValueError('Cannot convert NA to integer')
+
+    return arr.astype(dtype)
+
 def _clean_fill_method(method):
     method = method.lower()
     if method == 'ffill':
diff --git a/pandas/core/internals.py b/pandas/core/internals.py
index 66e81ca0c..439a5012a 100644
--- a/pandas/core/internals.py
+++ b/pandas/core/internals.py
@@ -410,8 +410,8 @@ class BlockManager(object):
     def astype(self, dtype):
         new_blocks = []
         for block in self.blocks:
-            newb = make_block(block.values.astype(dtype), block.items,
-                              block.ref_items)
+            newb = make_block(com._astype_nansafe(block.values, dtype),
+                              block.items, block.ref_items)
             new_blocks.append(newb)
 
         new_mgr = BlockManager(new_blocks, self.axes)
diff --git a/pandas/core/series.py b/pandas/core/series.py
index a76e47db5..df62991ab 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -565,6 +565,13 @@ copy : boolean, default False
 
         ndarray.__setslice__(self, i, j, value)
 
+    def astype(self, dtype):
+        """
+        See numpy.ndarray.astype
+        """
+        casted = com._astype_nansafe(self.values, dtype)
+        return self._constructor(casted, index=self.index, name=self.name)
+
     def get(self, label, default=None):
         """
         Returns value occupying requested label, default to specified
@@ -1228,7 +1235,7 @@ copy : boolean, default False
     def describe(self, percentile_width=50):
         """
         Generate various summary statistics of Series, excluding NaN
-        values. These include: count, mean, std, min, max, and 
+        values. These include: count, mean, std, min, max, and
         lower%/50%/upper% percentiles
 
         Parameters
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index d46bcc74f..760f4d123 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -1758,6 +1758,10 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
                              columns=self.frame.columns)
         assert_frame_equal(casted, expected)
 
+    def test_astype_cast_nan_int(self):
+        df = DataFrame(data={"Values": [1.0, 2.0, 3.0, np.nan]})
+        self.assertRaises(ValueError, df.astype, np.int64)
+
     def test_array_interface(self):
         result = np.sqrt(self.frame)
         self.assert_(type(result) is type(self.frame))
@@ -4495,7 +4499,7 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
         self.assertEqual(np.shape(cumprod_xs), np.shape(self.tsframe))
 
         # ints
-        df = self.tsframe.astype(int)
+        df = self.tsframe.fillna(0).astype(int)
         df.cumprod(0)
         df.cumprod(1)
 
diff --git a/pandas/tests/test_panel.py b/pandas/tests/test_panel.py
index 2c85182fb..edd1086fb 100644
--- a/pandas/tests/test_panel.py
+++ b/pandas/tests/test_panel.py
@@ -633,10 +633,12 @@ class TestPanel(unittest.TestCase, PanelTests, CheckIndexing,
         self.assert_(wp.values is not vals)
 
     def test_constructor_cast(self):
-        casted = Panel(self.panel._data, dtype=int)
-        casted2 = Panel(self.panel.values, dtype=int)
+        zero_filled = self.panel.fillna(0)
 
-        exp_values = self.panel.values.astype(int)
+        casted = Panel(zero_filled._data, dtype=int)
+        casted2 = Panel(zero_filled.values, dtype=int)
+
+        exp_values = zero_filled.values.astype(int)
         assert_almost_equal(casted.values, exp_values)
         assert_almost_equal(casted2.values, exp_values)
 
@@ -690,8 +692,12 @@ class TestPanel(unittest.TestCase, PanelTests, CheckIndexing,
         assert_panel_equal(Panel(d3), Panel.from_dict(d3))
 
         # cast
-        result = Panel(d, dtype=int)
-        expected = Panel(dict((k, v.astype(int)) for k, v in d.iteritems()))
+        dcasted = dict((k, v.reindex(wp.major_axis).fillna(0))
+                       for k, v in d.iteritems())
+        result = Panel(dcasted, dtype=int)
+        expected = Panel(dict((k, v.astype(int))
+                              for k, v in dcasted.iteritems()))
+        assert_panel_equal(result, expected)
 
     def test_constructor_dict_mixed(self):
         data = dict((k, v.values) for k, v in self.panel.iterkv())
diff --git a/pandas/tests/test_series.py b/pandas/tests/test_series.py
index 587b80301..e32bd5bfa 100644
--- a/pandas/tests/test_series.py
+++ b/pandas/tests/test_series.py
@@ -1818,6 +1818,10 @@ class TestSeries(unittest.TestCase, CheckNameIntegration):
         d = self.ts.index[0] - datetools.bday
         self.assert_(np.isnan(self.ts.asof(d)))
 
+    def test_astype_cast_nan_int(self):
+        df = Series([1.0, 2.0, 3.0, np.nan])
+        self.assertRaises(ValueError, df.astype, np.int64)
+
     def test_map(self):
         index, data = tm.getMixedTypeDict()
 
