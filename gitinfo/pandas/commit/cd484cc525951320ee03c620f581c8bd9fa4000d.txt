commit cd484cc525951320ee03c620f581c8bd9fa4000d
Author: jbrockmendel <jbrockmendel@gmail.com>
Date:   Sat Feb 10 16:49:22 2018 -0800

    move shift_months test to test_arithmetic (#19636)

diff --git a/pandas/tests/indexes/datetimes/test_arithmetic.py b/pandas/tests/indexes/datetimes/test_arithmetic.py
index f6f8eccf4..ddc97636a 100644
--- a/pandas/tests/indexes/datetimes/test_arithmetic.py
+++ b/pandas/tests/indexes/datetimes/test_arithmetic.py
@@ -15,6 +15,7 @@ from pandas import (Timestamp, Timedelta, Series,
                     DatetimeIndex, TimedeltaIndex,
                     date_range)
 from pandas._libs import tslib
+from pandas._libs.tslibs.offsets import shift_months
 
 
 @pytest.fixture(params=[None, 'UTC', 'Asia/Tokyo',
@@ -933,3 +934,19 @@ def test_datetime64_with_DateOffset(klass, assert_func):
                  Timestamp('2000-02-29', tz='US/Central')], name='a')
     assert_func(result, exp)
     assert_func(result2, exp)
+
+
+@pytest.mark.parametrize('years', [-1, 0, 1])
+@pytest.mark.parametrize('months', [-2, 0, 2])
+def test_shift_months(years, months):
+    s = DatetimeIndex([Timestamp('2000-01-05 00:15:00'),
+                       Timestamp('2000-01-31 00:23:00'),
+                       Timestamp('2000-01-01'),
+                       Timestamp('2000-02-29'),
+                       Timestamp('2000-12-31')])
+    actual = DatetimeIndex(shift_months(s.asi8, years * 12 + months))
+
+    raw = [x + pd.offsets.DateOffset(years=years, months=months)
+           for x in s]
+    expected = DatetimeIndex(raw)
+    tm.assert_index_equal(actual, expected)
diff --git a/pandas/tests/indexes/datetimes/test_ops.py b/pandas/tests/indexes/datetimes/test_ops.py
index 4f386eb28..440478100 100644
--- a/pandas/tests/indexes/datetimes/test_ops.py
+++ b/pandas/tests/indexes/datetimes/test_ops.py
@@ -5,10 +5,8 @@ import warnings
 import numpy as np
 from datetime import datetime
 
-from itertools import product
 import pandas as pd
 import pandas._libs.tslib as tslib
-from pandas._libs.tslibs.offsets import shift_months
 import pandas.util.testing as tm
 from pandas import (DatetimeIndex, PeriodIndex, Series, Timestamp,
                     date_range, _np_version_under1p10, Index,
@@ -568,19 +566,6 @@ class TestDatetimeIndexOps(Ops):
             assert not idx.equals(pd.Series(idx3))
 
 
-@pytest.mark.parametrize('years,months', product([-1, 0, 1], [-2, 0, 2]))
-def test_shift_months(years, months):
-    s = DatetimeIndex([Timestamp('2000-01-05 00:15:00'),
-                       Timestamp('2000-01-31 00:23:00'),
-                       Timestamp('2000-01-01'),
-                       Timestamp('2000-02-29'),
-                       Timestamp('2000-12-31')])
-    actual = DatetimeIndex(shift_months(s.asi8, years * 12 + months))
-    expected = DatetimeIndex([x + pd.offsets.DateOffset(
-        years=years, months=months) for x in s])
-    tm.assert_index_equal(actual, expected)
-
-
 class TestBusinessDatetimeIndex(object):
 
     def setup_method(self, method):
