commit 816a51f410965999c4c50c4b29d7355706e70a7f
Author: scls19fr <s.celles@gmail.com>
Date:   Sun Jan 3 17:38:08 2016 +0100

    ENH: add is_unique attr to Series, #11946

diff --git a/doc/source/api.rst b/doc/source/api.rst
index 3c7ca6d5c..98279fbbe 100644
--- a/doc/source/api.rst
+++ b/doc/source/api.rst
@@ -345,6 +345,7 @@ Computations / Descriptive Stats
    Series.var
    Series.unique
    Series.nunique
+   Series.is_unique
    Series.value_counts
 
 Reindexing / Selection / Label manipulation
diff --git a/doc/source/whatsnew/v0.18.0.txt b/doc/source/whatsnew/v0.18.0.txt
index 9aa83a512..d78065765 100644
--- a/doc/source/whatsnew/v0.18.0.txt
+++ b/doc/source/whatsnew/v0.18.0.txt
@@ -110,6 +110,7 @@ Other enhancements
 - ``DataFrame`` has gained a ``_repr_latex_`` method in order to allow for automatic conversion to latex in a ipython/jupyter notebook using nbconvert. Options ``display.latex.escape`` and ``display.latex.longtable`` have been added to the configuration and are used automatically by the ``to_latex`` method. (:issue:`11778`)
 - ``sys.getsizeof(obj)`` returns the memory usage of a pandas object, including the
   values it contains (:issue:`11597`)
+- ``Series`` gained an ``is_unique`` attribute (:issue:`11946`)
 
 .. _whatsnew_0180.enhancements.rounding:
 
diff --git a/pandas/core/base.py b/pandas/core/base.py
index 7164a593d..ec09482bb 100644
--- a/pandas/core/base.py
+++ b/pandas/core/base.py
@@ -832,6 +832,17 @@ class IndexOpsMixin(object):
             n -= 1
         return n
 
+    @property
+    def is_unique(self):
+        """
+        Return boolean if values in the object are unique
+
+        Returns
+        -------
+        is_unique : boolean
+        """
+        return self.nunique() == len(self)
+
     def memory_usage(self, deep=False):
         """
         Memory usage of my values
diff --git a/pandas/tests/test_series.py b/pandas/tests/test_series.py
index ad79406c7..4a350e7e3 100644
--- a/pandas/tests/test_series.py
+++ b/pandas/tests/test_series.py
@@ -1,4 +1,4 @@
-ï»¿# coding=utf-8
+# coding=utf-8
 # pylint: disable-msg=E1101,W0612
 
 import re
@@ -8205,6 +8205,13 @@ class TestSeries(tm.TestCase, CheckNameIntegration):
         expected = SubclassedFrame({'X': [1, 2, 3]})
         assert_frame_equal(result, expected)
 
+    def test_is_unique(self):
+        # GH11946
+        s = Series(np.random.randint(0, 10, size=1000))
+        self.assertFalse(s.is_unique)
+        s = Series(np.arange(1000))
+        self.assertTrue(s.is_unique)
+
 
 class TestSeriesNonUnique(tm.TestCase):
 
