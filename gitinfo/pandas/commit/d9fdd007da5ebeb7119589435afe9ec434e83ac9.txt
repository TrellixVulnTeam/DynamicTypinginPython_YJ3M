commit d9fdd007da5ebeb7119589435afe9ec434e83ac9
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Fri Nov 18 01:07:58 2011 -0500

    BUG: fix regression in multi-key groupby since 0.5.0, GH #375

diff --git a/pandas/core/groupby.py b/pandas/core/groupby.py
index 5c986b007..02747ae69 100644
--- a/pandas/core/groupby.py
+++ b/pandas/core/groupby.py
@@ -236,6 +236,9 @@ class GroupBy(object):
         def flatten(gen, level=0, shape_axis=0):
             ids = self.groupings[level].ids
             for cat, subgen in gen:
+                if subgen is None:
+                    continue
+
                 if isinstance(subgen, tipo):
                     yield (ids[cat],), subgen
                 else:
@@ -382,6 +385,10 @@ class GroupBy(object):
         # want to cythonize?
         def _doit(reschunk, ctchunk, gen, shape_axis=0):
             for i, (_, subgen) in enumerate(gen):
+                # TODO: fixme
+                if subgen is None:
+                    continue
+
                 if isinstance(subgen, PandasObject):
                     size = subgen.shape[shape_axis]
                     ctchunk[i] = size
@@ -1337,7 +1344,9 @@ def _generate_groups(data, labels, shape, start, end, axis=0, which=0,
 
             # skip empty groups in the cartesian product
             if left == right:
+                yield i, None
                 continue
+
             yield i, slicer(data, slob)
         else:
             # yield subgenerators, yikes
diff --git a/pandas/tests/test_groupby.py b/pandas/tests/test_groupby.py
index ff8e0ce91..cd871e592 100644
--- a/pandas/tests/test_groupby.py
+++ b/pandas/tests/test_groupby.py
@@ -996,6 +996,23 @@ class TestGroupBy(unittest.TestCase):
             res = f(group)
             assert_frame_equal(res, result.ix[key])
 
+    def test_groupby_wrong_multi_labels(self):
+        from pandas import read_csv
+        from cStringIO import StringIO
+        data = """index,foo,bar,baz,spam,data
+0,foo1,bar1,baz1,spam2,20
+1,foo1,bar2,baz1,spam3,30
+2,foo2,bar2,baz1,spam2,40
+3,foo1,bar1,baz2,spam1,50
+4,foo3,bar1,baz2,spam1,60"""
+        data = read_csv(StringIO(data), index_col=0)
+
+        grouped = data.groupby(['foo', 'bar', 'baz', 'spam'])
+
+        result = grouped.agg(np.mean)
+        expected = grouped.mean()
+        assert_frame_equal(result, expected)
+
 class TestPanelGroupBy(unittest.TestCase):
 
     def setUp(self):
