commit 3027871161409f84ecac029231cb444dd6a42c69
Author: Chang She <chang@lambdafoundry.com>
Date:   Fri Jun 22 20:54:34 2012 -0400

    ENH: retain Series names when constructing DataFrame from list of Series #1494

diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 4d41c02ad..b51fab43c 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -389,6 +389,9 @@ class DataFrame(NDFrame):
                                          copy=copy)
         elif isinstance(data, list):
             if len(data) > 0:
+                if index is None and isinstance(data[0], Series):
+                    index = _get_names_from_index(data)
+
                 if isinstance(data[0], (list, tuple, dict, Series)):
                     conv_data, columns = _to_sdict(data, columns)
                     if isinstance(conv_data, dict):
@@ -4758,6 +4761,22 @@ def _convert_object_array(content, columns, coerce_float=False):
                  for c, vals in zip(columns, content))
     return sdict, columns
 
+def _get_names_from_index(data):
+    index = range(len(data))
+    has_some_name = any([s.name is not None for s in data])
+    if not has_some_name:
+        return index
+
+    count = 0
+    for i, s in enumerate(data):
+        n = s.name
+        if n is not None:
+            index[i] = n
+        else:
+            index[i] = 'Unnamed %d' % count
+            count += 1
+
+    return index
 
 def _homogenize(data, index, columns, dtype=None):
     from pandas.core.series import _sanitize_array
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index 1906c3936..15d465e8d 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -1871,6 +1871,28 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
         assert_frame_equal(result, expected)
 
     def test_constructor_list_of_series(self):
+        data = [{'a': 1.5, 'b': 3.0, 'c':4.0},
+                {'a': 1.5, 'b': 3.0, 'c':6.0}]
+        sdict = dict(zip(['x', 'y'], data))
+        idx = Index(['a', 'b', 'c'])
+
+        # all named
+        data2 = [Series([1.5, 3, 4], idx, dtype='O', name='x'),
+                 Series([1.5, 3, 6], idx, name='y')]
+        result = DataFrame(data2)
+        expected = DataFrame.from_dict(sdict, orient='index')
+        assert_frame_equal(result, expected)
+
+        # some unnamed
+        data2 = [Series([1.5, 3, 4], idx, dtype='O', name='x'),
+                 Series([1.5, 3, 6], idx)]
+        result = DataFrame(data2)
+
+        sdict = dict(zip(['x', 'Unnamed 0'], data))
+        expected = DataFrame.from_dict(sdict, orient='index')
+        assert_frame_equal(result.sort_index(), expected)
+
+        # none named
         data = [{'a': 1.5, 'b': 3, 'c':4, 'd':6},
                 {'a': 1.5, 'b': 3, 'd':6},
                 {'a': 1.5, 'd':6},
