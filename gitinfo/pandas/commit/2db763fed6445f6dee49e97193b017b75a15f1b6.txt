commit 2db763fed6445f6dee49e97193b017b75a15f1b6
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Thu Feb 24 12:35:42 2011 -0500

    added hist functions to DataFrame and Series, added use_index option to {DataFrame, Series}.plot

diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 3de33b2d6..581c4af49 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -1797,7 +1797,7 @@ class DataFrame(Picklable, Groupable):
         return self._constructor(result_series, index=join_index)
 
     def plot(self, kind='line', subplots=False, sharex=True, sharey=False,
-             **kwds): # pragma: no cover
+             use_index=True, **kwds): # pragma: no cover
         """
         Plot the DataFrame's series with the index on the x-axis using
         matplotlib / pylab.
@@ -1823,15 +1823,40 @@ class DataFrame(Picklable, Groupable):
             fig = plt.figure()
             ax = fig.add_subplot(111)
 
+        if use_index:
+            x = self.index
+        else:
+            x = range(len(self))
+
         for i, col in enumerate(_try_sort(self.columns)):
             if subplots:
                 ax = axes[i]
-                ax.plot(self.index, self[col].values, 'k', label=col,
-                        **kwds)
+                ax.plot(x, self[col].values, 'k', label=col, **kwds)
                 ax.legend(loc='best')
             else:
-                ax.plot(self.index, self[col].values, label=col,
-                        **kwds)
+                ax.plot(x, self[col].values, label=col, **kwds)
+
+    def hist(self): # pragma: no cover
+        """
+        Draw Histogram the DataFrame's series using matplotlib / pylab.
+
+        Parameters
+        ----------
+        kwds : other plotting keyword arguments
+
+        """
+        import matplotlib.pyplot as plt
+
+        n = len(self.columns)
+        k = 1
+        while k**2 < n:
+            k += 1
+        _, axes = plt.subplots(nrows=k, ncols=k)
+
+        for i, col in enumerate(_try_sort(self.columns)):
+            ax = axes[i / k][i % k]
+            ax.hist(self[col].values)
+            ax.set_title(col)
 
     def _get_agg_axis(self, axis_num):
         if axis_num == 0:
diff --git a/pandas/core/series.py b/pandas/core/series.py
index 16304eaa8..b20148aa2 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -900,8 +900,8 @@ class Series(np.ndarray, Picklable, Groupable):
 #-------------------------------------------------------------------------------
 # Miscellaneous
 
-    def plot(self, label=None, kind='line', rot=30, axes=None, style='-',
-             **kwds): # pragma: no cover
+    def plot(self, label=None, kind='line', use_index=True, rot=30, ax=None,
+             style='-', **kwds): # pragma: no cover
         """
         Plot the input series with the index on the x-axis using
         matplotlib / pylab.
@@ -911,6 +911,7 @@ class Series(np.ndarray, Picklable, Groupable):
         label : label argument to provide to plot
         kind : {'line', 'bar', 'hist'}
             Default: line for TimeSeries, hist for Series
+        auto_x : if True, it will use range(len(self)) as x-axis
         kwds : other plotting keyword arguments
 
         Notes
@@ -929,25 +930,52 @@ class Series(np.ndarray, Picklable, Groupable):
 
         N = len(self)
 
-        if axes is None:
-            axes = plt.gca()
+        if ax is None:
+            ax = plt.gca()
 
         if kind == 'line':
-            axes.plot(self.index, self.values, style, **kwds)
+            if use_index:
+                x = self.index
+            else:
+                x = range(len(self))
+
+            ax.plot(x, self.values, style, **kwds)
         elif kind == 'bar':
             xinds = np.arange(N) + 0.25
-            axes.bar(xinds, self.values, 0.5, bottom=np.zeros(N), linewidth=1)
+            ax.bar(xinds, self.values, 0.5, bottom=np.zeros(N), linewidth=1)
 
             if N < 10:
                 fontsize = 12
             else:
                 fontsize = 10
 
-            axes.set_xticks(xinds + 0.25)
-            axes.set_xticklabels(self.index, rotation=rot, fontsize=fontsize)
+            ax.set_xticks(xinds + 0.25)
+            ax.set_xticklabels(self.index, rotation=rot, fontsize=fontsize)
 
         plt.draw_if_interactive()
 
+    def hist(self, ax=None): # pragma: no cover
+        """
+        Draw histogram of the input series using matplotlib / pylab.
+
+        Parameters
+        ----------
+
+        Notes
+        -----
+        See matplotlib documentation online for more on this subject
+
+        Default plot-types: TimeSeries (line), Series (bar)
+
+        Intended to be used in ipython -pylab mode
+        """
+        import matplotlib.pyplot as plt
+
+        if ax is None:
+            ax = plt.gca()
+
+        ax.hist(self.values)
+
     def toCSV(self, path):
         """
         Write the Series to a CSV file
