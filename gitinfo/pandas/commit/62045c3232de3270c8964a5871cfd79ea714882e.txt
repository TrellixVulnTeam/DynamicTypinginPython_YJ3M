commit 62045c3232de3270c8964a5871cfd79ea714882e
Author: jbrockmendel <jbrockmendel@gmail.com>
Date:   Fri Jan 4 04:12:36 2019 -0800

    24024 follow-up: fix incorrectly accepting iNaT in validate_fill_value (#24605)

diff --git a/pandas/_libs/algos_common_helper.pxi.in b/pandas/_libs/algos_common_helper.pxi.in
index 3708deb1a..7d9ba4205 100644
--- a/pandas/_libs/algos_common_helper.pxi.in
+++ b/pandas/_libs/algos_common_helper.pxi.in
@@ -109,8 +109,6 @@ def ensure_object(object arr):
             return arr
         else:
             return arr.astype(np.object_)
-    elif hasattr(arr, '_box_values_as_index'):
-        return arr._box_values_as_index()
     else:
         return np.array(arr, dtype=np.object_)
 
diff --git a/pandas/core/arrays/datetimes.py b/pandas/core/arrays/datetimes.py
index 9f1491bd6..a55e8759d 100644
--- a/pandas/core/arrays/datetimes.py
+++ b/pandas/core/arrays/datetimes.py
@@ -588,7 +588,7 @@ class DatetimeArray(dtl.DatetimeLikeArrayMixin,
 
     @Appender(dtl.DatetimeLikeArrayMixin._validate_fill_value.__doc__)
     def _validate_fill_value(self, fill_value):
-        if isna(fill_value) or fill_value == iNaT:
+        if isna(fill_value):
             fill_value = iNaT
         elif isinstance(fill_value, (datetime, np.datetime64)):
             self._assert_tzawareness_compat(fill_value)
diff --git a/pandas/core/dtypes/cast.py b/pandas/core/dtypes/cast.py
index b55bad465..6696d6d4c 100644
--- a/pandas/core/dtypes/cast.py
+++ b/pandas/core/dtypes/cast.py
@@ -5,7 +5,7 @@ from datetime import datetime, timedelta
 import numpy as np
 
 from pandas._libs import lib, tslib, tslibs
-from pandas._libs.tslibs import OutOfBoundsDatetime, Period, iNaT
+from pandas._libs.tslibs import NaT, OutOfBoundsDatetime, Period, iNaT
 from pandas.compat import PY3, string_types, text_type, to_str
 
 from .common import (
@@ -272,7 +272,7 @@ def maybe_promote(dtype, fill_value=np.nan):
         fill_value = tslibs.Timedelta(fill_value).value
     elif is_datetime64tz_dtype(dtype):
         if isna(fill_value):
-            fill_value = iNaT
+            fill_value = NaT
     elif is_extension_array_dtype(dtype) and isna(fill_value):
         fill_value = dtype.na_value
     elif is_float(fill_value):
diff --git a/pandas/core/indexes/datetimelike.py b/pandas/core/indexes/datetimelike.py
index cfca5d1b7..082a314fa 100644
--- a/pandas/core/indexes/datetimelike.py
+++ b/pandas/core/indexes/datetimelike.py
@@ -203,15 +203,6 @@ class DatetimeIndexOpsMixin(ExtensionOpsMixin):
             return type(self)._simple_new(result, name=self.name)
         return arg
 
-    def _box_values_as_index(self):
-        """
-        Return object Index which contains boxed values.
-        """
-        # XXX: this is broken (not called) for PeriodIndex, which doesn't
-        # define _box_values AFAICT
-        from pandas.core.index import Index
-        return Index(self._box_values(self.asi8), name=self.name, dtype=object)
-
     def _box_values(self, values):
         return self._data._box_values(values)
 
diff --git a/pandas/tests/arrays/test_datetimelike.py b/pandas/tests/arrays/test_datetimelike.py
index f76999a0d..db88d94be 100644
--- a/pandas/tests/arrays/test_datetimelike.py
+++ b/pandas/tests/arrays/test_datetimelike.py
@@ -388,6 +388,10 @@ class TestDatetimeArray(SharedTests):
             # Timestamp with mismatched tz-awareness
             arr.take([-1, 1], allow_fill=True, fill_value=now)
 
+        with pytest.raises(ValueError):
+            # require NaT, not iNaT, as it could be confused with an integer
+            arr.take([-1, 1], allow_fill=True, fill_value=pd.NaT.value)
+
     def test_concat_same_type_invalid(self, datetime_index):
         # different timezones
         dti = datetime_index
