commit 77cbc42aa2304e86597044aca235d019cdf004e7
Author: Joris Van den Bossche <jorisvandenbossche@gmail.com>
Date:   Mon Apr 28 13:23:05 2014 +0200

    DOC: fix some doc build warnings

diff --git a/doc/source/computation.rst b/doc/source/computation.rst
index 79d85ae95..7b064c69c 100644
--- a/doc/source/computation.rst
+++ b/doc/source/computation.rst
@@ -242,8 +242,8 @@ accept the following arguments:
     instead of ``freq`` that referred to the legacy time rule constants
   - ``how``: optionally specify method for down or re-sampling.  Default is
     is min for ``rolling_min``, max for ``rolling_max``, median for
-   ``rolling_median``, and mean for all other rolling functions.  See
-   :meth:`DataFrame.resample`'s how argument for more information.
+    ``rolling_median``, and mean for all other rolling functions.  See
+    :meth:`DataFrame.resample`'s how argument for more information.
 	
 These functions can be applied to ndarrays or Series objects:
 
diff --git a/doc/source/conf.py b/doc/source/conf.py
index dd6635b8d..117aa1724 100644
--- a/doc/source/conf.py
+++ b/doc/source/conf.py
@@ -36,6 +36,7 @@ sys.path.extend([
 # coming with Sphinx (named 'sphinx.ext.*') or your custom ones.  sphinxext.
 
 extensions = ['sphinx.ext.autodoc',
+              'sphinx.ext.autosummary',
               'sphinx.ext.doctest',
               'sphinx.ext.extlinks',
               'sphinx.ext.todo',
@@ -63,7 +64,6 @@ with open("index.rst") as f:
 autosummary_generate = False
 
 if any([re.match("\s*api\s*",l) for l in lines]):
-    extensions.append('sphinx.ext.autosummary')
     autosummary_generate = True
 
 ds = []
diff --git a/doc/source/release.rst b/doc/source/release.rst
index 38e95eaba..c73331a49 100644
--- a/doc/source/release.rst
+++ b/doc/source/release.rst
@@ -164,7 +164,7 @@ API Changes
   - ``False``: Do nothing (default).
   - ``True``: Draw a table using the ``DataFrame`` or ``Series`` called ``plot`` method. Data will be transposed to meet matplotlib's default layout.
   - ``DataFrame`` or ``Series``: Draw matplotlib.table using the passed data. The data will be drawn as displayed in print method (not transposed automatically).
-  Also, helper function ``pandas.tools.plotting.table`` is added to create a table from ``DataFrame`` and ``Series``, and add it to an ``matplotlib.Axes``.
+    Also, helper function ``pandas.tools.plotting.table`` is added to create a table from ``DataFrame`` and ``Series``, and add it to an ``matplotlib.Axes``.
 
 - drop unused order argument from ``Series.sort``; args now in the same orders as ``Series.order``;
   add ``na_position`` arg to conform to ``Series.order`` (:issue:`6847`)
@@ -429,7 +429,7 @@ Bug Fixes
 - Bug in C parser with leading whitespace (:issue:`3374`)
 - Bug in C parser with ``delim_whitespace=True`` and ``\r``-delimited lines
 - Bug in ``Series.rank`` and ``DataFrame.rank`` that caused small floats (<1e-13) to all receive the same rank (:issue:`6886`)
-- Bug in ``DataFrame.apply`` with functions that used *args or **kwargs and returned
+- Bug in ``DataFrame.apply`` with functions that used \*args`` or \*\*kwargs and returned
   an empty result (:issue:`6952`)
 - Bug in sum/mean on 32-bit platforms on overflows (:issue:`6915`)
 
diff --git a/doc/source/v0.11.0.txt b/doc/source/v0.11.0.txt
index 84d0806e4..3a5679415 100644
--- a/doc/source/v0.11.0.txt
+++ b/doc/source/v0.11.0.txt
@@ -118,6 +118,7 @@ Forcing Date coercion (and setting ``NaT`` when not datelike)
 
 .. ipython:: python
 
+   from datetime import datetime
    s = Series([datetime(2001,1,1,0,0), 'foo', 1.0, 1,
                Timestamp('20010104'), '20010105'],dtype='O')
    s.convert_objects(convert_dates='coerce')
diff --git a/doc/source/v0.12.0.txt b/doc/source/v0.12.0.txt
index 8d9c266a8..91226fe18 100644
--- a/doc/source/v0.12.0.txt
+++ b/doc/source/v0.12.0.txt
@@ -370,6 +370,7 @@ Experimental Features
     .. ipython:: python
 
       from pandas.tseries.offsets import CustomBusinessDay
+      from datetime import datetime
       # As an interesting example, let's look at Egypt where
       # a Friday-Saturday weekend is observed.
       weekmask_egypt = 'Sun Mon Tue Wed Thu'
