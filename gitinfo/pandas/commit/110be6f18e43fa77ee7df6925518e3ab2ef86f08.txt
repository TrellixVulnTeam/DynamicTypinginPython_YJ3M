commit 110be6f18e43fa77ee7df6925518e3ab2ef86f08
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Fri Feb 17 19:02:35 2012 -0500

    BUG: don't nuke None in Series.unique, GH #778

diff --git a/pandas/core/nanops.py b/pandas/core/nanops.py
index 4c32e67b7..c9a8f1c43 100644
--- a/pandas/core/nanops.py
+++ b/pandas/core/nanops.py
@@ -366,6 +366,5 @@ def unique1d(values):
             values = values.astype(np.object_)
         table = lib.PyObjectHashTable(len(values))
         uniques = lib.list_to_object_array(table.unique(values))
-        uniques = lib.maybe_convert_objects(uniques)
     return uniques
 
diff --git a/pandas/core/series.py b/pandas/core/series.py
index b0f208378..db1cff74e 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -35,7 +35,7 @@ __all__ = ['Series', 'TimeSeries']
 _np_version = np.version.short_version
 _np_version_under1p6 = LooseVersion(_np_version) < '1.6'
 
-#-------------------------------------------------------------------------------
+#----------------------------------------------------------------------
 # Wrapper function for Series arithmetic methods
 
 def _arith_method(op, name):
diff --git a/pandas/src/hashtable.pyx b/pandas/src/hashtable.pyx
index 270a33347..a5ecd48e1 100644
--- a/pandas/src/hashtable.pyx
+++ b/pandas/src/hashtable.pyx
@@ -794,7 +794,7 @@ cdef class PyObjectHashTable:
         for i in range(n):
             val = values[i]
 
-            if not _checknull(val):
+            if not _checknan(val):
                 k = kh_get_pymap(self.table, <PyObject*>val)
                 if k == self.table.n_buckets:
                     k = kh_put_pymap(self.table, <PyObject*>val, &ret)
diff --git a/pandas/src/tseries.pyx b/pandas/src/tseries.pyx
index a453e2d99..2c8430784 100644
--- a/pandas/src/tseries.pyx
+++ b/pandas/src/tseries.pyx
@@ -221,6 +221,9 @@ cdef double NEGINF = -INF
 cdef inline _checknull(object val):
     return not np.PyArray_Check(val) and (val is None or val != val)
 
+cdef inline _checknan(object val):
+    return not np.PyArray_Check(val) and val != val
+
 cpdef checknull(object val):
     if util.is_float_object(val):
         return val != val or val == INF or val == NEGINF
diff --git a/pandas/tests/test_series.py b/pandas/tests/test_series.py
index bf6e8a71b..375317500 100644
--- a/pandas/tests/test_series.py
+++ b/pandas/tests/test_series.py
@@ -1427,6 +1427,13 @@ class TestSeries(unittest.TestCase, CheckNameIntegration):
         expected = np.unique(strings)
         self.assert_(np.array_equal(result, expected))
 
+        # decision about None
+
+        s = Series([1, 2, 3, None, None, None], dtype=object)
+        result = s.unique()
+        expected = np.array([1, 2, 3, None], dtype=object)
+        self.assert_(np.array_equal(result, expected))
+
     def test_sort(self):
         ts = self.ts.copy()
         ts.sort()
