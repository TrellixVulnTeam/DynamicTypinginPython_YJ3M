commit b3b6076156c3a92707eff027159927a24a7820dd
Author: Wouter Overmeire <lodagro@gmail.com>
Date:   Fri Oct 26 21:53:02 2012 +0200

    BUG: fix output formatting, zero trimming of floats with exp, close #2120

diff --git a/pandas/core/format.py b/pandas/core/format.py
index c38e34141..1f435f2e4 100644
--- a/pandas/core/format.py
+++ b/pandas/core/format.py
@@ -887,14 +887,14 @@ def _make_fixed_width(strings, justify='right', minimum=None):
 
 def _trim_zeros(str_floats, na_rep='NaN'):
     """
-    Trims zeros and decimal points
+    Trims zeros and decimal points.
     """
-    # TODO: what if exponential?
     trimmed = str_floats
 
     def _cond(values):
         non_na = [x for x in values if x != na_rep]
-        return len(non_na) > 0 and all([x.endswith('0') for x in non_na])
+        return (len(non_na) > 0 and all([x.endswith('0') for x in non_na]) and
+               not(any([('e' in x) or ('E' in x) for x in non_na])))
 
     while _cond(trimmed):
         trimmed = [x[:-1] if x != na_rep else x for x in trimmed]
diff --git a/pandas/tests/test_format.py b/pandas/tests/test_format.py
index 6155729ea..650ef1453 100644
--- a/pandas/tests/test_format.py
+++ b/pandas/tests/test_format.py
@@ -777,6 +777,14 @@ class TestDataFrameFormatting(unittest.TestCase):
         result = df.to_html(classes=["sortable", "draggable"])
         self.assertEqual(result, expected)
 
+    def test_float_trim_zeros(self):
+        vals = [2.08430917305e+10, 3.52205017305e+10, 2.30674817305e+10,
+                2.03954217305e+10, 5.59897817305e+10]
+        skip = True
+        for line in repr(DataFrame({'A': vals})).split('\n'):
+            self.assert_(('+10' in line) or skip)
+            skip = False
+
 
 class TestSeriesFormatting(unittest.TestCase):
 
@@ -860,6 +868,13 @@ class TestSeriesFormatting(unittest.TestCase):
         sf=fmt.SeriesFormatter(s,name=u'\u05e2\u05d1\u05e8\u05d9\u05ea')
         sf._get_footer() # should not raise exception
 
+    def test_float_trim_zeros(self):
+        vals = [2.08430917305e+10, 3.52205017305e+10, 2.30674817305e+10,
+                2.03954217305e+10, 5.59897817305e+10]
+        for line in repr(Series(vals)).split('\n'):
+            self.assert_('+10' in line)
+
+
 class TestEngFormatter(unittest.TestCase):
 
     def test_eng_float_formatter(self):
