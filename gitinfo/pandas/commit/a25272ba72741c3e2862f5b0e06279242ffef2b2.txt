commit a25272ba72741c3e2862f5b0e06279242ffef2b2
Author: Joris Van den Bossche <jorisvandenbossche@gmail.com>
Date:   Sun Apr 16 20:28:33 2017 +0200

    CLN: update pandas.lib deprecation messages (GH15936) (#16021)

diff --git a/pandas/__init__.py b/pandas/__init__.py
index b221f9e43..01bf22bcc 100644
--- a/pandas/__init__.py
+++ b/pandas/__init__.py
@@ -75,8 +75,11 @@ json = _DeprecatedModule(deprmod='pandas.json',
 parser = _DeprecatedModule(deprmod='pandas.parser',
                            removals=['na_values'],
                            moved={'CParserError': 'pandas.errors.ParserError'})
-lib = _DeprecatedModule(deprmod='pandas.lib', deprmodto='pandas._libs.lib',
-                        moved={'infer_dtype': 'pandas.api.lib.infer_dtype'})
+lib = _DeprecatedModule(deprmod='pandas.lib', deprmodto=False,
+                        moved={'Timestamp': 'pandas.Timestamp',
+                               'Timedelta': 'pandas.Timedelta',
+                               'NaT': 'pandas.NaT',
+                               'infer_dtype': 'pandas.api.lib.infer_dtype'})
 tslib = _DeprecatedModule(deprmod='pandas.tslib',
                           moved={'Timestamp': 'pandas.Timestamp',
                                  'Timedelta': 'pandas.Timedelta',
diff --git a/pandas/util/depr_module.py b/pandas/util/depr_module.py
index 1f428198c..b438c91d9 100644
--- a/pandas/util/depr_module.py
+++ b/pandas/util/depr_module.py
@@ -75,15 +75,22 @@ class _DeprecatedModule(object):
                 FutureWarning, stacklevel=2)
         else:
             deprmodto = self.deprmodto
-            if deprmodto is None:
-                deprmodto = "{modname}.{name}".format(
-                    modname=obj.__module__, name=name)
-            # The object is actually located in another module.
-            warnings.warn(
-                "{deprmod}.{name} is deprecated. Please use "
-                "{deprmodto}.{name} instead.".format(
-                    deprmod=self.deprmod, name=name, deprmodto=deprmodto),
-                FutureWarning, stacklevel=2)
+            if deprmodto is False:
+                warnings.warn(
+                    "{deprmod}.{name} is deprecated and will be removed in "
+                    "a future version.".format(
+                        deprmod=self.deprmod, name=name),
+                    FutureWarning, stacklevel=2)
+            else:
+                if deprmodto is None:
+                    deprmodto = "{modname}.{name}".format(
+                        modname=obj.__module__, name=name)
+                # The object is actually located in another module.
+                warnings.warn(
+                    "{deprmod}.{name} is deprecated. Please use "
+                    "{deprmodto}.{name} instead.".format(
+                        deprmod=self.deprmod, name=name, deprmodto=deprmodto),
+                    FutureWarning, stacklevel=2)
 
         return obj
 
