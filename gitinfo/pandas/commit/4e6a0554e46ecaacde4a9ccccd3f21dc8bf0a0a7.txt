commit 4e6a0554e46ecaacde4a9ccccd3f21dc8bf0a0a7
Author: Chang She <chang@lambdafoundry.com>
Date:   Fri Jun 1 11:20:42 2012 -0400

    BUG: sparse reduction bug #1375

diff --git a/pandas/sparse/array.py b/pandas/sparse/array.py
index aa183dd47..f0f02d317 100644
--- a/pandas/sparse/array.py
+++ b/pandas/sparse/array.py
@@ -336,7 +336,7 @@ to sparse
         if self._null_fill_value:
             return valid_spvals
         else:
-            return valid_spvals + (len(self) - len(sp_values))
+            return valid_spvals + self.sp_index.ngaps
 
     @property
     def _null_fill_value(self):
@@ -361,7 +361,7 @@ to sparse
         if self._null_fill_value:
             return sp_sum
         else:
-            nsparse = self.sp_index.npoints
+            nsparse = self.sp_index.ngaps
             return sp_sum + self.fill_value * nsparse
 
     def cumsum(self, axis=0, dtype=None, out=None):
@@ -396,11 +396,9 @@ to sparse
         if self._null_fill_value:
             return sp_sum / ct
         else:
-            nsparse = self.sp_index.npoints
+            nsparse = self.sp_index.ngaps
             return (sp_sum + self.fill_value * nsparse) / (ct + nsparse)
 
-
-
 def make_sparse(arr, kind='block', fill_value=nan):
     """
     Convert ndarray to sparse format
diff --git a/pandas/sparse/tests/test_array.py b/pandas/sparse/tests/test_array.py
index 600ef241d..459732147 100644
--- a/pandas/sparse/tests/test_array.py
+++ b/pandas/sparse/tests/test_array.py
@@ -5,6 +5,8 @@ import operator
 import pickle
 import unittest
 
+from pandas.core.series import Series
+from pandas.core.common import notnull
 from pandas.sparse.api import SparseArray
 from pandas.util.testing import assert_almost_equal
 
diff --git a/pandas/sparse/tests/test_sparse.py b/pandas/sparse/tests/test_sparse.py
index 48d8bc0f7..87b1f398c 100644
--- a/pandas/sparse/tests/test_sparse.py
+++ b/pandas/sparse/tests/test_sparse.py
@@ -550,6 +550,7 @@ class TestSparseSeries(TestCase,
                 _compare_with_dense(obj, op)
 
         _compare_all(self.bseries)
+
         self.bseries.sp_values[5:10] = np.NaN
         _compare_all(self.bseries)
 
@@ -561,6 +562,12 @@ class TestSparseSeries(TestCase,
         series.fill_value = 2
         _compare_all(series)
 
+        nonna = Series(np.random.randn(20)).to_sparse()
+        _compare_all(nonna)
+
+        nonna2 = Series(np.random.randn(20)).to_sparse(fill_value=0)
+        _compare_all(nonna2)
+
     def test_dropna(self):
         sp = SparseSeries([0, 0, 0, nan, nan, 5, 6],
                           fill_value=0)
diff --git a/pandas/src/sparse.pyx b/pandas/src/sparse.pyx
index e4fc5c335..19ff2df23 100644
--- a/pandas/src/sparse.pyx
+++ b/pandas/src/sparse.pyx
@@ -76,6 +76,10 @@ cdef class IntIndex(SparseIndex):
         same_indices = np.array_equal(self.indices, other.indices)
         return same_length and same_indices
 
+    @property
+    def ngaps(self):
+        return self.length - self.npoints
+
     def to_int_index(self):
         return self
 
@@ -296,6 +300,10 @@ cdef class BlockIndex(SparseIndex):
 
         return output
 
+    @property
+    def ngaps(self):
+        return self.length - self.npoints
+
     cpdef check_integrity(self):
         '''
         Check:
