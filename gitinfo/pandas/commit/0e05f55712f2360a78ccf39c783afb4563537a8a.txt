commit 0e05f55712f2360a78ccf39c783afb4563537a8a
Author: Terji Petersen <contribute@tensortable.com>
Date:   Sat Jul 20 20:20:05 2019 +0100

    Remove .. versonadded:: 0.18 (#27463)

diff --git a/doc/source/getting_started/basics.rst b/doc/source/getting_started/basics.rst
index bc3b7b4c7..2edd242d8 100644
--- a/doc/source/getting_started/basics.rst
+++ b/doc/source/getting_started/basics.rst
@@ -1422,8 +1422,6 @@ The :meth:`~DataFrame.rename` method also provides an ``inplace`` named
 parameter that is by default ``False`` and copies the underlying data. Pass
 ``inplace=True`` to rename the data in place.
 
-.. versionadded:: 0.18.0
-
 Finally, :meth:`~Series.rename` also accepts a scalar or list-like
 for altering the ``Series.name`` attribute.
 
diff --git a/doc/source/getting_started/dsintro.rst b/doc/source/getting_started/dsintro.rst
index 2fb0b1636..9e18951fe 100644
--- a/doc/source/getting_started/dsintro.rst
+++ b/doc/source/getting_started/dsintro.rst
@@ -251,8 +251,6 @@ Series can also have a ``name`` attribute:
 The Series ``name`` will be assigned automatically in many cases, in particular
 when taking 1D slices of DataFrame as you will see below.
 
-.. versionadded:: 0.18.0
-
 You can rename a Series with the :meth:`pandas.Series.rename` method.
 
 .. ipython:: python
diff --git a/doc/source/user_guide/enhancingperf.rst b/doc/source/user_guide/enhancingperf.rst
index c15991fab..b0d08f23d 100644
--- a/doc/source/user_guide/enhancingperf.rst
+++ b/doc/source/user_guide/enhancingperf.rst
@@ -601,8 +601,6 @@ This allows for *formulaic evaluation*.  The assignment target can be a
 new column name or an existing column name, and it must be a valid Python
 identifier.
 
-.. versionadded:: 0.18.0
-
 The ``inplace`` keyword determines whether this assignment will performed
 on the original ``DataFrame`` or return a copy with the new column.
 
@@ -652,9 +650,7 @@ The equivalent in standard Python would be
    df['a'] = 1
    df
 
-.. versionadded:: 0.18.0
-
-The ``query`` method gained the ``inplace`` keyword which determines
+The ``query`` method has a ``inplace`` keyword which determines
 whether the query modifies the original frame.
 
 .. ipython:: python
diff --git a/doc/source/user_guide/groupby.rst b/doc/source/user_guide/groupby.rst
index 147f07e36..141d1708d 100644
--- a/doc/source/user_guide/groupby.rst
+++ b/doc/source/user_guide/groupby.rst
@@ -827,13 +827,10 @@ and that the transformed data contains no NAs.
 
 .. _groupby.transform.window_resample:
 
-New syntax to window and resample operations
-~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-.. versionadded:: 0.18.1
+Window and resample operations
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 
-Working with the resample, expanding or rolling operations on the groupby
-level used to require the application of helper functions. However,
-now it is possible to use ``resample()``, ``expanding()`` and
+It is possible to use ``resample()``, ``expanding()`` and
 ``rolling()`` as methods on groupbys.
 
 The example below will apply the ``rolling()`` method on the samples of
diff --git a/doc/source/user_guide/indexing.rst b/doc/source/user_guide/indexing.rst
index 888266c3c..2c27ec12f 100644
--- a/doc/source/user_guide/indexing.rst
+++ b/doc/source/user_guide/indexing.rst
@@ -67,8 +67,6 @@ of multi-axis indexing.
     * A ``callable`` function with one argument (the calling Series or DataFrame) and
       that returns valid output for indexing (one of the above).
 
-      .. versionadded:: 0.18.1
-
   See more at :ref:`Selection by Label <indexing.label>`.
 
 * ``.iloc`` is primarily integer position based (from ``0`` to
@@ -538,8 +536,6 @@ A list of indexers where any element is out of bounds will raise an
 Selection by callable
 ---------------------
 
-.. versionadded:: 0.18.1
-
 ``.loc``, ``.iloc``, and also ``[]`` indexing can accept a ``callable`` as indexer.
 The ``callable`` must be a function with one argument (the calling Series or DataFrame) that returns valid output for indexing.
 
diff --git a/doc/source/user_guide/io.rst b/doc/source/user_guide/io.rst
index eac86dda3..8b21e4f29 100644
--- a/doc/source/user_guide/io.rst
+++ b/doc/source/user_guide/io.rst
@@ -87,8 +87,6 @@ delim_whitespace : boolean, default False
   If this option is set to ``True``, nothing should be passed in for the
   ``delimiter`` parameter.
 
-  .. versionadded:: 0.18.1 support for the Python parser.
-
 Column and index locations and names
 ++++++++++++++++++++++++++++++++++++
 
diff --git a/doc/source/user_guide/reshaping.rst b/doc/source/user_guide/reshaping.rst
index 0470a6c0c..06ad86327 100644
--- a/doc/source/user_guide/reshaping.rst
+++ b/doc/source/user_guide/reshaping.rst
@@ -254,8 +254,6 @@ values will be set to ``NaN``.
    df3
    df3.unstack()
 
-.. versionadded:: 0.18.0
-
 Alternatively, unstack takes an optional ``fill_value`` argument, for specifying
 the value of missing data.
 
@@ -630,8 +628,6 @@ the prefix separator. You can specify ``prefix`` and ``prefix_sep`` in 3 ways:
     from_dict = pd.get_dummies(df, prefix={'B': 'from_B', 'A': 'from_A'})
     from_dict
 
-.. versionadded:: 0.18.0
-
 Sometimes it will be useful to only keep k-1 levels of a categorical
 variable to avoid collinearity when feeding the result to statistical models.
 You can switch to this mode by turn on ``drop_first``.
diff --git a/doc/source/user_guide/text.rst b/doc/source/user_guide/text.rst
index 4f1fcdeb6..3255202d0 100644
--- a/doc/source/user_guide/text.rst
+++ b/doc/source/user_guide/text.rst
@@ -560,8 +560,6 @@ For example if they are separated by a ``'|'``:
 
 String ``Index`` also supports ``get_dummies`` which returns a ``MultiIndex``.
 
-.. versionadded:: 0.18.1
-
 .. ipython:: python
 
     idx = pd.Index(['a', 'a|b', np.nan, 'a|c'])
diff --git a/doc/source/user_guide/timeseries.rst b/doc/source/user_guide/timeseries.rst
index ce02059cd..5bdff441d 100644
--- a/doc/source/user_guide/timeseries.rst
+++ b/doc/source/user_guide/timeseries.rst
@@ -255,8 +255,6 @@ option, see the Python `datetime documentation`_.
 Assembling datetime from multiple DataFrame columns
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 
-.. versionadded:: 0.18.1
-
 You can also pass a ``DataFrame`` of integer or string columns to assemble into a ``Series`` of ``Timestamps``.
 
 .. ipython:: python
@@ -1165,8 +1163,6 @@ following subsection.
 Custom business hour
 ~~~~~~~~~~~~~~~~~~~~
 
-.. versionadded:: 0.18.1
-
 The ``CustomBusinessHour`` is a mixture of ``BusinessHour`` and ``CustomBusinessDay`` which
 allows you to specify arbitrary holidays. ``CustomBusinessHour`` works as the same
 as ``BusinessHour`` except that it skips specified custom holidays.
diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index c15f4ad8e..8fdfc9606 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -3087,8 +3087,6 @@ class DataFrame(NDFrame):
             See the documentation for :func:`eval` for complete details
             on the keyword arguments accepted by :meth:`DataFrame.query`.
 
-            .. versionadded:: 0.18.0
-
         Returns
         -------
         DataFrame
@@ -5303,11 +5301,6 @@ class DataFrame(NDFrame):
         Returns
         -------
         DataFrame
-
-        .. versionchanged:: 0.18.1
-
-           The indexes ``i`` and ``j`` are now optional, and default to
-           the two innermost levels of the index.
         """
         result = self.copy()
 
@@ -8213,8 +8206,6 @@ class DataFrame(NDFrame):
             * nearest: `i` or `j` whichever is nearest.
             * midpoint: (`i` + `j`) / 2.
 
-            .. versionadded:: 0.18.0
-
         Returns
         -------
         Series or DataFrame
diff --git a/pandas/core/generic.py b/pandas/core/generic.py
index f28f58b07..0229f36ce 100644
--- a/pandas/core/generic.py
+++ b/pandas/core/generic.py
@@ -997,11 +997,6 @@ class NDFrame(PandasObject, SelectionMixin):
         Returns
         -------
         swapped : same type as caller (new object)
-
-        .. versionchanged:: 0.18.1
-
-           The indexes ``i`` and ``j`` are now optional, and default to
-           the two innermost levels of the index.
         """
         axis = self._get_axis_number(axis)
         result = self.copy()
@@ -9140,10 +9135,6 @@ class NDFrame(PandasObject, SelectionMixin):
             If `cond` is callable, it is computed on the %(klass)s and
             should return boolean %(klass)s or array. The callable must
             not change input %(klass)s (though pandas doesn't check it).
-
-            .. versionadded:: 0.18.1
-                A callable can be used as cond.
-
         other : scalar, %(klass)s, or callable
             Entries where `cond` is %(cond_rev)s are replaced with
             corresponding value from `other`.
diff --git a/pandas/core/indexes/base.py b/pandas/core/indexes/base.py
index 33de8e41b..55bde6ad2 100644
--- a/pandas/core/indexes/base.py
+++ b/pandas/core/indexes/base.py
@@ -4904,11 +4904,6 @@ class Index(IndexOpsMixin, PandasObject):
         ----------
         values : set or list-like
             Sought values.
-
-            .. versionadded:: 0.18.1
-
-               Support for values as a set.
-
         level : str or int, optional
             Name or position of the index level to use (if the index is a
             `MultiIndex`).
diff --git a/pandas/core/indexes/multi.py b/pandas/core/indexes/multi.py
index b673c119c..1a7d98b6f 100644
--- a/pandas/core/indexes/multi.py
+++ b/pandas/core/indexes/multi.py
@@ -2197,11 +2197,6 @@ class MultiIndex(Index):
         MultiIndex
             A new MultiIndex.
 
-        .. versionchanged:: 0.18.1
-
-           The indexes ``i`` and ``j`` are now optional, and default to
-           the two innermost levels of the index.
-
         See Also
         --------
         Series.swaplevel : Swap levels i and j in a MultiIndex.
diff --git a/pandas/core/resample.py b/pandas/core/resample.py
index b4a3e6ed7..8850cddc4 100644
--- a/pandas/core/resample.py
+++ b/pandas/core/resample.py
@@ -781,8 +781,6 @@ class Resampler(_GroupBy):
     ):
         """
         Interpolate values according to different methods.
-
-        .. versionadded:: 0.18.1
         """
         result = self._upsample(None)
         return result.interpolate(
@@ -1259,8 +1257,6 @@ class PeriodIndexResampler(DatetimeIndexResampler):
 class PeriodIndexResamplerGroupby(_GroupByMixin, PeriodIndexResampler):
     """
     Provides a resample of a groupby implementation.
-
-    .. versionadded:: 0.18.1
     """
 
     @property
diff --git a/pandas/core/reshape/pivot.py b/pandas/core/reshape/pivot.py
index 23bf89b2b..2bdef766a 100644
--- a/pandas/core/reshape/pivot.py
+++ b/pandas/core/reshape/pivot.py
@@ -480,8 +480,6 @@ def crosstab(
         - If passed 'columns' will normalize over each column.
         - If margins is `True`, will also normalize margin values.
 
-        .. versionadded:: 0.18.1
-
     Returns
     -------
     DataFrame
diff --git a/pandas/core/reshape/reshape.py b/pandas/core/reshape/reshape.py
index 540a06cae..65f6c374d 100644
--- a/pandas/core/reshape/reshape.py
+++ b/pandas/core/reshape/reshape.py
@@ -781,9 +781,6 @@ def get_dummies(
     drop_first : bool, default False
         Whether to get k-1 dummies out of k categorical levels by removing the
         first level.
-
-        .. versionadded:: 0.18.0
-
     dtype : dtype, default np.uint8
         Data type for new columns. Only a single dtype is allowed.
 
diff --git a/pandas/core/series.py b/pandas/core/series.py
index 59ea8c6bd..1f63d8d92 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -2350,8 +2350,6 @@ class Series(base.IndexOpsMixin, generic.NDFrame):
         q : float or array-like, default 0.5 (50% quantile)
             0 <= q <= 1, the quantile(s) to compute.
         interpolation : {'linear', 'lower', 'higher', 'midpoint', 'nearest'}
-            .. versionadded:: 0.18.0
-
             This optional parameter specifies the interpolation method to use,
             when the desired quantile lies between two data points `i` and `j`:
 
@@ -3707,8 +3705,6 @@ class Series(base.IndexOpsMixin, generic.NDFrame):
         fill_value : scalar value, default None
             Value to use when replacing NaN values.
 
-            .. versionadded:: 0.18.0
-
         Returns
         -------
         DataFrame
diff --git a/pandas/core/strings.py b/pandas/core/strings.py
index 7c293ca4e..b188bd23c 100644
--- a/pandas/core/strings.py
+++ b/pandas/core/strings.py
@@ -837,8 +837,6 @@ def str_extract(arr, pat, flags=0, expand=True):
         If False, return a Series/Index if there is one capture group
         or DataFrame if there are multiple capture groups.
 
-        .. versionadded:: 0.18.0
-
     Returns
     -------
     DataFrame or Series or Index
diff --git a/pandas/core/tools/datetimes.py b/pandas/core/tools/datetimes.py
index e9d2c3f07..20c4b9422 100644
--- a/pandas/core/tools/datetimes.py
+++ b/pandas/core/tools/datetimes.py
@@ -577,9 +577,6 @@ def to_datetime(
     Parameters
     ----------
     arg : integer, float, string, datetime, list, tuple, 1-d array, Series
-
-        .. versionadded:: 0.18.1
-
            or DataFrame/dict-like
 
     errors : {'ignore', 'raise', 'coerce'}, default 'raise'
diff --git a/pandas/core/window.py b/pandas/core/window.py
index 86574208a..20d5453cc 100644
--- a/pandas/core/window.py
+++ b/pandas/core/window.py
@@ -477,8 +477,6 @@ class Window(_Window):
     """
     Provide rolling window calculations.
 
-    .. versionadded:: 0.18.0
-
     Parameters
     ----------
     window : int, or offset
@@ -1984,8 +1982,6 @@ class Expanding(_Rolling_and_Expanding):
     """
     Provide expanding transformations.
 
-    .. versionadded:: 0.18.0
-
     Parameters
     ----------
     min_periods : int, default 1
@@ -2271,8 +2267,6 @@ class EWM(_Rolling):
     r"""
     Provide exponential weighted functions.
 
-    .. versionadded:: 0.18.0
-
     Parameters
     ----------
     com : float, optional
diff --git a/pandas/io/formats/format.py b/pandas/io/formats/format.py
index 0e8ed7b25..b9f0e8a78 100644
--- a/pandas/io/formats/format.py
+++ b/pandas/io/formats/format.py
@@ -102,8 +102,6 @@ common_docstring = """
             Display DataFrame dimensions (number of rows by number of columns).
         decimal : str, default '.'
             Character recognized as decimal separator, e.g. ',' in Europe.
-
-            .. versionadded:: 0.18.0
     """
 
 _VALID_JUSTIFY_PARAMETERS = (
diff --git a/pandas/io/formats/style.py b/pandas/io/formats/style.py
index 98349fe1e..b736b978c 100644
--- a/pandas/io/formats/style.py
+++ b/pandas/io/formats/style.py
@@ -414,8 +414,6 @@ class Styler:
         """
         Format the text display value of cells.
 
-        .. versionadded:: 0.18.0
-
         Parameters
         ----------
         formatter : str, callable, or dict
diff --git a/pandas/io/parsers.py b/pandas/io/parsers.py
index 300f17bd2..20aafb26f 100755
--- a/pandas/io/parsers.py
+++ b/pandas/io/parsers.py
@@ -277,9 +277,6 @@ compression : {{'infer', 'gzip', 'bz2', 'zip', 'xz', None}}, default 'infer'
     following extensions: '.gz', '.bz2', '.zip', or '.xz' (otherwise no
     decompression). If using 'zip', the ZIP file must contain only one data
     file to be read in. Set to None for no decompression.
-
-    .. versionadded:: 0.18.1 support for 'zip' and 'xz' compression.
-
 thousands : str, optional
     Thousands separator.
 decimal : str, default '.'
diff --git a/pandas/tseries/offsets.py b/pandas/tseries/offsets.py
index ac3e92c77..07b9598f1 100644
--- a/pandas/tseries/offsets.py
+++ b/pandas/tseries/offsets.py
@@ -1075,8 +1075,6 @@ class CustomBusinessDay(_CustomMixin, BusinessDay):
 class CustomBusinessHour(_CustomMixin, BusinessHourMixin, SingleConstructorOffset):
     """
     DateOffset subclass representing possibly n custom business days.
-
-    .. versionadded:: 0.18.1
     """
 
     _prefix = "CBH"
