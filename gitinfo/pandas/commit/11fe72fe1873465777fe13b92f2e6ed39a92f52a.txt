commit 11fe72fe1873465777fe13b92f2e6ed39a92f52a
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Wed Nov 16 03:30:23 2011 -0500

    BUG: fix consolidation with MultiIndex, fixes GH #366

diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 043baaad8..4451cfa47 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -15,6 +15,7 @@ labeling information
 from itertools import izip
 from StringIO import StringIO
 import csv
+import gc
 import operator
 import sys
 
@@ -1298,8 +1299,10 @@ class DataFrame(NDFrame):
             duplicates = index._get_duplicates()
             raise Exception('Index has duplicate keys: %s' % duplicates)
 
-        frame.index = index
+        # clear up memory usage
+        index._cleanup()
 
+        frame.index = index
         return frame
 
     def take(self, indices, axis=0):
diff --git a/pandas/core/index.py b/pandas/core/index.py
index aa0713d80..8d2e3217b 100644
--- a/pandas/core/index.py
+++ b/pandas/core/index.py
@@ -2,6 +2,7 @@
 
 from datetime import time
 from itertools import izip
+import gc
 
 import numpy as np
 
@@ -99,6 +100,9 @@ class Index(np.ndarray):
         "{label -> location}"
         return self._engine.get_mapping(1)
 
+    def _cleanup(self):
+        self._engine.clear_mapping()
+
     @cache_readonly
     def _engine(self):
         import weakref
@@ -844,6 +848,7 @@ class Factor(np.ndarray):
 def unique_with_labels(values):
     uniques = Index(lib.fast_unique(values))
     labels = lib.get_unique_labels(values, uniques.indexMap)
+    uniques._cleanup()
     return uniques, labels
 
 class MultiIndex(Index):
diff --git a/pandas/core/internals.py b/pandas/core/internals.py
index 49ff93f06..730e15ac6 100644
--- a/pandas/core/internals.py
+++ b/pandas/core/internals.py
@@ -960,7 +960,7 @@ def _merge_blocks(blocks, items):
     if len(blocks) == 1:
         return blocks[0]
     new_values = np.vstack([b.values for b in blocks])
-    new_items = np.concatenate([b.items for b in blocks])
+    new_items = blocks[0].items.append([b.items for b in blocks[1:]])
     new_block = make_block(new_values, new_items, items,
                            do_integrity_check=True)
     return new_block.reindex_items_from(items)
diff --git a/pandas/src/engines.pyx b/pandas/src/engines.pyx
index d9790afc6..d19843a67 100644
--- a/pandas/src/engines.pyx
+++ b/pandas/src/engines.pyx
@@ -34,6 +34,11 @@ cdef class DictIndexEngine(IndexEngine):
 
         return self.mapping
 
+    def clear_mapping(self):
+        self.mapping = None
+        self.initialized = 0
+        self.integrity = 0
+
     cdef _ensure_initialized(self):
         if not self.initialized:
             self.initialize()
diff --git a/pandas/tests/test_multilevel.py b/pandas/tests/test_multilevel.py
index ed5e82801..039471e00 100644
--- a/pandas/tests/test_multilevel.py
+++ b/pandas/tests/test_multilevel.py
@@ -614,6 +614,13 @@ class TestMultiLevel(unittest.TestCase):
     def test_groupby_multilevel_with_transform(self):
         pass
 
+    def test_multilevel_consolidate(self):
+        index = MultiIndex.from_tuples([('foo', 'one'), ('foo', 'two'),
+                                        ('bar', 'one'), ('bar', 'two')])
+        df = DataFrame(np.random.randn(4, 4), index=index, columns=index)
+        df['Totals', ''] = df.sum(1)
+        df = df.consolidate()
+
 if __name__ == '__main__':
 
     # unittest.main()
diff --git a/setup.py b/setup.py
index d6608ad43..ed97dde79 100755
--- a/setup.py
+++ b/setup.py
@@ -305,10 +305,15 @@ sandbox_ext = Extension('pandas._sandbox',
                         sources=[srcpath('sandbox', suffix=suffix)],
                         include_dirs=[np.get_include()])
 
+cppsandbox_ext = Extension('pandas._cppsandbox',
+                           language='c++',
+                           sources=[srcpath('cppsandbox', suffix=suffix)],
+                           include_dirs=[np.get_include()])
+
 extensions = [tseries_ext, engines_ext, sparse_ext]
 
 if not ISRELEASED:
-    extensions.append(sandbox_ext)
+    extensions.extend([sandbox_ext, cppsandbox_ext])
 
 # if _have_setuptools:
 #     setuptools_args["test_suite"] = "nose.collector"
