commit f982225dcc86b259ec40b5c2f04ec44a19d719c8
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Wed Mar 14 21:10:05 2012 -0400

    BUG: don't fillna in align if fill_value=nan, don't try filling int/boolblock, close #910

diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index e19511cbc..97c531bd3 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -1824,7 +1824,7 @@ class DataFrame(NDFrame):
         left_result = DataFrame(fdata)
         right_result = other if ridx is None else other.reindex(join_index)
 
-        fill_na = (fill_value is not None) or (method is not None)
+        fill_na = notnull(fill_value) or (method is not None)
         if fill_na:
             return (left_result.fillna(fill_value, method=method),
                     right_result.fillna(fill_value, method=method))
diff --git a/pandas/core/internals.py b/pandas/core/internals.py
index f1025fae4..66e81ca0c 100644
--- a/pandas/core/internals.py
+++ b/pandas/core/internals.py
@@ -255,6 +255,7 @@ def _backfill(values):
 # Is this even possible?
 
 class FloatBlock(Block):
+    _can_hold_na = True
 
     def should_store(self, value):
         # when inserting a column should not coerce integers to floats
@@ -262,16 +263,19 @@ class FloatBlock(Block):
         return issubclass(value.dtype.type, np.floating)
 
 class IntBlock(Block):
+    _can_hold_na = False
 
     def should_store(self, value):
         return issubclass(value.dtype.type, np.integer)
 
 class BoolBlock(Block):
+    _can_hold_na = False
 
     def should_store(self, value):
         return issubclass(value.dtype.type, np.bool_)
 
 class ObjectBlock(Block):
+    _can_hold_na = True
 
     def should_store(self, value):
         return not issubclass(value.dtype.type,
@@ -943,6 +947,7 @@ class BlockManager(object):
 
         """
         new_blocks = [b.fillna(value, inplace=inplace)
+                      if b._can_hold_na else b
                       for b in self.blocks]
         if inplace:
             return self
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index dd4cb12cf..339b27030 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -2953,6 +2953,14 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
 
         result = self.mixed_frame.fillna(value=0)
 
+    def test_fillna_skip_certain_blocks(self):
+        # don't try to fill boolean, int blocks
+
+        df = DataFrame(np.random.randn(10, 4).astype(int))
+
+        # it works!
+        df.fillna(np.nan)
+
     def test_fillna_inplace(self):
         df = DataFrame(np.random.randn(10, 4))
         df[1][:4] = np.nan
@@ -3410,6 +3418,19 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
         self.assertRaises(ValueError, self.frame.align, af.ix[0,:3],
                           join='inner', axis=2)
 
+    def test_align_int_fill_bug(self):
+        # GH #910
+        X = np.random.rand(10,10)
+        Y = np.ones((10,1),dtype=int)
+        df1 = DataFrame(X)
+        df1['0.X'] = Y.squeeze()
+
+        df2 = df1.astype(float)
+
+        result = df1 - df1.mean()
+        expected = df2 - df2.mean()
+        assert_frame_equal(result, expected)
+
     #----------------------------------------------------------------------
     # Transposing
 
