commit 758249d9ef3f226e390010c6634320e118286d76
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Thu Jun 7 20:57:18 2012 -0400

    BUG: pass on limit argument in upsampling, close #1424

diff --git a/pandas/tseries/resample.py b/pandas/tseries/resample.py
index f75c7b45c..74686f6b6 100644
--- a/pandas/tseries/resample.py
+++ b/pandas/tseries/resample.py
@@ -149,7 +149,8 @@ class TimeGrouper(CustomGrouper):
             # upsampling
 
             # this is sort of a hack
-            result = obj.reindex(binner[1:], method=self.fill_method)
+            result = obj.reindex(binner[1:], method=self.fill_method,
+                                 limit=self.limit)
 
         loffset = self.loffset
         if isinstance(loffset, basestring):
diff --git a/pandas/tseries/tests/test_resample.py b/pandas/tseries/tests/test_resample.py
index 9c517e836..39018f78e 100644
--- a/pandas/tseries/tests/test_resample.py
+++ b/pandas/tseries/tests/test_resample.py
@@ -207,6 +207,14 @@ class TestResample(unittest.TestCase):
         self.assertEquals(result[0], s[0])
         self.assertEquals(result[-1], s[-1])
 
+    def test_upsample_with_limit(self):
+        rng = date_range('1/1/2000', periods=3, freq='5t')
+        ts = Series(np.random.randn(len(rng)), rng)
+
+        result = ts.resample('t', fill_method='ffill', limit=2)
+        expected = ts.reindex(result.index, method='ffill', limit=2)
+        assert_series_equal(result, expected)
+
     def test_resample_ohlc(self):
         s = self.series
 
@@ -460,6 +468,15 @@ class TestResamplePeriodIndex(unittest.TestCase):
 
         assert_series_equal(resampled, expected)
 
+    def test_upsample_with_limit(self):
+        rng = period_range('1/1/2000', periods=5, freq='A')
+        ts = Series(np.random.randn(len(rng)), rng)
+
+        result = ts.resample('M', fill_method='ffill', limit=2)
+        expected = ts.asfreq('M').reindex(result.index, method='ffill',
+                                          limit=2)
+        assert_series_equal(result, expected)
+
     def test_annual_upsample(self):
         targets = ['D', 'B', 'M']
 
