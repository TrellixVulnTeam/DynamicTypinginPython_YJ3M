commit 35d70b9dc4b126a321fafeb7f2c948c3440ed847
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Wed Aug 31 16:06:36 2011 -0400

    ENH: implemented sort for WidePanel

diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index c06e393d4..de3353704 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -1187,6 +1187,8 @@ class DataFrame(NDFrame):
         else:
             return self.reindex(columns=sort_index)
 
+    order = sort
+
     def sortlevel(self, level=0, axis=0, ascending=True):
         """
         Sort multilevel index by chosen axis and primary level. Data will be
diff --git a/pandas/core/generic.py b/pandas/core/generic.py
index 66f9ef98a..a0b6957a5 100644
--- a/pandas/core/generic.py
+++ b/pandas/core/generic.py
@@ -177,6 +177,32 @@ class PandasObject(Picklable):
         new_axis = axis.drop(labels)
         return self.reindex(**{axis_name : new_axis})
 
+    def sort(self, axis=0, ascending=True):
+        """
+        Sort object by labels (along an axis)
+
+        Parameters
+        ----------
+        axis : {0, 1}
+            Sort index/rows versus columns
+        ascending : boolean, default True
+            Sort ascending vs. descending
+
+        Returns
+        -------
+        sorted_obj : type of caller
+        """
+        axis = self._get_axis_number(axis)
+        axis_name = self._get_axis_name(axis)
+        labels = self._get_axis(axis)
+
+        sort_index = labels.argsort()
+        if not ascending:
+            sort_index = sort_index[::-1]
+
+        new_axis = labels.take(sort_index)
+        return self.reindex(**{axis_name : new_axis})
+
     @property
     def ix(self):
         raise NotImplementedError
diff --git a/pandas/tests/test_panel.py b/pandas/tests/test_panel.py
index 999a6cb99..e8f3b8259 100644
--- a/pandas/tests/test_panel.py
+++ b/pandas/tests/test_panel.py
@@ -153,7 +153,6 @@ class SafeForLongAndSparse(object):
 
         self._check_statistic(self.panel, 'skew', f)
 
-
 class SafeForSparse(object):
 
     @staticmethod
@@ -534,6 +533,28 @@ class TestWidePanel(unittest.TestCase, PanelTests,
         smaller_like = self.panel.reindex_like(smaller)
         assert_panel_equal(smaller, smaller_like)
 
+    def test_sort(self):
+        import random
+
+        ritems = list(self.panel.items)
+        rmajor = list(self.panel.major_axis)
+        rminor = list(self.panel.minor_axis)
+        random.shuffle(ritems)
+        random.shuffle(rmajor)
+        random.shuffle(rminor)
+
+        random_order = self.panel.reindex(items=ritems)
+        sorted_panel = random_order.sort(axis=0)
+        assert_panel_equal(sorted_panel, self.panel)
+
+        random_order = self.panel.reindex(major=rmajor)
+        sorted_panel = random_order.sort(axis=1)
+        assert_panel_equal(sorted_panel, self.panel)
+
+        random_order = self.panel.reindex(minor=rminor)
+        sorted_panel = random_order.sort(axis=2)
+        assert_panel_equal(sorted_panel, self.panel)
+
     def test_fillna(self):
         filled = self.panel.fillna(0)
         self.assert_(np.isfinite(filled.values).all())
