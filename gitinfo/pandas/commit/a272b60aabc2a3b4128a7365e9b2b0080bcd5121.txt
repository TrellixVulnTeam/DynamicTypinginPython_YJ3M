commit a272b60aabc2a3b4128a7365e9b2b0080bcd5121
Author: alimcmaster1 <alimcmaster1@gmail.com>
Date:   Fri Jun 28 16:37:39 2019 +0100

    STYLE: Isort __init__ files (#26749)

diff --git a/pandas/_libs/__init__.py b/pandas/_libs/__init__.py
index 1f6042389..fcf5ffbfc 100644
--- a/pandas/_libs/__init__.py
+++ b/pandas/_libs/__init__.py
@@ -1,4 +1,4 @@
 # flake8: noqa
 
 from .tslibs import (
-    iNaT, NaT, NaTType, Timestamp, Timedelta, OutOfBoundsDatetime, Period)
+    NaT, NaTType, OutOfBoundsDatetime, Period, Timedelta, Timestamp, iNaT)
diff --git a/pandas/_libs/tslibs/__init__.py b/pandas/_libs/tslibs/__init__.py
index 21ba0ae06..67a323782 100644
--- a/pandas/_libs/tslibs/__init__.py
+++ b/pandas/_libs/tslibs/__init__.py
@@ -1,9 +1,9 @@
 # flake8: noqa
 
-from .conversion import normalize_date, localize_pydatetime
+from .conversion import localize_pydatetime, normalize_date
 from .nattype import NaT, NaTType, iNaT, is_null_datetimelike
 from .np_datetime import OutOfBoundsDatetime
-from .period import Period, IncompatibleFrequency
+from .period import IncompatibleFrequency, Period
+from .timedeltas import Timedelta, delta_to_nanoseconds, ints_to_pytimedelta
 from .timestamps import Timestamp
-from .timedeltas import delta_to_nanoseconds, ints_to_pytimedelta, Timedelta
 from .tzconversion import tz_convert_single
diff --git a/pandas/api/__init__.py b/pandas/api/__init__.py
index afff059e7..584228119 100644
--- a/pandas/api/__init__.py
+++ b/pandas/api/__init__.py
@@ -1,2 +1,2 @@
 """ public toolkit API """
-from . import types, extensions  # noqa
+from . import extensions, types  # noqa
diff --git a/pandas/api/extensions/__init__.py b/pandas/api/extensions/__init__.py
index cb6241016..0bd2733cb 100644
--- a/pandas/api/extensions/__init__.py
+++ b/pandas/api/extensions/__init__.py
@@ -1,10 +1,12 @@
 """Public API for extending pandas objects."""
-from pandas.core.accessor import (register_dataframe_accessor,  # noqa
-                                  register_index_accessor,
-                                  register_series_accessor)
-from pandas.core.algorithms import take  # noqa
-from pandas.core.arrays import (ExtensionArray,    # noqa
-                                ExtensionScalarOpsMixin)
-from pandas.core.dtypes.dtypes import (  # noqa
-    ExtensionDtype, register_extension_dtype
-)
+from pandas.core.dtypes.dtypes import (  # noqa: F401
+    ExtensionDtype, register_extension_dtype)
+
+from pandas.core.accessor import (  # noqa: F401
+    register_index_accessor, register_series_accessor)
+from pandas.core.algorithms import take  # noqa: F401
+from pandas.core.arrays import (  # noqa: F401
+    ExtensionArray, ExtensionScalarOpsMixin)
+
+from pandas.core.accessor import (  # noqa: F401; noqa: F401
+    register_dataframe_accessor)
diff --git a/pandas/api/types/__init__.py b/pandas/api/types/__init__.py
index 438e4afa3..668f79921 100644
--- a/pandas/api/types/__init__.py
+++ b/pandas/api/types/__init__.py
@@ -1,9 +1,8 @@
 """ public toolkit API """
 
-from pandas.core.dtypes.api import *  # noqa
-from pandas.core.dtypes.dtypes import (CategoricalDtype,  # noqa
-                                       DatetimeTZDtype,
-                                       PeriodDtype,
-                                       IntervalDtype)
-from pandas.core.dtypes.concat import union_categoricals  # noqa
-from pandas._libs.lib import infer_dtype  # noqa
+from pandas._libs.lib import infer_dtype  # noqa: F401
+
+from pandas.core.dtypes.api import *  # noqa: F403, F401
+from pandas.core.dtypes.concat import union_categoricals  # noqa: F401
+from pandas.core.dtypes.dtypes import (  # noqa: F401
+    CategoricalDtype, DatetimeTZDtype, IntervalDtype, PeriodDtype)
diff --git a/pandas/arrays/__init__.py b/pandas/arrays/__init__.py
index 7d9b1b7c7..ab014d492 100644
--- a/pandas/arrays/__init__.py
+++ b/pandas/arrays/__init__.py
@@ -4,12 +4,8 @@ All of pandas' ExtensionArrays.
 See :ref:`extending.extension-types` for more.
 """
 from pandas.core.arrays import (
-    IntervalArray, PeriodArray, Categorical, SparseArray, IntegerArray,
-    PandasArray,
-    DatetimeArray,
-    TimedeltaArray,
-)
-
+    Categorical, DatetimeArray, IntegerArray, IntervalArray, PandasArray,
+    PeriodArray, SparseArray, TimedeltaArray)
 
 __all__ = [
     'Categorical',
diff --git a/pandas/core/arrays/__init__.py b/pandas/core/arrays/__init__.py
index 1033ce784..2d09a9eac 100644
--- a/pandas/core/arrays/__init__.py
+++ b/pandas/core/arrays/__init__.py
@@ -1,13 +1,11 @@
-from .array_ import array  # noqa
-from .base import (ExtensionArray,    # noqa
-                   ExtensionOpsMixin,
-                   ExtensionScalarOpsMixin)
-from .categorical import Categorical  # noqa
-from .datetimes import DatetimeArray  # noqa
-from .interval import IntervalArray  # noqa
-from .period import PeriodArray, period_array  # noqa
-from .timedeltas import TimedeltaArray  # noqa
-from .integer import (  # noqa
-    IntegerArray, integer_array)
-from .sparse import SparseArray  # noqa
-from .numpy_ import PandasArray, PandasDtype  # noqa
+from .array_ import array  # noqa: F401
+from .base import (  # noqa: F401
+    ExtensionArray, ExtensionOpsMixin, ExtensionScalarOpsMixin)
+from .categorical import Categorical  # noqa: F401
+from .datetimes import DatetimeArray  # noqa: F401
+from .integer import IntegerArray, integer_array  # noqa: F401
+from .interval import IntervalArray  # noqa: F401
+from .numpy_ import PandasArray, PandasDtype  # noqa: F401
+from .period import PeriodArray, period_array  # noqa: F401
+from .sparse import SparseArray  # noqa: F401
+from .timedeltas import TimedeltaArray  # noqa: F401
diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index fd2e1e3e4..df7003ecf 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -14,93 +14,61 @@ import functools
 from io import StringIO
 import itertools
 import sys
-import warnings
 from textwrap import dedent
 from typing import FrozenSet, List, Optional, Set, Type, Union
+import warnings
 
 import numpy as np
 import numpy.ma as ma
 
 from pandas._config import get_option
 
-from pandas._libs import lib, algos as libalgos
-
-from pandas.util._decorators import (Appender, Substitution,
-                                     rewrite_axis_style_signature,
-                                     deprecate_kwarg)
-from pandas.util._validators import (validate_bool_kwarg,
-                                     validate_axis_style_args)
-
+from pandas._libs import algos as libalgos, lib
 from pandas.compat import PY36, raise_with_traceback
 from pandas.compat.numpy import function as nv
-from pandas.core.arrays.sparse import SparseFrameAccessor
+from pandas.util._decorators import (
+    Appender, Substitution, deprecate_kwarg, rewrite_axis_style_signature)
+from pandas.util._validators import (
+    validate_axis_style_args, validate_bool_kwarg)
+
 from pandas.core.dtypes.cast import (
-    maybe_upcast,
-    cast_scalar_to_array,
-    infer_dtype_from_scalar,
-    maybe_cast_to_datetime,
-    maybe_infer_to_datetimelike,
-    maybe_convert_platform,
-    maybe_downcast_to_dtype,
-    invalidate_string_dtypes,
-    coerce_to_dtypes,
-    maybe_upcast_putmask,
-    find_common_type)
+    cast_scalar_to_array, coerce_to_dtypes, find_common_type,
+    infer_dtype_from_scalar, invalidate_string_dtypes, maybe_cast_to_datetime,
+    maybe_convert_platform, maybe_downcast_to_dtype,
+    maybe_infer_to_datetimelike, maybe_upcast, maybe_upcast_putmask)
 from pandas.core.dtypes.common import (
-    is_dict_like,
-    is_datetime64tz_dtype,
-    is_object_dtype,
-    is_extension_type,
-    is_extension_array_dtype,
-    is_datetime64_any_dtype,
-    is_bool_dtype,
-    is_integer_dtype,
-    is_float_dtype,
-    is_integer,
-    is_scalar,
-    is_dtype_equal,
-    needs_i8_conversion,
-    infer_dtype_from_object,
-    ensure_float64,
-    ensure_int64,
-    ensure_platform_int,
-    is_list_like,
-    is_nested_list_like,
-    is_iterator,
-    is_sequence,
-    is_named_tuple)
+    ensure_float64, ensure_int64, ensure_platform_int, infer_dtype_from_object,
+    is_bool_dtype, is_datetime64_any_dtype, is_datetime64tz_dtype,
+    is_dict_like, is_dtype_equal, is_extension_array_dtype, is_extension_type,
+    is_float_dtype, is_integer, is_integer_dtype, is_iterator, is_list_like,
+    is_named_tuple, is_nested_list_like, is_object_dtype, is_scalar,
+    is_sequence, needs_i8_conversion)
 from pandas.core.dtypes.generic import (
-    ABCSeries, ABCDataFrame, ABCIndexClass, ABCMultiIndex)
+    ABCDataFrame, ABCIndexClass, ABCMultiIndex, ABCSeries)
 from pandas.core.dtypes.missing import isna, notna
 
-from pandas.core import algorithms
-from pandas.core import common as com
-from pandas.core import nanops
-from pandas.core import ops
+from pandas.core import algorithms, common as com, nanops, ops
 from pandas.core.accessor import CachedAccessor
 from pandas.core.arrays import Categorical, ExtensionArray
 from pandas.core.arrays.datetimelike import (
-    DatetimeLikeArrayMixin as DatetimeLikeArray
-)
+    DatetimeLikeArrayMixin as DatetimeLikeArray)
+from pandas.core.arrays.sparse import SparseFrameAccessor
 from pandas.core.generic import NDFrame, _shared_docs
-from pandas.core.index import (Index, MultiIndex, ensure_index,
-                               ensure_index_from_sequences)
+from pandas.core.index import (
+    Index, MultiIndex, ensure_index, ensure_index_from_sequences)
 from pandas.core.indexes import base as ibase
 from pandas.core.indexes.datetimes import DatetimeIndex
 from pandas.core.indexes.period import PeriodIndex
-from pandas.core.indexing import (maybe_droplevels, convert_to_index_sliceable,
-                                  check_bool_indexer)
+from pandas.core.indexing import (
+    check_bool_indexer, convert_to_index_sliceable, maybe_droplevels)
 from pandas.core.internals import BlockManager
 from pandas.core.internals.construction import (
-    masked_rec_array_to_mgr, get_names_from_index, to_arrays,
-    reorder_arrays, init_ndarray, init_dict,
-    arrays_to_mgr, sanitize_index)
+    arrays_to_mgr, get_names_from_index, init_dict, init_ndarray,
+    masked_rec_array_to_mgr, reorder_arrays, sanitize_index, to_arrays)
 from pandas.core.series import Series
 
-from pandas.io.formats import console
-from pandas.io.formats import format as fmt
+from pandas.io.formats import console, format as fmt
 from pandas.io.formats.printing import pprint_thing
-
 import pandas.plotting
 
 # ---------------------------------------------------------------------
diff --git a/pandas/core/internals/__init__.py b/pandas/core/internals/__init__.py
index d24dd2edd..b9530e15f 100644
--- a/pandas/core/internals/__init__.py
+++ b/pandas/core/internals/__init__.py
@@ -1,12 +1,15 @@
-from .blocks import (  # noqa:F401
-    _block_shape,   # io.pytables
-    _safe_reshape,  # io.packers
-    make_block,     # io.pytables, io.packers
-    FloatBlock, IntBlock, ComplexBlock, BoolBlock, ObjectBlock,
-    TimeDeltaBlock, DatetimeBlock, DatetimeTZBlock,
-    CategoricalBlock, ExtensionBlock, Block)
-from .managers import (  # noqa:F401
-    BlockManager, SingleBlockManager,
-    create_block_manager_from_arrays, create_block_manager_from_blocks,
-    items_overlap_with_suffix,  # reshape.merge
-    concatenate_block_managers)  # reshape.concat, reshape.merge
+from .blocks import (  # noqa: F401
+    Block, BoolBlock, CategoricalBlock, ComplexBlock, DatetimeBlock,
+    DatetimeTZBlock, ExtensionBlock, FloatBlock, IntBlock, ObjectBlock,
+    TimeDeltaBlock)
+from .managers import (  # noqa: F401
+    BlockManager, SingleBlockManager, create_block_manager_from_arrays,
+    create_block_manager_from_blocks)
+
+from .blocks import _safe_reshape  # noqa: F401; io.packers
+from .blocks import make_block  # noqa: F401; io.pytables, io.packers
+from .managers import (  # noqa: F401; reshape.concat, reshape.merge
+    concatenate_block_managers)
+from .managers import items_overlap_with_suffix  # noqa: F401; reshape.merge
+
+from .blocks import _block_shape  # noqa:F401; io.pytables
diff --git a/pandas/io/clipboard/__init__.py b/pandas/io/clipboard/__init__.py
index 2063978c7..e033d882a 100644
--- a/pandas/io/clipboard/__init__.py
+++ b/pandas/io/clipboard/__init__.py
@@ -25,12 +25,13 @@ This module does not work with PyGObject yet.
 """
 __version__ = '1.5.27'
 
-import platform
 import os
+import platform
 import subprocess
+
 from .clipboards import (
-    init_osx_clipboard, init_qt_clipboard, init_xclip_clipboard,
-    init_xsel_clipboard, init_klipper_clipboard, init_no_clipboard)
+    init_klipper_clipboard, init_no_clipboard, init_osx_clipboard,
+    init_qt_clipboard, init_xclip_clipboard, init_xsel_clipboard)
 from .windows import init_windows_clipboard
 
 # `import qtpy` sys.exit()s if DISPLAY is not in the environment.
diff --git a/pandas/io/excel/__init__.py b/pandas/io/excel/__init__.py
index 704789cb6..455abaa7f 100644
--- a/pandas/io/excel/__init__.py
+++ b/pandas/io/excel/__init__.py
@@ -1,4 +1,4 @@
-from pandas.io.excel._base import read_excel, ExcelWriter, ExcelFile
+from pandas.io.excel._base import ExcelFile, ExcelWriter, read_excel
 from pandas.io.excel._openpyxl import _OpenpyxlWriter
 from pandas.io.excel._util import register_writer
 from pandas.io.excel._xlsxwriter import _XlsxWriter
diff --git a/pandas/io/json/__init__.py b/pandas/io/json/__init__.py
index 32d110b34..cbb4e37fa 100644
--- a/pandas/io/json/__init__.py
+++ b/pandas/io/json/__init__.py
@@ -1,4 +1,4 @@
-from .json import to_json, read_json, loads, dumps  # noqa
+from .json import dumps, loads, read_json, to_json  # noqa
 from .normalize import json_normalize  # noqa
 from .table_schema import build_table_schema  # noqa
 
diff --git a/pandas/tests/extension/base/__init__.py b/pandas/tests/extension/base/__init__.py
index 1f7ee2ae1..0b3f2b860 100644
--- a/pandas/tests/extension/base/__init__.py
+++ b/pandas/tests/extension/base/__init__.py
@@ -46,11 +46,13 @@ from .dtype import BaseDtypeTests  # noqa
 from .getitem import BaseGetitemTests  # noqa
 from .groupby import BaseGroupbyTests  # noqa
 from .interface import BaseInterfaceTests  # noqa
+from .io import BaseParsingTests  # noqa
 from .methods import BaseMethodsTests  # noqa
-from .ops import BaseArithmeticOpsTests, BaseComparisonOpsTests, BaseOpsUtil  # noqa
-from .printing import BasePrintingTests  # noqa
-from .reduce import BaseNoReduceTests, BaseNumericReduceTests, BaseBooleanReduceTests  # noqa
 from .missing import BaseMissingTests  # noqa
+from .ops import (  # noqa
+    BaseArithmeticOpsTests, BaseComparisonOpsTests, BaseOpsUtil)
+from .printing import BasePrintingTests  # noqa
+from .reduce import (  # noqa
+    BaseBooleanReduceTests, BaseNoReduceTests, BaseNumericReduceTests)
 from .reshaping import BaseReshapingTests  # noqa
 from .setitem import BaseSetitemTests  # noqa
-from .io import BaseParsingTests  # noqa
diff --git a/pandas/tests/extension/decimal/__init__.py b/pandas/tests/extension/decimal/__init__.py
index c37aad0af..7c48e7e71 100644
--- a/pandas/tests/extension/decimal/__init__.py
+++ b/pandas/tests/extension/decimal/__init__.py
@@ -1,4 +1,3 @@
-from .array import DecimalArray, DecimalDtype, to_decimal, make_data
-
+from .array import DecimalArray, DecimalDtype, make_data, to_decimal
 
 __all__ = ['DecimalArray', 'DecimalDtype', 'to_decimal', 'make_data']
diff --git a/pandas/util/__init__.py b/pandas/util/__init__.py
index 202e58c91..9600109f0 100644
--- a/pandas/util/__init__.py
+++ b/pandas/util/__init__.py
@@ -1,2 +1,4 @@
-from pandas.util._decorators import Appender, Substitution, cache_readonly  # noqa
-from pandas.core.util.hashing import hash_pandas_object, hash_array   # noqa
+from pandas.util._decorators import (  # noqa
+    Appender, Substitution, cache_readonly)
+
+from pandas.core.util.hashing import hash_array, hash_pandas_object  # noqa
diff --git a/setup.cfg b/setup.cfg
index eb687c1f5..77dc04304 100644
--- a/setup.cfg
+++ b/setup.cfg
@@ -119,8 +119,9 @@ combine_as_imports=True
 force_sort_within_sections=True
 skip_glob=env,
 skip=
+    pandas/__init__.py
     pandas/core/api.py,
-    pandas/core/frame.py,
+    pandas/io/msgpack/__init__.py
     asv_bench/benchmarks/attrs_caching.py,
     asv_bench/benchmarks/binary_ops.py,
     asv_bench/benchmarks/categoricals.py,
@@ -159,23 +160,3 @@ skip=
     asv_bench/benchmarks/dtypes.py
     asv_bench/benchmarks/strings.py
     asv_bench/benchmarks/period.py
-    pandas/__init__.py
-    pandas/plotting/__init__.py
-    pandas/tests/extension/decimal/__init__.py
-    pandas/tests/extension/base/__init__.py
-    pandas/io/msgpack/__init__.py
-    pandas/io/json/__init__.py
-    pandas/io/clipboard/__init__.py
-    pandas/io/excel/__init__.py
-    pandas/compat/__init__.py
-    pandas/compat/numpy/__init__.py
-    pandas/core/arrays/__init__.py
-    pandas/core/groupby/__init__.py
-    pandas/core/internals/__init__.py
-    pandas/api/__init__.py
-    pandas/api/extensions/__init__.py
-    pandas/api/types/__init__.py
-    pandas/_libs/__init__.py
-    pandas/_libs/tslibs/__init__.py
-    pandas/util/__init__.py
-    pandas/arrays/__init__.py
