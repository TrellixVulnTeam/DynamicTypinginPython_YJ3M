commit 6b3641b48439922ce4c1225a1d338dfe0b1f8967
Author: Robert Meyer <robert.meyer@ni.tu-berlin.de>
Date:   Fri Nov 10 14:53:42 2017 +0100

     Fix for #18178 and #18187 by changing the concat of empty RangeIndex  (#18191)

diff --git a/doc/source/whatsnew/v0.21.1.txt b/doc/source/whatsnew/v0.21.1.txt
index ffabc7dfe..185f08514 100644
--- a/doc/source/whatsnew/v0.21.1.txt
+++ b/doc/source/whatsnew/v0.21.1.txt
@@ -61,6 +61,7 @@ Bug Fixes
 - Bug in :class:`DatetimeIndex` subtracting datetimelike from DatetimeIndex could fail to overflow (:issue:`18020`)
 - Bug in ``pd.Series.rolling.skew()`` and ``rolling.kurt()`` with all equal values has floating issue (:issue:`18044`)
 - Bug in ``pd.DataFrameGroupBy.count()`` when counting over a datetimelike column (:issue:`13393`)
+- Bug in ``pd.concat`` when empty and non-empty DataFrames or Series are concatenated (:issue:`18178` :issue:`18187`)
 
 Conversion
 ^^^^^^^^^^
diff --git a/pandas/core/dtypes/concat.py b/pandas/core/dtypes/concat.py
index 4e15aa50e..dc4d81938 100644
--- a/pandas/core/dtypes/concat.py
+++ b/pandas/core/dtypes/concat.py
@@ -574,9 +574,10 @@ def _concat_rangeindex_same_dtype(indexes):
 
     start = step = next = None
 
-    for obj in indexes:
-        if not len(obj):
-            continue
+    # Filter the empty indexes
+    non_empty_indexes = [obj for obj in indexes if len(obj)]
+
+    for obj in non_empty_indexes:
 
         if start is None:
             # This is set by the first non-empty index
@@ -599,8 +600,16 @@ def _concat_rangeindex_same_dtype(indexes):
         if step is not None:
             next = obj[-1] + step
 
-    if start is None:
+    if non_empty_indexes:
+        # Get the stop value from "next" or alternatively
+        # from the last non-empty index
+        stop = non_empty_indexes[-1]._stop if next is None else next
+    else:
+        # Here all "indexes" had 0 length, i.e. were empty.
+        # Simply take start, stop, and step from the last empty index.
+        obj = indexes[-1]
         start = obj._start
         step = obj._step
-    stop = obj._stop if next is None else next
+        stop = obj._stop
+
     return indexes[0].__class__(start, stop, step)
diff --git a/pandas/tests/reshape/test_concat.py b/pandas/tests/reshape/test_concat.py
index c9c294e70..fd5b4611e 100644
--- a/pandas/tests/reshape/test_concat.py
+++ b/pandas/tests/reshape/test_concat.py
@@ -1983,3 +1983,21 @@ def test_concat_will_upcast(dt, pdt):
                pdt(np.array([5], dtype=dt, ndmin=dims))]
         x = pd.concat(dfs)
         assert x.values.dtype == 'float64'
+
+
+def test_concat_empty_and_non_empty_frame_regression():
+    # GH 18178 regression test
+    df1 = pd.DataFrame({'foo': [1]})
+    df2 = pd.DataFrame({'foo': []})
+    expected = pd.DataFrame({'foo': [1.0]})
+    result = pd.concat([df1, df2])
+    assert_frame_equal(result, expected)
+
+
+def test_concat_empty_and_non_empty_series_regression():
+    # GH 18187 regression test
+    s1 = pd.Series([1])
+    s2 = pd.Series([])
+    expected = s1
+    result = pd.concat([s1, s2])
+    tm.assert_series_equal(result, expected)
