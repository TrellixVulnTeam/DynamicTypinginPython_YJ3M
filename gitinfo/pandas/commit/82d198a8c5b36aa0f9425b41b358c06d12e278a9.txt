commit 82d198a8c5b36aa0f9425b41b358c06d12e278a9
Author: y-p <yoval@gmx.com>
Date:   Mon Dec 3 02:18:55 2012 +0200

    BLD: New build matrix for Travis
    
    - Moved travis build logic to ci directory.
    - Added testing for 3.3  (with numpy 1.7b2).
    - Prints version strings for all installed components.
    - added FULL_DEPS build for 2.7 and 3.2, which includes
      scipy and matplotlib tests.
    - Made the log less verbose.
    - Travis now shows an "env" columnn.

diff --git a/.travis.yml b/.travis.yml
index ee60f9d7a..0d57f6959 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -3,37 +3,50 @@ language: python
 python:
   - 2.6
   - 2.7
-  - 3.1
+  - 3.1 # travis will soon EOL this
   - 3.2
   - 3.3
 
+env:
+  global:
+    - # need at least this so travis page will show env column
+
 matrix:
   include:
     - python: 2.7
       env: VBENCH=true
+    - python: 2.7
+      env: FULL_DEPS=true
+    - python: 3.2
+      env: FULL_DEPS=true
 
   allow_failures:
-    - python: 3.3 # until travis upgrade to 1.8.4
     - python: 2.7
       env: VBENCH=true
+    - python: 3.2
+      env: FULL_DEPS=true
 
-install:
-  - virtualenv --version
+# allow importing from site-packages,
+# so apt-get python-x works for system pythons
+# That's 2.7/3.2 on Ubuntu 12.04
+virtualenv:
+  system_site_packages: true
+
+before_install:
+  - echo "Waldo1"
+  - echo $VIRTUAL_ENV
   - date
-  - whoami
-  - pwd
-  - echo $VBENCH
-  # install 1.7.0b2 for 3.3, and pull a version of numpy git master
-  # with a alternate fix for detach bug as a temporary workaround
-  # for the others.
-  - 'if [ $TRAVIS_PYTHON_VERSION == "3.3" ]; then pip uninstall numpy; pip install https://github.com/numpy/numpy/archive/v1.7.0b2.tar.gz; fi'
-  - 'if [ $TRAVIS_PYTHON_VERSION == "3.2" ] || [ $TRAVIS_PYTHON_VERSION == "3.1" ]; then pip install https://github.com/y-p/numpy/archive/1.6.2_with_travis_fix.tar.gz; fi'
-  - 'if [ ${TRAVIS_PYTHON_VERSION:0:1} == "2" ]; then pip install numpy; fi' # should be nop if pre-installed
-  - pip install --use-mirrors cython nose pytz python-dateutil xlrd openpyxl;
+  - export PIP_ARGS=-q # comment this this to debug travis install issues
+  - export APT_ARGS=-qq # comment this to debug travis install issues
+  # - set -x # enable this to see bash commands
+  - source ci/before_install.sh # we need to source this to bring in the env
+  - python -V
+
+install:
+  - echo "Waldo2"
+  - ci/install.sh
+  - ci/print_versions.py
 
 script:
-   - python setup.py build_ext install
-   - 'if [ x"$VBENCH" != x"true" ]; then nosetests --exe -w /tmp -A "not slow" pandas; fi'
-   - pwd
-   - 'if [ x"$VBENCH" == x"true" ]; then pip install sqlalchemy git+git://github.com/pydata/vbench.git; python vb_suite/perf_HEAD.py; fi'
-   - python -c "import numpy;print(numpy.version.version)"
+  - echo "Waldo3"
+  - ci/script.sh
diff --git a/ci/before_install.sh b/ci/before_install.sh
new file mode 100755
index 000000000..7b7919a41
--- /dev/null
+++ b/ci/before_install.sh
@@ -0,0 +1,28 @@
+#!/bin/bash
+
+echo "inside $0"
+
+# overview
+if [ ${TRAVIS_PYTHON_VERSION} == "3.3" ]; then
+    sudo add-apt-repository -y ppa:doko/ppa # we get the py3.3 debs from here
+fi
+
+sudo apt-get update $APT_ARGS # run apt-get update for all versions
+
+# hack for broken 3.3 env
+if [ x"$VIRTUAL_ENV" == x"" ]; then
+    VIRTUAL_ENV=~/virtualenv/python$TRAVIS_PYTHON_VERSION_with_system_site_packages;
+fi
+
+# we only recreate the virtualenv for 3.x
+# since the "Detach bug" only affects python3
+# and travis has numpy preinstalled on 2.x which is quicker
+_VENV=$VIRTUAL_ENV # save it
+if [ ${TRAVIS_PYTHON_VERSION:0:1} == "3" ] ; then
+    deactivate # pop out of any venv
+    sudo pip install virtualenv==1.8.4 --upgrade
+    sudo apt-get install $APT_ARGS python3.3 python3.3-dev
+    sudo rm -Rf $_VENV
+    virtualenv -p python$TRAVIS_PYTHON_VERSION $_VENV --system-site-packages;
+    source $_VENV/bin/activate
+fi
diff --git a/ci/install.sh b/ci/install.sh
new file mode 100755
index 000000000..139382960
--- /dev/null
+++ b/ci/install.sh
@@ -0,0 +1,46 @@
+#!/bin/bash
+
+echo "inside $0"
+# Install Dependencies
+
+# Hard Deps
+pip install $PIP_ARGS --use-mirrors cython nose python-dateutil
+
+# try and get numpy as a binary deb
+
+# numpy is preinstalled on 2.x
+# if [ ${TRAVIS_PYTHON_VERSION} == "2.7" ]; then
+#     sudo apt-get $APT_ARGS install python-numpy;
+# fi
+
+if [ ${TRAVIS_PYTHON_VERSION} == "3.2" ]; then
+    sudo apt-get $APT_ARGS install python3-numpy;
+fi
+
+# or else, get it with pip and compile it
+if [ ${TRAVIS_PYTHON_VERSION:0:1} == "2" ] || \
+   [ ${TRAVIS_PYTHON_VERSION}     == "3.1" ] || \
+   [ ${TRAVIS_PYTHON_VERSION}     == "3.2" ]; then
+     pip $PIP_ARGS install numpy; #https://github.com/y-p/numpy/archive/1.6.2_with_travis_fix.tar.gz;
+else
+    pip $PIP_ARGS install https://github.com/numpy/numpy/archive/v1.7.0b2.tar.gz;
+fi
+
+# Optional Deps
+if [ x"$FULL_DEPS" == x"true" ]; then
+    echo "Installing FULL_DEPS"
+    if [ ${TRAVIS_PYTHON_VERSION} == "2.7" ]; then
+        sudo apt-get $APT_ARGS install python-scipy;
+    fi
+
+    if [ ${TRAVIS_PYTHON_VERSION} == "3.2" ]; then
+        sudo apt-get $APT_ARGS install python3-scipy;
+    fi
+
+    pip install $PIP_ARGS --use-mirrors openpyxl pytz matplotlib;
+    pip install $PIP_ARGS --use-mirrors xlrd xlwt;
+fi
+
+if [ x"$VBENCH" == x"true" ]; then
+    pip $PIP_ARGS install sqlalchemy git+git://github.com/pydata/vbench.git;
+fi
diff --git a/ci/print_versions.py b/ci/print_versions.py
new file mode 100755
index 000000000..71539bbcc
--- /dev/null
+++ b/ci/print_versions.py
@@ -0,0 +1,75 @@
+#!/usr/bin/env python
+import sys
+
+print("\nINSTALLED VERSIONS")
+print("------------------")
+print("Python: %d.%d.%d.%s.%s" % sys.version_info[:])
+
+try:
+    import Cython
+    print("Cython: %s" % Cython.__version__)
+except:
+    print("Cython: Not installed")
+
+try:
+    import numpy
+    print("Numpy: %s" % numpy.version.version)
+except:
+    print("Numpy: Not installed")
+
+try:
+    import scipy
+    print("Scipy: %s" % scipy.version.version)
+except:
+    print("Scipy: Not installed")
+
+try:
+    import dateutil
+    print("dateutil: %s" % dateutil.__version__)
+except:
+    print("dateutil: Not installed")
+
+try:
+    import pytz
+    print("pytz: %s" % pytz.VERSION)
+except:
+    print("pytz: Not installed")
+
+try:
+    import tables
+    print("PyTables: %s" % tables.__version__)
+except:
+    print("PyTables: Not Installed")
+
+
+try:
+    import matplotlib
+    print("matplotlib: %s" % matplotlib.__version__)
+except:
+    print("matplotlib: Not installed")
+
+try:
+    import openpyxl
+    print("openpyxl: %s" % openpyxl.__version__)
+except:
+    print("openpyxl: Not installed")
+
+try:
+    import xlrd
+    print("xlrd: %s" % xlrd.__VERSION__)
+except:
+    print("xlrd: Not installed")
+
+try:
+    import xlwt
+    print("xlwt: %s" % xlwt.__VERSION__)
+except:
+    print("xlwt: Not installed")
+
+try:
+    import sqlalchemy
+    print("sqlalchemy: %s" % sqlalchemy.__version__)
+except:
+    print("sqlalchemy: Not installed")
+
+print("\n")
diff --git a/ci/script.sh b/ci/script.sh
new file mode 100755
index 000000000..cc0a00012
--- /dev/null
+++ b/ci/script.sh
@@ -0,0 +1,13 @@
+#!/bin/bash
+
+echo "inside $0"
+
+python setup.py build_ext install
+if [ x"$VBENCH" != x"true" ]; then
+    nosetests --exe -w /tmp -A "not slow" pandas;
+    exit
+fi
+if [ x"$VBENCH" == x"true" ]; then
+    python vb_suite/perf_HEAD.py;
+    exit
+fi
diff --git a/vb_suite/perf_HEAD.py b/vb_suite/perf_HEAD.py
index a5bfa2a12..64406d019 100755
--- a/vb_suite/perf_HEAD.py
+++ b/vb_suite/perf_HEAD.py
@@ -75,11 +75,11 @@ def get_vbench_log(build_url):
         return
 
     s=json.loads(r.read())
-    s=[x for x in s['matrix'] if x['config'].get('env')]
+    s=[x for x in s['matrix'] if x['config'].get('env',{}).get('VBENCH')]
             #s=[x for x in s['matrix']]
     if not s:
         return
-    id=s[0]['id']
+    id=s[0]['id'] # should be just one for now
     r2=urllib2.urlopen("https://api.travis-ci.org/jobs/%s" % id)
     if (not 200 <= r.getcode() < 300):
         return
