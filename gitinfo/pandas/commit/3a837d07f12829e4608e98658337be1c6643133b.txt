commit 3a837d07f12829e4608e98658337be1c6643133b
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Tue May 17 14:30:14 2011 -0400

    major/minor xs

diff --git a/pandas/core/panel.py b/pandas/core/panel.py
index 147c926ec..bd513c3c5 100644
--- a/pandas/core/panel.py
+++ b/pandas/core/panel.py
@@ -540,37 +540,37 @@ class WidePanel(Panel, Groupable):
 
     def major_xs(self, key):
         """
+        Return slice of panel along major axis
+
         Parameters
         ----------
+        key : object
+            Major axis label
 
         Returns
         -------
         y : DataMatrix
             index -> minor axis, columns -> items
         """
-        try:
-            loc = self.major_axis.indexMap[key]
-        except KeyError:
-            raise KeyError('%s not contained in major axis!' % key)
-
+        loc = self.major_axis.indexMap[key]
         mat = np.array(self.values[:, loc, :].T)
         return DataMatrix(mat, index=self.minor_axis, columns=self.items)
 
     def minor_xs(self, key):
         """
+        Return slice of panel along minor axis
+
         Parameters
         ----------
+        key : object
+            Minor axis label
 
         Returns
         -------
         y : DataMatrix
             index -> major axis, columns -> items
         """
-        try:
-            loc = self.minor_axis.indexMap[key]
-        except KeyError:
-            raise KeyError('%s not contained in minor axis!' % key)
-
+        loc = self.minor_axis.indexMap[key]
         mat = np.array(self.values[:, :, loc].T)
         return DataMatrix(mat, index=self.major_axis, columns=self.items)
 
diff --git a/pandas/core/sparse.py b/pandas/core/sparse.py
index 52f4cad88..ffc75a115 100644
--- a/pandas/core/sparse.py
+++ b/pandas/core/sparse.py
@@ -1085,40 +1085,40 @@ class SparseWidePanel(WidePanel):
 
     def major_xs(self, key):
         """
+        Return slice of panel along major axis
+
         Parameters
         ----------
+        key : object
+            Major axis label
 
         Returns
         -------
         y : DataMatrix
             index -> minor axis, columns -> items
         """
-        try:
-            loc = self.major_axis.indexMap[key]
-        except KeyError:
-            raise KeyError('%s not contained in major axis!' % key)
-
-        mat = np.array(self.values[:, loc, :].T)
-        return DataMatrix(mat, index=self.minor_axis, columns=self.items)
+        slices = dict((k, v.xs(key)) for k, v in self.iteritems())
+        return DataMatrix(slices, index=self.minor_axis, columns=self.items)
 
     def minor_xs(self, key):
         """
+        Return slice of panel along minor axis
+
         Parameters
         ----------
+        key : object
+            Minor axis label
 
         Returns
         -------
-        y : DataMatrix
+        y : SparseDataFrame
             index -> major axis, columns -> items
         """
-        try:
-            loc = self.minor_axis.indexMap[key]
-        except KeyError:
-            raise KeyError('%s not contained in minor axis!' % key)
-
-        mat = np.array(self.values[:, :, loc].T)
-        return DataMatrix(mat, index=self.major_axis, columns=self.items)
-
+        slices = dict((k, v[key]) for k, v in self.iteritems())
+        return SparseDataFrame(slices, index=self.major_axis,
+                               columns=self.items,
+                               default_fill_value=self.default_fill_value,
+                               default_kind=self.default_kind)
 
 def _convert_frames(frames, index, columns, fill_value=nan, kind='block'):
     from pandas.core.panel import _get_combined_index, _get_combined_columns
@@ -1144,3 +1144,4 @@ def _convert_frames(frames, index, columns, fill_value=nan, kind='block'):
             output[item] = df.reindex(index=index, columns=columns)
 
     return output, index, columns
+
diff --git a/pandas/core/tests/test_sparse.py b/pandas/core/tests/test_sparse.py
index 2e7c66bb0..2adb51f11 100644
--- a/pandas/core/tests/test_sparse.py
+++ b/pandas/core/tests/test_sparse.py
@@ -972,10 +972,26 @@ class TestSparseWidePanel(TestCase):
         pass
 
     def test_major_xs(self):
-        pass
+        def _dense_comp(sparse):
+            dense = sparse.to_dense()
+
+            for idx in sparse.major_axis:
+                dslice = dense.major_xs(idx)
+                sslice = sparse.major_xs(idx)
+                assert_frame_equal(dslice, sslice)
+
+        _dense_comp(self.panel)
 
     def test_minor_xs(self):
-        pass
+        def _dense_comp(sparse):
+            dense = sparse.to_dense()
+
+            for idx in sparse.minor_axis:
+                dslice = dense.minor_xs(idx)
+                sslice = sparse.minor_xs(idx).to_dense()
+                assert_frame_equal(dslice, sslice)
+
+        _dense_comp(self.panel)
 
 if __name__ == '__main__':
     import nose
