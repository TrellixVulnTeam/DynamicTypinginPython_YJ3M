commit 337bae4a4010cc9de325163d184df845c819966f
Author: jreback <jeff@reback.net>
Date:   Fri Jul 18 10:00:21 2014 -0400

    BUG: Bug in Series 0-division with a float and integer operand dtypes  (GH7785)

diff --git a/doc/source/v0.15.0.txt b/doc/source/v0.15.0.txt
index eb58f46f0..ca24eb3f9 100644
--- a/doc/source/v0.15.0.txt
+++ b/doc/source/v0.15.0.txt
@@ -184,7 +184,7 @@ There are no experimental changes in 0.15.0
 
 Bug Fixes
 ~~~~~~~~~
-
+- Bug in Series 0-division with a float and integer operand dtypes  (:issue:`7785`)
 - Bug in ``Series.astype("unicode")`` not calling ``unicode`` on the values correctly (:issue:`7758`)
 - Bug in ``DataFrame.as_matrix()`` with mixed ``datetime64[ns]`` and ``timedelta64[ns]`` dtypes (:issue:`7778`)
 
diff --git a/pandas/core/common.py b/pandas/core/common.py
index 1a57c9c33..04c5140d6 100644
--- a/pandas/core/common.py
+++ b/pandas/core/common.py
@@ -1328,7 +1328,7 @@ def _fill_zeros(result, x, y, name, fill):
                 # correctly
                 # GH 6178
                 if np.isinf(fill):
-                    np.putmask(result,signs<0 & mask, -fill)
+                    np.putmask(result,(signs<0) & mask, -fill)
 
                 result = result.reshape(shape)
 
diff --git a/pandas/tests/test_series.py b/pandas/tests/test_series.py
index fda0abe07..e56da6c65 100644
--- a/pandas/tests/test_series.py
+++ b/pandas/tests/test_series.py
@@ -2362,6 +2362,17 @@ class TestSeries(tm.TestCase, CheckNameIntegration):
         expected = Series([np.nan,np.inf,-np.inf])
         assert_series_equal(result, expected)
 
+        # float/integer issue
+        # GH 7785
+        p = DataFrame({'first': (1,0), 'second': (-0.01,-0.02)})
+        expected = Series([-0.01,-np.inf])
+
+        result = p['second'].div(p['first'])
+        assert_series_equal(result, expected)
+
+        result = p['second'] / p['first']
+        assert_series_equal(result, expected)
+
     def test_operators(self):
 
         def _check_op(series, other, op, pos_only=False):
@@ -4865,12 +4876,12 @@ class TestSeries(tm.TestCase, CheckNameIntegration):
         test_series = [
             Series([digits * 10, tm.rands(63), tm.rands(64), tm.rands(1000)]),
             Series([u"データーサイエンス、お前はもう死んでいる"]),
-            
+
         ]
-        
+
         former_encoding = None
         if not compat.PY3:
-            # in python we can force the default encoding 
+            # in python we can force the default encoding
             # for this test
             former_encoding = sys.getdefaultencoding()
             reload(sys)
