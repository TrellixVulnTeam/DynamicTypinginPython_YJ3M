commit 85d982d18bea56c892607d2c434b20ead2d5a3ed
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Sat Oct 27 10:54:01 2012 -0400

    ENH: tweak implementation of Timestamp.__richcmp__ to be faster

diff --git a/pandas/src/datetime.pyx b/pandas/src/datetime.pyx
index 8c497bf5f..1fe36d950 100644
--- a/pandas/src/datetime.pyx
+++ b/pandas/src/datetime.pyx
@@ -389,7 +389,11 @@ cdef class _Timestamp(datetime):
 
         if isinstance(other, _Timestamp):
             ots = other
-        elif isinstance(other, datetime):
+        elif type(other) is datetime:
+            if self.nanosecond == 0:
+                val = self.to_datetime()
+                return PyObject_RichCompareBool(val, other, op)
+
             try:
                 ots = Timestamp(other)
             except ValueError:
@@ -458,10 +462,14 @@ cdef class _Timestamp(datetime):
             raise Exception('Cannot compare tz-naive and tz-aware timestamps')
 
     cpdef to_datetime(self):
-        return datetime(self.year, self.month, self.day,
-                        self.hour, self.minute, self.second,
-                        self.microsecond, tzinfo=self.tzinfo)
-
+        cdef:
+            pandas_datetimestruct dts
+            _TSObject ts
+        ts = convert_to_tsobject(self, self.tzinfo)
+        dts = ts.dts
+        return datetime(dts.year, dts.month, dts.day,
+                        dts.hour, dts.min, dts.sec,
+                        dts.us, ts.tzinfo)
 
     def __add__(self, other):
         if is_integer_object(other):
@@ -786,7 +794,7 @@ def array_to_datetime(ndarray[object] values, raise_=False, dayfirst=False,
         iresult = result.view('i8')
         for i in range(n):
             val = values[i]
-            if util._checknull(val):
+            if util._checknull(val) or val is NaT:
                 iresult[i] = iNaT
             elif PyDateTime_Check(val):
                 if val.tzinfo is not None:
diff --git a/pandas/src/util.pxd b/pandas/src/util.pxd
index fe6e4391c..a77e2cdef 100644
--- a/pandas/src/util.pxd
+++ b/pandas/src/util.pxd
@@ -1,5 +1,6 @@
 from numpy cimport ndarray
 cimport numpy as cnp
+cimport cpython
 
 cdef extern from "numpy_helper.h":
     inline void set_array_owndata(ndarray ao)
@@ -61,7 +62,7 @@ cdef inline is_array(object o):
 
 cdef inline bint _checknull(object val):
     try:
-        return bool(val is None or val != val)
+        return val is None or (cpython.PyFloat_Check(val) and val != val)
     except ValueError:
         return False
 
