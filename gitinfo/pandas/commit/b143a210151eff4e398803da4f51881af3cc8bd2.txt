commit b143a210151eff4e398803da4f51881af3cc8bd2
Author: lexual <lex@jbadigital.com>
Date:   Sun Jan 20 10:35:32 2013 +1100

    ENH: value_counts() can now compute relative frequencies.

diff --git a/pandas/core/algorithms.py b/pandas/core/algorithms.py
index 413923262..4bb990a57 100644
--- a/pandas/core/algorithms.py
+++ b/pandas/core/algorithms.py
@@ -147,7 +147,7 @@ def factorize(values, sort=False, order=None, na_sentinel=-1):
     return labels, uniques
 
 
-def value_counts(values, sort=True, ascending=False):
+def value_counts(values, sort=True, ascending=False, normalize=False):
     """
     Compute a histogram of the counts of non-null values
 
@@ -158,6 +158,8 @@ def value_counts(values, sort=True, ascending=False):
         Sort by values
     ascending : boolean, default False
         Sort in ascending order
+    normalize: boolean, default False
+        If True then compute a relative histogram
 
     Returns
     -------
@@ -190,6 +192,9 @@ def value_counts(values, sort=True, ascending=False):
         if not ascending:
             result = result[::-1]
 
+    if normalize:
+        result = result / float(values.size)
+
     return result
 
 
diff --git a/pandas/core/series.py b/pandas/core/series.py
index 2870bb1ab..c6fe396b0 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -1379,18 +1379,25 @@ class Series(pa.Array, generic.PandasObject):
 
         return notnull(self.values).sum()
 
-    def value_counts(self):
+    def value_counts(self, normalize=False):
         """
         Returns Series containing counts of unique values. The resulting Series
         will be in descending order so that the first element is the most
         frequently-occurring element. Excludes NA values
 
+        Parameters
+        ----------
+        normalize: boolean, default False
+            If True then the Series returned will contain the relative
+            frequencies of the unique values.
+
         Returns
         -------
         counts : Series
         """
         from pandas.core.algorithms import value_counts
-        return value_counts(self.values, sort=True, ascending=False)
+        return value_counts(self.values, sort=True, ascending=False,
+                            normalize=normalize)
 
     def unique(self):
         """
diff --git a/pandas/tests/test_series.py b/pandas/tests/test_series.py
index cef309fd5..74b41f4ef 100644
--- a/pandas/tests/test_series.py
+++ b/pandas/tests/test_series.py
@@ -2383,6 +2383,11 @@ class TestSeries(unittest.TestCase, CheckNameIntegration):
         expected = Series([4, 3, 2, 1], index=['b', 'a', 'd', 'c'])
         assert_series_equal(hist, expected)
 
+        # relative histogram.
+        hist = s.value_counts(normalize=True)
+        expected = Series([.4, .3, .2, .1], index=['b', 'a', 'd', 'c'])
+        assert_series_equal(hist, expected)
+
         self.assertEquals(s.nunique(), 4)
 
         # handle NA's properly
