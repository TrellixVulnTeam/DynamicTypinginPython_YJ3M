commit 1b777aa3efb2c7ed812b92e4668526b3de4cc448
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Fri Feb 17 19:20:18 2012 -0500

    TST: test for #779, try to return string

diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 1304f98b2..39ba9c2a1 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -1040,7 +1040,13 @@ class DataFrame(NDFrame):
         formatter.to_string(force_unicode=force_unicode)
 
         if buf is None:
-            return formatter.buf.getvalue()
+            result = formatter.buf.getvalue()
+            if not force_unicode:
+                try:
+                    result = str(result)
+                except ValueError:
+                    pass
+            return result
 
     @Appender(fmt.docstring_to_string, indents=1)
     def to_html(self, buf=None, columns=None, col_space=None, colSpace=None,
diff --git a/pandas/tests/test_format.py b/pandas/tests/test_format.py
index ad8237943..540f9b644 100644
--- a/pandas/tests/test_format.py
+++ b/pandas/tests/test_format.py
@@ -233,6 +233,19 @@ class TestDataFrameFormatting(unittest.TestCase):
                         '1  2.512000e-01')
         assert(df_s == expected)
 
+    def test_to_string_int_formatting(self):
+        df = DataFrame({'x' : [-15, 20, 25, -35]})
+        self.assert_(issubclass(df['x'].dtype.type, np.integer))
+
+        output = df.to_string()
+        self.assert_(isinstance(output, str))
+        expected = ('    x\n'
+                    '0 -15\n'
+                    '1  20\n'
+                    '2  25\n'
+                    '3 -35')
+        self.assertEqual(output, expected)
+
     def test_to_string_left_justify_cols(self):
         fmt.reset_printoptions()
         df = DataFrame({'x' : [3234, 0.253]})
