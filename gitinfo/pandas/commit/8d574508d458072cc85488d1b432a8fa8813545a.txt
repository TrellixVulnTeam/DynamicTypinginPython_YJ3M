commit 8d574508d458072cc85488d1b432a8fa8813545a
Author: Jeff Reback <jeff@reback.net>
Date:   Tue Feb 7 11:13:29 2017 -0500

    TST: remove __main__ from all test files (#15330)

diff --git a/pandas/api/tests/test_api.py b/pandas/api/tests/test_api.py
index 410d70c65..f925fd792 100644
--- a/pandas/api/tests/test_api.py
+++ b/pandas/api/tests/test_api.py
@@ -227,8 +227,3 @@ class TestDatetools(tm.TestCase):
         with tm.assert_produces_warning(FutureWarning,
                                         check_stacklevel=False):
             pd.datetools.monthEnd
-
-if __name__ == '__main__':
-    import nose
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/computation/tests/test_compat.py b/pandas/computation/tests/test_compat.py
index 8e8924379..900dd2c28 100644
--- a/pandas/computation/tests/test_compat.py
+++ b/pandas/computation/tests/test_compat.py
@@ -61,8 +61,3 @@ def check_invalid_numexpr_version(engine, parser):
                 testit()
     else:
         testit()
-
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/computation/tests/test_eval.py b/pandas/computation/tests/test_eval.py
index 3a446bfc3..dbac72c61 100644
--- a/pandas/computation/tests/test_eval.py
+++ b/pandas/computation/tests/test_eval.py
@@ -1977,8 +1977,3 @@ class TestValidate(tm.TestCase):
         for value in invalid_values:
             with self.assertRaises(ValueError):
                 pd.eval("2+2", inplace=value)
-
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index cf3060340..cc81c6610 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -5762,8 +5762,3 @@ DataFrame.boxplot = boxplot
 
 ops.add_flex_arithmetic_methods(DataFrame, **ops.frame_flex_funcs)
 ops.add_special_arithmetic_methods(DataFrame, **ops.frame_special_funcs)
-
-if __name__ == '__main__':
-    import nose
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/formats/format.py b/pandas/formats/format.py
index adfb54c02..3bac7d282 100644
--- a/pandas/formats/format.py
+++ b/pandas/formats/format.py
@@ -2679,17 +2679,3 @@ def _binify(cols, line_width):
 
     bins.append(len(cols))
     return bins
-
-
-if __name__ == '__main__':
-    arr = np.array([746.03, 0.00, 5620.00, 1592.36])
-    # arr = np.array([11111111.1, 1.55])
-    # arr = [314200.0034, 1.4125678]
-    arr = np.array(
-        [327763.3119, 345040.9076, 364460.9915, 398226.8688, 383800.5172,
-         433442.9262, 539415.0568, 568590.4108, 599502.4276, 620921.8593,
-         620898.5294, 552427.1093, 555221.2193, 519639.7059, 388175.7,
-         379199.5854, 614898.25, 504833.3333, 560600., 941214.2857, 1134250.,
-         1219550., 855736.85, 1042615.4286, 722621.3043, 698167.1818, 803750.])
-    fmt = FloatArrayFormatter(arr, digits=7)
-    print(fmt.get_result())
diff --git a/pandas/io/tests/json/test_normalize.py b/pandas/io/tests/json/test_normalize.py
index e5aba4364..c60b81ffe 100644
--- a/pandas/io/tests/json/test_normalize.py
+++ b/pandas/io/tests/json/test_normalize.py
@@ -1,5 +1,3 @@
-import nose
-
 from pandas import DataFrame
 import numpy as np
 import json
@@ -283,8 +281,3 @@ class TestNestedToRecord(tm.TestCase):
                                 ['general', 'trade_version']],
                           errors='raise'
                           )
-
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb',
-                         '--pdb-failure', '-s'], exit=False)
diff --git a/pandas/io/tests/json/test_pandas.py b/pandas/io/tests/json/test_pandas.py
index 345d181a0..ee5039c38 100644
--- a/pandas/io/tests/json/test_pandas.py
+++ b/pandas/io/tests/json/test_pandas.py
@@ -1044,8 +1044,3 @@ DataFrame\\.index values are different \\(100\\.0 %\\)
 
         for s in examples:
             roundtrip(s)
-
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb',
-                         '--pdb-failure', '-s'], exit=False)
diff --git a/pandas/io/tests/json/test_ujson.py b/pandas/io/tests/json/test_ujson.py
index 704023bd8..3da61b769 100644
--- a/pandas/io/tests/json/test_ujson.py
+++ b/pandas/io/tests/json/test_ujson.py
@@ -1611,8 +1611,3 @@ class PandasJSONTests(TestCase):
 
 def _clean_dict(d):
     return dict((str(k), v) for k, v in compat.iteritems(d))
-
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/io/tests/parser/test_network.py b/pandas/io/tests/parser/test_network.py
index d84c2ae3b..e06f94c78 100644
--- a/pandas/io/tests/parser/test_network.py
+++ b/pandas/io/tests/parser/test_network.py
@@ -182,7 +182,3 @@ class TestS3(tm.TestCase):
         # It's irrelevant here that this isn't actually a table.
         with tm.assertRaises(IOError):
             read_csv('s3://cant_get_it/')
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/io/tests/parser/test_parsers.py b/pandas/io/tests/parser/test_parsers.py
index a90f546d3..93b5fdcff 100644
--- a/pandas/io/tests/parser/test_parsers.py
+++ b/pandas/io/tests/parser/test_parsers.py
@@ -1,7 +1,6 @@
 # -*- coding: utf-8 -*-
 
 import os
-import nose
 
 import pandas.util.testing as tm
 
@@ -99,7 +98,3 @@ class TestPythonParser(BaseParser, PythonParserTests, tm.TestCase):
         kwds = kwds.copy()
         kwds['engine'] = self.engine
         return read_table(*args, **kwds)
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/io/tests/parser/test_textreader.py b/pandas/io/tests/parser/test_textreader.py
index 98cb09cd8..0e91ca806 100644
--- a/pandas/io/tests/parser/test_textreader.py
+++ b/pandas/io/tests/parser/test_textreader.py
@@ -10,7 +10,6 @@ from pandas import compat
 
 import os
 import sys
-import nose
 
 from numpy import nan
 import numpy as np
@@ -402,7 +401,3 @@ a,b,c
 def assert_array_dicts_equal(left, right):
     for k, v in compat.iteritems(left):
         assert(np.array_equal(v, right[k]))
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/io/tests/parser/test_unsupported.py b/pandas/io/tests/parser/test_unsupported.py
index 4d93df16a..e941c9186 100644
--- a/pandas/io/tests/parser/test_unsupported.py
+++ b/pandas/io/tests/parser/test_unsupported.py
@@ -9,8 +9,6 @@ Ultimately, the goal is to remove test cases from this
 test suite as new feature support is added to the parsers.
 """
 
-import nose
-
 import pandas.io.parsers as parsers
 import pandas.util.testing as tm
 
@@ -142,7 +140,3 @@ class TestDeprecatedFeatures(tm.TestCase):
                     kwargs = {arg: non_default_val}
                     read_csv(StringIO(data), engine=engine,
                              **kwargs)
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/io/tests/test_date_converters.py b/pandas/io/tests/test_date_converters.py
index 99abbacb6..5b54925c6 100644
--- a/pandas/io/tests/test_date_converters.py
+++ b/pandas/io/tests/test_date_converters.py
@@ -1,8 +1,6 @@
 from pandas.compat import StringIO
 from datetime import date, datetime
 
-import nose
-
 import numpy as np
 
 from pandas import DataFrame, MultiIndex
@@ -150,7 +148,3 @@ date,time,prn,rxstatus
                          [621, ' ']]
         expected = DataFrame(expected_data, columns=['case', 'opdate'])
         assert_frame_equal(result, expected)
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/io/tests/test_excel.py b/pandas/io/tests/test_excel.py
index 12aecfd50..2791e397d 100644
--- a/pandas/io/tests/test_excel.py
+++ b/pandas/io/tests/test_excel.py
@@ -2325,8 +2325,3 @@ class ExcelWriterEngineTests(tm.TestCase):
             check_called(lambda: panel.to_excel('something.test'))
             check_called(lambda: df.to_excel('something.xlsx'))
             check_called(lambda: df.to_excel('something.xls', engine='dummy'))
-
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/io/tests/test_feather.py b/pandas/io/tests/test_feather.py
index b8b85d7db..dcb057ec3 100644
--- a/pandas/io/tests/test_feather.py
+++ b/pandas/io/tests/test_feather.py
@@ -116,8 +116,3 @@ class TestFeather(tm.TestCase):
         df.index = [0, 1, 2]
         df.columns = pd.MultiIndex.from_tuples([('a', 1), ('a', 2), ('b', 1)]),
         self.check_error_on_write(df, ValueError)
-
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/io/tests/test_gbq.py b/pandas/io/tests/test_gbq.py
index 8a414dcd3..ac481a44d 100644
--- a/pandas/io/tests/test_gbq.py
+++ b/pandas/io/tests/test_gbq.py
@@ -1224,7 +1224,3 @@ class TestToGBQIntegrationServiceAccountKeyContents(tm.TestCase):
             project_id=_get_project_id(),
             private_key=_get_private_key_contents())
         self.assertEqual(result['NUM_ROWS'][0], test_size)
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/io/tests/test_html.py b/pandas/io/tests/test_html.py
index 9ac8def3a..356adb928 100644
--- a/pandas/io/tests/test_html.py
+++ b/pandas/io/tests/test_html.py
@@ -918,7 +918,3 @@ def test_same_ordering():
     dfs_lxml = read_html(filename, index_col=0, flavor=['lxml'])
     dfs_bs4 = read_html(filename, index_col=0, flavor=['bs4'])
     assert_framelist_equal(dfs_lxml, dfs_bs4)
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/io/tests/test_pickle.py b/pandas/io/tests/test_pickle.py
index a49f50b1b..b5c316b32 100644
--- a/pandas/io/tests/test_pickle.py
+++ b/pandas/io/tests/test_pickle.py
@@ -283,9 +283,3 @@ class TestPickle():
         # with open(pickle_path, 'wb') as f: pickle.dump(cat, f)
         #
         tm.assert_categorical_equal(cat, pd.read_pickle(pickle_path))
-
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   # '--with-coverage', '--cover-package=pandas.core'],
-                   exit=False)
diff --git a/pandas/io/tests/test_pytables.py b/pandas/io/tests/test_pytables.py
index 40db10c42..f4f03856f 100644
--- a/pandas/io/tests/test_pytables.py
+++ b/pandas/io/tests/test_pytables.py
@@ -5516,9 +5516,3 @@ def _test_sort(obj):
         return obj.reindex(major=sorted(obj.major_axis))
     else:
         raise ValueError('type not supported here')
-
-
-if __name__ == '__main__':
-    import nose
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/io/tests/test_s3.py b/pandas/io/tests/test_s3.py
index 8058698a9..2983fa647 100644
--- a/pandas/io/tests/test_s3.py
+++ b/pandas/io/tests/test_s3.py
@@ -1,14 +1,10 @@
-import nose
 from pandas.util import testing as tm
 
 from pandas.io.common import _is_s3_url
 
 
 class TestS3URL(tm.TestCase):
+
     def test_is_s3_url(self):
         self.assertTrue(_is_s3_url("s3://pandas/somethingelse.com"))
         self.assertFalse(_is_s3_url("s4://pandas/somethingelse.com"))
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/io/tests/test_sql.py b/pandas/io/tests/test_sql.py
index 9e639f7ef..4bcde7640 100644
--- a/pandas/io/tests/test_sql.py
+++ b/pandas/io/tests/test_sql.py
@@ -2658,8 +2658,3 @@ class TestXMySQL(MySQLMixIn, tm.TestCase):
         self.assertEqual(tquery(sql_select, con=self.conn),
                          [(1, 'A'), (2, 'B'), (3, 'C'), (4, 'D'), (5, 'E')])
         clean_up(table_name)
-
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/io/tests/test_stata.py b/pandas/io/tests/test_stata.py
index 8cfd5d98f..fcb935925 100644
--- a/pandas/io/tests/test_stata.py
+++ b/pandas/io/tests/test_stata.py
@@ -1276,8 +1276,3 @@ class TestStata(tm.TestCase):
                 original.to_stata(path)
             tm.assertTrue('ColumnTooBig' in cm.exception)
             tm.assertTrue('infinity' in cm.exception)
-
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/sparse/tests/test_array.py b/pandas/sparse/tests/test_array.py
index 592926f8e..55f292a8a 100644
--- a/pandas/sparse/tests/test_array.py
+++ b/pandas/sparse/tests/test_array.py
@@ -810,9 +810,3 @@ class TestSparseArrayAnalytics(tm.TestCase):
         sparse = SparseArray([1, -1, 0, -2], fill_value=0)
         result = SparseArray([2, 0, 1, -1], fill_value=1)
         tm.assert_sp_array_equal(np.add(sparse, 1), result)
-
-
-if __name__ == '__main__':
-    import nose
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/sparse/tests/test_combine_concat.py b/pandas/sparse/tests/test_combine_concat.py
index fcdc6d958..5240d5928 100644
--- a/pandas/sparse/tests/test_combine_concat.py
+++ b/pandas/sparse/tests/test_combine_concat.py
@@ -1,6 +1,5 @@
 # pylint: disable-msg=E1101,W0612
 
-import nose  # noqa
 import numpy as np
 import pandas as pd
 import pandas.util.testing as tm
@@ -356,9 +355,3 @@ class TestSparseDataFrameConcat(tm.TestCase):
         exp = pd.concat([self.dense1, self.dense3], axis=1)
         self.assertIsInstance(res, pd.SparseDataFrame)
         tm.assert_frame_equal(res, exp)
-
-
-if __name__ == '__main__':
-    import nose  # noqa
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/sparse/tests/test_frame.py b/pandas/sparse/tests/test_frame.py
index 23bb82797..e26c0ed1a 100644
--- a/pandas/sparse/tests/test_frame.py
+++ b/pandas/sparse/tests/test_frame.py
@@ -1193,8 +1193,3 @@ class TestSparseDataFrameAnalytics(tm.TestCase):
                  'std', 'min', 'max']
         for func in funcs:
             getattr(np, func)(self.frame)
-
-if __name__ == '__main__':
-    import nose
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/sparse/tests/test_libsparse.py b/pandas/sparse/tests/test_libsparse.py
index c289b4a1b..b3aa3368e 100644
--- a/pandas/sparse/tests/test_libsparse.py
+++ b/pandas/sparse/tests/test_libsparse.py
@@ -1,6 +1,6 @@
 from pandas import Series
 
-import nose  # noqa
+import nose
 import numpy as np
 import operator
 import pandas.util.testing as tm
@@ -196,7 +196,7 @@ class TestSparseIndexIntersect(tm.TestCase):
             assert (result.equals(expected))
 
         def _check_length_exc(a, longer):
-            nose.tools.assert_raises(Exception, a.intersect, longer)
+            self.assertRaises(Exception, a.intersect, longer)
 
         def _check_case(xloc, xlen, yloc, ylen, eloc, elen):
             xindex = BlockIndex(TEST_LENGTH, xloc, xlen)
@@ -585,9 +585,3 @@ for op in check_ops:
     g = make_optestf(op)
     setattr(TestSparseOperators, g.__name__, g)
     del g
-
-
-if __name__ == '__main__':
-    import nose  # noqa
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/sparse/tests/test_list.py b/pandas/sparse/tests/test_list.py
index b117685b6..458681cdc 100644
--- a/pandas/sparse/tests/test_list.py
+++ b/pandas/sparse/tests/test_list.py
@@ -112,9 +112,3 @@ class TestSparseList(unittest.TestCase):
             for i in range(len(arr)):
                 tm.assert_almost_equal(splist[i], arr[i])
                 tm.assert_almost_equal(splist[-i], arr[-i])
-
-
-if __name__ == '__main__':
-    import nose
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/sparse/tests/test_series.py b/pandas/sparse/tests/test_series.py
index 06d76bdd4..b34f5dd2c 100644
--- a/pandas/sparse/tests/test_series.py
+++ b/pandas/sparse/tests/test_series.py
@@ -1366,9 +1366,3 @@ class TestSparseSeriesAnalytics(tm.TestCase):
         for func in funcs:
             for series in ('bseries', 'zbseries'):
                 getattr(np, func)(getattr(self, series))
-
-
-if __name__ == '__main__':
-    import nose
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/stats/tests/test_fama_macbeth.py b/pandas/stats/tests/test_fama_macbeth.py
index 706becfa7..0c9fcf775 100644
--- a/pandas/stats/tests/test_fama_macbeth.py
+++ b/pandas/stats/tests/test_fama_macbeth.py
@@ -66,8 +66,3 @@ class TestFamaMacBeth(BaseTest):
 
         # does it work?
         result.summary
-
-if __name__ == '__main__':
-    import nose
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/stats/tests/test_math.py b/pandas/stats/tests/test_math.py
index bc09f33d2..3f89dbcd2 100644
--- a/pandas/stats/tests/test_math.py
+++ b/pandas/stats/tests/test_math.py
@@ -57,7 +57,3 @@ class TestMath(tm.TestCase):
         rs = pmath.inv(singular)
         expected = np.array([[0.1, 0.2], [0.1, 0.2]])
         self.assertTrue(np.allclose(rs, expected))
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/stats/tests/test_ols.py b/pandas/stats/tests/test_ols.py
index 2935f986c..09fa21d58 100644
--- a/pandas/stats/tests/test_ols.py
+++ b/pandas/stats/tests/test_ols.py
@@ -974,9 +974,3 @@ class TestOLSFilter(tm.TestCase):
 
     def tsAssertEqual(self, ts1, ts2, **kwargs):
         self.assert_series_equal(ts1, ts2, **kwargs)
-
-
-if __name__ == '__main__':
-    import nose
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/stats/tests/test_var.py b/pandas/stats/tests/test_var.py
index 9f2c95a2d..04e2019f0 100644
--- a/pandas/stats/tests/test_var.py
+++ b/pandas/stats/tests/test_var.py
@@ -6,7 +6,6 @@ import pandas.util.testing as tm
 
 from pandas.compat import range
 import nose
-import unittest
 
 raise nose.SkipTest('skipping this for now')
 
@@ -93,7 +92,3 @@ class Foo(object):
         self.res1 = VAR2(endog=data).fit(maxlag=2)
         from results import results_var
         self.res2 = results_var.MacrodataResults()
-
-
-if __name__ == '__main__':
-    unittest.main()
diff --git a/pandas/tests/formats/test_format.py b/pandas/tests/formats/test_format.py
index 9eff64b40..7a2c5f3b7 100644
--- a/pandas/tests/formats/test_format.py
+++ b/pandas/tests/formats/test_format.py
@@ -4999,8 +4999,3 @@ def test_format_percentiles():
     tm.assertRaises(ValueError, fmt.format_percentiles, [-0.001, 0.1, 0.5])
     tm.assertRaises(ValueError, fmt.format_percentiles, [2, 0.1, 0.5])
     tm.assertRaises(ValueError, fmt.format_percentiles, [0.1, 0.5, 'a'])
-
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/tests/formats/test_printing.py b/pandas/tests/formats/test_printing.py
index 3bcceca1f..d1eb1faec 100644
--- a/pandas/tests/formats/test_printing.py
+++ b/pandas/tests/formats/test_printing.py
@@ -1,5 +1,4 @@
 # -*- coding: utf-8 -*-
-import nose
 from pandas import compat
 import pandas.formats.printing as printing
 import pandas.formats.format as fmt
@@ -135,8 +134,3 @@ c        ff         いいい"""
 #         result = printing.console_encode(u"\u05d0")
 #         expected = u"\u05d0".encode('utf-8')
 #         assert (result == expected)
-
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/tests/frame/test_analytics.py b/pandas/tests/frame/test_analytics.py
index 5d5130636..0dbb78ec8 100644
--- a/pandas/tests/frame/test_analytics.py
+++ b/pandas/tests/frame/test_analytics.py
@@ -2202,7 +2202,3 @@ class TestDataFrameAnalytics(tm.TestCase, TestData):
 
         with tm.assertRaisesRegexp(ValueError, 'aligned'):
             df.dot(df2)
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/tests/frame/test_asof.py b/pandas/tests/frame/test_asof.py
index f68219120..323960d54 100644
--- a/pandas/tests/frame/test_asof.py
+++ b/pandas/tests/frame/test_asof.py
@@ -1,7 +1,5 @@
 # coding=utf-8
 
-import nose
-
 import numpy as np
 from pandas import (DataFrame, date_range, Timestamp, Series,
                     to_datetime)
@@ -84,7 +82,3 @@ class TestFrameAsof(TestData, tm.TestCase):
         expected = DataFrame(index=to_datetime(['1989-12-31']),
                              columns=['A', 'B'], dtype='float64')
         assert_frame_equal(result, expected)
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/tests/frame/test_constructors.py b/pandas/tests/frame/test_constructors.py
index fe6a12fcc..1676c57a2 100644
--- a/pandas/tests/frame/test_constructors.py
+++ b/pandas/tests/frame/test_constructors.py
@@ -7,7 +7,6 @@ import functools
 import itertools
 
 import nose
-
 from numpy.random import randn
 
 import numpy as np
@@ -1945,10 +1944,3 @@ class TestDataFrameConstructorWithDatetimeTZ(tm.TestCase, TestData):
         result['index'].dtype == 'M8[ns]'
 
         result = df.to_records(index=False)
-
-
-if __name__ == '__main__':
-    import nose  # noqa
-
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/tests/frame/test_indexing.py b/pandas/tests/frame/test_indexing.py
index 7d68eac47..f0e6ab4c1 100644
--- a/pandas/tests/frame/test_indexing.py
+++ b/pandas/tests/frame/test_indexing.py
@@ -2954,9 +2954,3 @@ class TestDataFrameIndexingUInt64(tm.TestCase, TestData):
         expected = DataFrame(self.df.values.T)
         expected.index = ['A', 'B']
         assert_frame_equal(result, expected)
-
-
-if __name__ == '__main__':
-    import nose
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/tests/frame/test_misc_api.py b/pandas/tests/frame/test_misc_api.py
index f5719fa1d..2fc14d9e4 100644
--- a/pandas/tests/frame/test_misc_api.py
+++ b/pandas/tests/frame/test_misc_api.py
@@ -4,7 +4,6 @@ from __future__ import print_function
 # pylint: disable-msg=W0612,E1101
 from copy import deepcopy
 import sys
-import nose
 from distutils.version import LooseVersion
 
 from pandas.compat import range, lrange
@@ -486,8 +485,3 @@ class TestDataFrameMisc(tm.TestCase, SharedWithSparse, TestData):
         # rename
         f = lambda x: x.rename({1: 'foo'}, inplace=True)
         _check_f(d.copy(), f)
-
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/tests/frame/test_missing.py b/pandas/tests/frame/test_missing.py
index eabdb7929..8c25f71c0 100644
--- a/pandas/tests/frame/test_missing.py
+++ b/pandas/tests/frame/test_missing.py
@@ -711,10 +711,3 @@ class TestDataFrameInterpolate(tm.TestCase, TestData):
         # all good
         result = df[['B', 'D']].interpolate(downcast=None)
         assert_frame_equal(result, df[['B', 'D']])
-
-
-if __name__ == '__main__':
-    import nose
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   # '--with-coverage', '--cover-package=pandas.core']
-                   exit=False)
diff --git a/pandas/tests/frame/test_operators.py b/pandas/tests/frame/test_operators.py
index f843a5c08..15f98abe1 100644
--- a/pandas/tests/frame/test_operators.py
+++ b/pandas/tests/frame/test_operators.py
@@ -1275,8 +1275,3 @@ class TestDataFrameOperators(tm.TestCase, TestData):
             align(df, val, 'index')
         with tm.assertRaises(ValueError):
             align(df, val, 'columns')
-
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/tests/frame/test_query_eval.py b/pandas/tests/frame/test_query_eval.py
index 36ae5dac7..a9a90a6f5 100644
--- a/pandas/tests/frame/test_query_eval.py
+++ b/pandas/tests/frame/test_query_eval.py
@@ -1155,8 +1155,3 @@ class TestDataFrameEvalPythonPython(TestDataFrameEvalNumExprPython):
     def setUpClass(cls):
         super(TestDataFrameEvalPythonPython, cls).tearDownClass()
         cls.engine = cls.parser = 'python'
-
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/tests/frame/test_timeseries.py b/pandas/tests/frame/test_timeseries.py
index 9a9f0ee67..55848847f 100644
--- a/pandas/tests/frame/test_timeseries.py
+++ b/pandas/tests/frame/test_timeseries.py
@@ -575,9 +575,3 @@ class TestDataFrameTimeSeriesMethods(tm.TestCase, TestData):
         tm.assert_index_equal(pts.columns, exp.columns.asfreq('M'))
 
         self.assertRaises(ValueError, df.to_period, axis=2)
-
-
-if __name__ == '__main__':
-    import nose
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/tests/frame/test_to_csv.py b/pandas/tests/frame/test_to_csv.py
index b58546236..5c47b0357 100644
--- a/pandas/tests/frame/test_to_csv.py
+++ b/pandas/tests/frame/test_to_csv.py
@@ -1145,9 +1145,3 @@ class TestDataFrameToCSV(tm.TestCase, TestData):
         df = df.set_index(['a', 'b'])
         expected = '"a","b","c"\n"1","3","5"\n"2","4","6"\n'
         self.assertEqual(df.to_csv(quoting=csv.QUOTE_ALL), expected)
-
-
-if __name__ == '__main__':
-    import nose
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/tests/groupby/test_aggregate.py b/pandas/tests/groupby/test_aggregate.py
index 6b162b71f..5f680a687 100644
--- a/pandas/tests/groupby/test_aggregate.py
+++ b/pandas/tests/groupby/test_aggregate.py
@@ -1,6 +1,5 @@
 # -*- coding: utf-8 -*-
 from __future__ import print_function
-import nose
 from datetime import datetime
 
 
@@ -487,8 +486,3 @@ def test_decons():
     shape = (10000, 10000)
     label_list = [np.tile(np.arange(10000), 5), np.tile(np.arange(10000), 5)]
     testit(label_list, shape)
-
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure', '-s'
-                         ], exit=False)
diff --git a/pandas/tests/groupby/test_categorical.py b/pandas/tests/groupby/test_categorical.py
index 81aa18342..82ec1832b 100644
--- a/pandas/tests/groupby/test_categorical.py
+++ b/pandas/tests/groupby/test_categorical.py
@@ -1,9 +1,7 @@
 # -*- coding: utf-8 -*-
 from __future__ import print_function
-import nose
 from numpy import nan
 
-
 from pandas.core.index import Index, MultiIndex, CategoricalIndex
 from pandas.core.api import DataFrame, Categorical
 
@@ -490,8 +488,3 @@ def test_decons():
     shape = (10000, 10000)
     label_list = [np.tile(np.arange(10000), 5), np.tile(np.arange(10000), 5)]
     testit(label_list, shape)
-
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure', '-s'
-                         ], exit=False)
diff --git a/pandas/tests/groupby/test_filters.py b/pandas/tests/groupby/test_filters.py
index 40d8039f7..663fbd04e 100644
--- a/pandas/tests/groupby/test_filters.py
+++ b/pandas/tests/groupby/test_filters.py
@@ -1,7 +1,5 @@
 # -*- coding: utf-8 -*-
 from __future__ import print_function
-import nose
-
 from numpy import nan
 
 
@@ -641,8 +639,3 @@ def test_decons():
     shape = (10000, 10000)
     label_list = [np.tile(np.arange(10000), 5), np.tile(np.arange(10000), 5)]
     testit(label_list, shape)
-
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure', '-s'
-                         ], exit=False)
diff --git a/pandas/tests/groupby/test_groupby.py b/pandas/tests/groupby/test_groupby.py
index bf61f5ef8..01c81bd79 100644
--- a/pandas/tests/groupby/test_groupby.py
+++ b/pandas/tests/groupby/test_groupby.py
@@ -6057,8 +6057,3 @@ def test_decons():
     shape = (10000, 10000)
     label_list = [np.tile(np.arange(10000), 5), np.tile(np.arange(10000), 5)]
     testit(label_list, shape)
-
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure', '-s'
-                         ], exit=False)
diff --git a/pandas/tests/indexes/test_base.py b/pandas/tests/indexes/test_base.py
index a0f2a090c..c574a4a1f 100644
--- a/pandas/tests/indexes/test_base.py
+++ b/pandas/tests/indexes/test_base.py
@@ -11,7 +11,6 @@ from pandas.compat import (range, lrange, lzip, u,
 import operator
 import os
 
-import nose
 import numpy as np
 
 from pandas import (period_range, date_range, Series,
@@ -2078,8 +2077,3 @@ class TestMixedIntIndex(Base, tm.TestCase):
         res = i2.intersection(i1)
 
         self.assertEqual(len(res), 0)
-
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/tests/indexes/test_numeric.py b/pandas/tests/indexes/test_numeric.py
index c7acbf51a..4dab7ae76 100644
--- a/pandas/tests/indexes/test_numeric.py
+++ b/pandas/tests/indexes/test_numeric.py
@@ -3,7 +3,6 @@
 from datetime import datetime
 from pandas.compat import range, PY3
 
-import nose
 import numpy as np
 
 from pandas import (date_range, Series, Index, Float64Index,
@@ -1144,8 +1143,3 @@ class TestUInt64Index(NumericInt, tm.TestCase):
         self.assert_index_equal(res, eres)
         tm.assert_numpy_array_equal(lidx, elidx)
         tm.assert_numpy_array_equal(ridx, eridx)
-
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/tests/indexing/test_callable.py b/pandas/tests/indexing/test_callable.py
index ab225f729..bcadc41b1 100644
--- a/pandas/tests/indexing/test_callable.py
+++ b/pandas/tests/indexing/test_callable.py
@@ -1,6 +1,5 @@
 # -*- coding: utf-8 -*-
 # pylint: disable-msg=W0612,E1101
-import nose
 
 import numpy as np
 import pandas as pd
@@ -268,8 +267,3 @@ class TestIndexingCallable(tm.TestCase):
         exp = df.copy()
         exp.iloc[[1, 3], [0]] = [-5, -5]
         tm.assert_frame_equal(res, exp)
-
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/tests/indexing/test_indexing.py b/pandas/tests/indexing/test_indexing.py
index f7fa07916..a9dfcf267 100644
--- a/pandas/tests/indexing/test_indexing.py
+++ b/pandas/tests/indexing/test_indexing.py
@@ -5532,8 +5532,3 @@ class TestTimedeltaIndexing(tm.TestCase):
                                     index=pd.to_timedelta(range(10), unit='s'),
                                     columns=['x'])
             tm.assert_frame_equal(expected, result)
-
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/tests/plotting/test_boxplot_method.py b/pandas/tests/plotting/test_boxplot_method.py
index 289d48ba6..f7fd6a851 100644
--- a/pandas/tests/plotting/test_boxplot_method.py
+++ b/pandas/tests/plotting/test_boxplot_method.py
@@ -378,8 +378,3 @@ class TestDataFrameGroupByPlots(TestPlotBase):
         df = DataFrame({"a": [1, 2, 3, 4, 5, 6], "b": [0, 0, 0, 1, 1, 1]})
         self._check_ticks_props(df.boxplot("a", by="b", fontsize=16),
                                 xlabelsize=16, ylabelsize=16)
-
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/tests/plotting/test_datetimelike.py b/pandas/tests/plotting/test_datetimelike.py
index 6486c8aa2..bcc9c7cee 100644
--- a/pandas/tests/plotting/test_datetimelike.py
+++ b/pandas/tests/plotting/test_datetimelike.py
@@ -1,3 +1,5 @@
+""" Test cases for time series specific (freq conversion, etc) """
+
 from datetime import datetime, timedelta, date, time
 
 import nose
@@ -18,9 +20,6 @@ from pandas.tests.plotting.common import (TestPlotBase,
                                           _skip_if_no_scipy_gaussian_kde)
 
 
-""" Test cases for time series specific (freq conversion, etc) """
-
-
 @tm.mplskip
 class TestTSPlot(TestPlotBase):
 
@@ -1309,8 +1308,3 @@ def _check_plot_works(f, freq=None, series=None, *args, **kwargs):
             plt.savefig(path)
     finally:
         plt.close(fig)
-
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/tests/plotting/test_frame.py b/pandas/tests/plotting/test_frame.py
index fba554b03..81a54bd38 100644
--- a/pandas/tests/plotting/test_frame.py
+++ b/pandas/tests/plotting/test_frame.py
@@ -1,5 +1,7 @@
 # coding: utf-8
 
+""" Test cases for DataFrame.plot """
+
 import nose
 import string
 import warnings
@@ -26,9 +28,6 @@ from pandas.tests.plotting.common import (TestPlotBase, _check_plot_works,
                                           _ok_for_gaussian_kde)
 
 
-""" Test cases for DataFrame.plot """
-
-
 @tm.mplskip
 class TestDataFramePlots(TestPlotBase):
 
@@ -2726,8 +2725,3 @@ def _generate_4_axes_via_gridspec():
     ax_lr = plt.subplot(gs[1, 1])
 
     return gs, [ax_tl, ax_ll, ax_tr, ax_lr]
-
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/tests/plotting/test_groupby.py b/pandas/tests/plotting/test_groupby.py
index 3c682fbfb..93efb3f99 100644
--- a/pandas/tests/plotting/test_groupby.py
+++ b/pandas/tests/plotting/test_groupby.py
@@ -1,6 +1,7 @@
 # coding: utf-8
 
-import nose
+""" Test cases for GroupBy.plot """
+
 
 from pandas import Series, DataFrame
 import pandas.util.testing as tm
@@ -10,9 +11,6 @@ import numpy as np
 from pandas.tests.plotting.common import TestPlotBase
 
 
-""" Test cases for GroupBy.plot """
-
-
 @tm.mplskip
 class TestDataFrameGroupByPlots(TestPlotBase):
 
@@ -74,8 +72,3 @@ class TestDataFrameGroupByPlots(TestPlotBase):
 
         res = df.groupby('z').plot.scatter(x='x', y='y')
         self.assertEqual(len(res['a'].collections), 1)
-
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/tests/plotting/test_hist_method.py b/pandas/tests/plotting/test_hist_method.py
index bde554439..4f64f66bd 100644
--- a/pandas/tests/plotting/test_hist_method.py
+++ b/pandas/tests/plotting/test_hist_method.py
@@ -1,6 +1,6 @@
 # coding: utf-8
 
-import nose
+""" Test cases for .hist method """
 
 from pandas import Series, DataFrame
 import pandas.util.testing as tm
@@ -13,9 +13,6 @@ import pandas.tools.plotting as plotting
 from pandas.tests.plotting.common import (TestPlotBase, _check_plot_works)
 
 
-""" Test cases for .hist method """
-
-
 @tm.mplskip
 class TestSeriesPlots(TestPlotBase):
 
@@ -418,8 +415,3 @@ class TestDataFrameGroupByPlots(TestPlotBase):
 
         self.assertTrue(ax1._shared_y_axes.joined(ax1, ax2))
         self.assertTrue(ax2._shared_y_axes.joined(ax1, ax2))
-
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/tests/plotting/test_misc.py b/pandas/tests/plotting/test_misc.py
index 2650ce287..c92287b2b 100644
--- a/pandas/tests/plotting/test_misc.py
+++ b/pandas/tests/plotting/test_misc.py
@@ -1,6 +1,6 @@
 # coding: utf-8
 
-import nose
+""" Test cases for misc plot functions """
 
 from pandas import Series, DataFrame
 from pandas.compat import lmap
@@ -15,8 +15,6 @@ import pandas.tools.plotting as plotting
 from pandas.tests.plotting.common import (TestPlotBase, _check_plot_works,
                                           _ok_for_gaussian_kde)
 
-""" Test cases for misc plot functions """
-
 
 @tm.mplskip
 class TestSeriesPlots(TestPlotBase):
@@ -298,8 +296,3 @@ class TestDataFramePlots(TestPlotBase):
                                                   title=title[:-1])
         title_list = [ax.get_title() for sublist in plot for ax in sublist]
         self.assertEqual(title_list, title[:3] + [''])
-
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/tests/plotting/test_series.py b/pandas/tests/plotting/test_series.py
index f668c46a1..8c00d6060 100644
--- a/pandas/tests/plotting/test_series.py
+++ b/pandas/tests/plotting/test_series.py
@@ -1,6 +1,8 @@
 # coding: utf-8
 
-import nose
+""" Test cases for Series.plot """
+
+
 import itertools
 
 from datetime import datetime
@@ -20,9 +22,6 @@ from pandas.tests.plotting.common import (TestPlotBase, _check_plot_works,
                                           _ok_for_gaussian_kde)
 
 
-""" Test cases for Series.plot """
-
-
 @tm.mplskip
 class TestSeriesPlots(TestPlotBase):
 
@@ -811,8 +810,3 @@ class TestSeriesPlots(TestPlotBase):
             freq=CustomBusinessDay(holidays=['2014-05-26'])))
 
         _check_plot_works(s.plot)
-
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/tests/series/test_asof.py b/pandas/tests/series/test_asof.py
index e2092feab..db306d2a7 100644
--- a/pandas/tests/series/test_asof.py
+++ b/pandas/tests/series/test_asof.py
@@ -1,9 +1,6 @@
 # coding=utf-8
 
-import nose
-
 import numpy as np
-
 from pandas import (offsets, Series, notnull,
                     isnull, date_range, Timestamp)
 
@@ -152,7 +149,3 @@ class TestSeriesAsof(TestData, tm.TestCase):
         s = Series(np.random.randn(N), index=rng)
         with self.assertRaises(ValueError):
             s.asof(s.index[0], subset='foo')
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/tests/series/test_indexing.py b/pandas/tests/series/test_indexing.py
index bdae11770..e0d83d6ee 100644
--- a/pandas/tests/series/test_indexing.py
+++ b/pandas/tests/series/test_indexing.py
@@ -2638,9 +2638,3 @@ class TestNatIndexing(tm.TestCase):
             round_method = getattr(s.dt, method)
             for freq in ["s", "5s", "min", "5min", "h", "5h"]:
                 assert_series_equal(round_method(freq), expected)
-
-
-if __name__ == '__main__':
-    import nose
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/tests/series/test_missing.py b/pandas/tests/series/test_missing.py
index 8c877ade6..6821a8b9f 100644
--- a/pandas/tests/series/test_missing.py
+++ b/pandas/tests/series/test_missing.py
@@ -1092,10 +1092,3 @@ class TestSeriesInterpolateData(TestData, tm.TestCase):
         result = ts.reindex(new_index).interpolate(method='time')
 
         self.assert_numpy_array_equal(result.values, exp.values)
-
-
-if __name__ == '__main__':
-    import nose
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   # '--with-coverage', '--cover-package=pandas.core']
-                   exit=False)
diff --git a/pandas/tests/series/test_timeseries.py b/pandas/tests/series/test_timeseries.py
index 9754a9d37..bd346fb9b 100644
--- a/pandas/tests/series/test_timeseries.py
+++ b/pandas/tests/series/test_timeseries.py
@@ -927,9 +927,3 @@ class TestTimeSeries(TestData, tm.TestCase):
         index = MultiIndex(levels=levels, labels=labels)
 
         self.assertTrue(isinstance(index.get_level_values(0)[0], Timestamp))
-
-
-if __name__ == '__main__':
-    import nose
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/tests/test_algos.py b/pandas/tests/test_algos.py
index 99453b979..40b277f3f 100644
--- a/pandas/tests/test_algos.py
+++ b/pandas/tests/test_algos.py
@@ -1372,9 +1372,3 @@ class TestMode(tm.TestCase):
         idx = Index(['1 day', '1 day', '-1 day', '-1 day 2 min',
                      '2 min', '2 min'], dtype='timedelta64[ns]')
         tm.assert_series_equal(algos.mode(idx), exp)
-
-
-if __name__ == '__main__':
-    import nose
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/tests/test_base.py b/pandas/tests/test_base.py
index f75093696..1d1ef1a08 100644
--- a/pandas/tests/test_base.py
+++ b/pandas/tests/test_base.py
@@ -4,7 +4,7 @@ from __future__ import print_function
 import re
 import sys
 from datetime import datetime, timedelta
-
+import nose
 import numpy as np
 
 import pandas as pd
@@ -1105,11 +1105,3 @@ class TestNoNewAttributesMixin(tm.TestCase):
 
         self.assertRaises(AttributeError, f)
         self.assertFalse(hasattr(t, "b"))
-
-
-if __name__ == '__main__':
-    import nose
-
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   # '--with-coverage', '--cover-package=pandas.core'],
-                   exit=False)
diff --git a/pandas/tests/test_categorical.py b/pandas/tests/test_categorical.py
index 745914d3e..be55d6e19 100644
--- a/pandas/tests/test_categorical.py
+++ b/pandas/tests/test_categorical.py
@@ -4576,10 +4576,3 @@ class TestCategoricalSubclassing(tm.TestCase):
         self.assertIsInstance(res, tm.SubclassedCategorical)
         exp = Categorical(['A', 'B', 'C'])
         tm.assert_categorical_equal(res, exp)
-
-
-if __name__ == '__main__':
-    import nose
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   # '--with-coverage', '--cover-package=pandas.core']
-                   exit=False)
diff --git a/pandas/tests/test_common.py b/pandas/tests/test_common.py
index 09dd3f7ab..023925012 100644
--- a/pandas/tests/test_common.py
+++ b/pandas/tests/test_common.py
@@ -1,6 +1,5 @@
 # -*- coding: utf-8 -*-
 
-import nose
 import numpy as np
 
 from pandas import Series, Timestamp
@@ -196,8 +195,3 @@ def test_dict_compat():
     assert (com._dict_compat(data_datetime64) == expected)
     assert (com._dict_compat(expected) == expected)
     assert (com._dict_compat(data_unchanged) == data_unchanged)
-
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/tests/test_expressions.py b/pandas/tests/test_expressions.py
index c037f02f2..18b078d0a 100644
--- a/pandas/tests/test_expressions.py
+++ b/pandas/tests/test_expressions.py
@@ -2,12 +2,12 @@
 from __future__ import print_function
 # pylint: disable-msg=W0612,E1101
 
-import nose
 import re
+import operator
+import nose
 
 from numpy.random import randn
 
-import operator
 import numpy as np
 
 from pandas.core.api import DataFrame, Panel
@@ -439,9 +439,3 @@ class TestExpressions(tm.TestCase):
                     r = f(df, True)
                     e = fe(df, True)
                     tm.assert_frame_equal(r, e)
-
-
-if __name__ == '__main__':
-    import nose
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/tests/test_generic.py b/pandas/tests/test_generic.py
index 0ca8ba47b..5bf2eda47 100644
--- a/pandas/tests/test_generic.py
+++ b/pandas/tests/test_generic.py
@@ -2022,7 +2022,3 @@ class TestNDFrame(tm.TestCase):
 
         with tm.assertRaises(ValueError):
             result = wp.pipe((f, 'y'), x=1, y=1)
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/tests/test_internals.py b/pandas/tests/test_internals.py
index 5000d6d45..2bfe31ad4 100644
--- a/pandas/tests/test_internals.py
+++ b/pandas/tests/test_internals.py
@@ -1188,8 +1188,3 @@ class TestBlockPlacement(tm.TestCase):
                           lambda: BlockPlacement([1, 2, 4]).add(-10))
         self.assertRaises(ValueError,
                           lambda: BlockPlacement(slice(2, None, -1)).add(-1))
-
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/tests/test_join.py b/pandas/tests/test_join.py
index bfdb77f3f..0e7dda05a 100644
--- a/pandas/tests/test_join.py
+++ b/pandas/tests/test_join.py
@@ -193,9 +193,3 @@ def test_inner_join_indexer2():
 
     exp_ridx = np.array([0, 1, 2, 3], dtype=np.int64)
     assert_almost_equal(ridx, exp_ridx)
-
-
-if __name__ == '__main__':
-    import nose
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/tests/test_lib.py b/pandas/tests/test_lib.py
index 945f80046..2381c52ef 100644
--- a/pandas/tests/test_lib.py
+++ b/pandas/tests/test_lib.py
@@ -232,10 +232,3 @@ class TestNullObj(tm.TestCase):
         expected = np.array([True])
 
         self._check_behavior(arr, expected)
-
-
-if __name__ == '__main__':
-    import nose
-
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/tests/test_multilevel.py b/pandas/tests/test_multilevel.py
index 37bfe667b..d87ad8d90 100755
--- a/pandas/tests/test_multilevel.py
+++ b/pandas/tests/test_multilevel.py
@@ -2478,8 +2478,3 @@ Thur,Lunch,Yes,51.51,17"""
                                for r in range(5)])
 
         assert_frame_equal(result, expected)
-
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/tests/test_nanops.py b/pandas/tests/test_nanops.py
index dd3a49de5..937c20d00 100644
--- a/pandas/tests/test_nanops.py
+++ b/pandas/tests/test_nanops.py
@@ -1000,9 +1000,3 @@ class TestNankurtFixedValues(tm.TestCase):
     @property
     def prng(self):
         return np.random.RandomState(1234)
-
-
-if __name__ == '__main__':
-    import nose
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure', '-s'
-                         ], exit=False)
diff --git a/pandas/tests/test_panel.py b/pandas/tests/test_panel.py
index d79081a06..89e8fb78a 100644
--- a/pandas/tests/test_panel.py
+++ b/pandas/tests/test_panel.py
@@ -2538,8 +2538,3 @@ def test_panel_index():
                                        np.repeat([1, 2, 3], 4)],
                                       names=['time', 'panel'])
     tm.assert_index_equal(index, expected)
-
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/tests/test_panel4d.py b/pandas/tests/test_panel4d.py
index 0769b8916..aeca24964 100644
--- a/pandas/tests/test_panel4d.py
+++ b/pandas/tests/test_panel4d.py
@@ -949,8 +949,3 @@ class TestPanel4d(tm.TestCase, CheckIndexing, SafeForSparse,
 
     def test_get_attr(self):
         assert_panel_equal(self.panel4d['l1'], self.panel4d.l1)
-
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/tests/test_panelnd.py b/pandas/tests/test_panelnd.py
index 92805f3b3..6a578d85d 100644
--- a/pandas/tests/test_panelnd.py
+++ b/pandas/tests/test_panelnd.py
@@ -1,6 +1,4 @@
 # -*- coding: utf-8 -*-
-import nose
-
 from pandas.core import panelnd
 from pandas.core.panel import Panel
 
@@ -101,7 +99,3 @@ class TestPanelnd(tm.TestCase):
             # test a transpose
             # results  = p5d.transpose(1,2,3,4,0)
             # expected =
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/tests/test_reshape.py b/pandas/tests/test_reshape.py
index 603674ac0..b5fa945a5 100644
--- a/pandas/tests/test_reshape.py
+++ b/pandas/tests/test_reshape.py
@@ -1,6 +1,5 @@
 # -*- coding: utf-8 -*-
 # pylint: disable-msg=W0612,E1101
-import nose
 
 from pandas import DataFrame, Series
 from pandas.core.sparse import SparseDataFrame
@@ -914,8 +913,3 @@ class TestWideToLong(tm.TestCase):
         exp_frame = exp_frame.set_index(['famid', 'birth', 'age'])[['ht']]
         long_frame = wide_to_long(df, 'ht', i=['famid', 'birth'], j='age')
         tm.assert_frame_equal(long_frame, exp_frame)
-
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/tests/test_stats.py b/pandas/tests/test_stats.py
index 41d25b966..eb8ab02c2 100644
--- a/pandas/tests/test_stats.py
+++ b/pandas/tests/test_stats.py
@@ -1,6 +1,5 @@
 # -*- coding: utf-8 -*-
 from pandas import compat
-import nose
 
 from distutils.version import LooseVersion
 from numpy import nan
@@ -185,8 +184,3 @@ class TestRank(tm.TestCase):
         # smoke tests
         Series([np.nan] * 32).astype(object).rank(ascending=True)
         Series([np.nan] * 32).astype(object).rank(ascending=False)
-
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/tests/test_strings.py b/pandas/tests/test_strings.py
index f59127c85..f35894698 100644
--- a/pandas/tests/test_strings.py
+++ b/pandas/tests/test_strings.py
@@ -4,8 +4,6 @@
 from datetime import datetime, timedelta
 import re
 
-import nose
-
 from numpy import nan as NA
 import numpy as np
 from numpy.random import randint
@@ -2715,8 +2713,3 @@ class TestStringMethods(tm.TestCase):
             expected = Series(np.array(
                 ['ad', 'be', 'cf'], 'S2').astype(object))
             tm.assert_series_equal(result, expected)
-
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/tests/test_take.py b/pandas/tests/test_take.py
index 98b3b474f..bf8a3ab37 100644
--- a/pandas/tests/test_take.py
+++ b/pandas/tests/test_take.py
@@ -2,7 +2,6 @@
 import re
 from datetime import datetime
 
-import nose
 import numpy as np
 from pandas.compat import long
 import pandas.core.algorithms as algos
@@ -448,8 +447,3 @@ class TestTake(tm.TestCase):
         expected = arr.take(indexer, axis=1)
         expected[:, [2, 4]] = datetime(2007, 1, 1)
         tm.assert_almost_equal(result, expected)
-
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/tests/test_testing.py b/pandas/tests/test_testing.py
index e2f295a53..5e60efd15 100644
--- a/pandas/tests/test_testing.py
+++ b/pandas/tests/test_testing.py
@@ -802,8 +802,3 @@ def test_skiptest_deco():
     with assertRaises(ValueError):
         f()
         raise ValueError
-
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/tests/test_util.py b/pandas/tests/test_util.py
index ed8260403..e2f6a7f6c 100644
--- a/pandas/tests/test_util.py
+++ b/pandas/tests/test_util.py
@@ -1,6 +1,4 @@
 # -*- coding: utf-8 -*-
-import nose
-
 from collections import OrderedDict
 import sys
 import unittest
@@ -402,8 +400,3 @@ def test_numpy_errstate_is_default():
     from pandas.compat import numpy  # noqa
     # The errstate should be unchanged after that import.
     tm.assert_equal(np.geterr(), expected)
-
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/tests/types/test_cast.py b/pandas/tests/types/test_cast.py
index 56a14a511..a8579e89a 100644
--- a/pandas/tests/types/test_cast.py
+++ b/pandas/tests/types/test_cast.py
@@ -5,8 +5,6 @@ These test the private routines in types/cast.py
 
 """
 
-
-import nose
 from datetime import datetime
 import numpy as np
 
@@ -278,8 +276,3 @@ class TestCommonTypes(tm.TestCase):
                        np.dtype('datetime64[ns]'), np.object, np.int64]:
             self.assertEqual(_find_common_type([dtype, dtype2]), np.object)
             self.assertEqual(_find_common_type([dtype2, dtype]), np.object)
-
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/tests/types/test_common.py b/pandas/tests/types/test_common.py
index 4d6f50862..7c17c61ae 100644
--- a/pandas/tests/types/test_common.py
+++ b/pandas/tests/types/test_common.py
@@ -1,6 +1,5 @@
 # -*- coding: utf-8 -*-
 
-import nose
 import numpy as np
 
 from pandas.types.dtypes import DatetimeTZDtype, PeriodDtype, CategoricalDtype
@@ -55,8 +54,3 @@ def test_dtype_equal():
 
     assert not DatetimeTZDtype.is_dtype(np.int64)
     assert not PeriodDtype.is_dtype(np.int64)
-
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/tests/types/test_concat.py b/pandas/tests/types/test_concat.py
index 6403dcb5a..8acafe0af 100644
--- a/pandas/tests/types/test_concat.py
+++ b/pandas/tests/types/test_concat.py
@@ -1,6 +1,5 @@
 # -*- coding: utf-8 -*-
 
-import nose
 import pandas as pd
 import pandas.types.concat as _concat
 import pandas.util.testing as tm
@@ -79,8 +78,3 @@ class TestConcatCompat(tm.TestCase):
                      pd.Series([pd.Period('2011-02', freq='D')])]
         res = _concat.get_dtype_kinds(to_concat)
         self.assertEqual(res, set(['object']))
-
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/tests/types/test_dtypes.py b/pandas/tests/types/test_dtypes.py
index f190c8540..68105cfd7 100644
--- a/pandas/tests/types/test_dtypes.py
+++ b/pandas/tests/types/test_dtypes.py
@@ -1,7 +1,6 @@
 # -*- coding: utf-8 -*-
 from itertools import product
 
-import nose
 import numpy as np
 import pandas as pd
 from pandas import Series, Categorical, date_range
@@ -353,8 +352,3 @@ class TestPeriodDtype(Base, tm.TestCase):
     def test_not_string(self):
         # though PeriodDtype has object kind, it cannot be string
         self.assertFalse(is_string_dtype(PeriodDtype('D')))
-
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/tests/types/test_generic.py b/pandas/tests/types/test_generic.py
index 28600687e..2861252be 100644
--- a/pandas/tests/types/test_generic.py
+++ b/pandas/tests/types/test_generic.py
@@ -1,6 +1,5 @@
 # -*- coding: utf-8 -*-
 
-import nose
 import numpy as np
 import pandas as pd
 import pandas.util.testing as tm
@@ -41,8 +40,3 @@ class TestABCClasses(tm.TestCase):
         self.assertIsInstance(self.sparse_array, gt.ABCSparseArray)
         self.assertIsInstance(self.categorical, gt.ABCCategorical)
         self.assertIsInstance(pd.Period('2012', freq='A-DEC'), gt.ABCPeriod)
-
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/tests/types/test_inference.py b/pandas/tests/types/test_inference.py
index 5c35112d0..15f9545f3 100644
--- a/pandas/tests/types/test_inference.py
+++ b/pandas/tests/types/test_inference.py
@@ -6,7 +6,6 @@ related to inference and not otherwise tested in types/test_common.py
 
 """
 
-import nose
 import collections
 import re
 from datetime import datetime, date, timedelta, time
@@ -968,8 +967,3 @@ def test_ensure_categorical():
     values = Categorical(values)
     result = _ensure_categorical(values)
     tm.assert_categorical_equal(result, values)
-
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/tests/types/test_io.py b/pandas/tests/types/test_io.py
index 545edf8f1..ce8e23342 100644
--- a/pandas/tests/types/test_io.py
+++ b/pandas/tests/types/test_io.py
@@ -107,10 +107,3 @@ class TestParseSQL(tm.TestCase):
         expected = np.array([int8_na, 2, 3, 10, 15], dtype=np.int8)
         result = lib.downcast_int64(arr, na_values)
         self.assert_numpy_array_equal(result, expected)
-
-
-if __name__ == '__main__':
-    import nose
-
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/tests/types/test_missing.py b/pandas/tests/types/test_missing.py
index fa2bd535b..2b09cf5ab 100644
--- a/pandas/tests/types/test_missing.py
+++ b/pandas/tests/types/test_missing.py
@@ -1,6 +1,5 @@
 # -*- coding: utf-8 -*-
 
-import nose
 import numpy as np
 from datetime import datetime
 from pandas.util import testing as tm
@@ -304,8 +303,3 @@ def test_na_value_for_dtype():
 
     for dtype in ['O']:
         assert np.isnan(na_value_for_dtype(np.dtype(dtype)))
-
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/tools/plotting.py b/pandas/tools/plotting.py
index 012d67d29..ee7051585 100644
--- a/pandas/tools/plotting.py
+++ b/pandas/tools/plotting.py
@@ -4003,28 +4003,3 @@ class FramePlotMethods(BasePlotMethods):
         if gridsize is not None:
             kwds['gridsize'] = gridsize
         return self(kind='hexbin', x=x, y=y, C=C, **kwds)
-
-
-if __name__ == '__main__':
-    # import pandas.rpy.common as com
-    # sales = com.load_data('sanfrancisco.home.sales', package='nutshell')
-    # top10 = sales['zip'].value_counts()[:10].index
-    # sales2 = sales[sales.zip.isin(top10)]
-    # _ = scatter_plot(sales2, 'squarefeet', 'price', by='zip')
-
-    # plt.show()
-
-    import matplotlib.pyplot as plt
-
-    import pandas.tools.plotting as plots
-    import pandas.core.frame as fr
-    reload(plots)  # noqa
-    reload(fr)  # noqa
-    from pandas.core.frame import DataFrame
-
-    data = DataFrame([[3, 6, -5], [4, 8, 2], [4, 9, -6],
-                      [4, 9, -3], [2, 5, -1]],
-                     columns=['A', 'B', 'C'])
-    data.plot(kind='barh', stacked=True)
-
-    plt.show()
diff --git a/pandas/tools/tests/test_concat.py b/pandas/tools/tests/test_concat.py
index 2be7e7557..dae24c48b 100644
--- a/pandas/tools/tests/test_concat.py
+++ b/pandas/tools/tests/test_concat.py
@@ -1,5 +1,3 @@
-import nose
-
 import numpy as np
 from numpy.random import randn
 
@@ -2171,8 +2169,3 @@ bar2,12,13,14,15
         tm.assert_frame_equal(result_copy, expected)
         result_no_copy = pd.concat(example_dict, names=['testname'])
         tm.assert_frame_equal(result_no_copy, expected)
-
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/tools/tests/test_join.py b/pandas/tools/tests/test_join.py
index 4a2b64d08..605a85026 100644
--- a/pandas/tools/tests/test_join.py
+++ b/pandas/tools/tests/test_join.py
@@ -1,7 +1,5 @@
 # pylint: disable=E1103
 
-import nose
-
 from numpy.random import randn
 import numpy as np
 
@@ -799,8 +797,3 @@ def _join_by_hand(a, b, how='left'):
     for col, s in compat.iteritems(b_re):
         a_re[col] = s
     return a_re.reindex(columns=result_columns)
-
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/tools/tests/test_merge.py b/pandas/tools/tests/test_merge.py
index e08074649..88856a012 100644
--- a/pandas/tools/tests/test_merge.py
+++ b/pandas/tools/tests/test_merge.py
@@ -1,7 +1,5 @@
 # pylint: disable=E1103
 
-import nose
-
 from datetime import datetime
 from numpy.random import randn
 from numpy import nan
@@ -1370,8 +1368,3 @@ class TestMergeMulti(tm.TestCase):
         def f():
             household.join(log_return, how='outer')
         self.assertRaises(NotImplementedError, f)
-
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/tools/tests/test_merge_asof.py b/pandas/tools/tests/test_merge_asof.py
index ef7b25008..8e7323f72 100644
--- a/pandas/tools/tests/test_merge_asof.py
+++ b/pandas/tools/tests/test_merge_asof.py
@@ -1,4 +1,3 @@
-import nose
 import os
 
 import pytz
@@ -938,8 +937,3 @@ class TestAsOfMerge(tm.TestCase):
             columns=['symbol', 'exch', 'price', 'mpv'])
 
         assert_frame_equal(result, expected)
-
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/tools/tests/test_merge_ordered.py b/pandas/tools/tests/test_merge_ordered.py
index d163468ab..e08cc98e5 100644
--- a/pandas/tools/tests/test_merge_ordered.py
+++ b/pandas/tools/tests/test_merge_ordered.py
@@ -1,5 +1,3 @@
-import nose
-
 import pandas as pd
 from pandas import DataFrame, merge_ordered
 from pandas.util import testing as tm
@@ -92,7 +90,3 @@ class TestOrderedMerge(tm.TestCase):
         pd.concat([pd.DataFrame()])
         pd.concat([None, pd.DataFrame()])
         pd.concat([pd.DataFrame(), None])
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/tools/tests/test_pivot.py b/pandas/tools/tests/test_pivot.py
index 9cc520a7a..398e57d4a 100644
--- a/pandas/tools/tests/test_pivot.py
+++ b/pandas/tools/tests/test_pivot.py
@@ -1321,9 +1321,3 @@ class TestCrosstab(tm.TestCase):
                                 index=expected_index,
                                 columns=expected_column)
         tm.assert_frame_equal(result, expected)
-
-
-if __name__ == '__main__':
-    import nose
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/tools/tests/test_tile.py b/pandas/tools/tests/test_tile.py
index 5c7cee862..c5261597c 100644
--- a/pandas/tools/tests/test_tile.py
+++ b/pandas/tools/tests/test_tile.py
@@ -1,5 +1,4 @@
 import os
-import nose
 
 import numpy as np
 from pandas.compat import zip
@@ -351,8 +350,3 @@ class TestCut(tm.TestCase):
 def curpath():
     pth, _ = os.path.split(os.path.abspath(__file__))
     return pth
-
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/tools/tests/test_util.py b/pandas/tools/tests/test_util.py
index 8a8960a05..e1d057eb3 100644
--- a/pandas/tools/tests/test_util.py
+++ b/pandas/tools/tests/test_util.py
@@ -478,8 +478,3 @@ class TestToNumeric(tm.TestCase):
         for dtype, downcast, min_max in dtype_downcast_min_max:
             series = pd.to_numeric(pd.Series(min_max), downcast=downcast)
             tm.assert_equal(series.dtype, dtype)
-
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/tseries/tests/test_base.py b/pandas/tseries/tests/test_base.py
index 4f2ac3ff0..2ff06517f 100644
--- a/pandas/tseries/tests/test_base.py
+++ b/pandas/tseries/tests/test_base.py
@@ -1860,10 +1860,3 @@ Freq: Q-DEC"""
             self.assertFalse(idx.asobject.equals(idx3))
             self.assertFalse(idx.equals(list(idx3)))
             self.assertFalse(idx.equals(pd.Series(idx3)))
-
-
-if __name__ == '__main__':
-    import nose
-
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/tseries/tests/test_converter.py b/pandas/tseries/tests/test_converter.py
index f6cf11c87..8caed80f5 100644
--- a/pandas/tseries/tests/test_converter.py
+++ b/pandas/tseries/tests/test_converter.py
@@ -1,7 +1,5 @@
 from datetime import datetime, date
 
-import nose
-
 import numpy as np
 from pandas import Timestamp, Period, Index
 from pandas.compat import u
@@ -12,6 +10,7 @@ from pandas.compat.numpy import np_datetime64_compat
 try:
     import pandas.tseries.converter as converter
 except ImportError:
+    import nose
     raise nose.SkipTest("no pandas.tseries.converter, skipping")
 
 
@@ -199,9 +198,3 @@ class TestPeriodConverter(tm.TestCase):
         rs = self.pc.convert([0, 1], None, self.axis)
         xp = [0, 1]
         self.assertEqual(rs, xp)
-
-
-if __name__ == '__main__':
-    import nose
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/tseries/tests/test_daterange.py b/pandas/tseries/tests/test_daterange.py
index 87f9f55e0..209e6e40d 100644
--- a/pandas/tseries/tests/test_daterange.py
+++ b/pandas/tseries/tests/test_daterange.py
@@ -1,6 +1,5 @@
 from datetime import datetime
 from pandas.compat import range
-import nose
 import numpy as np
 
 from pandas.core.index import Index
@@ -817,8 +816,3 @@ class TestCustomDateRange(tm.TestCase):
                           holidays=['2013-05-01'])
         xp = DatetimeIndex(['2013-05-02', '2013-05-05', '2013-05-06'])
         self.assert_index_equal(xp, rng)
-
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/tseries/tests/test_holiday.py b/pandas/tseries/tests/test_holiday.py
index 62446e8e6..d4d273347 100644
--- a/pandas/tseries/tests/test_holiday.py
+++ b/pandas/tseries/tests/test_holiday.py
@@ -15,7 +15,6 @@ from pandas.tseries.holiday import (USFederalHolidayCalendar, USMemorialDay,
                                     USLaborDay, USColumbusDay,
                                     USMartinLutherKingJr, USPresidentsDay)
 from pytz import utc
-import nose
 
 
 class TestCalendar(tm.TestCase):
@@ -385,8 +384,3 @@ class TestHolidayConflictingArguments(tm.TestCase):
             Holiday("Cyber Monday", month=11, day=1,
                     offset=[DateOffset(weekday=SA(4))],
                     observance=next_monday)
-
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/tseries/tests/test_offsets.py b/pandas/tseries/tests/test_offsets.py
index 768e9212e..ac488a3df 100644
--- a/pandas/tseries/tests/test_offsets.py
+++ b/pandas/tseries/tests/test_offsets.py
@@ -2,10 +2,11 @@ import os
 from distutils.version import LooseVersion
 from datetime import date, datetime, timedelta
 from dateutil.relativedelta import relativedelta
-from pandas.compat import range, iteritems
-from pandas import compat
+
 import nose
 from nose.tools import assert_raises
+from pandas.compat import range, iteritems
+from pandas import compat
 
 import numpy as np
 
@@ -4956,8 +4957,3 @@ class TestDST(tm.TestCase):
             first = Timestamp(test_values[0], tz='US/Eastern') + offset()
             second = Timestamp(test_values[1], tz='US/Eastern')
             self.assertEqual(first, second, msg=str(offset))
-
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/tseries/tests/test_period.py b/pandas/tseries/tests/test_period.py
index a707cc3eb..fdc067a82 100644
--- a/pandas/tseries/tests/test_period.py
+++ b/pandas/tseries/tests/test_period.py
@@ -4967,9 +4967,3 @@ class TestPeriodField(tm.TestCase):
     def test_get_period_field_array_raises_on_out_of_range(self):
         self.assertRaises(ValueError, _period.get_period_field_arr, -1,
                           np.empty(1), 0)
-
-
-if __name__ == '__main__':
-    import nose
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/tseries/tests/test_resample.py b/pandas/tseries/tests/test_resample.py
index c40f930fb..222ffb735 100755
--- a/pandas/tseries/tests/test_resample.py
+++ b/pandas/tseries/tests/test_resample.py
@@ -3,7 +3,6 @@
 from datetime import datetime, timedelta
 from functools import partial
 
-import nose
 import numpy as np
 
 import pandas as pd
@@ -3188,8 +3187,3 @@ class TestTimeGrouper(tm.TestCase):
 
             # if NaT is included, 'var', 'std', 'mean', 'first','last'
             # and 'nth' doesn't work yet
-
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/tseries/tests/test_timedeltas.py b/pandas/tseries/tests/test_timedeltas.py
index 6efa024d8..13263259e 100644
--- a/pandas/tseries/tests/test_timedeltas.py
+++ b/pandas/tseries/tests/test_timedeltas.py
@@ -2,7 +2,6 @@
 
 from __future__ import division
 from datetime import timedelta, time
-import nose
 
 from distutils.version import LooseVersion
 import numpy as np
@@ -2051,8 +2050,3 @@ class TestSlicing(tm.TestCase):
         result = (to_timedelta([pd.NaT, '5 days', '1 hours']) +
                   to_timedelta(['7 seconds', pd.NaT, '4 hours']))
         tm.assert_index_equal(result, exp)
-
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/tseries/tests/test_timeseries_legacy.py b/pandas/tseries/tests/test_timeseries_legacy.py
index d8c01c53f..5395056c9 100644
--- a/pandas/tseries/tests/test_timeseries_legacy.py
+++ b/pandas/tseries/tests/test_timeseries_legacy.py
@@ -219,8 +219,3 @@ class LegacySupport(object):
     def test_rule_aliases(self):
         rule = to_offset('10us')
         self.assertEqual(rule, Micro(10))
-
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/tseries/tests/test_timezones.py b/pandas/tseries/tests/test_timezones.py
index 64787b6e4..00b60ba62 100644
--- a/pandas/tseries/tests/test_timezones.py
+++ b/pandas/tseries/tests/test_timezones.py
@@ -1,7 +1,5 @@
 # pylint: disable-msg=E1101,W0612
 from datetime import datetime, timedelta, tzinfo, date
-import nose
-
 import numpy as np
 import pytz
 from distutils.version import LooseVersion
@@ -1683,8 +1681,3 @@ class TestTimeZones(tm.TestCase):
         idx = idx.tz_convert('US/Eastern')
         expected = ['2010-12-01 11:00', '2010-12-02 11:00', NaT]
         self.assert_index_equal(idx, DatetimeIndex(expected, tz='US/Eastern'))
-
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/tseries/tests/test_tslib.py b/pandas/tseries/tests/test_tslib.py
index cf5dbd671..20e91a6f5 100644
--- a/pandas/tseries/tests/test_tslib.py
+++ b/pandas/tseries/tests/test_tslib.py
@@ -1,4 +1,3 @@
-import nose
 import datetime
 import numpy as np
 from distutils.version import LooseVersion
@@ -690,8 +689,3 @@ class TestTslib(tm.TestCase):
         msg = pd.tseries.frequencies._INVALID_FREQ_ERROR
         with self.assertRaisesRegexp(ValueError, msg):
             stamp.round('foo')
-
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
diff --git a/pandas/tseries/tests/test_util.py b/pandas/tseries/tests/test_util.py
index 96da32a4a..3feffe924 100644
--- a/pandas/tseries/tests/test_util.py
+++ b/pandas/tseries/tests/test_util.py
@@ -1,5 +1,4 @@
 from pandas.compat import range
-import nose
 
 import numpy as np
 
@@ -125,8 +124,3 @@ def test_normalize_date():
 
     result = normalize_date(value)
     assert (result == datetime(2012, 9, 7))
-
-
-if __name__ == '__main__':
-    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
-                   exit=False)
