commit 9c1e738df7effbf89c98dea59b0482b057c8c8b8
Author: John Zwinck <jzwinck@gmail.com>
Date:   Thu Aug 4 17:00:49 2016 -0400

    BUG: preserve DatetimeIndex.name in HDFStore/read_hdf() with tz (#13884)
    
    closes #13884
    
    Author: John Zwinck <jzwinck@gmail.com>
    
    Closes #13888 from jzwinck/fix-13884 and squashes the following commits:
    
    789fa59 [John Zwinck] BUG: preserve DatetimeIndex.name in HDFStore/read_hdf() with tz (#13884)

diff --git a/doc/source/whatsnew/v0.19.0.txt b/doc/source/whatsnew/v0.19.0.txt
index f68fa957d..cf5d715b0 100644
--- a/doc/source/whatsnew/v0.19.0.txt
+++ b/doc/source/whatsnew/v0.19.0.txt
@@ -880,7 +880,7 @@ Bug Fixes
 - Bug in ``isnull`` ``notnull`` raise ``TypeError`` if input datetime-like has other unit than ``ns`` (:issue:`13389`)
 - Bug in ``.merge`` may raise ``TypeError`` if input datetime-like has other unit than ``ns`` (:issue:`13389`)
 
-
+- Bug in ``HDFStore``/``read_hdf()`` discarded ``DatetimeIndex.name`` if ``tz`` was set (:issue:`13884`)
 
 - Bug in ``Categorical.remove_unused_categories()`` changes ``.codes`` dtype to platform int (:issue:`13261`)
 - Bug in ``groupby`` with ``as_index=False`` returns all NaN's when grouping on multiple columns including a categorical one (:issue:`13204`)
diff --git a/pandas/io/pytables.py b/pandas/io/pytables.py
index b2da4218d..9c1ef077c 100644
--- a/pandas/io/pytables.py
+++ b/pandas/io/pytables.py
@@ -4339,9 +4339,10 @@ def _set_tz(values, tz, preserve_UTC=False, coerce=False):
     coerce : if we do not have a passed timezone, coerce to M8[ns] ndarray
     """
     if tz is not None:
+        name = getattr(values, 'name', None)
         values = values.ravel()
         tz = tslib.get_timezone(_ensure_decoded(tz))
-        values = DatetimeIndex(values)
+        values = DatetimeIndex(values, name=name)
         if values.tz is None:
             values = values.tz_localize('UTC').tz_convert(tz)
         if preserve_UTC:
diff --git a/pandas/io/tests/test_pytables.py b/pandas/io/tests/test_pytables.py
index e9ba80c3a..f821714b5 100644
--- a/pandas/io/tests/test_pytables.py
+++ b/pandas/io/tests/test_pytables.py
@@ -2851,7 +2851,7 @@ class TestHDFStore(Base, tm.TestCase):
         with ensure_clean_store(self.path) as store:
             store['frame'] = frame
             recons = store['frame']
-            assert(recons.index.names == ('foo', 'bar'))
+            tm.assert_frame_equal(recons, frame)
 
     def test_store_index_name(self):
         df = tm.makeDataFrame()
@@ -2860,7 +2860,19 @@ class TestHDFStore(Base, tm.TestCase):
         with ensure_clean_store(self.path) as store:
             store['frame'] = df
             recons = store['frame']
-            assert(recons.index.name == 'foo')
+            tm.assert_frame_equal(recons, df)
+
+    def test_store_index_name_with_tz(self):
+        # GH 13884
+        df = pd.DataFrame({'A': [1, 2]})
+        df.index = pd.DatetimeIndex([1234567890123456787, 1234567890123456788])
+        df.index = df.index.tz_localize('UTC')
+        df.index.name = 'foo'
+
+        with ensure_clean_store(self.path) as store:
+            store.put('frame', df, format='table')
+            recons = store['frame']
+            tm.assert_frame_equal(recons, df)
 
     def test_store_series_name(self):
         df = tm.makeDataFrame()
@@ -2869,7 +2881,7 @@ class TestHDFStore(Base, tm.TestCase):
         with ensure_clean_store(self.path) as store:
             store['series'] = series
             recons = store['series']
-            assert(recons.name == 'A')
+            tm.assert_series_equal(recons, series)
 
     def test_store_mixed(self):
 
