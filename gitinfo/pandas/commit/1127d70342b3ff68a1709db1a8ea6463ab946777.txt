commit 1127d70342b3ff68a1709db1a8ea6463ab946777
Author: Joris Van den Bossche <jorisvandenbossche@gmail.com>
Date:   Tue Mar 11 10:08:54 2014 +0100

    TST: add check_exact arg to assert_frame/series_equal

diff --git a/pandas/io/tests/test_sql.py b/pandas/io/tests/test_sql.py
index 89c4bd485..0e26a6692 100644
--- a/pandas/io/tests/test_sql.py
+++ b/pandas/io/tests/test_sql.py
@@ -560,11 +560,11 @@ class _TestSQLAlchemy(PandasSQLTest):
         s2 = Series(0.0,dtype=np.float32)
         df = DataFrame({'s1': s1, 's2': s2})
 
-        # write and read again        
-        df.to_sql("test_read_write", self.conn)
+        # write and read again
+        df.to_sql("test_read_write", self.conn, index=False)
         df2 = sql.read_table("test_read_write", self.conn)
 
-        tm.assert_equal(df['s1'].values, df2['s1'].values)         
+        tm.assert_frame_equal(df, df2, check_dtype=False, check_exact=True)
 
 
 class TestSQLAlchemy(_TestSQLAlchemy):
diff --git a/pandas/util/testing.py b/pandas/util/testing.py
index 007dc8af5..a0876179e 100644
--- a/pandas/util/testing.py
+++ b/pandas/util/testing.py
@@ -499,12 +499,18 @@ def is_sorted(seq):
 def assert_series_equal(left, right, check_dtype=True,
                         check_index_type=False,
                         check_series_type=False,
-                        check_less_precise=False):
+                        check_less_precise=False,
+                        check_exact=False):
     if check_series_type:
         assert_isinstance(left, type(right))
     if check_dtype:
         assert_attr_equal('dtype', left, right)
-    assert_almost_equal(left.values, right.values, check_less_precise)
+    if check_exact:
+        if not np.array_equal(left.values, right.values):
+            raise AssertionError('{0} is not equal to {1}.'.format(left.values,
+                                                                   right.values))
+    else:
+        assert_almost_equal(left.values, right.values, check_less_precise)
     if check_less_precise:
         assert_almost_equal(
             left.index.values, right.index.values, check_less_precise)
@@ -522,7 +528,8 @@ def assert_frame_equal(left, right, check_dtype=True,
                        check_frame_type=False,
                        check_less_precise=False,
                        check_names=True,
-                       by_blocks=False):
+                       by_blocks=False,
+                       check_exact=False):
     if check_frame_type:
         assert_isinstance(left, type(right))
     assert_isinstance(left, DataFrame)
@@ -555,7 +562,8 @@ def assert_frame_equal(left, right, check_dtype=True,
             assert_series_equal(lcol, rcol,
                                 check_dtype=check_dtype,
                                 check_index_type=check_index_type,
-                                check_less_precise=check_less_precise)
+                                check_less_precise=check_less_precise,
+                                check_exact=check_exact)
 
     if check_index_type:
         assert_isinstance(left.index, type(right.index))
