commit 2f4db47a572c7ba416d107b941f931c1458676ad
Author: jreback <jeff@reback.net>
Date:   Thu May 30 19:55:52 2013 -0400

    DOC: io/v0.11.1 changes

diff --git a/doc/source/io.rst b/doc/source/io.rst
index c6ab02ebe..62b063050 100644
--- a/doc/source/io.rst
+++ b/doc/source/io.rst
@@ -29,16 +29,25 @@ IO Tools (Text, CSV, HDF5, ...)
 *******************************
 
 The Pandas I/O api is a set of top level ``reader`` functions accessed like ``pd.read_csv()`` that generally return a ``pandas``
-object. The corresponding ``writer`` functions are object methods that are accessed like ``df.to_csv()``
-
-.. csv-table::
-    :widths: 12, 15, 15, 15, 15
-    :delim: ;
-
-    Reader; ``read_csv``; ``read_excel``; ``read_hdf``; ``read_sql``
-    Writer; ``to_csv``; ``to_excel``; ``to_hdf``; ``to_sql``
-    Reader; ``read_html``; ``read_stata``; ``read_clipboard`` ;
-    Writer; ``to_html``; ``to_stata``; ``to_clipboard`` ;
+object.
+
+    * ``read_csv``
+    * ``read_excel``
+    * ``read_hdf``
+    * ``read_sql``
+    * ``read_html``
+    * ``read_stata``
+    * ``read_clipboard``
+
+The corresponding ``writer`` functions are object methods that are accessed like ``df.to_csv()``
+
+    * ``to_csv``
+    * ``to_excel``
+    * ``to_hdf``
+    * ``to_sql``
+    * ``to_html``
+    * ``to_stata``
+    * ``to_clipboard``
 
 .. _io.read_csv_table:
 
diff --git a/doc/source/v0.11.1.txt b/doc/source/v0.11.1.txt
index ae51bde2b..de4051035 100644
--- a/doc/source/v0.11.1.txt
+++ b/doc/source/v0.11.1.txt
@@ -9,18 +9,27 @@ enhancements along with a large number of bug fixes.
 API changes
 ~~~~~~~~~~~
 
-  - The I/O api is now much more consistent with the following top-level reading
-    functions available, e.g. ``pd.read_csv``, and the counterpart writers are 
-    available as object methods, e.g. ``df.to_csv``
-
-    .. csv-table::
-        :widths: 12, 15, 15, 15, 15
-        :delim: ;
-
-        Read; ``read_csv``; ``read_excel``; ``read_hdf``; ``read_sql``
-        Write; ``to_csv``; ``to_excel``; ``to_hdf``; ``to_sql``
-        Read; ``read_html``; ``read_stata``; ``read_clipboard`` ;
-        Write; ``to_html``; ``to_stata``; ``to_clipboard`` ;
+  - The I/O API is now much more consistent with a set of top level ``reader`` functions 
+    accessed like ``pd.read_csv()`` that generally return a ``pandas`` object.
+
+    * ``read_csv``
+    * ``read_excel``
+    * ``read_hdf``
+    * ``read_sql``
+    * ``read_html``
+    * ``read_stata``
+    * ``read_clipboard``
+
+    The corresponding ``writer`` functions are object methods that are accessed like ``df.to_csv()``
+
+    * ``to_csv``
+    * ``to_excel``
+    * ``to_hdf``
+    * ``to_sql``
+    * ``to_html``
+    * ``to_stata``
+    * ``to_clipboard``
+
 
   - Fix modulo and integer division on Series,DataFrames to act similary to ``float`` dtypes to return 
     ``np.nan`` or ``np.inf`` as appropriate (GH3590_). This correct a numpy bug that treats ``integer``
