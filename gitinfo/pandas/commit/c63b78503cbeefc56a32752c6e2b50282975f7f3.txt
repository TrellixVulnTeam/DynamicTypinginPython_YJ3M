commit c63b78503cbeefc56a32752c6e2b50282975f7f3
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Wed Jan 25 18:14:33 2012 -0500

    ENH: cythonize timestamp conversion in HDFStore

diff --git a/pandas/io/pytables.py b/pandas/io/pytables.py
index a1ff17c4b..26c5e7cb0 100644
--- a/pandas/io/pytables.py
+++ b/pandas/io/pytables.py
@@ -771,20 +771,13 @@ def _unconvert_index_legacy(data, kind, legacy=False):
 def _maybe_convert(values, val_kind):
     if _need_convert(val_kind):
         conv = _get_converter(val_kind)
-        conv = np.frompyfunc(conv, 1, 1)
+        # conv = np.frompyfunc(conv, 1, 1)
         values = conv(values)
     return values
 
 def _get_converter(kind):
     if kind == 'datetime':
-        cache = {}
-        def convert_datetime(x):
-            if x in cache:
-                return cache[x]
-            else:
-                cache[x] = result = datetime.fromtimestamp(x)
-                return result
-        return convert_datetime
+        return lib.convert_timestamps
     else: # pragma: no cover
         raise ValueError('invalid kind %s' % kind)
 
diff --git a/pandas/src/tseries.pyx b/pandas/src/tseries.pyx
index b8e642c79..e189498da 100644
--- a/pandas/src/tseries.pyx
+++ b/pandas/src/tseries.pyx
@@ -452,6 +452,29 @@ def has_infs_f8(ndarray[float64_t] arr):
             return True
     return False
 
+def convert_timestamps(ndarray values):
+    cdef:
+        object val, f, result
+        dict cache = {}
+        Py_ssize_t i, n = len(values)
+        ndarray[object] out
+
+    # for HDFStore, a bit temporary but...
+
+    from datetime import datetime
+    f = datetime.fromtimestamp
+
+    out = np.empty(n, dtype='O')
+
+    for i in range(n):
+        val = util.get_value_1d(values, i)
+        if val in cache:
+            out[i] = cache[val]
+        else:
+            cache[val] = out[i] = f(val)
+
+    return out
+
 # cdef class TypeConverter:
 #     cdef:
 #         cpython.PyTypeObject* klass_type
