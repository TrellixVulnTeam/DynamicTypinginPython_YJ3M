commit bae795218121f98e7f9a12ff55a1ea5d2b8a5f7d
Author: jbrockmendel <jbrockmendel@gmail.com>
Date:   Sun Jun 14 09:52:39 2020 -0700

    REF: remove roll_check, use roll_convention (#34763)

diff --git a/pandas/_libs/tslibs/offsets.pyx b/pandas/_libs/tslibs/offsets.pyx
index 3d6a9c231..693136099 100644
--- a/pandas/_libs/tslibs/offsets.pyx
+++ b/pandas/_libs/tslibs/offsets.pyx
@@ -3744,7 +3744,6 @@ cdef shift_quarters(
         npy_datetimestruct dts
         int count = len(dtindex)
         int months_to_roll, months_since, n, compare_day
-        bint roll_check
         int64_t[:] out = np.empty(count, dtype="int64")
 
     if day_opt == "start":
@@ -3886,7 +3885,6 @@ def shift_months(const int64_t[:] dtindex, int months, object day_opt=None):
         npy_datetimestruct dts
         int count = len(dtindex)
         int months_to_roll
-        bint roll_check
         int64_t[:] out = np.empty(count, dtype="int64")
 
     if day_opt is None:
@@ -3903,10 +3901,6 @@ def shift_months(const int64_t[:] dtindex, int months, object day_opt=None):
                 dts.day = min(dts.day, get_days_in_month(dts.year, dts.month))
                 out[i] = dtstruct_to_dt64(&dts)
     elif day_opt == "start":
-        roll_check = False
-        if months <= 0:
-            months += 1
-            roll_check = True
         with nogil:
             for i in range(count):
                 if dtindex[i] == NPY_NAT:
@@ -3915,11 +3909,12 @@ def shift_months(const int64_t[:] dtindex, int months, object day_opt=None):
 
                 dt64_to_dtstruct(dtindex[i], &dts)
                 months_to_roll = months
+                compare_day = 1
 
                 # offset semantics - if on the anchor point and going backwards
                 # shift to next
-                if roll_check and dts.day == 1:
-                    months_to_roll -= 1
+                months_to_roll = roll_convention(dts.day, months_to_roll,
+                                                 compare_day)
 
                 dts.year = year_add_months(dts, months_to_roll)
                 dts.month = month_add_months(dts, months_to_roll)
@@ -3927,10 +3922,6 @@ def shift_months(const int64_t[:] dtindex, int months, object day_opt=None):
 
                 out[i] = dtstruct_to_dt64(&dts)
     elif day_opt == "end":
-        roll_check = False
-        if months > 0:
-            months -= 1
-            roll_check = True
         with nogil:
             for i in range(count):
                 if dtindex[i] == NPY_NAT:
@@ -3939,12 +3930,12 @@ def shift_months(const int64_t[:] dtindex, int months, object day_opt=None):
 
                 dt64_to_dtstruct(dtindex[i], &dts)
                 months_to_roll = months
+                compare_day = get_days_in_month(dts.year, dts.month)
 
                 # similar semantics - when adding shift forward by one
                 # month if already at an end of month
-                if roll_check and dts.day == get_days_in_month(dts.year,
-                                                               dts.month):
-                    months_to_roll += 1
+                months_to_roll = roll_convention(dts.day, months_to_roll,
+                                                 compare_day)
 
                 dts.year = year_add_months(dts, months_to_roll)
                 dts.month = month_add_months(dts, months_to_roll)
