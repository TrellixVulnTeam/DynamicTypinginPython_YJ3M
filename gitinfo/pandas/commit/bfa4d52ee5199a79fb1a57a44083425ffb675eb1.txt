commit bfa4d52ee5199a79fb1a57a44083425ffb675eb1
Author: jreback <jeff@reback.net>
Date:   Sat Dec 15 14:56:32 2012 -0500

    BUG: copy=False on reindex of non_index_axis
    BUG: incorrect permuting of data orientation on ndim with non-default axe
         (e.g. store data in order ['major_axis','labels,'minor_axis'])
    TST: much more robust tests on ndim indexables different from default

diff --git a/pandas/io/pytables.py b/pandas/io/pytables.py
index 3c8478e9f..a507ca83c 100644
--- a/pandas/io/pytables.py
+++ b/pandas/io/pytables.py
@@ -1430,7 +1430,7 @@ class Table(object):
 
         # reindex by our non_index_axes
         for a in self.non_index_axes:
-            obj = obj.reindex_axis(a[1], axis = a[0])
+            obj = obj.reindex_axis(a[1], axis = a[0], copy = False)
 
         blocks = self.get_data_blocks(obj)
 
@@ -1587,7 +1587,7 @@ class LegacyTable(Table):
 
                 # permute if needed
                 if self.is_transposed:
-                    obj = obj.transpose(*self.data_orientation)
+                    obj = obj.transpose(*tuple(Series(self.data_orientation).argsort()))
 
                 objs.append(obj)
 
diff --git a/pandas/io/tests/test_pytables.py b/pandas/io/tests/test_pytables.py
index 4e11a3ae8..e75102544 100644
--- a/pandas/io/tests/test_pytables.py
+++ b/pandas/io/tests/test_pytables.py
@@ -314,20 +314,45 @@ class TestHDFStore(unittest.TestCase):
 
         p4d = tm.makePanel4D()
 
+        def check_indexers(key, indexers):
+            for i,idx in enumerate(indexers):
+                self.assert_(getattr(getattr(self.store.root,key).table.description,idx)._v_pos == i)
+
         # append then change (will take existing schema)
+        indexers = ['items','major_axis','minor_axis']
+        
         self.store.remove('p4d')
-        self.store.append('p4d', p4d.ix[:,:,:10,:], axes=['items','major_axis','minor_axis'])
+        self.store.append('p4d', p4d.ix[:,:,:10,:], axes=indexers)
+        self.store.append('p4d', p4d.ix[:,:,10:,:])
+        tm.assert_panel4d_equal(self.store.select('p4d'),p4d)
+        check_indexers('p4d',indexers)
+
+        # same as above, but try to append with differnt axes
+        self.store.remove('p4d')
+        self.store.append('p4d', p4d.ix[:,:,:10,:], axes=indexers)
         self.store.append('p4d', p4d.ix[:,:,10:,:], axes=['labels','items','major_axis'])
+        tm.assert_panel4d_equal(self.store.select('p4d'),p4d)
+        check_indexers('p4d',indexers)
 
         # pass incorrect number of axes
         self.store.remove('p4d')
         self.assertRaises(Exception, self.store.append, 'p4d', p4d.ix[:,:,:10,:], axes=['major_axis','minor_axis'])
 
-        # different than default indexables
+        # different than default indexables #1
+        indexers = ['labels','major_axis','minor_axis']
         self.store.remove('p4d')
-        self.store.append('p4d', p4d.ix[:,:,:10,:], axes=[0,2,3])
-        self.store.append('p4d', p4d.ix[:,:,10:,:], axes=[0,2,3])
+        self.store.append('p4d', p4d.ix[:,:,:10,:], axes=indexers)
+        self.store.append('p4d', p4d.ix[:,:,10:,:])
+        tm.assert_panel4d_equal(self.store['p4d'], p4d)
+        check_indexers('p4d',indexers)
+  
+        # different than default indexables #2
+        indexers = ['major_axis','labels','minor_axis']
+        self.store.remove('p4d')
+        self.store.append('p4d', p4d.ix[:,:,:10,:], axes=indexers)
+        self.store.append('p4d', p4d.ix[:,:,10:,:])
         tm.assert_panel4d_equal(self.store['p4d'], p4d)
+        check_indexers('p4d',indexers)
 
         # partial selection
         result = self.store.select('p4d',['labels=l1'])
