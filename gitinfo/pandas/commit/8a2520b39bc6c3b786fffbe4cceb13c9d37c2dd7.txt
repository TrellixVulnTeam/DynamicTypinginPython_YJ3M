commit 8a2520b39bc6c3b786fffbe4cceb13c9d37c2dd7
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Fri Dec 2 15:23:20 2011 -0500

    BUG: fix common.take_1d failure with empty array, GH #434

diff --git a/RELEASE.rst b/RELEASE.rst
index 578369faa..0a5cbc5f3 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -30,17 +30,21 @@ pandas 0.6.1
 **Improvements to existing features**
   - Improve memory usage of `DataFrame.describe` (do not copy data
     unnecessarily) (PR #425)
+  - Use same formatting function for outputting floating point Series to console
+    as in DataFrame (PR #420)
 
 **Bug fixes**
 
   - `DataFrame.count` should return Series with zero instead of NA with length-0
     axis (GH #423)
   - Fix Yahoo! Finance API usage in pandas.io.data (GH #419, PR #427)
+  - Fix upstream bug causing failure in Series.align with empty Series (GH #434)
 
 Thanks
 ------
 - Ralph Bean
 - Joon Ro
+- Wouter Overmeire
 
 pandas 0.6.0
 ============
diff --git a/pandas/core/common.py b/pandas/core/common.py
index 329648855..b603028b6 100644
--- a/pandas/core/common.py
+++ b/pandas/core/common.py
@@ -161,7 +161,11 @@ def take_1d(arr, indexer, out=None):
             take_f(arr, indexer, out=out)
         except ValueError:
             mask = indexer == -1
-            out = arr.take(indexer, out=out)
+            if len(arr) == 0:
+                if not out_passed:
+                    out = np.empty(n, dtype=arr.dtype)
+            else:
+                out = arr.take(indexer, out=out)
             if mask.any():
                 if out_passed:
                     raise Exception('out with dtype %s does not support NA' %
diff --git a/pandas/tests/test_series.py b/pandas/tests/test_series.py
index cae6f5cfe..378b18a04 100644
--- a/pandas/tests/test_series.py
+++ b/pandas/tests/test_series.py
@@ -686,6 +686,13 @@ class TestSeries(unittest.TestCase, CheckNameIntegration):
         check_comparators(5)
         check_comparators(self.ts + 1)
 
+    def test_operators_empty_int_corner(self):
+        s1 = Series([], [], dtype=np.int32)
+        s2 = Series({'x' : 0.})
+
+        # it works!
+        _ = s1 * s2
+
     def test_idxmin(self):
         # test idxmin
         # _check_stat_op approach can not be used here because of isnull check.
@@ -1180,6 +1187,15 @@ class TestSeries(unittest.TestCase, CheckNameIntegration):
         for kind in JOIN_TYPES:
             _check_align(self.ts[2:], self.ts[:-5])
 
+            # empty left
+            _check_align(self.ts[:0], self.ts[:-5])
+
+            # empty right
+            _check_align(self.ts[:-5], self.ts[:0])
+
+            # both empty
+            _check_align(self.ts[:0], self.ts[:0])
+
     def test_align_nocopy(self):
         b = self.ts[:5].copy()
 
