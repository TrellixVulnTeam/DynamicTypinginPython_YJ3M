commit 59ed0302d01f146ce1d32ddca78789a62e4e53b8
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Thu Sep 8 23:05:24 2011 -0400

    BUG: address groupby bug described in GH #131

diff --git a/pandas/core/groupby.py b/pandas/core/groupby.py
index 48dfef831..965666833 100644
--- a/pandas/core/groupby.py
+++ b/pandas/core/groupby.py
@@ -938,18 +938,21 @@ class DataFrameGroupBy(GroupBy):
             if len(self.groupings) > 1:
                 keys = MultiIndex.from_tuples(keys, names=key_names)
 
-            # obj = self._obj_with_exclusions
-
-            if self.axis == 0:
-                stacked_values = np.vstack([np.asarray(x) for x in values])
-                columns = values[0].index
-                index = keys
+            if isinstance(values[0], np.ndarray):
+                if self.axis == 0:
+                    stacked_values = np.vstack([np.asarray(x)
+                                                for x in values])
+                    columns = values[0].index
+                    index = keys
+                else:
+                    stacked_values = np.vstack([np.asarray(x)
+                                                for x in values]).T
+                    index = values[0].index
+                    columns = keys
+                return DataFrame(stacked_values, index=index,
+                                 columns=columns)
             else:
-                stacked_values = np.vstack([np.asarray(x) for x in values]).T
-                index = values[0].index
-                columns = keys
-
-            return DataFrame(stacked_values, index=index, columns=columns)
+                return Series(values, index=keys)
 
     def transform(self, func, *args, **kwargs):
         """
diff --git a/pandas/tests/test_groupby.py b/pandas/tests/test_groupby.py
index a73e2d3a1..92da45310 100644
--- a/pandas/tests/test_groupby.py
+++ b/pandas/tests/test_groupby.py
@@ -686,6 +686,12 @@ class TestGroupBy(unittest.TestCase):
         self.assert_(isinstance(result, DataFrame))
         self.assert_(result.index.equals(ts.index))
 
+    def test_apply_frame_to_series(self):
+        grouped = self.df.groupby(['A', 'B'])
+        result = grouped.apply(len)
+        expected = grouped.count()['C']
+        assert_series_equal(result, expected)
+
     def test_apply_transform(self):
         grouped = self.ts.groupby(lambda x: x.month)
         result = grouped.apply(lambda x: x * 2)
