commit e69a794315447064f28a1778eb31dd6c9758a391
Author: Adam Klein <adamklein@gmail.com>
Date:   Sun Feb 26 17:20:10 2012 -0500

    ENH: enable fancy datetime indexing for setting values, per #222

diff --git a/pandas/core/index.py b/pandas/core/index.py
index 971ac3ce3..b9291a679 100644
--- a/pandas/core/index.py
+++ b/pandas/core/index.py
@@ -1463,6 +1463,19 @@ class DatetimeIndex(Int64Index):
             return self._engine.get_value(series,
                                           datetools.to_timestamp(key))
 
+    def get_loc(self, key):
+        """
+        Get integer location for requested label
+
+        Returns
+        -------
+        loc : int
+        """
+        try:
+            return self._engine.get_loc(key)
+        except KeyError:
+            return self._engine.get_loc(datetools.to_timestamp(key))
+
     def __getitem__(self, key):
         """Override numpy.ndarray's __getitem__ method to work as desired"""
         arr_idx = self.view(np.ndarray)
diff --git a/pandas/tests/test_datetime64.py b/pandas/tests/test_datetime64.py
index 381f98bc0..f106a4ec0 100644
--- a/pandas/tests/test_datetime64.py
+++ b/pandas/tests/test_datetime64.py
@@ -8,7 +8,9 @@ import numpy as np
 
 from pandas import Series
 
-from numpy.random import rand, randn
+from numpy.random import rand
+
+from pandas.util.testing import assert_series_equal
 
 class TestDatetime64(unittest.TestCase):
 
@@ -243,6 +245,21 @@ class TestDatetime64(unittest.TestCase):
         self.assertEquals(s[lib.Timestamp(datetime(2009,1,2))], 48)
         self.assertRaises(KeyError, s.__getitem__, '2009-1-3') 
 
+        assert_series_equal(s['3/6/2009':'2009-06-05'],
+                            s[datetime(2009,3,6):datetime(2009,6,5)])
+
+    def test_fancy_setitem(self):
+        dti = DatetimeIndex(offset='WOM@1FRI', start=datetime(2005,1,1),
+                            end=datetime(2010,1,1))
+
+        s = Series(np.arange(len(dti)), index=dti) 
+        s[48] = -1
+        self.assertEquals(s[48], -1)
+        s['1/2/2009'] = -2
+        self.assertEquals(s[48], -2)
+        s['1/2/2009':'2009-06-05'] = -3
+        self.assert_((s[48:54] == -3).all())
+
 if __name__ == '__main__':
     import nose
     nose.runmodule(argv=[__file__,'-vvs','-x','--pdb', '--pdb-failure'],
