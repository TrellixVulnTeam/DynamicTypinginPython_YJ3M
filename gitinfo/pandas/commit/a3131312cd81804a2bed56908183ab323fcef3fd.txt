commit a3131312cd81804a2bed56908183ab323fcef3fd
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Sat Dec 1 15:27:31 2012 -0500

    TST: fix python3.3 build issues (on linux at least) #2331

diff --git a/pandas/__init__.py b/pandas/__init__.py
index 64d9f1442..e868516fc 100644
--- a/pandas/__init__.py
+++ b/pandas/__init__.py
@@ -2,10 +2,6 @@
 
 __docformat__ = 'restructuredtext'
 
-from datetime import datetime
-
-import numpy as np
-
 try:
     from . import hashtable, tslib, lib
 except Exception:  # pragma: no cover
@@ -19,6 +15,9 @@ except Exception:  # pragma: no cover
     else:
         raise
 
+from datetime import datetime
+import numpy as np
+
 from pandas.version import version as __version__
 from pandas.info import __doc__
 
diff --git a/pandas/algos.pyx b/pandas/algos.pyx
index 1bc0d9e74..61b931121 100644
--- a/pandas/algos.pyx
+++ b/pandas/algos.pyx
@@ -44,7 +44,7 @@ cdef extern from "math.h":
     double sqrt(double x)
     double fabs(double)
 
-import lib
+from . import lib
 
 include "skiplist.pyx"
 
diff --git a/pandas/hashtable.pyx b/pandas/hashtable.pyx
index 6220df2b5..2e799bdd5 100644
--- a/pandas/hashtable.pyx
+++ b/pandas/hashtable.pyx
@@ -18,8 +18,6 @@ cnp.import_ufunc()
 
 cdef int64_t iNaT = util.get_nat()
 
-from . import algos
-
 cdef extern from "datetime.h":
     bint PyDateTime_Check(object o)
     void PyDateTime_IMPORT()
diff --git a/pandas/index.pyx b/pandas/index.pyx
index b7934882f..75d6140d1 100644
--- a/pandas/index.pyx
+++ b/pandas/index.pyx
@@ -13,14 +13,11 @@ cimport util
 
 import numpy as np
 
-import algos
-
 cimport tslib
-from tslib import Timestamp
-import tslib
-
 from hashtable cimport *
-import hashtable as _hash
+from . import algos, tslib, hashtable as _hash
+from .tslib import Timestamp
+
 
 from datetime cimport (get_datetime64_value, _pydatetime_to_dts,
                        pandas_datetimestruct)
diff --git a/pandas/tests/test_graphics.py b/pandas/tests/test_graphics.py
index cb52bf13f..e3a9a8972 100644
--- a/pandas/tests/test_graphics.py
+++ b/pandas/tests/test_graphics.py
@@ -14,6 +14,14 @@ from numpy.testing import assert_array_equal
 from numpy.testing.decorators import slow
 import pandas.tools.plotting as plotting
 
+
+def _skip_if_no_scipy():
+    try:
+        import scipy
+    except ImportError:
+        raise nose.SkipTest
+
+
 class TestSeriesPlots(unittest.TestCase):
 
     @classmethod
@@ -136,6 +144,7 @@ class TestSeriesPlots(unittest.TestCase):
 
     @slow
     def test_kde(self):
+        _skip_if_no_scipy()
         _check_plot_works(self.ts.plot, kind='kde')
         _check_plot_works(self.ts.plot, kind='density')
         ax = self.ts.plot(kind='kde', logy=True)
@@ -380,6 +389,7 @@ class TestDataFramePlots(unittest.TestCase):
 
     @slow
     def test_kde(self):
+        _skip_if_no_scipy()
         df = DataFrame(np.random.randn(100, 4))
         _check_plot_works(df.plot, kind='kde')
         _check_plot_works(df.plot, kind='kde', subplots=True)
@@ -435,6 +445,8 @@ class TestDataFramePlots(unittest.TestCase):
 
     @slow
     def test_scatter(self):
+        _skip_if_no_scipy()
+
         df = DataFrame(np.random.randn(100, 4))
         import pandas.tools.plotting as plt
         def scat(**kwds):
diff --git a/pandas/tools/plotting.py b/pandas/tools/plotting.py
index 2013020ec..c9444773b 100644
--- a/pandas/tools/plotting.py
+++ b/pandas/tools/plotting.py
@@ -372,11 +372,15 @@ def bootstrap_plot(series, fig=None, size=50, samples=500, **kwds):
     import random
     import matplotlib
     import matplotlib.pyplot as plt
-    data = series.values
+
+    # random.sample(ndarray, int) fails on python 3.3, sigh
+    data = list(series.values)
     samplings = [random.sample(data, size) for _ in range(samples)]
+
     means = np.array([np.mean(sampling) for sampling in samplings])
     medians = np.array([np.median(sampling) for sampling in samplings])
-    midranges = np.array([(min(sampling) + max(sampling)) * 0.5 for sampling in samplings])
+    midranges = np.array([(min(sampling) + max(sampling)) * 0.5
+                          for sampling in samplings])
     if fig == None:
         fig = plt.figure()
     x = range(samples)
diff --git a/pandas/tseries/tests/test_plotting.py b/pandas/tseries/tests/test_plotting.py
index 435d202c8..3bc6a2243 100644
--- a/pandas/tseries/tests/test_plotting.py
+++ b/pandas/tseries/tests/test_plotting.py
@@ -18,6 +18,14 @@ from pandas.tseries.resample import DatetimeIndex
 from pandas.util.testing import assert_series_equal
 import pandas.util.testing as tm
 
+
+def _skip_if_no_scipy():
+    try:
+        import scipy
+    except ImportError:
+        raise nose.SkipTest
+
+
 class TestTSPlot(unittest.TestCase):
 
     @classmethod
@@ -530,6 +538,8 @@ class TestTSPlot(unittest.TestCase):
 
     @slow
     def test_secondary_kde(self):
+        _skip_if_no_scipy()
+
         import matplotlib.pyplot as plt
         plt.close('all')
         ser = Series(np.random.randn(10))
diff --git a/pandas/tslib.pyx b/pandas/tslib.pyx
index 42aa2f9f7..4dd1a854a 100644
--- a/pandas/tslib.pyx
+++ b/pandas/tslib.pyx
@@ -1,8 +1,10 @@
 # cython: profile=False
-cimport numpy as np
 
+cimport numpy as np
 from numpy cimport (int32_t, int64_t, import_array, ndarray,
                     NPY_INT64, NPY_DATETIME)
+import numpy as np
+
 from cpython cimport *
 
 from libc.stdlib cimport free
@@ -14,7 +16,6 @@ from datetime cimport *
 from khash cimport *
 cimport cython
 
-import numpy as np
 from datetime import timedelta, datetime
 from dateutil.parser import parse as parse_date
 
