commit c15f0808428b5cdb4eaea290fb26a71c3534630b
Author: Irv Lustig <irv@princeton.com>
Date:   Wed Jul 8 18:03:47 2020 -0400

    Fix Issue 34748 - read in datetime as MultiIndex for column headers (#34954)
    
    * Fix Issue 34748 - read in datetime as MultiIndex for column headers
    
    * add more xls file formats
    
    * use testing pattern for other Excel files
    
    * added ods file
    
    * remove xfail for ods test
    
    * skip tests on xlsb with datetimes
    
    Co-authored-by: Will Ayd <william.ayd@icloud.com>

diff --git a/doc/source/whatsnew/v1.1.0.rst b/doc/source/whatsnew/v1.1.0.rst
index 24283d2c2..ce0668917 100644
--- a/doc/source/whatsnew/v1.1.0.rst
+++ b/doc/source/whatsnew/v1.1.0.rst
@@ -1051,6 +1051,7 @@ I/O
 - Bug in :meth:`~HDFStore.create_table` now raises an error when `column` argument was not specified in `data_columns` on input (:issue:`28156`)
 - :meth:`read_json` now could read line-delimited json file from a file url while `lines` and `chunksize` are set.
 - Bug in :meth:`DataFrame.to_sql` when reading DataFrames with ``-np.inf`` entries with MySQL now has a more explicit ``ValueError`` (:issue:`34431`)
+- Bug in "meth"`read_excel` where datetime values are used in the header in a `MultiIndex` (:issue:`34748`)
 
 Plotting
 ^^^^^^^^
diff --git a/pandas/io/parsers.py b/pandas/io/parsers.py
index c427d3a19..d4f346f8c 100644
--- a/pandas/io/parsers.py
+++ b/pandas/io/parsers.py
@@ -1614,7 +1614,7 @@ class ParserBase:
         # Clean the column names (if we have an index_col).
         if len(ic):
             col_names = [
-                r[0] if (len(r[0]) and r[0] not in self.unnamed_cols) else None
+                r[0] if ((r[0] is not None) and r[0] not in self.unnamed_cols) else None
                 for r in header
             ]
         else:
diff --git a/pandas/tests/io/data/excel/test_datetime_mi.ods b/pandas/tests/io/data/excel/test_datetime_mi.ods
new file mode 100644
index 000000000..c37c35060
Binary files /dev/null and b/pandas/tests/io/data/excel/test_datetime_mi.ods differ
diff --git a/pandas/tests/io/data/excel/test_datetime_mi.xls b/pandas/tests/io/data/excel/test_datetime_mi.xls
new file mode 100644
index 000000000..aeade0585
Binary files /dev/null and b/pandas/tests/io/data/excel/test_datetime_mi.xls differ
diff --git a/pandas/tests/io/data/excel/test_datetime_mi.xlsb b/pandas/tests/io/data/excel/test_datetime_mi.xlsb
new file mode 100644
index 000000000..0984c020a
Binary files /dev/null and b/pandas/tests/io/data/excel/test_datetime_mi.xlsb differ
diff --git a/pandas/tests/io/data/excel/test_datetime_mi.xlsm b/pandas/tests/io/data/excel/test_datetime_mi.xlsm
new file mode 100644
index 000000000..55fb88912
Binary files /dev/null and b/pandas/tests/io/data/excel/test_datetime_mi.xlsm differ
diff --git a/pandas/tests/io/data/excel/test_datetime_mi.xlsx b/pandas/tests/io/data/excel/test_datetime_mi.xlsx
new file mode 100644
index 000000000..0ffee0a8b
Binary files /dev/null and b/pandas/tests/io/data/excel/test_datetime_mi.xlsx differ
diff --git a/pandas/tests/io/excel/test_readers.py b/pandas/tests/io/excel/test_readers.py
index 955db982f..ddc631532 100644
--- a/pandas/tests/io/excel/test_readers.py
+++ b/pandas/tests/io/excel/test_readers.py
@@ -1143,3 +1143,22 @@ class TestExcelFileRead:
             filename, sheet_name="Sheet1", index_col=0, header=[0, 1]
         )
         tm.assert_frame_equal(expected, result)
+
+    def test_read_datetime_multiindex(self, engine, read_ext):
+        # GH 34748
+        if engine == "pyxlsb":
+            pytest.xfail("Sheets containing datetimes not supported by pyxlsb")
+
+        f = "test_datetime_mi" + read_ext
+        with pd.ExcelFile(f) as excel:
+            actual = pd.read_excel(excel, header=[0, 1], index_col=0, engine=engine)
+        expected_column_index = pd.MultiIndex.from_tuples(
+            [(pd.to_datetime("02/29/2020"), pd.to_datetime("03/01/2020"))],
+            names=[
+                pd.to_datetime("02/29/2020").to_pydatetime(),
+                pd.to_datetime("03/01/2020").to_pydatetime(),
+            ],
+        )
+        expected = pd.DataFrame([], columns=expected_column_index)
+
+        tm.assert_frame_equal(expected, actual)
