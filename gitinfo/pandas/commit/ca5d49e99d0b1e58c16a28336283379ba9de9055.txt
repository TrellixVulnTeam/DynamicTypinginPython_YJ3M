commit ca5d49e99d0b1e58c16a28336283379ba9de9055
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Tue Nov 27 23:26:51 2012 -0500

    TST: make sort default to False in merge

diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 49e3a24a0..5004195db 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -136,7 +136,7 @@ left_index : boolean, default False
 right_index : boolean, default False
     Use the index from the right DataFrame as the join key. Same caveats as
     left_index
-sort : boolean, default True
+sort : boolean, default False
     Sort the join keys lexicographically in the result DataFrame
 suffixes : 2-length sequence (tuple, list, ...)
     Suffix to apply to overlapping column names in the left and right
@@ -4257,7 +4257,7 @@ class DataFrame(NDFrame):
     @Substitution('')
     @Appender(_merge_doc, indents=2)
     def merge(self, right, how='inner', on=None, left_on=None, right_on=None,
-              left_index=False, right_index=False, sort=True,
+              left_index=False, right_index=False, sort=False,
               suffixes=('_x', '_y'), copy=True):
         from pandas.tools.merge import merge
         return merge(self, right, how=how, on=on,
diff --git a/pandas/tools/merge.py b/pandas/tools/merge.py
index cd3c166c8..fde0332be 100644
--- a/pandas/tools/merge.py
+++ b/pandas/tools/merge.py
@@ -25,7 +25,7 @@ import pandas.lib as lib
 @Substitution('\nleft : DataFrame')
 @Appender(_merge_doc, indents=0)
 def merge(left, right, how='inner', on=None, left_on=None, right_on=None,
-          left_index=False, right_index=False, sort=True,
+          left_index=False, right_index=False, sort=False,
           suffixes=('_x', '_y'), copy=True):
     op = _MergeOperation(left, right, how=how, on=on, left_on=left_on,
                          right_on=right_on, left_index=left_index,
diff --git a/pandas/tools/tests/test_merge.py b/pandas/tools/tests/test_merge.py
index 336db6e3f..2e333317d 100644
--- a/pandas/tools/tests/test_merge.py
+++ b/pandas/tools/tests/test_merge.py
@@ -533,7 +533,7 @@ class TestMerge(unittest.TestCase):
                            'value' : [5, 6, 7, 8]})
 
         merged = left.merge(right, left_on='lkey', right_on='rkey',
-                            how='outer')
+                            how='outer', sort=True)
 
         assert_almost_equal(merged['lkey'],
                             ['bar', 'baz', 'foo', 'foo', 'foo', 'foo', np.nan])
@@ -709,7 +709,8 @@ def _check_merge(x, y):
     for how in ['inner', 'left', 'outer']:
         result = x.join(y, how=how)
 
-        expected = merge(x.reset_index(), y.reset_index(), how=how)
+        expected = merge(x.reset_index(), y.reset_index(), how=how,
+                         sort=True)
         expected = expected.set_index('index')
 
         assert_frame_equal(result, expected)
diff --git a/vb_suite/join_merge.py b/vb_suite/join_merge.py
index b568555c6..b86a7ec7e 100644
--- a/vb_suite/join_merge.py
+++ b/vb_suite/join_merge.py
@@ -80,6 +80,26 @@ join_dataframe_integer_key = Benchmark("merge(df, df2, on='key')", setup,
 #----------------------------------------------------------------------
 # Merges
 
+setup = common_setup + """
+N = 10000
+
+indices = np.array([rands(10) for _ in xrange(N)], dtype='O')
+indices2 = np.array([rands(10) for _ in xrange(N)], dtype='O')
+key = np.tile(indices[:8000], 10)
+key2 = np.tile(indices2[:8000], 10)
+
+left = DataFrame({'key' : key, 'key2':key2,
+                  'value' : np.random.randn(80000)})
+right = DataFrame({'key': indices[2000:], 'key2':indices2[2000:],
+                   'value2' : np.random.randn(8000)})
+"""
+
+merge_2intkey_nosort = Benchmark('merge(left, right, sort=False)', setup,
+                                 start_date=datetime(2011, 10, 20))
+
+merge_2intkey_sort = Benchmark('merge(left, right)', setup,
+                               start_date=datetime(2011, 10, 20))
+
 #----------------------------------------------------------------------
 # Appending DataFrames
 
