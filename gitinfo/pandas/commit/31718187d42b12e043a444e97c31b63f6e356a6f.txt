commit 31718187d42b12e043a444e97c31b63f6e356a6f
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Sun Jul 24 23:48:33 2011 -0400

    ENH: Series can be created without passing an explicit Index

diff --git a/pandas/core/series.py b/pandas/core/series.py
index d7bd15a05..ec416bdb2 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -13,7 +13,8 @@ import warnings
 from numpy import nan, ndarray
 import numpy as np
 
-from pandas.core.common import isnull, notnull, _ensure_index, _is_bool_indexer
+from pandas.core.common import (isnull, notnull, _ensure_index,
+                                _is_bool_indexer, _default_index)
 from pandas.core.daterange import DateRange
 from pandas.core.generic import PandasObject
 from pandas.core.index import Index
@@ -178,7 +179,7 @@ class Series(np.ndarray, PandasObject):
             raise Exception('Data must be 1-dimensional')
 
         if index is None:
-            raise Exception('Index cannot be None!')
+            index = _default_index(len(subarr))
 
         # This is to prevent mixed-type Series getting all casted to
         # NumPy string type, e.g. NaN --> '-1#IND'.
diff --git a/pandas/tests/test_series.py b/pandas/tests/test_series.py
index f5aae39c1..6ddba9402 100644
--- a/pandas/tests/test_series.py
+++ b/pandas/tests/test_series.py
@@ -46,14 +46,16 @@ class TestSeries(unittest.TestCase):
         self.assert_(mixed.dtype == np.object_)
         self.assert_(mixed[1] is np.NaN)
 
-        self.assertRaises(Exception, Series, [0, 1, 2], index=None)
-
         self.assert_(not isinstance(self.empty, TimeSeries))
         self.assert_(not isinstance(Series({}), TimeSeries))
 
         self.assertRaises(Exception, Series, np.random.randn(3, 3),
                           index=np.arange(3))
 
+    def test_constructor_default_index(self):
+        s = Series([0, 1, 2])
+        assert_almost_equal(s.index, np.arange(3))
+
     def test_constructor_corner(self):
         df = common.makeTimeDataFrame()
         objs = [df, df]
