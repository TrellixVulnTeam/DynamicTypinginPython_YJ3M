commit 261839e7b4417a9ef3cbb85d6c7091979ed77165
Author: y-p <yoval@gmx.com>
Date:   Fri May 10 12:00:45 2013 +0300

    BUG: to_html regards empty string labels as repeated labels GH3547

diff --git a/pandas/core/common.py b/pandas/core/common.py
index 4aefa73ae..f71627be1 100644
--- a/pandas/core/common.py
+++ b/pandas/core/common.py
@@ -1812,6 +1812,11 @@ def _where_compat(mask, arr1, arr2):
 
     return np.where(mask, arr1, arr2)
 
+def sentinal_factory():
+    class Sentinal(object):
+        pass
+
+    return Sentinal()
 
 def in_interactive_session():
     """ check if we're running in an interactive shell
diff --git a/pandas/core/format.py b/pandas/core/format.py
index ecce3b542..2924f1579 100644
--- a/pandas/core/format.py
+++ b/pandas/core/format.py
@@ -610,9 +610,11 @@ class HTMLFormatter(TableFormatter):
         if isinstance(self.columns, MultiIndex):
             template = 'colspan="%d" halign="left"'
 
-            levels = self.columns.format(sparsify=True, adjoin=False,
+            # GH3547
+            sentinal = com.sentinal_factory()
+            levels = self.columns.format(sparsify=sentinal, adjoin=False,
                                          names=False)
-            level_lengths = _get_level_lengths(levels)
+            level_lengths = _get_level_lengths(levels,sentinal)
 
             row_levels = self.frame.index.nlevels
 
@@ -703,9 +705,11 @@ class HTMLFormatter(TableFormatter):
         idx_values = zip(*idx_values)
 
         if self.fmt.sparsify:
-            levels = frame.index.format(sparsify=True, adjoin=False,
-                                        names=False)
-            level_lengths = _get_level_lengths(levels)
+
+            # GH3547
+            sentinal = com.sentinal_factory()
+            levels = frame.index.format(sparsify=sentinal, adjoin=False,  names=False)
+            level_lengths = _get_level_lengths(levels,sentinal)
 
             for i in range(len(frame)):
                 row = []
@@ -738,15 +742,14 @@ class HTMLFormatter(TableFormatter):
                 self.write_tr(row, indent, self.indent_delta, tags=None,
                               nindex_levels=frame.index.nlevels)
 
-
-def _get_level_lengths(levels):
+def _get_level_lengths(levels,sentinal=''):
     from itertools import groupby
 
     def _make_grouper():
         record = {'count': 0}
 
         def grouper(x):
-            if x != '':
+            if x != sentinal:
                 record['count'] += 1
             return record['count']
         return grouper
diff --git a/pandas/core/index.py b/pandas/core/index.py
index 4a7981e57..7baae5437 100644
--- a/pandas/core/index.py
+++ b/pandas/core/index.py
@@ -1700,9 +1700,15 @@ class MultiIndex(Index):
             sparsify = get_option("display.multi_sparse")
 
         if sparsify:
+            sentinal = ''
+            # GH3547
+            # use value of sparsify as sentinal,  unless it's an obvious "Truthey" value
+            if sparsify not in [True,1]:
+                sentinal = sparsify
             # little bit of a kludge job for #1217
             result_levels = _sparsify(result_levels,
-                                      start=int(names))
+                                      start=int(names),
+                                      sentinal=sentinal)
 
         if adjoin:
             return com.adjoin(space, *result_levels).split('\n')
@@ -2631,7 +2637,7 @@ class MultiIndex(Index):
 
 # For utility purposes
 
-def _sparsify(label_list, start=0):
+def _sparsify(label_list, start=0,sentinal=''):
     pivoted = zip(*label_list)
     k = len(label_list)
 
@@ -2648,7 +2654,7 @@ def _sparsify(label_list, start=0):
                 break
 
             if p == t:
-                sparse_cur.append('')
+                sparse_cur.append(sentinal)
             else:
                 sparse_cur.extend(cur[i:])
                 result.append(sparse_cur)
