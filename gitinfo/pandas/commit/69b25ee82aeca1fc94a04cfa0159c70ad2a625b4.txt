commit 69b25ee82aeca1fc94a04cfa0159c70ad2a625b4
Author: jbrockmendel <jbrockmendel@gmail.com>
Date:   Tue Aug 13 05:18:35 2019 -0700

    CLN: use invalid_comparison for incorrect case in Index comparison (#27879)

diff --git a/pandas/core/indexes/base.py b/pandas/core/indexes/base.py
index 2fe04f471..36d6f844a 100644
--- a/pandas/core/indexes/base.py
+++ b/pandas/core/indexes/base.py
@@ -116,17 +116,11 @@ def _make_comparison_op(op, cls):
             with np.errstate(all="ignore"):
                 result = op(self.values, np.asarray(other))
 
-        # technically we could support bool dtyped Index
-        # for now just return the indexing array directly
         if is_bool_dtype(result):
             return result
-        try:
-            return Index(result)
-        except TypeError:
-            return result
+        return ops.invalid_comparison(self, other, op)
 
     name = "__{name}__".format(name=op.__name__)
-    # TODO: docstring?
     return set_function_name(cmp_method, name, cls)
 
 
diff --git a/pandas/tests/indexes/test_numpy_compat.py b/pandas/tests/indexes/test_numpy_compat.py
index f9ca1bca0..645ad19ea 100644
--- a/pandas/tests/indexes/test_numpy_compat.py
+++ b/pandas/tests/indexes/test_numpy_compat.py
@@ -118,4 +118,7 @@ def test_elementwise_comparison_warning():
     # this test.
     idx = Index([1, 2])
     with tm.assert_produces_warning(FutureWarning, check_stacklevel=False):
-        idx == "a"
+        result = idx == "a"
+
+    expected = np.array([False, False])
+    tm.assert_numpy_array_equal(result, expected)
