commit 0f0dc80a61534169eca7043fb4bfbc5f44849154
Author: Samesh Lakhotia <43701530+sameshl@users.noreply.github.com>
Date:   Fri Aug 2 18:13:46 2019 +0530

    DOC:Remove DataFrame.append from the 10min intro (#27520)
    
    * DOC:Remove DataFrame.append from the 10min intro
    
    Remove the `append` section from 10 min intro doc as complexity of that is very different than `list.append`
    
    closes #27518

diff --git a/doc/source/getting_started/10min.rst b/doc/source/getting_started/10min.rst
index 510c7ef97..9045e5b32 100644
--- a/doc/source/getting_started/10min.rst
+++ b/doc/source/getting_started/10min.rst
@@ -468,6 +468,13 @@ Concatenating pandas objects together with :func:`concat`:
 
    pd.concat(pieces)
 
+.. note::
+   Adding a column to a ``DataFrame`` is relatively fast. However, adding
+   a row requires a copy, and may be expensive. We recommend passing a
+   pre-built list of records to the ``DataFrame`` constructor instead
+   of building a ``DataFrame`` by iteratively appending records to it.
+   See :ref:`Appending to dataframe <merging.concatenation>` for more.
+
 Join
 ~~~~
 
@@ -491,21 +498,6 @@ Another example that can be given is:
    right
    pd.merge(left, right, on='key')
 
-
-Append
-~~~~~~
-
-Append rows to a dataframe. See the :ref:`Appending <merging.concatenation>`
-section.
-
-.. ipython:: python
-
-   df = pd.DataFrame(np.random.randn(8, 4), columns=['A', 'B', 'C', 'D'])
-   df
-   s = df.iloc[3]
-   df.append(s, ignore_index=True)
-
-
 Grouping
 --------
 
