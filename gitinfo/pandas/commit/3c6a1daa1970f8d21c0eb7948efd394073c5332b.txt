commit 3c6a1daa1970f8d21c0eb7948efd394073c5332b
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Sun Feb 5 17:39:51 2012 -0500

    ENH: speed up DataFrame._get_numeric_data and add vbenchmark #751

diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 32c63e08b..f411a8b8c 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -3498,7 +3498,8 @@ class DataFrame(NDFrame):
 
     def _get_numeric_data(self):
         if self._is_mixed_type:
-            return self.ix[:, self._get_numeric_columns()]
+            num_data = self._data.get_numeric_data()
+            return DataFrame(num_data, copy=False)
         else:
             if self.values.dtype != np.object_:
                 return self
diff --git a/pandas/core/internals.py b/pandas/core/internals.py
index e75321ce8..7cf7eaa7a 100644
--- a/pandas/core/internals.py
+++ b/pandas/core/internals.py
@@ -385,6 +385,22 @@ class BlockManager(object):
         dtypes = [blk.dtype.type for blk in self.blocks]
         return len(dtypes) == len(set(dtypes))
 
+    def get_numeric_data(self, copy=False):
+        num_blocks = [b for b in self.blocks
+                      if isinstance(b, (IntBlock, FloatBlock))]
+
+        indexer = np.sort(np.concatenate([b.ref_locs for b in num_blocks]))
+        new_items = self.items.take(indexer)
+
+        new_blocks = []
+        for b in num_blocks:
+            b = b.copy(deep=False)
+            b.ref_items = new_items
+            new_blocks.append(b)
+        new_axes = list(self.axes)
+        new_axes[0] = new_items
+        return BlockManager(new_blocks, new_axes, do_integrity_check=False)
+
     def get_slice(self, slobj, axis=0):
         new_axes = list(self.axes)
         new_axes[axis] = new_axes[axis][slobj]
diff --git a/vb_suite/frame_ctor.py b/vb_suite/frame_ctor.py
index 72a2a4e0c..b1a73b755 100644
--- a/vb_suite/frame_ctor.py
+++ b/vb_suite/frame_ctor.py
@@ -37,3 +37,16 @@ setup = common_setup + """
 data = dict((i,dict((j,float(j)) for j in xrange(100))) for i in xrange(2000))
 """
 frame_ctor_nested_dict_int64 = Benchmark("DataFrame(data)", setup)
+
+#----------------------------------------------------------------------
+# get_numeric_data
+
+setup = common_setup + """
+df = DataFrame(randn(10000, 25))
+df['foo'] = 'bar'
+df['bar'] = 'baz'
+df = df.consolidate()
+"""
+
+frame_get_numeric_data = Benchmark('df._get_numeric_data()', setup,
+                                   start_date=datetime(2011, 8, 1))
