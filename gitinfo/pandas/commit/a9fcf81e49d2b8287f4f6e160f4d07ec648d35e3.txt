commit a9fcf81e49d2b8287f4f6e160f4d07ec648d35e3
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Thu Jun 30 17:51:45 2011 -0400

    added ascending argument to Series.order

diff --git a/pandas/core/series.py b/pandas/core/series.py
index b5d15516a..5448e2f25 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -863,7 +863,7 @@ class Series(np.ndarray, PandasGeneric):
         else:
             return Series(np.argsort(values), index=self.index)
 
-    def order(self, na_last=True, **kwds):
+    def order(self, na_last=True, ascending=True, **kwds):
         """
         Sorts Series object, by value, maintaining index-value object
 
@@ -894,13 +894,19 @@ class Series(np.ndarray, PandasGeneric):
 
         good = -bad
         idx = np.arange(len(self))
+
+        argsorted = _try_mergesort(arr[good])
+
+        if not ascending:
+            argsorted = argsorted[::-1]
+
         if na_last:
             n = sum(good)
-            sortedIdx[:n] = idx[good][_try_mergesort(arr[good])]
+            sortedIdx[:n] = idx[good][argsorted]
             sortedIdx[n:] = idx[bad]
         else:
             n = sum(bad)
-            sortedIdx[n:] = idx[good][_try_mergesort(arr[good])]
+            sortedIdx[n:] = idx[good][argsorted]
             sortedIdx[:n] = idx[bad]
 
         return Series(arr[sortedIdx], index=self.index[sortedIdx])
diff --git a/pandas/tests/test_series.py b/pandas/tests/test_series.py
index a1395f013..595a66b25 100644
--- a/pandas/tests/test_series.py
+++ b/pandas/tests/test_series.py
@@ -10,7 +10,7 @@ import numpy as np
 
 from pandas import Index, Series, TimeSeries, DataFrame, isnull
 import pandas.core.datetools as datetools
-from pandas.util.testing import assert_series_equal
+from pandas.util.testing import assert_series_equal, assert_almost_equal
 import pandas.util.testing as common
 
 #-------------------------------------------------------------------------------
@@ -623,6 +623,13 @@ class TestSeries(unittest.TestCase):
         # no failure
         ser.order()
 
+        # ascending=False
+        ordered = ts.order(ascending=False)
+        expected = np.sort(ts.valid().values)[::-1]
+        assert_almost_equal(expected, ordered.valid().values)
+        ordered = ts.order(ascending=False, na_last=False)
+        assert_almost_equal(expected, ordered.valid().values)
+
     def test_map(self):
         result = self.ts.map(lambda x: x * 2)
 
diff --git a/test.sh b/test.sh
index 66e3d2014..b92e3fd54 100755
--- a/test.sh
+++ b/test.sh
@@ -1,7 +1,7 @@
 #!/bin/sh
 coverage erase
-# nosetests -w pandas --with-coverage --cover-package=pandas --pdb-failure --pdb
-nosetests -w pandas/io --with-coverage --cover-package=pandas.io --pdb-failure --pdb
+nosetests -w pandas --with-coverage --cover-package=pandas --pdb-failure --pdb
+# nosetests -w pandas/io --with-coverage --cover-package=pandas.io --pdb-failure --pdb
 # nosetests -w pandas/core --with-coverage --cover-package=pandas.core --pdb-failure --pdb
 # nosetests -w pandas/stats --with-coverage --cover-package=pandas.stats
 # coverage run runtests.py
\ No newline at end of file
