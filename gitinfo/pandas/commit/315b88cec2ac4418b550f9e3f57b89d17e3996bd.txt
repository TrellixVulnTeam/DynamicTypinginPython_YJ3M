commit 315b88cec2ac4418b550f9e3f57b89d17e3996bd
Author: Chang She <changshe@gmail.com>
Date:   Sat Nov 12 23:01:35 2011 -0500

    Issue #194 and #92. I ran test_frame and all passed

diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 6f7e5d076..5a9bd1f37 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -1473,7 +1473,7 @@ class DataFrame(NDFrame):
     #----------------------------------------------------------------------
     # Sorting
 
-    def sort(self, column=None, axis=0, ascending=True):
+    def sort(self, columns=None, axis=0, ascending=True):
         """
         Sort DataFrame either by labels (along either axis) or by the values in
         a column
@@ -1492,9 +1492,9 @@ class DataFrame(NDFrame):
         sorted : DataFrame
         """
         by = None
-        if column:
+        if columns:
             assert(axis == 0)
-            by = self[column].values
+            by = self[columns]
         return self.sort_index(by=by, axis=axis, ascending=ascending)
 
     def sort_index(self, axis=0, by=None, ascending=True):
@@ -1507,7 +1507,7 @@ class DataFrame(NDFrame):
         axis : {0, 1}
             Sort index/rows versus columns
         by : object
-            Column name in frame
+            Columns in frame
         ascending : boolean, default True
             Sort ascending vs. descending
 
@@ -1516,17 +1516,24 @@ class DataFrame(NDFrame):
         sorted : DataFrame
         """
         labels = self._get_axis(axis)
-
+        order_list = None
         if by is not None:
-            try:
+            try:                
                 if by in self.columns:
                     assert(axis == 0)
-                by = self[by].values
+                by = self[by]
             except Exception:
                 pass
 
             assert(len(by) == len(labels))
-            sort_index = Series(by, index=labels).order().index
+
+            if isinstance(by, Series):
+                by = by.values
+                sort_index = Series(by, index=labels).order().index
+            elif isinstance(by, DataFrame):
+                type_list = [(col_name, by[col_name].dtype) for col_name in by.columns]
+                sort_arr = np.array([tuple(r) for r in by.values], dtype=type_list)
+                sort_index = labels.take(sort_arr.argsort(order=by.columns))
         else:
             sort_index = labels.take(labels.argsort())
 
@@ -2499,6 +2506,20 @@ class DataFrame(NDFrame):
 
         return self._constructor(correl, index=cols, columns=cols)
 
+    def cov(self):
+        """
+        Compute pairwise covariance of columns, excluding NA/null values
+
+        Returns
+        -------
+        y : DataFrame
+        """
+        cols = self.columns
+        mat = self.as_matrix(cols).T
+        baseCov = np.cov(mat)
+
+        return self._constructor(baseCov, index=cols, columns=cols)
+
     def corrwith(self, other, axis=0, drop=False):
         """
         Compute pairwise correlation between rows or columns of two DataFrame
