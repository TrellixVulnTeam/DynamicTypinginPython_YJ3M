commit 3256b576001a584033e9cd4a70148a0a7e069368
Author: Joe Jevnik <joe@quantopian.com>
Date:   Fri Feb 12 00:08:39 2016 -0500

    BUG: fix NaT support for msgpack format.
    
    closes #12307

diff --git a/doc/source/whatsnew/v0.18.0.txt b/doc/source/whatsnew/v0.18.0.txt
index 9ab0151df..45e0f0b66 100644
--- a/doc/source/whatsnew/v0.18.0.txt
+++ b/doc/source/whatsnew/v0.18.0.txt
@@ -964,7 +964,7 @@ Bug Fixes
 
 - Bug in ``.loc`` setitem indexer preventing the use of a TZ-aware DatetimeIndex (:issue:`12050`)
 - Bug in ``.style`` indexes and multi-indexes not appearing (:issue:`11655`)
-
+- Bug in ``to_msgpack`` and ``from_msgpack`` which did not correctly serialize or deserialize ``NaT`` (:issue:`12307`).
 - Bug in ``.skew`` and ``.kurt`` due to roundoff error for highly similar values (:issue:`11974`)
 
 - Bug in ``buffer_rd_bytes`` src->buffer could be freed more than once if reading failed, causing a segfault (:issue:`12098`)
diff --git a/pandas/io/packers.py b/pandas/io/packers.py
index 33310893a..372c8d80e 100644
--- a/pandas/io/packers.py
+++ b/pandas/io/packers.py
@@ -47,7 +47,8 @@ from pandas import compat
 from pandas.compat import u
 from pandas import (Timestamp, Period, Series, DataFrame,  # noqa
                     Index, MultiIndex, Float64Index, Int64Index,
-                    Panel, RangeIndex, PeriodIndex, DatetimeIndex)
+                    Panel, RangeIndex, PeriodIndex, DatetimeIndex, NaT)
+from pandas.tslib import NaTType
 from pandas.sparse.api import SparseSeries, SparseDataFrame, SparsePanel
 from pandas.sparse.array import BlockIndex, IntIndex
 from pandas.core.generic import NDFrame
@@ -383,7 +384,7 @@ def encode(obj):
                                 } for b in data.blocks]}
 
     elif isinstance(obj, (datetime, date, np.datetime64, timedelta,
-                          np.timedelta64)):
+                          np.timedelta64, NaTType)):
         if isinstance(obj, Timestamp):
             tz = obj.tzinfo
             if tz is not None:
@@ -395,6 +396,8 @@ def encode(obj):
                     'value': obj.value,
                     'offset': offset,
                     'tz': tz}
+        if isinstance(obj, NaTType):
+            return {'typ': 'nat'}
         elif isinstance(obj, np.timedelta64):
             return {'typ': 'timedelta64',
                     'data': obj.view('i8')}
@@ -462,6 +465,8 @@ def decode(obj):
         return obj
     elif typ == 'timestamp':
         return Timestamp(obj['value'], tz=obj['tz'], offset=obj['offset'])
+    elif typ == 'nat':
+        return NaT
     elif typ == 'period':
         return Period(ordinal=obj['ordinal'], freq=obj['freq'])
     elif typ == 'index':
diff --git a/pandas/io/tests/test_packers.py b/pandas/io/tests/test_packers.py
index 4bb34e276..d1c05069b 100644
--- a/pandas/io/tests/test_packers.py
+++ b/pandas/io/tests/test_packers.py
@@ -18,7 +18,7 @@ from pandas.util.testing import (ensure_clean, assert_index_equal,
 from pandas.tests.test_panel import assert_panel_equal
 
 import pandas
-from pandas import Timestamp, tslib
+from pandas import Timestamp, NaT, tslib
 
 nan = np.nan
 
@@ -225,6 +225,10 @@ class TestBasic(TestPackers):
             i_rec = self.encode_decode(i)
             self.assertEqual(i, i_rec)
 
+    def test_nat(self):
+        nat_rec = self.encode_decode(NaT)
+        self.assertIs(NaT, nat_rec)
+
     def test_datetimes(self):
 
         # fails under 2.6/win32 (np.datetime64 seems broken)
