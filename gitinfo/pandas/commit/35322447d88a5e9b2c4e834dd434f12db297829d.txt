commit 35322447d88a5e9b2c4e834dd434f12db297829d
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Fri Sep 7 22:48:23 2012 -0400

    ENH: add args/kwds options to Series.apply like DataFrame.apply close #1829

diff --git a/RELEASE.rst b/RELEASE.rst
index c5404b3a6..ffd8cf05e 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -38,6 +38,7 @@ pandas 0.8.2
   - Parsing of UTC date strings in read_* functions (#1693)
   - Handle generator input to Series (#1679)
   - Add `na_action='ignore'` to Series.map to quietly propagate NAs (#1661)
+  - Add args/kwds options to Series.apply (#1829)
 
 **API Changes**
 
diff --git a/pandas/core/series.py b/pandas/core/series.py
index fa8d3ee83..8c2b4704e 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -1957,7 +1957,7 @@ copy : boolean, default False
             mapped = map_f(values, arg)
             return Series(mapped, index=self.index, name=self.name)
 
-    def apply(self, func, convert_dtype=True):
+    def apply(self, func, convert_dtype=True, args=(), **kwds):
         """
         Invoke function on values of Series. Can be ufunc or Python function
         expecting only single values
@@ -1977,15 +1977,20 @@ copy : boolean, default False
         -------
         y : Series
         """
+        if kwds or args and not isinstance(func, np.ufunc):
+            f = lambda x: func(x, *args, **kwds)
+        else:
+            f = func
+
         try:
-            result = func(self)
+            result = f(self)
             if isinstance(result, np.ndarray):
                 result = Series(result, index=self.index, name=self.name)
             else:
                 raise ValueError('Must yield array')
             return result
         except Exception:
-            mapped = lib.map_infer(self.values, func, convert=convert_dtype)
+            mapped = lib.map_infer(self.values, f, convert=convert_dtype)
             return Series(mapped, index=self.index, name=self.name)
 
     def align(self, other, join='outer', level=None, copy=True,
diff --git a/pandas/tests/test_series.py b/pandas/tests/test_series.py
index a7e0d4f0b..d2d2face3 100644
--- a/pandas/tests/test_series.py
+++ b/pandas/tests/test_series.py
@@ -2354,6 +2354,12 @@ class TestSeries(unittest.TestCase, CheckNameIntegration):
         result = s.apply(f, convert_dtype=False)
         self.assert_(result.dtype == object)
 
+    def test_apply_args(self):
+        s = Series(['foo,bar'])
+
+        result = s.apply(str.split, args=(',',))
+        self.assert_(result[0] == ['foo', 'bar'])
+
     def test_align(self):
         def _check_align(a, b, how='left', fill=None):
             aa, ab = a.align(b, join=how, fill_value=fill)
