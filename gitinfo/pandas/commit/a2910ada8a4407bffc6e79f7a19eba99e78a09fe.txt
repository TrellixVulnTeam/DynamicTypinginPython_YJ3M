commit a2910ada8a4407bffc6e79f7a19eba99e78a09fe
Author: András Novoszáth <nocibambi@gmail.com>
Date:   Sun Mar 11 18:56:01 2018 +0100

    DOC: update the Index.get_values docstring (#20231)
    
    * DOC: update the Index.get_values docstring
    
    * Corrections
    
    * Corrected extended summary and quotes
    
    * Correcting spaces, extended summary, multiIndex example
    
    * See also correction
    
    * Multi ndim

diff --git a/pandas/core/indexes/base.py b/pandas/core/indexes/base.py
index e47854d94..e82b641db 100644
--- a/pandas/core/indexes/base.py
+++ b/pandas/core/indexes/base.py
@@ -681,7 +681,47 @@ class Index(IndexOpsMixin, PandasObject):
         return self.values
 
     def get_values(self):
-        """ return the underlying data as an ndarray """
+        """
+        Return `Index` data as an `numpy.ndarray`.
+
+        Returns
+        -------
+        numpy.ndarray
+            A one-dimensional numpy array of the `Index` values.
+
+        See Also
+        --------
+        Index.values : The attribute that get_values wraps.
+
+        Examples
+        --------
+        Getting the `Index` values of a `DataFrame`:
+
+        >>> df = pd.DataFrame([[1, 2, 3], [4, 5, 6], [7, 8, 9]],
+        ...                    index=['a', 'b', 'c'], columns=['A', 'B', 'C'])
+        >>> df
+           A  B  C
+        a  1  2  3
+        b  4  5  6
+        c  7  8  9
+        >>> df.index.get_values()
+        array(['a', 'b', 'c'], dtype=object)
+
+        Standalone `Index` values:
+
+        >>> idx = pd.Index(['1', '2', '3'])
+        >>> idx.get_values()
+        array(['1', '2', '3'], dtype=object)
+
+        `MultiIndex` arrays also have only one dimension:
+
+        >>> midx = pd.MultiIndex.from_arrays([[1, 2, 3], ['a', 'b', 'c']],
+        ...                                  names=('number', 'letter'))
+        >>> midx.get_values()
+        array([(1, 'a'), (2, 'b'), (3, 'c')], dtype=object)
+        >>> midx.get_values().ndim
+        1
+        """
         return self.values
 
     @Appender(IndexOpsMixin.memory_usage.__doc__)
