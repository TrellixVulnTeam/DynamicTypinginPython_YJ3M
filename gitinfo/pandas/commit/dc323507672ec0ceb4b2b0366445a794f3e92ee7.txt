commit dc323507672ec0ceb4b2b0366445a794f3e92ee7
Author: Joris Van den Bossche <jorisvandenbossche@gmail.com>
Date:   Mon Mar 6 10:32:57 2017 +0100

    API: return Index instead of array from datetime field accessors (GH15022)

diff --git a/pandas/tests/indexes/datetimes/test_misc.py b/pandas/tests/indexes/datetimes/test_misc.py
index 6b0191edb..8fcb26ab5 100644
--- a/pandas/tests/indexes/datetimes/test_misc.py
+++ b/pandas/tests/indexes/datetimes/test_misc.py
@@ -307,5 +307,5 @@ class TestDatetime64(tm.TestCase):
     def test_nanosecond_field(self):
         dti = DatetimeIndex(np.arange(10))
 
-        self.assert_numpy_array_equal(dti.nanosecond,
-                                      np.arange(10, dtype=np.int32))
+        self.assert_index_equal(dti.nanosecond,
+                                pd.Index(np.arange(10, dtype=np.int64)))
diff --git a/pandas/tests/indexes/period/test_construction.py b/pandas/tests/indexes/period/test_construction.py
index f13a84f4f..ab70ad598 100644
--- a/pandas/tests/indexes/period/test_construction.py
+++ b/pandas/tests/indexes/period/test_construction.py
@@ -91,8 +91,8 @@ class TestPeriodIndex(tm.TestCase):
 
         pindex = PeriodIndex(year=years, quarter=quarters)
 
-        self.assert_numpy_array_equal(pindex.year, years)
-        self.assert_numpy_array_equal(pindex.quarter, quarters)
+        self.assert_index_equal(pindex.year, pd.Index(years))
+        self.assert_index_equal(pindex.quarter, pd.Index(quarters))
 
     def test_constructor_invalid_quarters(self):
         self.assertRaises(ValueError, PeriodIndex, year=lrange(2000, 2004),
diff --git a/pandas/tests/indexes/period/test_period.py b/pandas/tests/indexes/period/test_period.py
index 173921198..16b8ce656 100644
--- a/pandas/tests/indexes/period/test_period.py
+++ b/pandas/tests/indexes/period/test_period.py
@@ -653,10 +653,10 @@ class TestPeriodIndex(DatetimeLike, tm.TestCase):
         idx = PeriodIndex(['2011-01', '2011-02', 'NaT',
                            '2012-03', '2012-04'], freq='D')
 
-        exp = np.array([2011, 2011, -1, 2012, 2012], dtype=np.int64)
-        self.assert_numpy_array_equal(idx.year, exp)
-        exp = np.array([1, 2, -1, 3, 4], dtype=np.int64)
-        self.assert_numpy_array_equal(idx.month, exp)
+        exp = Index([2011, 2011, -1, 2012, 2012], dtype=np.int64)
+        self.assert_index_equal(idx.year, exp)
+        exp = Index([1, 2, -1, 3, 4], dtype=np.int64)
+        self.assert_index_equal(idx.month, exp)
 
     def test_pindex_qaccess(self):
         pi = PeriodIndex(['2Q05', '3Q05', '4Q05', '1Q06', '2Q06'], freq='Q')
diff --git a/pandas/tseries/index.py b/pandas/tseries/index.py
index 5f00e8b64..f9821c4b7 100644
--- a/pandas/tseries/index.py
+++ b/pandas/tseries/index.py
@@ -77,16 +77,19 @@ def _field_accessor(name, field, docstring=None):
 
             result = tslib.get_start_end_field(values, field, self.freqstr,
                                                month_kw)
+            result = self._maybe_mask_results(result, convert='float64')
+
         elif field in ['weekday_name']:
             result = tslib.get_date_name_field(values, field)
-            return self._maybe_mask_results(result)
+            result = self._maybe_mask_results(result)
         elif field in ['is_leap_year']:
             # no need to mask NaT
-            return tslib.get_date_field(values, field)
+            result = tslib.get_date_field(values, field)
         else:
             result = tslib.get_date_field(values, field)
+            result = self._maybe_mask_results(result, convert='float64')
 
-        return self._maybe_mask_results(result, convert='float64')
+        return Index(result)
 
     f.__name__ = name
     f.__doc__ = docstring
@@ -1913,9 +1916,9 @@ class DatetimeIndex(DatelikeOps, TimelikeOps, DatetimeIndexOpsMixin,
         """
 
         # http://mysite.verizon.net/aesir_research/date/jdalg2.htm
-        year = self.year
-        month = self.month
-        day = self.day
+        year = np.asarray(self.year)
+        month = np.asarray(self.month)
+        day = np.asarray(self.day)
         testarr = month < 3
         year[testarr] -= 1
         month[testarr] += 12
diff --git a/pandas/tseries/period.py b/pandas/tseries/period.py
index bfe7724a1..56f88b7ed 100644
--- a/pandas/tseries/period.py
+++ b/pandas/tseries/period.py
@@ -52,7 +52,8 @@ _index_doc_kwargs.update(
 def _field_accessor(name, alias, docstring=None):
     def f(self):
         base, mult = _gfc(self.freq)
-        return get_period_field_arr(alias, self._values, base)
+        result = get_period_field_arr(alias, self._values, base)
+        return Index(result)
     f.__name__ = name
     f.__doc__ = docstring
     return property(f)
@@ -585,7 +586,7 @@ class PeriodIndex(DatelikeOps, DatetimeIndexOpsMixin, Int64Index):
     @property
     def is_leap_year(self):
         """ Logical indicating if the date belongs to a leap year """
-        return tslib._isleapyear_arr(self.year)
+        return tslib._isleapyear_arr(np.asarray(self.year))
 
     @property
     def start_time(self):
