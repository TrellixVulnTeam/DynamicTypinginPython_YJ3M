commit 465c59f964c8d71d8bedd16fcaa00e4328177cb1
Author: Jeff Reback <jeff@reback.net>
Date:   Thu Jul 27 05:57:20 2017 -0400

    DOC: fix typos in missing.rst
    
    xref #16972

diff --git a/doc/source/missing_data.rst b/doc/source/missing_data.rst
index e40b7d460..5c10df250 100644
--- a/doc/source/missing_data.rst
+++ b/doc/source/missing_data.rst
@@ -36,7 +36,7 @@ When / why does data become missing?
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 
 Some might quibble over our usage of *missing*. By "missing" we simply mean
-**na** or "not present for whatever reason". Many data sets simply arrive with
+**NA** or "not present for whatever reason". Many data sets simply arrive with
 missing data, either because it exists and was not collected or it never
 existed. For example, in a collection of financial time series, some of the time
 series might start on different dates. Thus, values prior to the start date
@@ -63,12 +63,12 @@ to handling missing data. While ``NaN`` is the default missing value marker for
 reasons of computational speed and convenience, we need to be able to easily
 detect this value with data of different types: floating point, integer,
 boolean, and general object. In many cases, however, the Python ``None`` will
-arise and we wish to also consider that "missing" or "na".
+arise and we wish to also consider that "missing" or "not available" or "NA".
 
 .. note::
 
    Prior to version v0.10.0 ``inf`` and ``-inf`` were also
-   considered to be "na" in computations. This is no longer the case by
+   considered to be "NA" in computations. This is no longer the case by
    default; use the ``mode.use_inf_as_na`` option to recover it.
 
 .. _missing.isna:
@@ -206,7 +206,7 @@ with missing data.
 Filling missing values: fillna
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 
-The **fillna** function can "fill in" NA values with non-na data in a couple
+The **fillna** function can "fill in" NA values with non-NA data in a couple
 of ways, which we illustrate:
 
 **Replace NA with a scalar value**
@@ -220,7 +220,7 @@ of ways, which we illustrate:
 **Fill gaps forward or backward**
 
 Using the same filling arguments as :ref:`reindexing <basics.reindexing>`, we
-can propagate non-na values forward or backward:
+can propagate non-NA values forward or backward:
 
 .. ipython:: python
 
@@ -540,7 +540,7 @@ String/Regular Expression Replacement
    <http://docs.python.org/2/reference/lexical_analysis.html#string-literals>`__
    if this is unclear.
 
-Replace the '.' with ``nan`` (str -> str)
+Replace the '.' with ``NaN`` (str -> str)
 
 .. ipython:: python
 
diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 6c72fa648..e546e96f2 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -3213,7 +3213,7 @@ it is assumed to be aliases for the column names')
     def isnull(self):
         return super(DataFrame, self).isnull()
 
-    @Appender(_shared_docs['isna'] % _shared_doc_kwargs)
+    @Appender(_shared_docs['notna'] % _shared_doc_kwargs)
     def notna(self):
         return super(DataFrame, self).notna()
 
diff --git a/pandas/core/generic.py b/pandas/core/generic.py
index abccd76b2..fbd266557 100644
--- a/pandas/core/generic.py
+++ b/pandas/core/generic.py
@@ -4534,7 +4534,7 @@ it is assumed to be aliases for the column names.')
     # Action Methods
 
     _shared_docs['isna'] = """
-        Return a boolean same-sized object indicating if the values are na.
+        Return a boolean same-sized object indicating if the values are NA.
 
         See Also
         --------
@@ -4553,7 +4553,7 @@ it is assumed to be aliases for the column names.')
 
     _shared_docs['notna'] = """
         Return a boolean same-sized object indicating if the values are
-        not na.
+        not NA.
 
         See Also
         --------
diff --git a/pandas/core/indexes/base.py b/pandas/core/indexes/base.py
index fd9abcfb7..411428e00 100644
--- a/pandas/core/indexes/base.py
+++ b/pandas/core/indexes/base.py
@@ -1852,7 +1852,7 @@ class Index(IndexOpsMixin, StringAccessorMixin, PandasObject):
 
         Returns
         -------
-        a boolean array of whether my values are na
+        a boolean array of whether my values are NA
 
         See also
         --------
@@ -1870,7 +1870,7 @@ class Index(IndexOpsMixin, StringAccessorMixin, PandasObject):
 
         Returns
         -------
-        a boolean array of whether my values are not na
+        a boolean array of whether my values are not NA
 
         See also
         --------
diff --git a/pandas/core/series.py b/pandas/core/series.py
index fb5819b27..60d268c89 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -2792,7 +2792,7 @@ class Series(base.IndexOpsMixin, strings.StringAccessorMixin,
     def isnull(self):
         return super(Series, self).isnull()
 
-    @Appender(generic._shared_docs['isna'] % _shared_doc_kwargs)
+    @Appender(generic._shared_docs['notna'] % _shared_doc_kwargs)
     def notna(self):
         return super(Series, self).notna()
 
