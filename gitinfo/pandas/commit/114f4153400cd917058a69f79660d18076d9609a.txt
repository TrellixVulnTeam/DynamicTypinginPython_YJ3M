commit 114f4153400cd917058a69f79660d18076d9609a
Author: LeakedMemory <elmq0022@umn.edu>
Date:   Fri Jul 27 06:33:15 2018 -0500

    CLN: Remove Legacy MultiIndex Index Compatibility (#21740)

diff --git a/doc/source/whatsnew/v0.24.0.txt b/doc/source/whatsnew/v0.24.0.txt
index 3b04d9937..e311cf34f 100644
--- a/doc/source/whatsnew/v0.24.0.txt
+++ b/doc/source/whatsnew/v0.24.0.txt
@@ -514,7 +514,7 @@ Missing
 MultiIndex
 ^^^^^^^^^^
 
--
+- Removed compatibility for MultiIndex pickles prior to version 0.8.0; compatibility with MultiIndex pickles from version 0.13 forward is maintained (:issue:`21654`)
 -
 -
 
diff --git a/pandas/core/indexes/multi.py b/pandas/core/indexes/multi.py
index 7d24a9013..4912014b4 100644
--- a/pandas/core/indexes/multi.py
+++ b/pandas/core/indexes/multi.py
@@ -824,15 +824,6 @@ class MultiIndex(Index):
         self._tuples = lib.fast_zip(values)
         return self._tuples
 
-    # fml
-    @property
-    def _is_v1(self):
-        return False
-
-    @property
-    def _is_v2(self):
-        return False
-
     @property
     def _has_complex_internals(self):
         # to disable groupby tricks
@@ -2843,22 +2834,6 @@ class MultiIndex(Index):
         return MultiIndex(levels=self.levels, labels=new_labels,
                           names=self.names, verify_integrity=False)
 
-    get_major_bounds = slice_locs
-
-    __bounds = None
-
-    @property
-    def _bounds(self):
-        """
-        Return or compute and return slice points for level 0, assuming
-        sortedness
-        """
-        if self.__bounds is None:
-            inds = np.arange(len(self.levels[0]))
-            self.__bounds = self.labels[0].searchsorted(inds)
-
-        return self.__bounds
-
     def _wrap_joined_index(self, joined, other):
         names = self.names if self.names == other.names else None
         return MultiIndex.from_tuples(joined, names=names)
diff --git a/pandas/tests/indexes/multi/data/mindex_073.pickle b/pandas/tests/indexes/multi/data/mindex_073.pickle
deleted file mode 100644
index c99f51fa2..000000000
Binary files a/pandas/tests/indexes/multi/data/mindex_073.pickle and /dev/null differ
diff --git a/pandas/tests/indexes/multi/data/multiindex_v1.pickle b/pandas/tests/indexes/multi/data/multiindex_v1.pickle
deleted file mode 100644
index d404a78f9..000000000
Binary files a/pandas/tests/indexes/multi/data/multiindex_v1.pickle and /dev/null differ
diff --git a/pandas/tests/indexes/multi/test_analytics.py b/pandas/tests/indexes/multi/test_analytics.py
index 4cc050441..9f6a72f80 100644
--- a/pandas/tests/indexes/multi/test_analytics.py
+++ b/pandas/tests/indexes/multi/test_analytics.py
@@ -15,10 +15,6 @@ def test_shift(idx):
     pytest.raises(NotImplementedError, idx.shift, 1, 2)
 
 
-def test_bounds(idx):
-    idx._bounds
-
-
 def test_groupby(idx):
     groups = idx.groupby(np.array([1, 1, 1, 2, 2, 2]))
     labels = idx.get_values().tolist()
diff --git a/pandas/tests/indexes/multi/test_conversion.py b/pandas/tests/indexes/multi/test_conversion.py
index ab99679af..fcc22390e 100644
--- a/pandas/tests/indexes/multi/test_conversion.py
+++ b/pandas/tests/indexes/multi/test_conversion.py
@@ -4,10 +4,8 @@
 import numpy as np
 import pandas as pd
 import pandas.util.testing as tm
-import pytest
 from pandas import DataFrame, MultiIndex, date_range
-from pandas.compat import PY3, range
-from pandas.util.testing import assert_almost_equal
+from pandas.compat import range
 
 
 def test_tolist(idx):
@@ -93,46 +91,6 @@ def test_to_hierarchical():
     assert result.names == index.names
 
 
-@pytest.mark.skipif(PY3, reason="testing legacy pickles not support on py3")
-def test_legacy_pickle(datapath):
-
-    path = datapath('indexes', 'multi', 'data', 'multiindex_v1.pickle')
-    obj = pd.read_pickle(path)
-
-    obj2 = MultiIndex.from_tuples(obj.values)
-    assert obj.equals(obj2)
-
-    res = obj.get_indexer(obj)
-    exp = np.arange(len(obj), dtype=np.intp)
-    assert_almost_equal(res, exp)
-
-    res = obj.get_indexer(obj2[::-1])
-    exp = obj.get_indexer(obj[::-1])
-    exp2 = obj2.get_indexer(obj2[::-1])
-    assert_almost_equal(res, exp)
-    assert_almost_equal(exp, exp2)
-
-
-def test_legacy_v2_unpickle(datapath):
-
-    # 0.7.3 -> 0.8.0 format manage
-    path = datapath('indexes', 'multi', 'data', 'mindex_073.pickle')
-    obj = pd.read_pickle(path)
-
-    obj2 = MultiIndex.from_tuples(obj.values)
-    assert obj.equals(obj2)
-
-    res = obj.get_indexer(obj)
-    exp = np.arange(len(obj), dtype=np.intp)
-    assert_almost_equal(res, exp)
-
-    res = obj.get_indexer(obj2[::-1])
-    exp = obj.get_indexer(obj[::-1])
-    exp2 = obj2.get_indexer(obj2[::-1])
-    assert_almost_equal(res, exp)
-    assert_almost_equal(exp, exp2)
-
-
 def test_roundtrip_pickle_with_tz():
 
     # GH 8367
@@ -146,6 +104,7 @@ def test_roundtrip_pickle_with_tz():
 
 
 def test_pickle(indices):
+
     unpickled = tm.round_trip_pickle(indices)
     assert indices.equals(unpickled)
     original_name, indices.name = indices.name, 'foo'
