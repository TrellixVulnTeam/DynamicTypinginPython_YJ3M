commit d4494d8eda9c569130ecd29efbd161160020867d
Author: Chang She <chang@lambdafoundry.com>
Date:   Tue May 1 14:09:08 2012 -0400

    ENH: Storing PeriodIndex in HDFStore. GH #1147

diff --git a/pandas/io/pytables.py b/pandas/io/pytables.py
index 91b4fa9c0..97a1cde7a 100644
--- a/pandas/io/pytables.py
+++ b/pandas/io/pytables.py
@@ -10,6 +10,7 @@ import time
 
 import numpy as np
 from pandas import Series, TimeSeries, DataFrame, Panel, Index, MultiIndex
+from pandas.tseries.api import PeriodIndex, DatetimeIndex
 from pandas.core.common import adjoin
 from pandas.core.algorithms import match, unique
 
@@ -485,6 +486,12 @@ class HDFStore(object):
             node._v_attrs.kind = kind
             node._v_attrs.name = index.name
 
+            if isinstance(index, (DatetimeIndex, PeriodIndex)):
+                node._v_attrs.index_class = type(index)
+
+            if hasattr(index, 'freq'):
+                node._v_attrs.freq = index.freq
+
     def _read_index(self, group, key):
         variety = getattr(group._v_attrs, '%s_variety' % key)
 
@@ -543,10 +550,16 @@ class HDFStore(object):
         if 'name' in node._v_attrs:
             name = node._v_attrs.name
 
+        index_class = getattr(node._v_attrs, 'index_class', Index)
+        kwargs = {}
+        if 'freq' in node._v_attrs:
+            kwargs['freq'] = node._v_attrs['freq']
+
         if kind in ('date', 'datetime'):
-            index = Index(_unconvert_index(data, kind), dtype=object)
+            index = index_class(_unconvert_index(data, kind), dtype=object,
+                                **kwargs)
         else:
-            index = Index(_unconvert_index(data, kind))
+            index = index_class(_unconvert_index(data, kind), **kwargs)
 
         index.name = name
 
diff --git a/pandas/io/tests/test_pytables.py b/pandas/io/tests/test_pytables.py
index dd728b4a7..77ee18659 100644
--- a/pandas/io/tests/test_pytables.py
+++ b/pandas/io/tests/test_pytables.py
@@ -11,6 +11,8 @@ import numpy as np
 from pandas import Series, DataFrame, Panel, MultiIndex, bdate_range
 from pandas.io.pytables import HDFStore, get_store
 import pandas.util.testing as tm
+from pandas.tests.test_series import assert_series_equal
+from pandas.tests.test_frame import assert_frame_equal
 
 try:
     import tables
@@ -498,6 +500,43 @@ class TesttHDFStore(unittest.TestCase):
         self.store['a'] = series
         self.assertEquals(self.store['a'].index[0], dt)
 
+    def test_tseries_indices_series(self):
+        idx = tm.makeDateIndex(10)
+        ser = Series(np.random.randn(len(idx)), idx)
+        self.store['a'] = ser
+        result = self.store['a']
+
+        assert_series_equal(result, ser)
+        self.assertEquals(type(result.index), type(ser.index))
+        self.assertEquals(result.index.freq, ser.index.freq)
+
+        idx = tm.makePeriodIndex(10)
+        ser = Series(np.random.randn(len(idx)), idx)
+        self.store['a'] = ser
+        result = self.store['a']
+
+        assert_series_equal(result, ser)
+        self.assertEquals(type(result.index), type(ser.index))
+        self.assertEquals(result.index.freq, ser.index.freq)
+
+    def test_tseries_indices_frame(self):
+        idx = tm.makeDateIndex(10)
+        df = DataFrame(np.random.randn(len(idx), 3), index=idx)
+        self.store['a'] = df
+        result = self.store['a']
+
+        assert_frame_equal(result, df)
+        self.assertEquals(type(result.index), type(df.index))
+        self.assertEquals(result.index.freq, df.index.freq)
+
+        idx = tm.makePeriodIndex(10)
+        df = DataFrame(np.random.randn(len(idx), 3), idx)
+        self.store['a'] = df
+        result = self.store['a']
+
+        assert_frame_equal(result, df)
+        self.assertEquals(type(result.index), type(df.index))
+        self.assertEquals(result.index.freq, df.index.freq)
 
 
 def curpath():
