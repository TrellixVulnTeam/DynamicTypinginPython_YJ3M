commit 4e94fba35a96a24728fa8cb202a0cce2f0ca1812
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Sat Jul 21 12:34:25 2012 -0400

    BUG: get #1620 fix working on python 3

diff --git a/pandas/core/format.py b/pandas/core/format.py
index 019e69582..3a879afc4 100644
--- a/pandas/core/format.py
+++ b/pandas/core/format.py
@@ -132,15 +132,17 @@ class SeriesFormatter(object):
 
 if py3compat.PY3:  # pragma: no cover
     _encode_diff = lambda x: 0
+
+    _strlen = len
 else:
     def _encode_diff(x):
         return len(x) - len(x.decode('utf-8'))
 
-def _strlen(x):
-    try:
-        return len(x.decode('utf-8'))
-    except UnicodeError:
-        return len(x)
+    def _strlen(x):
+        try:
+            return len(x.decode('utf-8'))
+        except UnicodeError:
+            return len(x)
 
 class DataFrameFormatter(object):
     """
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index 861849f0f..aab353a7e 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -2575,14 +2575,15 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
         fmt.reset_printoptions()
 
     def test_repr_unicode(self):
-        df = DataFrame({'A': ['\xc3\xa4\xc3\xa4\xc3\xa4\xc3\xa4',
-                              '\xc3\xbc\xc3\xbc\xc3\xbc\xc3\xbc']})
+        uval = u'\u03c3\u03c3\u03c3\u03c3'
+        bval = uval.encode('utf-8')
+        df = DataFrame({'A': [uval, uval]})
 
         result = repr(df)
         ex_top = '      A'
         self.assertEqual(result.split('\n')[0].rstrip(), ex_top)
 
-        df = DataFrame({'A': [u'\xe4\xe4\xe4\xe4', u'\xfc\xfc\xfc\xfc']})
+        df = DataFrame({'A': [uval, uval]})
         result = repr(df)
         self.assertEqual(result.split('\n')[0].rstrip(), ex_top)
 
diff --git a/pandas/tseries/resample.py b/pandas/tseries/resample.py
index 63ccd4efe..356ea7a76 100644
--- a/pandas/tseries/resample.py
+++ b/pandas/tseries/resample.py
@@ -45,7 +45,7 @@ class TimeGrouper(CustomGrouper):
         self.kind = kind
 
         self.convention = convention or 'E'
-        self.convention = convention.lower()
+        self.convention = self.convention.lower()
 
         self.axis = axis
         self.loffset = loffset
