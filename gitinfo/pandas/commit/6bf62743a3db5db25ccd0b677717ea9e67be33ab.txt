commit 6bf62743a3db5db25ccd0b677717ea9e67be33ab
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Mon May 7 11:36:10 2012 -0400

    BUG: allow assigning non-scalars in mixed-type DataFrame, no index checks performed, close #1142

diff --git a/pandas/core/indexing.py b/pandas/core/indexing.py
index 0b4e83f13..1c636106c 100644
--- a/pandas/core/indexing.py
+++ b/pandas/core/indexing.py
@@ -83,10 +83,6 @@ class _NDFrameIndexer(object):
             if isinstance(het_idx, (int, long)):
                 het_idx = [het_idx]
 
-            if not np.isscalar(value):
-                raise IndexingError('setting on mixed-type frames only '
-                                    'allowed with scalar values')
-
             plane_indexer = indexer[:het_axis] + indexer[het_axis + 1:]
             item_labels = self.obj._get_axis(het_axis)
             for item in item_labels[het_idx]:
@@ -472,7 +468,7 @@ def _is_null_slice(obj):
 
 
 def _is_integer_dtype(arr):
-    return (issubclass(arr.dtype.type, np.integer) and 
+    return (issubclass(arr.dtype.type, np.integer) and
             not arr.dtype.type == np.datetime64)
 
 
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index 03c36971c..9e2ad9471 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -627,6 +627,12 @@ class CheckIndexing(object):
         self.assertRaises(Exception, self.mixed_frame.ix.__setitem__,
                           5, self.mixed_frame.ix[6])
 
+    def test_ix_assign_column_mixed(self):
+        # GH #1142
+        orig = self.mixed_frame.ix[:, 'B'].copy()
+        self.mixed_frame.ix[:, 'B'] = self.mixed_frame.ix[:, 'B'] + 1
+        assert_series_equal(self.mixed_frame.B, orig + 1)
+
     def test_getitem_fancy_1d(self):
         f = self.frame
         ix = f.ix
