commit 2d3a739b448f0368cba75508c19573ca169a16b6
Author: Iván Vallés Pérez <ivanvallesperez@gmail.com>
Date:   Thu Oct 20 06:28:21 2016 -0400

    ERR: Checks for left_index and right_index merge parameters
    
    Author: Iván Vallés Pérez <ivanvallesperez@gmail.com>
    
    Closes #14434 from ivallesp/add-check-for-merge-indices and squashes the following commits:
    
    e18b7c9 [Iván Vallés Pérez] Add some checks for assuring that the left_index and right_index parameters have correct types. Tests added.

diff --git a/doc/source/whatsnew/v0.19.1.txt b/doc/source/whatsnew/v0.19.1.txt
index f9f7f0847..292d9698e 100644
--- a/doc/source/whatsnew/v0.19.1.txt
+++ b/doc/source/whatsnew/v0.19.1.txt
@@ -26,6 +26,7 @@ Performance Improvements
 
 
 
+
 .. _whatsnew_0191.bug_fixes:
 
 Bug Fixes
@@ -42,6 +43,9 @@ Bug Fixes
 
 
 
+- ``pd.merge()`` will raise ``ValueError`` with non-boolean parameters in passed boolean type arguments (:issue:`14434`)
+
+
 
 - Bug in ``pd.concat`` where names of the ``keys`` were not propagated to the resulting ``MultiIndex`` (:issue:`14252`)
 - Bug in ``pd.concat`` where ``axis`` cannot take string parameters ``'rows'`` or ``'columns'`` (:issue:`14369`)
diff --git a/pandas/tools/merge.py b/pandas/tools/merge.py
index ce7f8908d..86e2e8aab 100644
--- a/pandas/tools/merge.py
+++ b/pandas/tools/merge.py
@@ -472,6 +472,15 @@ class _MergeOperation(object):
                 'can not merge DataFrame with instance of '
                 'type {0}'.format(type(right)))
 
+        if not is_bool(left_index):
+            raise ValueError(
+                'left_index parameter must be of type bool, not '
+                '{0}'.format(type(left_index)))
+        if not is_bool(right_index):
+            raise ValueError(
+                'right_index parameter must be of type bool, not '
+                '{0}'.format(type(right_index)))
+
         # warn user when merging between different levels
         if left.columns.nlevels != right.columns.nlevels:
             msg = ('merging between different levels can give an unintended '
diff --git a/pandas/tools/tests/test_merge.py b/pandas/tools/tests/test_merge.py
index 6e36100dd..f07895960 100644
--- a/pandas/tools/tests/test_merge.py
+++ b/pandas/tools/tests/test_merge.py
@@ -109,6 +109,15 @@ class TestMerge(tm.TestCase):
         self.assertRaises(ValueError, merge, self.df, self.df2,
                           left_on=['key1'], right_on=['key1', 'key2'])
 
+    def test_index_and_on_parameters_confusion(self):
+        self.assertRaises(ValueError, merge, self.df, self.df2, how='left',
+                          left_index=False, right_index=['key1', 'key2'])
+        self.assertRaises(ValueError, merge, self.df, self.df2, how='left',
+                          left_index=['key1', 'key2'], right_index=False)
+        self.assertRaises(ValueError, merge, self.df, self.df2, how='left',
+                          left_index=['key1', 'key2'],
+                          right_index=['key1', 'key2'])
+
     def test_merge_overlap(self):
         merged = merge(self.left, self.left, on='key')
         exp_len = (self.left['key'].value_counts() ** 2).sum()
