commit 692a5b94a038cc54fc7e18b77225efcecaccacab
Author: Jeff Reback <jeff@reback.net>
Date:   Wed May 24 06:35:20 2017 -0400

    COMPAT: feather-format 0.4.0 compat (#16475)

diff --git a/ci/requirements-3.5_OSX.sh b/ci/requirements-3.5_OSX.sh
index cfbd2882a..39ea1a0cf 100644
--- a/ci/requirements-3.5_OSX.sh
+++ b/ci/requirements-3.5_OSX.sh
@@ -4,4 +4,4 @@ source activate pandas
 
 echo "install 35_OSX"
 
-conda install -n pandas -c conda-forge feather-format
+conda install -n pandas -c conda-forge feather-format==0.3.1
diff --git a/pandas/tests/io/test_feather.py b/pandas/tests/io/test_feather.py
index 948ab736a..42ad9d3e0 100644
--- a/pandas/tests/io/test_feather.py
+++ b/pandas/tests/io/test_feather.py
@@ -10,6 +10,10 @@ from pandas.io.feather_format import to_feather, read_feather
 from feather import FeatherError
 from pandas.util.testing import assert_frame_equal, ensure_clean
 import pandas.util.testing as tm
+from distutils.version import LooseVersion
+
+
+fv = LooseVersion(feather.__version__)
 
 
 @pytest.mark.single
@@ -57,6 +61,7 @@ class TestFeather(object):
         assert df.dttz.dtype.tz.zone == 'US/Eastern'
         self.check_round_trip(df)
 
+    @pytest.mark.skipif(fv >= '0.4.0', reason='fixed in 0.4.0')
     def test_strided_data_issues(self):
 
         # strided data issuehttps://github.com/wesm/feather/issues/97
@@ -76,12 +81,10 @@ class TestFeather(object):
         df = pd.DataFrame(np.arange(12).reshape(4, 3)).copy()
         self.check_error_on_write(df, ValueError)
 
+    @pytest.mark.skipif(fv >= '0.4.0', reason='fixed in 0.4.0')
     def test_unsupported(self):
 
-        # period
-        df = pd.DataFrame({'a': pd.period_range('2013', freq='M', periods=3)})
-        self.check_error_on_write(df, ValueError)
-
+        # timedelta
         df = pd.DataFrame({'a': pd.timedelta_range('1 day', periods=3)})
         self.check_error_on_write(df, FeatherError)
 
@@ -89,6 +92,12 @@ class TestFeather(object):
         df = pd.DataFrame({'a': ['a', 1, 2.0]})
         self.check_error_on_write(df, ValueError)
 
+    def test_unsupported_other(self):
+
+        # period
+        df = pd.DataFrame({'a': pd.period_range('2013', freq='M', periods=3)})
+        self.check_error_on_write(df, ValueError)
+
     def test_write_with_index(self):
 
         df = pd.DataFrame({'A': [1, 2, 3]})
