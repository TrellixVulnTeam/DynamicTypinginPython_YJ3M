commit b6188d5ddf153a262550eb5da0e00990ead76607
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Fri Aug 19 17:53:57 2011 -0400

    ENH: axis=1 working mostly with hierarch groupby output

diff --git a/pandas/core/groupby.py b/pandas/core/groupby.py
index 9b576679c..01f7d55ec 100644
--- a/pandas/core/groupby.py
+++ b/pandas/core/groupby.py
@@ -916,7 +916,12 @@ def _make_concat_multiindex(indexes, keys, groupings):
 
         # things are potentially different sizes, so compute the exact labels
         # for each level and pass those to MultiIndex.from_arrays
-        for hlevel in zip(*keys):
+        if len(groupings) == 1:
+            zipped = [keys]
+        else:
+            zipped = zip(*keys)
+
+        for hlevel in zipped:
             to_concat = []
             for k, index in zip(hlevel, indexes):
                 to_concat.append(np.repeat(k, len(index)))
diff --git a/pandas/tests/test_groupby.py b/pandas/tests/test_groupby.py
index d1a28d9e3..03360ecd9 100644
--- a/pandas/tests/test_groupby.py
+++ b/pandas/tests/test_groupby.py
@@ -245,10 +245,17 @@ class TestGroupBy(unittest.TestCase):
                                         lambda x: x.month])
         result = grouped.describe()
 
-        for col, ts in self.tsframe.iteritems():
+        for col in self.tsframe:
             expected = grouped[col].describe()
             assert_frame_equal(result[col].unstack(), expected)
 
+        groupedT = self.tsframe.groupby({'A' : 0, 'B' : 0,
+                                         'C' : 1, 'D' : 1}, axis=1)
+        result = groupedT.describe()
+
+        for name, group in groupedT:
+            assert_frame_equal(result[name], group.describe())
+
     def test_frame_groupby(self):
         grouped = self.tsframe.groupby(lambda x: x.weekday())
 
