commit eaa28c9ae54043bb5bf87931e0f9353b8731d45a
Author: K.-Michael Aye <kmichael.aye@gmail.com>
Date:   Sat Apr 7 20:13:31 2012 +0200

    Adding try/expect for openpyxl. Added test for xlsx and test.xlsx file saved from test.xls. Beautified ugly break of DRY principle in ExcelFile.parse

diff --git a/pandas/io/parsers.py b/pandas/io/parsers.py
index c4a136c8c..3c6aebdb6 100644
--- a/pandas/io/parsers.py
+++ b/pandas/io/parsers.py
@@ -748,8 +748,15 @@ class ExcelFile(object):
             import xlrd
             self.book = xlrd.open_workbook(path)
         else:
-            from openpyxl.reader.excel import load_workbook
-            self.book = load_workbook(path, use_iterators=True)
+            try:
+                from openpyxl2.reader.excel import load_workbook
+                self.book = load_workbook(path, use_iterators=True)
+            except ImportError:
+                print("\nFor parsing .xlsx files 'openpyxl' is required.\n"
+                      "You can install it via 'easy_install openpyxl' or 'pip openpyxl'.\n"
+                      "Alternatively, you could save the .xlsx file as a .xls file.\n"
+                      "Parsed nothing for now.\n")
+                return
         self.path = path
 
     def __repr__(self):
@@ -779,18 +786,13 @@ class ExcelFile(object):
         -------
         parsed : DataFrame
         """
-        if self.use_xlsx:
-            return self._parse_xlsx(sheetname, header=header,
-                                    skiprows=skiprows, index_col=index_col,
-                                    parse_dates=parse_dates,
-                                    date_parser=date_parser,
-                                    na_values=na_values, chunksize=chunksize)
-        else:
-            return self._parse_xls(sheetname, header=header, skiprows=skiprows,
-                                   index_col=index_col,
-                                   parse_dates=parse_dates,
-                                   date_parser=date_parser,
-                                   na_values=na_values, chunksize=chunksize)
+        choose = {True:self._pars_xlsx, 
+                  False:self._parse_xls}
+        return choose[self.use_xlsx](sheetname, header=header,
+                                     skiprows=skiprows, index_col=index_col,
+                                     parse_dates=parse_dates,
+                                     date_parser=date_parser,
+                                     na_values=na_values, chunksize=chunksize)
 
     def _parse_xlsx(self, sheetname, header=0, skiprows=None, index_col=None,
               parse_dates=False, date_parser=None, na_values=None,
diff --git a/pandas/io/tests/test.xlsx b/pandas/io/tests/test.xlsx
new file mode 100644
index 000000000..e6d3a0d50
Binary files /dev/null and b/pandas/io/tests/test.xlsx differ
diff --git a/pandas/io/tests/test_parsers.py b/pandas/io/tests/test_parsers.py
index b9500a544..020926879 100644
--- a/pandas/io/tests/test_parsers.py
+++ b/pandas/io/tests/test_parsers.py
@@ -248,6 +248,20 @@ baz,7,8,9
         assert_frame_equal(df, df2)
         assert_frame_equal(df3, df2)
 
+    def test_xlsx_table(self):
+        try:
+            import openpyxl
+        except ImportError:
+            raise nose.SkipTest('openpyxl not installed, skipping')
+
+        pth = os.path.join(self.dirpath, 'test.xlsx')
+        xlsx = ExcelFile(pth)
+        df = xlsx.parse('Sheet1', index_col=0, parse_dates=True)
+        df2 = read_csv(self.csv1, index_col=0, parse_dates=True)
+        df3 = xlsx.parse('Sheet2', skiprows=[1], index_col=0, parse_dates=True)
+        assert_frame_equal(df, df2)
+        assert_frame_equal(df3, df2)
+
     def test_read_table_wrong_num_columns(self):
         data = """A,B,C,D,E,F
 1,2,3,4,5
