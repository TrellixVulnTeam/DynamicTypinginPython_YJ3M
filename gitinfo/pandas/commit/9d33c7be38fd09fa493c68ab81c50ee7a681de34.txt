commit 9d33c7be38fd09fa493c68ab81c50ee7a681de34
Author: Ravi Kumar Nimmi <nimmi.ravikumar@gmail.com>
Date:   Fri Jun 17 18:00:14 2016 -0400

    BUG: fix to_datetime to handle int16 and int8
    
    closes #13451
    
    Author: Ravi Kumar Nimmi <nimmi.ravikumar@gmail.com>
    
    Closes #13464 from ravinimmi/bugfix and squashes the following commits:
    
    dc4944d [Ravi Kumar Nimmi] BUG: fix to_datetime to handle int16 and int8

diff --git a/doc/source/whatsnew/v0.18.2.txt b/doc/source/whatsnew/v0.18.2.txt
index c0251f717..8a14765aa 100644
--- a/doc/source/whatsnew/v0.18.2.txt
+++ b/doc/source/whatsnew/v0.18.2.txt
@@ -504,6 +504,7 @@ Bug Fixes
 
 
 - Bug in ``pd.to_datetime()`` when passing invalid datatypes (e.g. bool); will now respect the ``errors`` keyword (:issue:`13176`)
+- Bug in ``pd.to_datetime()`` which overflowed on ``int8``, `int16`` dtypes (:issue:`13451`)
 - Bug in extension dtype creation where the created types were not is/identical (:issue:`13285`)
 
 - Bug in ``NaT`` - ``Period`` raises ``AttributeError`` (:issue:`13071`)
diff --git a/pandas/tseries/tests/test_timeseries.py b/pandas/tseries/tests/test_timeseries.py
index fcc544ec7..b0caa1f6a 100644
--- a/pandas/tseries/tests/test_timeseries.py
+++ b/pandas/tseries/tests/test_timeseries.py
@@ -2563,6 +2563,33 @@ class TestToDatetime(tm.TestCase):
         with self.assertRaises(ValueError):
             to_datetime(df2)
 
+    def test_dataframe_dtypes(self):
+        # #13451
+        df = DataFrame({'year': [2015, 2016],
+                        'month': [2, 3],
+                        'day': [4, 5]})
+
+        # int16
+        result = to_datetime(df.astype('int16'))
+        expected = Series([Timestamp('20150204 00:00:00'),
+                           Timestamp('20160305 00:00:00')])
+        assert_series_equal(result, expected)
+
+        # mixed dtypes
+        df['month'] = df['month'].astype('int8')
+        df['day'] = df['day'].astype('int8')
+        result = to_datetime(df)
+        expected = Series([Timestamp('20150204 00:00:00'),
+                           Timestamp('20160305 00:00:00')])
+        assert_series_equal(result, expected)
+
+        # float
+        df = DataFrame({'year': [2000, 2001],
+                        'month': [1.5, 1],
+                        'day': [1, 1]})
+        with self.assertRaises(ValueError):
+            to_datetime(df)
+
 
 class TestDatetimeIndex(tm.TestCase):
     _multiprocess_can_split_ = True
diff --git a/pandas/tseries/tools.py b/pandas/tseries/tools.py
index d5e87d1df..efb8590df 100644
--- a/pandas/tseries/tools.py
+++ b/pandas/tseries/tools.py
@@ -508,7 +508,12 @@ def _assemble_from_unit_mappings(arg, errors):
 
     def coerce(values):
         # we allow coercion to if errors allows
-        return to_numeric(values, errors=errors)
+        values = to_numeric(values, errors=errors)
+
+        # prevent overflow in case of int8 or int16
+        if com.is_integer_dtype(values):
+            values = values.astype('int64', copy=False)
+        return values
 
     values = (coerce(arg[unit_rev['year']]) * 10000 +
               coerce(arg[unit_rev['month']]) * 100 +
