commit 3e2a7f4c331db9ee954847fb39c7a3f6e631738b
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Thu May 10 22:59:41 2012 -0400

    BUG: more bug fixes, have to fix intraday frequencies still

diff --git a/pandas/src/period.c b/pandas/src/period.c
index e086b108b..53302bee3 100644
--- a/pandas/src/period.c
+++ b/pandas/src/period.c
@@ -1024,14 +1024,14 @@ npy_int64 get_period_ordinal(int year, int month, int day,
 
     if (freq == FR_SEC) {
         absdays = absdate_from_ymd(year, month, day);
-        delta = (absdays - ORD_OFFSET - HIGHFREQ_ORIG);
-        return (npy_int64)(delta*86400 + hour*3600 + minute*60 + second + 1);
+        delta = (absdays - ORD_OFFSET + HIGHFREQ_ORIG);
+        return (npy_int64)(delta*86400 + hour*3600 + minute*60 + second);
     }
 
     if (freq == FR_MIN) {
         absdays = absdate_from_ymd(year, month, day);
-        delta = (absdays - ORD_OFFSET - HIGHFREQ_ORIG);
-        return (npy_int64)(delta*1440 + hour*60 + minute + 1);
+        delta = (absdays - ORD_OFFSET + HIGHFREQ_ORIG);
+        return (npy_int64)(delta*1440 + hour*60 + minute);
     }
 
     if (freq == FR_HR) {
@@ -1039,8 +1039,8 @@ npy_int64 get_period_ordinal(int year, int month, int day,
         {
             goto onError;
         }
-        delta = (absdays - ORD_OFFSET - HIGHFREQ_ORIG);
-        return (npy_int64)(delta*24 + hour + 1);
+        delta = (absdays - ORD_OFFSET + HIGHFREQ_ORIG);
+        return (npy_int64)(delta*24 + hour);
     }
 
     if (freq == FR_DAY)
@@ -1347,7 +1347,7 @@ static int _quarter_year(npy_int64 ordinal, int freq, int *year, int *quarter) {
     asfreq_info af_info;
     int qtr_freq;
 
-    ordinal = get_python_ordinal(ordinal, freq);
+    ordinal = get_python_ordinal(ordinal, freq) - ORD_OFFSET;
 
     if (get_freq_group(freq) == FR_QTR)
         qtr_freq = freq;
diff --git a/pandas/tseries/period.py b/pandas/tseries/period.py
index c8f921ca9..11dc22cf0 100644
--- a/pandas/tseries/period.py
+++ b/pandas/tseries/period.py
@@ -10,7 +10,6 @@ from pandas.tseries.tools import parse_time_string
 import pandas.tseries.frequencies as _freq_mod
 
 import pandas.core.common as com
-from pandas.util import py3compat
 
 from pandas._tseries import Timestamp
 import pandas._tseries as lib
@@ -470,6 +469,30 @@ def dt64arr_to_periodarr(data, freq):
 
 # --- Period index sketch
 
+
+def _period_index_cmp(opname):
+    """
+    Wrap comparison operations to convert datetime-like to datetime64
+    """
+    def wrapper(self, other):
+        if isinstance(other, Period):
+            func = getattr(self.values, opname)
+            assert(other.freq == self.freq)
+            result = func(other.ordinal)
+        elif isinstance(other, PeriodIndex):
+            assert(other.freq == self.freq)
+            return getattr(self.values, opname)(other.values)
+        else:
+            other = Period(other, freq=self.freq)
+            func = getattr(self.values, opname)
+            result = func(other.ordinal)
+        try:
+            return result.view(np.ndarray)
+        except:
+            return result
+    return wrapper
+
+
 class PeriodIndex(Int64Index):
     """
     Immutable ndarray holding ordinal values indicating regular periods in
@@ -507,6 +530,13 @@ class PeriodIndex(Int64Index):
     """
     _box_scalars = True
 
+    __eq__ = _period_index_cmp('__eq__')
+    __ne__ = _period_index_cmp('__ne__')
+    __lt__ = _period_index_cmp('__lt__')
+    __gt__ = _period_index_cmp('__gt__')
+    __le__ = _period_index_cmp('__le__')
+    __ge__ = _period_index_cmp('__ge__')
+
     def __new__(cls, data=None,
                 freq=None, start=None, end=None, periods=None,
                 copy=False, name=None):
diff --git a/pandas/tseries/tests/test_period.py b/pandas/tseries/tests/test_period.py
index 29a79a355..22f715e9d 100644
--- a/pandas/tseries/tests/test_period.py
+++ b/pandas/tseries/tests/test_period.py
@@ -145,7 +145,7 @@ class TestPeriodProperties(TestCase):
         self.assertEqual(i1, expected)
 
         i1 = Period(ordinal=200701, freq='M')
-        self.assertEqual(i1.year, 16726)
+        self.assertEqual(i1.year, 18695)
 
         self.assertRaises(ValueError, Period, ordinal=200701)
 
@@ -1494,13 +1494,13 @@ class TestPeriodRepresentation(unittest.TestCase):
         self._check_freq('D', '1970-01-01')
 
     def test_hourly(self):
-        self._check_freq('D', '1970-01-01')
+        self._check_freq('H', '1970-01-01')
 
     def test_minutely(self):
-        self._check_freq('H', '1970-01-01 00:00:00')
+        self._check_freq('T', '1970-01-01')
 
     def test_secondly(self):
-        self._check_freq('T', '1970-01-01 00:00:00')
+        self._check_freq('S', '1970-01-01')
 
     def _check_freq(self, freq, base_date):
         rng = PeriodIndex(start=base_date, periods=10, freq=freq)
