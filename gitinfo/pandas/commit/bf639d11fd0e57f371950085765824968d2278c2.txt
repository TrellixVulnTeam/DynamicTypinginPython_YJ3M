commit bf639d11fd0e57f371950085765824968d2278c2
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Fri Oct 14 18:34:36 2011 -0400

    ENH: revert multi-key join attempted speed enhancement, use object arrays always

diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 2001c7b0a..4c17016fe 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -2225,6 +2225,8 @@ class DataFrame(NDFrame):
 
         if isinstance(on, (list, tuple)):
             join_key = zip(*[self[k] for k in on])
+            join_key = common._asarray_tuplesafe(join_key,
+                                                 dtype=np.object_)
         else:
             join_key = np.asarray(self[on])
 
diff --git a/pandas/core/index.py b/pandas/core/index.py
index 9894c2a8c..d54e97fdd 100644
--- a/pandas/core/index.py
+++ b/pandas/core/index.py
@@ -405,22 +405,19 @@ class Index(np.ndarray):
         """
         method = self._get_method(method)
 
+        target = _ensure_index(target)
+
         if self.dtype != target.dtype:
             target = Index(target, dtype=object)
 
         if method == 'pad':
-            target = _ensure_index(target)
             indexer = lib.pad_object(self, target, self.indexMap,
                                      target.indexMap)
         elif method == 'backfill':
-            target = _ensure_index(target)
             indexer = lib.backfill_object(self, target, self.indexMap,
                                           target.indexMap)
         elif method is None:
-            if isinstance(target, list):
-                indexer = lib.merge_indexer_list(target, self.indexMap)
-            else:
-                indexer = lib.merge_indexer_object(target, self.indexMap)
+            indexer = lib.merge_indexer_object(target, self.indexMap)
         else:
             raise ValueError('unrecognized method: %s' % method)
         return indexer
@@ -1259,12 +1256,8 @@ class MultiIndex(Index):
             indexer = lib.backfill_object(self_index, target_index,
                                           self_index.indexMap, target.indexMap)
         else:
-            if isinstance(target_index, list):
-                indexer = lib.merge_indexer_list(target_index,
-                                                 self_index.indexMap)
-            else:
-                indexer = lib.merge_indexer_object(target_index,
-                                                   self_index.indexMap)
+            indexer = lib.merge_indexer_object(target_index,
+                                               self_index.indexMap)
 
         return indexer
 
