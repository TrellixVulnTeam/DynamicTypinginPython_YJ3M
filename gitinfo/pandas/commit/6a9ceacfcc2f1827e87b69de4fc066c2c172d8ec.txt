commit 6a9ceacfcc2f1827e87b69de4fc066c2c172d8ec
Author: Andrew Wieteska <48889395+arw2019@users.noreply.github.com>
Date:   Thu Jun 25 19:24:25 2020 -0400

    BUG: exponential moving window covariance fails for multiIndexed DataFrame (#34943)
    
    * added test for df.ewm.cov with multiindex
    
    * BUG: fixed _flex_binary_moment for multiindex
    
    * added reference to GH issue
    
    * DOC: updated whatnew
    
    * DOC: moved note to rolling section of whatsnew
    
    * changed df to fixed seed, linearly spaced ints
    
    * removed extraneous comment
    
    * TST: hardcoded expected df for test_multiindex_cov
    
    * TST: cleaned up comment + blank line
    
    * TST: clean up index definition

diff --git a/doc/source/whatsnew/v1.1.0.rst b/doc/source/whatsnew/v1.1.0.rst
index 3cd2beaa9..ce0ac1a84 100644
--- a/doc/source/whatsnew/v1.1.0.rst
+++ b/doc/source/whatsnew/v1.1.0.rst
@@ -1061,6 +1061,7 @@ Groupby/resample/rolling
 - Bug in :meth:`SeriesGroupBy.agg` where any column name was accepted in the named aggregation of ``SeriesGroupBy`` previously. The behaviour now allows only ``str`` and callables else would raise ``TypeError``. (:issue:`34422`)
 - Bug in :meth:`DataFrame.groupby` lost index, when one of the ``agg`` keys referenced an empty list (:issue:`32580`)
 - Bug in :meth:`Rolling.apply` where ``center=True`` was ignored when ``engine='numba'`` was specified (:issue:`34784`)
+- Bug in :meth:`DataFrame.ewm.cov` was throwing ``AssertionError`` for :class:`MultiIndex` inputs (:issue:`34440`)
 
 Reshaping
 ^^^^^^^^^
diff --git a/pandas/core/window/common.py b/pandas/core/window/common.py
index 413fe6489..58e7841d4 100644
--- a/pandas/core/window/common.py
+++ b/pandas/core/window/common.py
@@ -179,7 +179,10 @@ def _flex_binary_moment(arg1, arg2, f, pairwise=False):
                         result.index = MultiIndex.from_product(
                             arg2.columns.levels + [result_index]
                         )
-                        result = result.reorder_levels([2, 0, 1]).sort_index()
+                        # GH 34440
+                        num_levels = len(result.index.levels)
+                        new_order = [num_levels - 1] + list(range(num_levels - 1))
+                        result = result.reorder_levels(new_order).sort_index()
                     else:
                         result.index = MultiIndex.from_product(
                             [range(len(arg2.columns)), range(len(result_index))]
diff --git a/pandas/tests/window/test_pairwise.py b/pandas/tests/window/test_pairwise.py
index bb305e93a..e82d4b8cb 100644
--- a/pandas/tests/window/test_pairwise.py
+++ b/pandas/tests/window/test_pairwise.py
@@ -3,7 +3,7 @@ import warnings
 import numpy as np
 import pytest
 
-from pandas import DataFrame, Series, date_range
+from pandas import DataFrame, MultiIndex, Series, date_range
 import pandas._testing as tm
 from pandas.core.algorithms import safe_sort
 
@@ -189,3 +189,28 @@ class TestPairwise:
         result = s.rolling("12H").corr(s)
         expected = Series([np.nan] * 5, index=date_range("2020", periods=5))
         tm.assert_series_equal(result, expected)
+
+    def test_cov_mulittindex(self):
+        # GH 34440
+
+        columns = MultiIndex.from_product([list("ab"), list("xy"), list("AB")])
+        index = range(3)
+        df = DataFrame(np.arange(24).reshape(3, 8), index=index, columns=columns,)
+
+        result = df.ewm(alpha=0.1).cov()
+
+        index = MultiIndex.from_product([range(3), list("ab"), list("xy"), list("AB")])
+        columns = MultiIndex.from_product([list("ab"), list("xy"), list("AB")])
+        expected = DataFrame(
+            np.vstack(
+                (
+                    np.full((8, 8), np.NaN),
+                    np.full((8, 8), 32.000000),
+                    np.full((8, 8), 63.881919),
+                )
+            ),
+            index=index,
+            columns=columns,
+        )
+
+        tm.assert_frame_equal(result, expected)
