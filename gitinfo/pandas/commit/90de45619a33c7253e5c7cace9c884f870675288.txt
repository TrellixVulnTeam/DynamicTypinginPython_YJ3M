commit 90de45619a33c7253e5c7cace9c884f870675288
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Mon Nov 14 03:29:51 2011 -0500

    ENH: refactoring groupby plots, add DataFrame.boxplot function, close PR #287

diff --git a/RELEASE.rst b/RELEASE.rst
index d359e4c5b..1e1f5db57 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -37,7 +37,7 @@ pandas 0.5.1
   - Add `Series.isin` function which checks if each value is contained in a
     passed sequence (GH #289)
   - Add `float_format` option to `Series.to_string`
-  - Add `skip_footer` (GH #291) and `converters` (GH #343 ) options to
+  - Add `skip_footer` (GH #291) and `converters` (GH #343) options to
     `read_csv` and `read_table`
   - Add proper, tested weighted least squares to standard and panel OLS (GH
     #303)
@@ -48,7 +48,7 @@ pandas 0.5.1
   - Add `QuarterEnd` DateOffset (PR #321)
   - Add matrix multiplication function `dot` to DataFrame (GH #65)
   - Add `orient` option to `Panel.from_dict` to ease creation of mixed-type
-    Panels (GH #359)
+    Panels (GH #359, #301)
   - Add `DataFrame.from_dict` with similar `orient` option
   - Can now pass list of tuples or list of lists to `DataFrame.from_records`
     for fast conversion to DataFrame (GH #357)
@@ -64,7 +64,6 @@ pandas 0.5.1
 
 **Improvements to existing features**
 
-  - Sped up `DataFrame.apply` performance in most cases
   - Raise more helpful exception if date parsing fails in DateRange (GH #298)
   - Vastly improved performance of GroupBy on axes with a MultiIndex (GH #299)
   - Print level names in hierarchical index in Series repr (GH #305)
@@ -119,6 +118,9 @@ pandas 0.5.1
   - Change `is_monotonic` on MultiIndex so it properly compares the tuples
   - Fix MultiIndex outer join logic (GH #351)
   - Set index name attribute with single-key groupby (GH #358)
+  - Bug fix in reflexive binary addition in Series and DataFrame for
+    non-commutative operations (like string concatenation) (GH #353)
+  - setupegg.py will invoke Cython (GH #192)
 
 Thanks
 ------
diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index fcc2f296f..45db6eca1 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -3007,6 +3007,31 @@ class DataFrame(NDFrame):
     #----------------------------------------------------------------------
     # Plotting
 
+    def boxplot(self, column=None, by=None, ax=None, fontsize=None,
+                rot=0, grid=True, **kwds):
+        """
+        Make a box plot from DataFrame column/columns optionally grouped
+        (stratified) by one or more columns
+
+        Parameters
+        ----------
+        data : DataFrame
+        column : column names or list of names, or vector
+            Can be any valid input to groupby
+        by : string or sequence
+            Column in the DataFrame to group by
+        fontsize : int or string
+
+        Returns
+        -------
+        ax : matplotlib.axes.AxesSubplot
+        """
+        import pandas.tools.plotting as plots
+        import matplotlib.pyplot as plt
+        ax = plots.boxplot(self, column=column, by=by, ax=ax, fontsize=fontsize,
+                           grid=grid, rot=rot)
+        plt.draw_if_interactive()
+
     def plot(self, subplots=False, sharex=True, sharey=False, use_index=True,
              figsize=None, grid=True, legend=True, rot=30, ax=None,
              kind='line', **kwds):
diff --git a/pandas/tools/plotting.py b/pandas/tools/plotting.py
index 9671d2d3a..f0fa10238 100644
--- a/pandas/tools/plotting.py
+++ b/pandas/tools/plotting.py
@@ -12,7 +12,8 @@ def hist(data, column, by=None, ax=None, fontsize=None):
     ax.set_xticklabels(keys, rotation=0, fontsize=fontsize)
     return ax
 
-def boxplot(data, column, by=None, ax=None, fontsize=None, rot=0):
+def boxplot(data, column=None, by=None, ax=None, fontsize=None,
+            rot=0, grid=True):
     """
     Make a box plot from DataFrame column optionally grouped by some columns or
     other inputs
@@ -30,19 +31,38 @@ def boxplot(data, column, by=None, ax=None, fontsize=None, rot=0):
     -------
     ax : matplotlib.axes.AxesSubplot
     """
-    keys, values = zip(*data.groupby(by)[column])
+    def plot_group(grouped, ax):
+        keys, values = zip(*grouped)
+        keys = [_stringify(x) for x in keys]
+        ax.boxplot(values)
+        ax.set_xticklabels(keys, rotation=rot, fontsize=fontsize)
 
-    if ax is None:
-        ax = plt.gca()
-    ax.boxplot(values)
-    ax.set_xticklabels(keys, rotation=rot, fontsize=fontsize)
+    if by is not None:
+        if not isinstance(by, (list, tuple)):
+            by = [by]
 
-    ax.set_xlabel(str(by))
-    ax.set_ylabel(str(column))
+        columns = None if column is None else [column]
+        fig, axes = _grouped_plot_by_column(plot_group, data, columns=columns,
+                                            by=by)
+        ax = axes
+    else:
+        if ax is None:
+            ax = plt.gca()
 
-    plt.subplots_adjust(bottom=0.15)
+        data = data._get_numeric_data()
+        keys = [_stringify(x) for x in data.columns]
+        ax.boxplot(list(data.values.T))
+        ax.set_xticklabels(keys, rotation=rot, fontsize=fontsize)
+
+    plt.subplots_adjust(bottom=0.15, top=0.9, left=0.1, right=0.9, wspace=0.1)
     return ax
 
+def _stringify(x):
+    if isinstance(x, tuple):
+        return '|'.join(str(y) for y in x)
+    else:
+        return str(x)
+
 def scatter_plot(data, x, y, by=None, ax=None):
     """
 
@@ -66,7 +86,7 @@ def scatter_plot(data, x, y, by=None, ax=None):
 
     return fig
 
-def _grouped_plot(plotf, data, by=None):
+def _grouped_plot(plotf, data, by=None, numeric_only=True):
     grouped = data.groupby(by)
     ngroups = len(grouped)
 
@@ -80,10 +100,40 @@ def _grouped_plot(plotf, data, by=None):
 
     for i, (key, group) in enumerate(grouped):
         ax = ravel_axes[i]
+        if numeric_only:
+            group = group._get_numeric_data()
         plotf(group, ax)
         ax.set_title(str(key))
 
-    return fig
+    return fig, axes
+
+def _grouped_plot_by_column(plotf, data, columns=None, by=None,
+                            numeric_only=True):
+    grouped = data.groupby(by)
+    if columns is None:
+        columns = data.columns - by
+    ngroups = len(columns)
+
+    nrows, ncols = _get_layout(ngroups)
+    fig, axes = plt.subplots(nrows=nrows, ncols=ncols,
+                             sharex=True, sharey=True)
+
+    if isinstance(axes, plt.Axes):
+        ravel_axes = [axes]
+    else:
+        ravel_axes = []
+        for row in axes:
+            ravel_axes.extend(row)
+
+    for i, col in enumerate(columns):
+        ax = ravel_axes[i]
+        gp_col = grouped[col]
+        plotf(gp_col, ax)
+        ax.set_title(col)
+
+    fig.suptitle('Boxplot grouped by %s' % by)
+
+    return fig, axes
 
 def _get_layout(nplots):
     if nplots == 1:
