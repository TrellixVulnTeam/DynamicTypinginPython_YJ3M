commit fb25cca654db9b626a3993bb62a01857807794b4
Author: YG-Riku <rikuhiro@gmail.com>
Date:   Tue Sep 13 18:22:00 2016 -0400

    BUG: iloc fails with non lex-sorted MultiIndex #13797
    
    closes #13797
    
    Author: YG-Riku <rikuhiro@gmail.com>
    
    Closes #14038 from YG-Riku/mi-iloc-fix and squashes the following commits:
    
    1cf86a1 [YG-Riku] BUG: iloc fails with non lex-sorted MultiIndex #13797
    a23c736 [YG-Riku] BUG: iloc fails with non lex-sorted MultiIndex #13797
    072d2a3 [YG-Riku] BUG: iloc fails with non lex-sorted MultiIndex #13797

diff --git a/doc/source/whatsnew/v0.19.0.txt b/doc/source/whatsnew/v0.19.0.txt
index 9c24a023b..5a08a3174 100644
--- a/doc/source/whatsnew/v0.19.0.txt
+++ b/doc/source/whatsnew/v0.19.0.txt
@@ -1514,6 +1514,7 @@ Bug Fixes
 - Bug in ``.set_index`` raises ``AmbiguousTimeError`` if new index contains DST boundary and multi levels (:issue:`12920`)
 - Bug in ``.shift`` raises ``AmbiguousTimeError`` if data contains datetime near DST boundary (:issue:`13926`)
 - Bug in ``pd.read_hdf()`` returns incorrect result when a ``DataFrame`` with a ``categorical`` column and a query which doesn't match any values (:issue:`13792`)
+- Bug in ``.iloc`` when indexing with a non lex-sorted MultiIndex (:issue:`13797`)
 
 
 - Bug in ``Series`` comparison operators when dealing with zero dim NumPy arrays (:issue:`13006`)
diff --git a/pandas/core/indexing.py b/pandas/core/indexing.py
old mode 100644
new mode 100755
index a7cc3b9dd..35fcf0d49
--- a/pandas/core/indexing.py
+++ b/pandas/core/indexing.py
@@ -903,7 +903,9 @@ class _NDFrameIndexer(object):
 
         # we maybe be using a tuple to represent multiple dimensions here
         ax0 = self.obj._get_axis(0)
-        if isinstance(ax0, MultiIndex):
+        # ...but iloc should handle the tuple as simple integer-location
+        # instead of checking it as multiindex representation (GH 13797)
+        if isinstance(ax0, MultiIndex) and self.name != 'iloc':
             result = self._handle_lowerdim_multi_index_axis0(tup)
             if result is not None:
                 return result
diff --git a/pandas/tests/test_multilevel.py b/pandas/tests/test_multilevel.py
old mode 100644
new mode 100755
index f3b0beccc..516c406f8
--- a/pandas/tests/test_multilevel.py
+++ b/pandas/tests/test_multilevel.py
@@ -2420,6 +2420,34 @@ Thur,Lunch,Yes,51.51,17"""
         m_df = pd.Series(data, index=m_idx)
         assert m_df.repeat(3).shape == (3 * len(data), )
 
+    def test_iloc_mi(self):
+        # GH 13797
+        # Test if iloc can handle integer locations in MultiIndexed DataFrame
+
+        data = [
+            ['str00', 'str01'],
+            ['str10', 'str11'],
+            ['str20', 'srt21'],
+            ['str30', 'str31'],
+            ['str40', 'str41']
+        ]
+
+        mi = pd.MultiIndex.from_tuples(
+            [('CC', 'A'),
+             ('CC', 'B'),
+             ('CC', 'B'),
+             ('BB', 'a'),
+             ('BB', 'b')
+             ])
+
+        expected = pd.DataFrame(data)
+        df_mi = pd.DataFrame(data, index=mi)
+
+        result = pd.DataFrame([[df_mi.iloc[r, c] for c in range(2)]
+                               for r in range(5)])
+
+        assert_frame_equal(result, expected)
+
 
 if __name__ == '__main__':
     nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
