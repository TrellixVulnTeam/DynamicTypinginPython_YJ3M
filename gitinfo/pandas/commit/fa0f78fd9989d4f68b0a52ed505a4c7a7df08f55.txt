commit fa0f78fd9989d4f68b0a52ed505a4c7a7df08f55
Author: sinhrks <sinhrks@gmail.com>
Date:   Sun May 25 20:26:41 2014 +0900

    BUG: hist raises TypeError when df contains non numeric column

diff --git a/doc/source/v0.14.1.txt b/doc/source/v0.14.1.txt
index a97e29add..5e1d237b2 100644
--- a/doc/source/v0.14.1.txt
+++ b/doc/source/v0.14.1.txt
@@ -69,3 +69,4 @@ Bug Fixes
 - Bug in ``TimeGrouper`` doesn't exclude column specified by ``key`` (:issue:`7227`)
 - Bug in ``DataFrame`` and ``Series`` bar and barh plot raises ``TypeError`` when ``bottom``
   and ``left`` keyword is specified (:issue:`7226`)
+- BUG in ``DataFrame.hist`` raises ``TypeError`` when it contains non numeric column (:issue:`7277`)
diff --git a/pandas/tests/test_graphics.py b/pandas/tests/test_graphics.py
index 7281b3cf6..bcee95db4 100644
--- a/pandas/tests/test_graphics.py
+++ b/pandas/tests/test_graphics.py
@@ -1493,14 +1493,12 @@ class TestDataFramePlots(TestPlotBase):
 
     @slow
     def test_hist(self):
-        df = DataFrame(randn(100, 4))
-        _check_plot_works(df.hist)
-        _check_plot_works(df.hist, grid=False)
+        _check_plot_works(self.hist_df.hist)
 
         # make sure layout is handled
         df = DataFrame(randn(100, 3))
-        _check_plot_works(df.hist)
-        axes = df.hist(grid=False)
+        axes = _check_plot_works(df.hist, grid=False)
+        self._check_axes_shape(axes, axes_num=3, layout=(2, 2))
         self.assertFalse(axes[1, 1].get_visible())
 
         df = DataFrame(randn(100, 1))
@@ -1508,7 +1506,8 @@ class TestDataFramePlots(TestPlotBase):
 
         # make sure layout is handled
         df = DataFrame(randn(100, 6))
-        _check_plot_works(df.hist)
+        axes = _check_plot_works(df.hist, layout=(4, 2))
+        self._check_axes_shape(axes, axes_num=6, layout=(4, 2))
 
         # make sure sharex, sharey is handled
         _check_plot_works(df.hist, sharex=True, sharey=True)
diff --git a/pandas/tests/test_groupby.py b/pandas/tests/test_groupby.py
index 028334afb..475f5085d 100644
--- a/pandas/tests/test_groupby.py
+++ b/pandas/tests/test_groupby.py
@@ -4086,7 +4086,8 @@ class TestGroupBy(tm.TestCase):
         n = 10
         weight = Series(np.random.normal(166, 20, size=n))
         height = Series(np.random.normal(60, 10, size=n))
-        gender = tm.choice(['male', 'female'], size=n)
+        with tm.RNGContext(42):
+            gender = tm.choice(['male', 'female'], size=n)
 
         weight.groupby(gender).plot()
         tm.close()
@@ -4118,7 +4119,8 @@ class TestGroupBy(tm.TestCase):
         n = 10
         weight = Series(np.random.normal(166, 20, size=n))
         height = Series(np.random.normal(60, 10, size=n))
-        gender = tm.choice(['male', 'female'], size=n)
+        with tm.RNGContext(42):
+            gender = tm.choice(['male', 'female'], size=n)
         df = DataFrame({'height': height, 'weight': weight, 'gender': gender})
         gb = df.groupby('gender')
 
@@ -4136,11 +4138,6 @@ class TestGroupBy(tm.TestCase):
         res = df.groupby('gender').hist()
         tm.close()
 
-        df2 = df.copy()
-        df2['gender2'] = df['gender']
-        with tm.assertRaisesRegexp(TypeError, '.*str.+float'):
-            df2.groupby('gender').hist()
-
     @slow
     def test_frame_groupby_hist(self):
         _skip_if_mpl_not_installed()
@@ -4152,7 +4149,8 @@ class TestGroupBy(tm.TestCase):
         n = 10
         weight = Series(np.random.normal(166, 20, size=n))
         height = Series(np.random.normal(60, 10, size=n))
-        gender_int = tm.choice([0, 1], size=n)
+        with tm.RNGContext(42):
+            gender_int = tm.choice([0, 1], size=n)
         df_int = DataFrame({'height': height, 'weight': weight,
                             'gender': gender_int})
         gb = df_int.groupby('gender')
diff --git a/pandas/tools/plotting.py b/pandas/tools/plotting.py
index adbed6169..814c1f60c 100644
--- a/pandas/tools/plotting.py
+++ b/pandas/tools/plotting.py
@@ -2545,6 +2545,7 @@ def hist_frame(data, column=None, by=None, grid=True, xlabelsize=None,
         if not isinstance(column, (list, np.ndarray)):
             column = [column]
         data = data[column]
+    data = data._get_numeric_data()
     naxes = len(data.columns)
 
     nrows, ncols = _get_layout(naxes, layout=layout)
