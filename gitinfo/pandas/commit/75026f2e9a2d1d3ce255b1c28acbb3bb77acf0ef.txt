commit 75026f2e9a2d1d3ce255b1c28acbb3bb77acf0ef
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Sun Nov 13 18:13:57 2011 -0500

    ENH: int64 type handling fix, tweaks, GH #309

diff --git a/RELEASE.rst b/RELEASE.rst
index c35d219a0..d9c39ae43 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -59,7 +59,6 @@ pandas 0.5.1
     micro-performance tweaks (GH #360)
   - Add `cov` instance methods to Series and DataFrame (GH #194, PR #362)
 
-
 **Improvements to existing features**
 
   - Sped up `DataFrame.apply` performance in most cases
@@ -84,6 +83,10 @@ pandas 0.5.1
     motivated by PR #355
   - Cythonized `cache_readonly`, resulting in substantial micro-performance
     enhancements throughout the codebase (GH #361)
+  - Special Cython matrix iterator for applying arbitrary reduction operations
+    with 3-5x better performance than `np.apply_along_axis` (GH #309)
+  - Add `raw` option to `DataFrame.apply` for getting better performance when
+    the passed function only requires an ndarray (GH #309)
 
 **Bug fixes**
 
diff --git a/pandas/src/reduce.pyx b/pandas/src/reduce.pyx
index 262aa2f9d..765a73476 100644
--- a/pandas/src/reduce.pyx
+++ b/pandas/src/reduce.pyx
@@ -54,18 +54,21 @@ cdef class Reducer:
         arr = self.arr
         chunk = self.dummy
 
-        result = np.empty(self.nresults, dtype=self.arr.dtype)
-        it = <flatiter> PyArray_IterNew(result)
-
-        test = self.f(self.chunk)
+        test = self.f(chunk)
         try:
+            assert(not isinstance(test, np.ndarray))
+            if hasattr(test, 'dtype'):
+                result = np.empty(self.nresults, dtype=test.dtype)
+            else:
+                result = np.empty(self.nresults, dtype='O')
             result[0] = test
         except Exception:
             raise ValueError('function does not reduce')
 
+        it = <flatiter> PyArray_IterNew(result)
+
         dummy_buf = chunk.data
         chunk.data = arr.data
-
         try:
             for i in range(self.nresults):
                 PyArray_SETITEM(result, PyArray_ITER_DATA(it),
@@ -76,6 +79,9 @@ cdef class Reducer:
             # so we don't free the wrong memory
             chunk.data = dummy_buf
 
+        if result.dtype == np.object_:
+            result = maybe_convert_objects(result)
+
         return result
 
 def reduce(arr, f, axis=0, dummy=None):
diff --git a/pandas/src/sandbox.pyx b/pandas/src/sandbox.pyx
index a019930eb..98ab8f1ed 100644
--- a/pandas/src/sandbox.pyx
+++ b/pandas/src/sandbox.pyx
@@ -10,3 +10,7 @@ cdef class SeriesIterator:
 
     def next(self):
         pass
+
+def foo(object o):
+    cdef int64_t bar = o
+    return bar
