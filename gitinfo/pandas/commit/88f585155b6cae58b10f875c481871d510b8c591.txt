commit 88f585155b6cae58b10f875c481871d510b8c591
Author: Tom Augspurger <TomAugspurger@users.noreply.github.com>
Date:   Sat Apr 8 11:11:09 2017 -0500

    DOC: Use nbsphinx for notebook doc build (#15581)
    
    Adds a new doc-dependency nbsphinx for converting jupyter notebooks
    to ReST, which works better with the sphinx conversion process.
    Remvoes the hacky notebook -> HTML -> raw include we had before.

diff --git a/ci/requirements-3.5_DOC.run b/ci/requirements-3.5_DOC.run
index 740d4714e..7ed607586 100644
--- a/ci/requirements-3.5_DOC.run
+++ b/ci/requirements-3.5_DOC.run
@@ -5,6 +5,7 @@ nbconvert
 nbformat
 notebook
 matplotlib
+seaborn
 scipy
 lxml
 beautifulsoup4
diff --git a/ci/requirements-3.5_DOC.sh b/ci/requirements-3.5_DOC.sh
index 1a5d4643e..e43e483d7 100644
--- a/ci/requirements-3.5_DOC.sh
+++ b/ci/requirements-3.5_DOC.sh
@@ -6,6 +6,6 @@ echo "[install DOC_BUILD deps]"
 
 pip install pandas-gbq
 
-conda install -n pandas -c conda-forge feather-format
+conda install -n pandas -c conda-forge feather-format nbsphinx pandoc
 
 conda install -n pandas -c r r rpy2 --yes
diff --git a/ci/requirements_all.txt b/ci/requirements_all.txt
index 4ff80a478..e9f49ed87 100644
--- a/ci/requirements_all.txt
+++ b/ci/requirements_all.txt
@@ -3,6 +3,7 @@ pytest-cov
 pytest-xdist
 flake8
 sphinx
+nbsphinx
 ipython
 python-dateutil
 pytz
@@ -19,6 +20,7 @@ scipy
 numexpr
 pytables
 matplotlib
+seaborn
 lxml
 sqlalchemy
 bottleneck
diff --git a/doc/README.rst b/doc/README.rst
index a3733846d..0ea3234de 100644
--- a/doc/README.rst
+++ b/doc/README.rst
@@ -81,7 +81,9 @@ have ``sphinx`` and ``ipython`` installed. `numpydoc
 <https://github.com/numpy/numpydoc>`_ is used to parse the docstrings that
 follow the Numpy Docstring Standard (see above), but you don't need to install
 this because a local copy of ``numpydoc`` is included in the pandas source
-code.
+code. `nbsphinx <https://nbsphinx.readthedocs.io/>`_ is used to convert
+Jupyter notebooks. You will need to install it if you intend to modify any of
+the notebooks included in the documentation.
 
 Furthermore, it is recommended to have all `optional dependencies
 <http://pandas.pydata.org/pandas-docs/dev/install.html#optional-dependencies>`_
diff --git a/doc/make.py b/doc/make.py
index 30cd2ad8b..e70655c3e 100755
--- a/doc/make.py
+++ b/doc/make.py
@@ -106,106 +106,42 @@ def clean():
 
 
 @contextmanager
-def cleanup_nb(nb):
-    try:
-        yield
-    finally:
-        try:
-            os.remove(nb + '.executed')
-        except OSError:
-            pass
-
-
-def get_kernel():
-    """Find the kernel name for your python version"""
-    return 'python%s' % sys.version_info.major
-
-
-def execute_nb(src, dst, allow_errors=False, timeout=1000, kernel_name=''):
-    """
-    Execute notebook in `src` and write the output to `dst`
-
-    Parameters
-    ----------
-    src, dst: str
-        path to notebook
-    allow_errors: bool
-    timeout: int
-    kernel_name: str
-        defualts to value set in notebook metadata
-
-    Returns
-    -------
-    dst: str
-    """
-    import nbformat
-    from nbconvert.preprocessors import ExecutePreprocessor
-
-    with io.open(src, encoding='utf-8') as f:
-        nb = nbformat.read(f, as_version=4)
-
-    ep = ExecutePreprocessor(allow_errors=allow_errors,
-                             timeout=timeout,
-                             kernel_name=kernel_name)
-    ep.preprocess(nb, resources={})
-
-    with io.open(dst, 'wt', encoding='utf-8') as f:
-        nbformat.write(nb, f)
-    return dst
-
-
-def convert_nb(src, dst, to='html', template_file='basic'):
+def maybe_exclude_notebooks():
     """
-    Convert a notebook `src`.
-
-    Parameters
-    ----------
-    src, dst: str
-        filepaths
-    to: {'rst', 'html'}
-        format to export to
-    template_file: str
-        name of template file to use. Default 'basic'
+    Skip building the notebooks if pandoc is not installed.
+    This assumes that nbsphinx is installed.
     """
-    from nbconvert import HTMLExporter, RSTExporter
-
-    dispatch = {'rst': RSTExporter, 'html': HTMLExporter}
-    exporter = dispatch[to.lower()](template_file=template_file)
-
-    (body, resources) = exporter.from_filename(src)
-    with io.open(dst, 'wt', encoding='utf-8') as f:
-        f.write(body)
-    return dst
+    base = os.path.dirname(__file__)
+    notebooks = [os.path.join(base, 'source', nb)
+                 for nb in ['style.ipynb']]
+    contents = {}
+    try:
+        import nbconvert
+        nbconvert.utils.pandoc.get_pandoc_version()
+    except (ImportError, nbconvert.utils.pandoc.PandocMissing):
+        print("Warning: Pandoc is not installed. Skipping Notebooks.")
+        for nb in notebooks:
+            with open(nb, 'rt') as f:
+                contents[nb] = f.read()
+            os.remove(nb)
+    yield
+    for nb, content in contents.items():
+        with open(nb, 'wt') as f:
+            f.write(content)
 
 
 def html():
     check_build()
 
-    notebooks = [
-        'source/html-styling.ipynb',
-    ]
-
-    for nb in notebooks:
-        with cleanup_nb(nb):
-            try:
-                print("Converting %s" % nb)
-                kernel_name = get_kernel()
-                executed = execute_nb(nb, nb + '.executed', allow_errors=True,
-                                      kernel_name=kernel_name)
-                convert_nb(executed, nb.rstrip('.ipynb') + '.html')
-            except (ImportError, IndexError) as e:
-                print(e)
-                print("Failed to convert %s" % nb)
-
-    if os.system('sphinx-build -P -b html -d build/doctrees '
-                 'source build/html'):
-        raise SystemExit("Building HTML failed.")
-    try:
-        # remove stale file
-        os.remove('source/html-styling.html')
-        os.remove('build/html/pandas.zip')
-    except:
-        pass
+    with maybe_exclude_notebooks():
+        if os.system('sphinx-build -P -b html -d build/doctrees '
+                     'source build/html'):
+            raise SystemExit("Building HTML failed.")
+        try:
+            # remove stale file
+            os.remove('build/html/pandas.zip')
+        except:
+            pass
 
 
 def zip_html():
diff --git a/doc/source/conf.py b/doc/source/conf.py
index 0b0de1641..a2a6dca57 100644
--- a/doc/source/conf.py
+++ b/doc/source/conf.py
@@ -52,14 +52,16 @@ extensions = ['sphinx.ext.autodoc',
               'numpydoc', # used to parse numpy-style docstrings for autodoc
               'ipython_sphinxext.ipython_directive',
               'ipython_sphinxext.ipython_console_highlighting',
+              'IPython.sphinxext.ipython_console_highlighting',  # lowercase didn't work
               'sphinx.ext.intersphinx',
               'sphinx.ext.coverage',
               'sphinx.ext.mathjax',
               'sphinx.ext.ifconfig',
               'sphinx.ext.linkcode',
+              'nbsphinx',
               ]
 
-
+exclude_patterns = ['**.ipynb_checkpoints']
 
 with open("index.rst") as f:
     index_rst_lines = f.readlines()
@@ -70,15 +72,16 @@ with open("index.rst") as f:
 # JP: added from sphinxdocs
 autosummary_generate = False
 
-if any([re.match("\s*api\s*",l) for l in index_rst_lines]):
+if any([re.match("\s*api\s*", l) for l in index_rst_lines]):
     autosummary_generate = True
 
 files_to_delete = []
 for f in os.listdir(os.path.dirname(__file__)):
-    if not f.endswith('.rst') or f.startswith('.') or os.path.basename(f) == 'index.rst':
+    if (not f.endswith(('.ipynb', '.rst')) or
+            f.startswith('.') or os.path.basename(f) == 'index.rst'):
         continue
 
-    _file_basename = f.split('.rst')[0]
+    _file_basename = os.path.splitext(f)[0]
     _regex_to_match = "\s*{}\s*$".format(_file_basename)
     if not any([re.match(_regex_to_match, line) for line in index_rst_lines]):
         files_to_delete.append(f)
@@ -261,6 +264,9 @@ html_use_modindex = True
 # Output file base name for HTML help builder.
 htmlhelp_basename = 'pandas'
 
+# -- Options for nbsphinx ------------------------------------------------
+
+nbsphinx_allow_errors = True
 
 # -- Options for LaTeX output --------------------------------------------
 
diff --git a/doc/source/contributing.rst b/doc/source/contributing.rst
index 8af7de688..aac1e4ead 100644
--- a/doc/source/contributing.rst
+++ b/doc/source/contributing.rst
@@ -347,15 +347,14 @@ have ``sphinx`` and ``ipython`` installed. `numpydoc
 <https://github.com/numpy/numpydoc>`_ is used to parse the docstrings that
 follow the Numpy Docstring Standard (see above), but you don't need to install
 this because a local copy of numpydoc is included in the *pandas* source
-code.
-`nbconvert <https://nbconvert.readthedocs.io/en/latest/>`_ and
-`nbformat <https://nbformat.readthedocs.io/en/latest/>`_ are required to build
+code. `nbsphinx <https://nbsphinx.readthedocs.io/>`_ is required to build
 the Jupyter notebooks included in the documentation.
 
 If you have a conda environment named ``pandas_dev``, you can install the extra
 requirements with::
 
       conda install -n pandas_dev sphinx ipython nbconvert nbformat
+      conda install -n pandas_dev -c conda-forge nbsphinx
 
 Furthermore, it is recommended to have all :ref:`optional dependencies <install.optional_dependencies>`.
 installed. This is not strictly necessary, but be aware that you will see some error
diff --git a/doc/source/html-styling.ipynb b/doc/source/style.ipynb
similarity index 95%
rename from doc/source/html-styling.ipynb
rename to doc/source/style.ipynb
index 1a97378fd..7e408f96f 100644
--- a/doc/source/html-styling.ipynb
+++ b/doc/source/style.ipynb
@@ -4,9 +4,11 @@
    "cell_type": "markdown",
    "metadata": {},
    "source": [
+    "# HTML Styling\n",
+    "\n",
     "*New in version 0.17.1*\n",
     "\n",
-    "<p style=\"color: red\">*Provisional: This is a new feature and still under development. We'll be adding features and possibly making breaking changes in future releases. We'd love to hear your [feedback](https://github.com/pandas-dev/pandas/issues).*<p style=\"color: red\">\n",
+    "<p style=\"color: red\">*Provisional: This is a new feature and still under development. We'll be adding features and possibly making breaking changes in future releases. We'd love to hear your feedback.*<p style=\"color: red\">\n",
     "\n",
     "This document is written as a Jupyter Notebook, and can be viewed or downloaded [here](http://nbviewer.ipython.org/github/pandas-dev/pandas/blob/master/doc/source/html-styling.ipynb).\n",
     "\n",
@@ -17,25 +19,14 @@
     "\n",
     "The styling is accomplished using CSS.\n",
     "You write \"style functions\" that take scalars, `DataFrame`s or `Series`, and return *like-indexed* DataFrames or Series with CSS `\"attribute: value\"` pairs for the values.\n",
-    "These functions can be incrementally passed to the `Styler` which collects the styles before rendering.\n",
-    "\n",
-    "### Contents\n",
-    "\n",
-    "- [Building Styles](#Building-Styles)\n",
-    "- [Finer Control: Slicing](#Finer-Control:-Slicing)\n",
-    "- [Builtin Styles](#Builtin-Styles)\n",
-    "- [Other options](#Other-options)\n",
-    "- [Sharing Styles](#Sharing-Styles)\n",
-    "- [Limitations](#Limitations)\n",
-    "- [Terms](#Terms)\n",
-    "- [Extensibility](#Extensibility)"
+    "These functions can be incrementally passed to the `Styler` which collects the styles before rendering."
    ]
   },
   {
    "cell_type": "markdown",
    "metadata": {},
    "source": [
-    "# Building Styles\n",
+    "## Building Styles\n",
     "\n",
     "Pass your style functions into one of the following methods:\n",
     "\n",
@@ -58,7 +49,7 @@
    "cell_type": "code",
    "execution_count": null,
    "metadata": {
-    "collapsed": false
+    "collapsed": true
    },
    "outputs": [],
    "source": [
@@ -83,7 +74,7 @@
    "cell_type": "code",
    "execution_count": null,
    "metadata": {
-    "collapsed": false
+    "collapsed": true
    },
    "outputs": [],
    "source": [
@@ -103,7 +94,7 @@
    "cell_type": "code",
    "execution_count": null,
    "metadata": {
-    "collapsed": false
+    "collapsed": true
    },
    "outputs": [],
    "source": [
@@ -156,7 +147,7 @@
    "cell_type": "code",
    "execution_count": null,
    "metadata": {
-    "collapsed": false
+    "collapsed": true
    },
    "outputs": [],
    "source": [
@@ -204,7 +195,7 @@
    "cell_type": "code",
    "execution_count": null,
    "metadata": {
-    "collapsed": false
+    "collapsed": true
    },
    "outputs": [],
    "source": [
@@ -230,7 +221,7 @@
    "cell_type": "code",
    "execution_count": null,
    "metadata": {
-    "collapsed": false
+    "collapsed": true
    },
    "outputs": [],
    "source": [
@@ -286,7 +277,7 @@
    "cell_type": "code",
    "execution_count": null,
    "metadata": {
-    "collapsed": false
+    "collapsed": true
    },
    "outputs": [],
    "source": [
@@ -336,7 +327,7 @@
    "cell_type": "code",
    "execution_count": null,
    "metadata": {
-    "collapsed": false
+    "collapsed": true
    },
    "outputs": [],
    "source": [
@@ -354,7 +345,7 @@
    "cell_type": "code",
    "execution_count": null,
    "metadata": {
-    "collapsed": false
+    "collapsed": true
    },
    "outputs": [],
    "source": [
@@ -389,7 +380,7 @@
    "cell_type": "code",
    "execution_count": null,
    "metadata": {
-    "collapsed": false
+    "collapsed": true
    },
    "outputs": [],
    "source": [
@@ -407,7 +398,7 @@
    "cell_type": "code",
    "execution_count": null,
    "metadata": {
-    "collapsed": false
+    "collapsed": true
    },
    "outputs": [],
    "source": [
@@ -425,7 +416,7 @@
    "cell_type": "code",
    "execution_count": null,
    "metadata": {
-    "collapsed": false
+    "collapsed": true
    },
    "outputs": [],
    "source": [
@@ -450,7 +441,7 @@
    "cell_type": "code",
    "execution_count": null,
    "metadata": {
-    "collapsed": false
+    "collapsed": true
    },
    "outputs": [],
    "source": [
@@ -468,7 +459,7 @@
    "cell_type": "code",
    "execution_count": null,
    "metadata": {
-    "collapsed": false
+    "collapsed": true
    },
    "outputs": [],
    "source": [
@@ -491,7 +482,7 @@
    "cell_type": "code",
    "execution_count": null,
    "metadata": {
-    "collapsed": false
+    "collapsed": true
    },
    "outputs": [],
    "source": [
@@ -503,7 +494,7 @@
    "cell_type": "code",
    "execution_count": null,
    "metadata": {
-    "collapsed": false
+    "collapsed": true
    },
    "outputs": [],
    "source": [
@@ -525,7 +516,7 @@
    "cell_type": "code",
    "execution_count": null,
    "metadata": {
-    "collapsed": false
+    "collapsed": true
    },
    "outputs": [],
    "source": [
@@ -543,7 +534,7 @@
    "cell_type": "code",
    "execution_count": null,
    "metadata": {
-    "collapsed": false
+    "collapsed": true
    },
    "outputs": [],
    "source": [
@@ -554,7 +545,7 @@
    "cell_type": "code",
    "execution_count": null,
    "metadata": {
-    "collapsed": false
+    "collapsed": true
    },
    "outputs": [],
    "source": [
@@ -572,7 +563,7 @@
    "cell_type": "code",
    "execution_count": null,
    "metadata": {
-    "collapsed": false
+    "collapsed": true
    },
    "outputs": [],
    "source": [
@@ -599,7 +590,7 @@
    "cell_type": "code",
    "execution_count": null,
    "metadata": {
-    "collapsed": false
+    "collapsed": true
    },
    "outputs": [],
    "source": [
@@ -612,7 +603,7 @@
    "cell_type": "code",
    "execution_count": null,
    "metadata": {
-    "collapsed": false
+    "collapsed": true
    },
    "outputs": [],
    "source": [
@@ -653,7 +644,7 @@
    "cell_type": "markdown",
    "metadata": {},
    "source": [
-    "## Precision"
+    "### Precision"
    ]
   },
   {
@@ -667,7 +658,7 @@
    "cell_type": "code",
    "execution_count": null,
    "metadata": {
-    "collapsed": false
+    "collapsed": true
    },
    "outputs": [],
    "source": [
@@ -689,7 +680,7 @@
    "cell_type": "code",
    "execution_count": null,
    "metadata": {
-    "collapsed": false
+    "collapsed": true
    },
    "outputs": [],
    "source": [
@@ -724,7 +715,7 @@
    "cell_type": "code",
    "execution_count": null,
    "metadata": {
-    "collapsed": false
+    "collapsed": true
    },
    "outputs": [],
    "source": [
@@ -752,7 +743,7 @@
    "cell_type": "code",
    "execution_count": null,
    "metadata": {
-    "collapsed": false
+    "collapsed": true
    },
    "outputs": [],
    "source": [
@@ -792,7 +783,7 @@
    "cell_type": "markdown",
    "metadata": {},
    "source": [
-    "# CSS Classes\n",
+    "### CSS Classes\n",
     "\n",
     "Certain CSS classes are attached to cells.\n",
     "\n",
@@ -813,7 +804,7 @@
    "cell_type": "markdown",
    "metadata": {},
    "source": [
-    "# Limitations\n",
+    "### Limitations\n",
     "\n",
     "- DataFrame only `(use Series.to_frame().style)`\n",
     "- The index and columns must be unique\n",
@@ -828,7 +819,7 @@
    "cell_type": "markdown",
    "metadata": {},
    "source": [
-    "# Terms\n",
+    "### Terms\n",
     "\n",
     "- Style function: a function that's passed into `Styler.apply` or `Styler.applymap` and returns values like `'css attribute: value'`\n",
     "- Builtin style functions: style functions that are methods on `Styler`\n",
@@ -850,7 +841,7 @@
    "cell_type": "code",
    "execution_count": null,
    "metadata": {
-    "collapsed": false
+    "collapsed": true
    },
    "outputs": [],
    "source": [
@@ -867,7 +858,7 @@
    "cell_type": "code",
    "execution_count": null,
    "metadata": {
-    "collapsed": false
+    "collapsed": true
    },
    "outputs": [],
    "source": [
@@ -888,7 +879,7 @@
    "cell_type": "code",
    "execution_count": null,
    "metadata": {
-    "collapsed": false
+    "collapsed": true
    },
    "outputs": [],
    "source": [
@@ -907,7 +898,7 @@
    "cell_type": "markdown",
    "metadata": {},
    "source": [
-    "# Extensibility\n",
+    "## Extensibility\n",
     "\n",
     "The core of pandas is, and will remain, its \"high-performance, easy-to-use data structures\".\n",
     "With that in mind, we hope that `DataFrame.style` accomplishes two goals\n",
@@ -917,7 +908,7 @@
     "\n",
     "If you build a great library on top of this, let us know and we'll [link](http://pandas.pydata.org/pandas-docs/stable/ecosystem.html) to it.\n",
     "\n",
-    "## Subclassing\n",
+    "### Subclassing\n",
     "\n",
     "This section contains a bit of information about the implementation of `Styler`.\n",
     "Since the feature is so new all of this is subject to change, even more so than the end-use API.\n",
@@ -933,7 +924,7 @@
     "The `.translate` method takes `self.ctx` and builds another dictionary ready to be passed into `Styler.template.render`, the Jinja template.\n",
     "\n",
     "\n",
-    "## Alternate templates\n",
+    "### Alternate templates\n",
     "\n",
     "We've used [Jinja](http://jinja.pocoo.org/) templates to build up the HTML.\n",
     "The template is stored as a class variable ``Styler.template.``. Subclasses can override that.\n",
@@ -961,9 +952,9 @@
    "name": "python",
    "nbconvert_exporter": "python",
    "pygments_lexer": "ipython3",
-   "version": "3.5.1"
+   "version": "3.6.1"
   }
  },
  "nbformat": 4,
- "nbformat_minor": 0
+ "nbformat_minor": 1
 }
diff --git a/doc/source/style.rst b/doc/source/style.rst
deleted file mode 100644
index 506b38bf0..000000000
--- a/doc/source/style.rst
+++ /dev/null
@@ -1,10 +0,0 @@
-.. _style:
-
-.. currentmodule:: pandas
-
-*****
-Style
-*****
-
-.. raw:: html
-   :file: html-styling.html
diff --git a/doc/source/themes/nature_with_gtoc/static/nature.css_t b/doc/source/themes/nature_with_gtoc/static/nature.css_t
index 2948f0d68..2958678dc 100644
--- a/doc/source/themes/nature_with_gtoc/static/nature.css_t
+++ b/doc/source/themes/nature_with_gtoc/static/nature.css_t
@@ -299,18 +299,35 @@ td.field-body blockquote {
     padding-left: 30px;
 }
 
-.rendered_html table {
+// Adapted from the new Jupyter notebook style
+// https://github.com/jupyter/notebook/blob/c8841b68c4c0739bbee1291e0214771f24194079/notebook/static/notebook/less/renderedhtml.less#L59
+table {
     margin-left: auto;
     margin-right: auto;
-    border-right: 1px solid #cbcbcb;
-    border-bottom: 1px solid #cbcbcb;
-}
-
-.rendered_html td, th {
-    border-left: 1px solid #cbcbcb;
-    border-top: 1px solid #cbcbcb;
-    margin: 0;
-    padding: 0.5em .75em;
+    border: none;
+    border-collapse: collapse;
+    border-spacing: 0;
+    color: @rendered_html_border_color;
+    table-layout: fixed;
+}
+thead {
+    border-bottom: 1px solid @rendered_html_border_color;
+    vertical-align: bottom;
+}
+tr, th, td {
+    text-align: right;
+    vertical-align: middle;
+    padding: 0.5em 0.5em;
+    line-height: normal;
+    white-space: normal;
+    max-width: none;
+    border: none;
+}
+th {
+    font-weight: bold;
+}
+tbody tr:nth-child(odd) {
+    background: #f5f5f5;
 }
 
 /**
