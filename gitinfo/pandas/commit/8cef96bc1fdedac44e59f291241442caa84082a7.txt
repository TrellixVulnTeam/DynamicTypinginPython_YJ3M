commit 8cef96bc1fdedac44e59f291241442caa84082a7
Author: phaebz <phaebz@gmail.com>
Date:   Tue Feb 4 08:12:01 2014 +0100

    Note for failing numpy.unique and fix for pandas.Series NameError

diff --git a/doc/source/comparison_with_r.rst b/doc/source/comparison_with_r.rst
index 0c011a76a..253eafb36 100644
--- a/doc/source/comparison_with_r.rst
+++ b/doc/source/comparison_with_r.rst
@@ -99,7 +99,7 @@ this:
 .. ipython:: python
 
    s = pd.Series(np.arange(5),dtype=np.float32)
-   Series(pd.match(s,[2,4],np.nan))
+   pd.Series(pd.match(s,[2,4],np.nan))
 
 For more details and examples see :ref:`the reshaping documentation
 <indexing.basics.indexing_isin>`.
diff --git a/doc/source/reshaping.rst b/doc/source/reshaping.rst
index ce8f0013e..8f0686ded 100644
--- a/doc/source/reshaping.rst
+++ b/doc/source/reshaping.rst
@@ -436,6 +436,11 @@ To encode 1-d values as an enumerated type use ``factorize``:
 Note that ``factorize`` is similar to ``numpy.unique``, but differs in its
 handling of NaN:
 
+.. note::
+   The following ``numpy.unique`` will fail under Python 3 with a ``TypeError``
+   because of an ordering bug. See also
+   `Here <https://github.com/numpy/numpy/issues/641>`__
+
 .. ipython:: python
 
    pd.factorize(x, sort=True)
