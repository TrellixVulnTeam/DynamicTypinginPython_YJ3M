commit ee990360b616687a5ef334b7844bc66db32dd374
Author: Jeffrey Tratner <jeffrey.tratner@gmail.com>
Date:   Sun Jun 16 12:03:23 2013 -0400

    CLN: stats/common: replace bare exceptions
    
    Replace with more descriptive exceptions
    
    TST: Add test case for unrecognized cluster

diff --git a/pandas/stats/common.py b/pandas/stats/common.py
index c3034dbc3..85e8916b3 100644
--- a/pandas/stats/common.py
+++ b/pandas/stats/common.py
@@ -10,7 +10,7 @@ def _get_cluster_type(cluster_type):
     elif cluster_type_up == 'TIME':
         return 'time'
     else:  # pragma: no cover
-        raise Exception('Unrecognized cluster type: %s' % cluster_type)
+        raise ValueError('Unrecognized cluster type: %s' % cluster_type)
 
 _CLUSTER_TYPES = {
     0: 'time',
@@ -35,7 +35,7 @@ def _get_window_type(window_type):
     elif window_type_up == 'EXPANDING':
         return 'expanding'
     else:  # pragma: no cover
-        raise Exception('Unrecognized window type: %s' % window_type)
+        raise ValueError('Unrecognized window type: %s' % window_type)
 
 
 def banner(text, width=80):
diff --git a/pandas/stats/tests/test_ols.py b/pandas/stats/tests/test_ols.py
index 17a45409c..c18db9457 100644
--- a/pandas/stats/tests/test_ols.py
+++ b/pandas/stats/tests/test_ols.py
@@ -19,7 +19,7 @@ from pandas.stats.api import ols
 from pandas.stats.ols import _filter_data
 from pandas.stats.plm import NonPooledPanelOLS, PanelOLS
 from pandas.util.testing import (assert_almost_equal, assert_series_equal,
-                                 assert_frame_equal)
+                                 assert_frame_equal, assertRaisesRegexp)
 import pandas.util.testing as tm
 
 from common import BaseTest
@@ -663,7 +663,10 @@ class TestPanelOLS(BaseTest):
     def testRollingWithEntityCluster(self):
         self.checkMovingOLS(self.panel_x, self.panel_y,
                             cluster='entity')
-
+    def testUnknownClusterRaisesValueError(self):
+        assertRaisesRegexp(ValueError, "Unrecognized cluster.*ridiculous",
+                           self.checkMovingOLS, self.panel_x, self.panel_y,
+                                               cluster='ridiculous')
     def testRollingWithTimeEffectsAndEntityCluster(self):
         self.checkMovingOLS(self.panel_x, self.panel_y,
                             time_effects=True, cluster='entity')
