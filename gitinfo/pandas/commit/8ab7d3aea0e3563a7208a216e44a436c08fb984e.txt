commit 8ab7d3aea0e3563a7208a216e44a436c08fb984e
Author: Benoît Vinot <benoit.vinot@inria.fr>
Date:   Tue Apr 26 17:28:25 2016 -0400

    ENH: add .resample(..).interpolate() #12925
    
    closes #12925
    
    Author: Benoît Vinot <benoit.vinot@inria.fr>
    
    Closes #12974 from benoit9126/bug_12925 and squashes the following commits:
    
    b860b5b [Benoît Vinot] ENH resample().interpolate() #12925

diff --git a/doc/source/whatsnew/v0.18.1.txt b/doc/source/whatsnew/v0.18.1.txt
index a03a5d716..90ab4adf7 100644
--- a/doc/source/whatsnew/v0.18.1.txt
+++ b/doc/source/whatsnew/v0.18.1.txt
@@ -168,8 +168,12 @@ Other Enhancements
       idx = pd.Index(['a|b', 'a|c', 'b|c'])
       idx.str.get_dummies('|')
 
+
 - ``pd.crosstab()`` has gained a ``normalize`` argument for normalizing frequency tables (:issue:`12569`). Examples in the updated docs :ref:`here <reshaping.crosstabulations>`.
 
+- ``.resample(..).interpolate()`` is now supported (:issue:`12925`)
+
+
 
 .. _whatsnew_0181.sparse:
 
diff --git a/pandas/core/generic.py b/pandas/core/generic.py
index 35ef374ec..9a76a0f94 100644
--- a/pandas/core/generic.py
+++ b/pandas/core/generic.py
@@ -3445,9 +3445,7 @@ class NDFrame(PandasObject):
         else:
             return self._constructor(new_data).__finalize__(self)
 
-    def interpolate(self, method='linear', axis=0, limit=None, inplace=False,
-                    limit_direction='forward', downcast=None, **kwargs):
-        """
+    _shared_docs['interpolate'] = """
         Interpolate values according to different methods.
 
         Please note that only ``method='linear'`` is supported for
@@ -3521,6 +3519,10 @@ class NDFrame(PandasObject):
         dtype: float64
 
         """
+
+    @Appender(_shared_docs['interpolate'] % _shared_doc_kwargs)
+    def interpolate(self, method='linear', axis=0, limit=None, inplace=False,
+                    limit_direction='forward', downcast=None, **kwargs):
         if self.ndim > 2:
             raise NotImplementedError("Interpolate has not been implemented "
                                       "on Panel and Panel 4D objects.")
diff --git a/pandas/tseries/resample.py b/pandas/tseries/resample.py
index 504f03b6b..8814040fd 100644
--- a/pandas/tseries/resample.py
+++ b/pandas/tseries/resample.py
@@ -21,6 +21,10 @@ from pandas.lib import Timestamp
 import pandas.lib as lib
 import pandas.tslib as tslib
 
+from pandas.util.decorators import Appender
+from pandas.core.generic import _shared_docs
+_shared_docs_kwargs = dict()
+
 
 class Resampler(_GroupBy):
 
@@ -454,6 +458,18 @@ class Resampler(_GroupBy):
         """
         return self._upsample(method, limit=limit)
 
+    @Appender(_shared_docs['interpolate'] % _shared_docs_kwargs)
+    def interpolate(self, method='linear', axis=0, limit=None, inplace=False,
+                    limit_direction='forward', downcast=None, **kwargs):
+        """
+        .. versionadded:: 0.18.1
+        """
+        result = self._upsample(None)
+        return result.interpolate(method=method, axis=axis, limit=limit,
+                                  inplace=inplace,
+                                  limit_direction=limit_direction,
+                                  downcast=downcast, **kwargs)
+
     def asfreq(self):
         """
         return the values at the new freq,
diff --git a/pandas/tseries/tests/test_resample.py b/pandas/tseries/tests/test_resample.py
index 80123ecd4..77396c3e3 100644
--- a/pandas/tseries/tests/test_resample.py
+++ b/pandas/tseries/tests/test_resample.py
@@ -612,6 +612,13 @@ class Base(object):
         expected = frame.reindex(new_index)
         assert_frame_equal(result, expected)
 
+    def test_resample_interpolate(self):
+        # # 12925
+        df = self.create_series().to_frame('value')
+        assert_frame_equal(
+            df.resample('1T').asfreq().interpolate(),
+            df.resample('1T').interpolate())
+
 
 class TestDatetimeIndex(Base, tm.TestCase):
     _multiprocess_can_split_ = True
