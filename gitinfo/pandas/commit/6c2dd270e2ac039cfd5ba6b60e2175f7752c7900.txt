commit 6c2dd270e2ac039cfd5ba6b60e2175f7752c7900
Author: jreback <jeff@reback.net>
Date:   Sun Dec 23 16:22:47 2012 -0500

    BUG: updated tests for datetim64 detection in columns

diff --git a/doc/source/conf.py b/doc/source/conf.py
index 692c7757e..6895f0041 100644
--- a/doc/source/conf.py
+++ b/doc/source/conf.py
@@ -16,6 +16,7 @@ import sys, os
 # add these directories to sys.path here. If the directory is relative to the
 # documentation root, use os.path.abspath to make it absolute, like shown here.
 #sys.path.append(os.path.abspath('.'))
+sys.path.insert(0, '/home/jreback/pandas')
 sys.path.insert(0, os.path.abspath('../sphinxext'))
 
 sys.path.extend([
diff --git a/doc/source/io.rst b/doc/source/io.rst
index 39251a6b0..adb43190f 100644
--- a/doc/source/io.rst
+++ b/doc/source/io.rst
@@ -1115,7 +1115,10 @@ Passing ``min_itemsize = { `values` : size }`` as a parameter to append will set
     df_mixed['int']      = 1
     df_mixed['bool']     = True
     df_mixed['datetime64'] = Timestamp('20010102')
-    df_mixed.ix[3:4,['A','B','string']] = np.nan
+
+    # make sure that we have datetime64[ns] types
+    df_mixed = df_mixed.convert_objects()
+    df_mixed.ix[3:5,['A','B','string','datetime64']] = np.nan
 
     store.append('df_mixed', df_mixed, min_itemsize = { 'values' : 50 })
     df_mixed1 = store.select('df_mixed')
@@ -1125,7 +1128,7 @@ Passing ``min_itemsize = { `values` : size }`` as a parameter to append will set
     # we have provided a minimum string column size
     store.root.df_mixed.table
 
-It is ok to store ``np.nan`` in a ``float or string``. Storing a column with a ``np.nan`` in a ``int, bool, or datetime64`` will currently throw an ``Exception`` as these columns will have converted to ``object`` type.
+It is ok to store ``np.nan`` in a ``float or string``. Make sure to do a ``convert_objects()`` on the frame before storing a ``np.nan`` in a datetime64 column. Storing a column with a ``np.nan`` in a ``int, bool`` will currently throw an ``Exception`` as these columns will have converted to ``object`` type.
 
 Storing Multi-Index DataFrames
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
diff --git a/pandas/io/tests/test_pytables.py b/pandas/io/tests/test_pytables.py
index 296e807b5..da15e533a 100644
--- a/pandas/io/tests/test_pytables.py
+++ b/pandas/io/tests/test_pytables.py
@@ -483,13 +483,13 @@ class TestHDFStore(unittest.TestCase):
         df_dc.ix[7:9,'string'] = 'bar'
         df_dc['string2'] = 'cool'
         df_dc['datetime'] = Timestamp('20010102')
+        df_dc = df_dc.convert_objects()
+        df_dc.ix[3:5,['A','B','datetime']] = np.nan
+
         self.store.remove('df_dc')
         self.store.append('df_dc', df_dc, data_columns = ['B','C','string','string2','datetime'])
         result = self.store.select('df_dc',[ Term('B>0') ])
 
-        # convert it
-        df_dc = df_dc.consolidate().convert_objects()
-
         expected = df_dc[df_dc.B > 0]
         tm.assert_frame_equal(result, expected)
 
@@ -761,13 +761,6 @@ class TestHDFStore(unittest.TestCase):
         df['datetime1']  = datetime.date(2001,1,2)
         df = df.consolidate().convert_objects()
 
-        # datetime64 with nan
-        df = tm.makeDataFrame()
-        df['timestamp1'] = Timestamp('20010102')
-        df.ix[3:6,:] = np.nan
-        df = df.consolidate().convert_objects()
-        self.assertRaises(Exception, self.store.append, 'df_datetime64_with_nan', df)
-
         # this fails because we have a date in the object block......
         self.assertRaises(Exception, self.store.append, 'df_unimplemented', df)
 
