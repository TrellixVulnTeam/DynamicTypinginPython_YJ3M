commit eab7226549c21a724fa6afce21d2e585b6a84eb6
Author: MomIsBestFriend <50263213+MomIsBestFriend@users.noreply.github.com>
Date:   Tue Mar 31 17:49:42 2020 +0300

    CLN: using C-API of datetime (#33174)
    
    * CLN: cimporting time instead of going to python space
    
    pandas/_libs/tslibs/conversion.pyx
    
    * cimporting time instead of going to python space
    
    pandas/_libs/tslibs/timestamps.pyx
    
    * cimporting time instead of going to python space
    
    pandas/_libs/tslibs/period.pyx
    
    Co-authored-by: MomIsBestFriend <>

diff --git a/pandas/_libs/tslibs/conversion.pyx b/pandas/_libs/tslibs/conversion.pyx
index a318bea14..6fa9159c4 100644
--- a/pandas/_libs/tslibs/conversion.pyx
+++ b/pandas/_libs/tslibs/conversion.pyx
@@ -8,8 +8,7 @@ cnp.import_array()
 import pytz
 
 # stdlib datetime imports
-from datetime import time as datetime_time
-from cpython.datetime cimport (datetime, tzinfo,
+from cpython.datetime cimport (datetime, time, tzinfo,
                                PyDateTime_Check, PyDate_Check,
                                PyDateTime_IMPORT)
 PyDateTime_IMPORT
@@ -284,7 +283,7 @@ cdef convert_to_tsobject(object ts, object tz, object unit,
         return convert_datetime_to_tsobject(ts, tz, nanos)
     elif PyDate_Check(ts):
         # Keep the converter same as PyDateTime's
-        ts = datetime.combine(ts, datetime_time())
+        ts = datetime.combine(ts, time())
         return convert_datetime_to_tsobject(ts, tz)
     elif getattr(ts, '_typ', None) == 'period':
         raise ValueError("Cannot convert Period to Timestamp "
diff --git a/pandas/_libs/tslibs/period.pyx b/pandas/_libs/tslibs/period.pyx
index c3a47902c..dd745f840 100644
--- a/pandas/_libs/tslibs/period.pyx
+++ b/pandas/_libs/tslibs/period.pyx
@@ -1,5 +1,3 @@
-from datetime import datetime
-
 from cpython.object cimport PyObject_RichCompareBool, Py_EQ, Py_NE
 
 from numpy cimport int64_t, import_array, ndarray
@@ -13,6 +11,7 @@ from libc.string cimport strlen, memset
 import cython
 
 from cpython.datetime cimport (
+    datetime,
     PyDate_Check,
     PyDateTime_Check,
     PyDateTime_IMPORT,
diff --git a/pandas/_libs/tslibs/timestamps.pyx b/pandas/_libs/tslibs/timestamps.pyx
index 64b792000..785807240 100644
--- a/pandas/_libs/tslibs/timestamps.pyx
+++ b/pandas/_libs/tslibs/timestamps.pyx
@@ -5,8 +5,7 @@ cimport numpy as cnp
 from numpy cimport int64_t
 cnp.import_array()
 
-from datetime import time as datetime_time, timedelta
-from cpython.datetime cimport (datetime, PyDateTime_Check,
+from cpython.datetime cimport (datetime, time, PyDateTime_Check, PyDelta_Check,
                                PyTZInfo_Check, PyDateTime_IMPORT)
 PyDateTime_IMPORT
 
@@ -33,7 +32,7 @@ from pandas._libs.tslibs.tzconversion import (
 
 # ----------------------------------------------------------------------
 # Constants
-_zero_time = datetime_time(0, 0)
+_zero_time = time(0, 0)
 _no_input = object()
 
 # ----------------------------------------------------------------------
@@ -879,8 +878,7 @@ default 'raise'
             raise ValueError('Cannot infer offset with only one time.')
 
         nonexistent_options = ('raise', 'NaT', 'shift_forward', 'shift_backward')
-        if nonexistent not in nonexistent_options and not isinstance(
-            nonexistent, timedelta):
+        if nonexistent not in nonexistent_options and not PyDelta_Check(nonexistent):
             raise ValueError(
                 "The nonexistent argument must be one of 'raise', "
                 "'NaT', 'shift_forward', 'shift_backward' or a timedelta object"
