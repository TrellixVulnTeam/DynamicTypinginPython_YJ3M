commit 6d3635d197bb07efc516d233424bd02693d5303c
Author: Mortada Mehyar <mortada.mehyar@gmail.com>
Date:   Sun Mar 15 22:45:08 2015 -0700

    DOC: grammar fixes, add conda install to README

diff --git a/CONTRIBUTING.md b/CONTRIBUTING.md
index 876daa973..5329bad1d 100644
--- a/CONTRIBUTING.md
+++ b/CONTRIBUTING.md
@@ -19,7 +19,7 @@ looking for a quick way to help out.
         ...
         ```
 
-  - Include the full version string of pandas and it's dependencies. In recent (>0.12) versions
+  - Include the full version string of pandas and its dependencies. In recent (>0.12) versions
     of pandas you can use a built in function:
 
     ```python
diff --git a/README.md b/README.md
index 1c01692df..cea7e8c6b 100644
--- a/README.md
+++ b/README.md
@@ -87,6 +87,12 @@ or  `pip`:
 pip install pandas
 ```
 
+or  `conda`:
+
+```sh
+conda install pandas
+```
+
 ## Dependencies
 - [NumPy](http://www.numpy.org): 1.7.0 or higher
 - [python-dateutil](http://labix.org/python-dateutil): 1.5 or higher
diff --git a/doc/source/options.rst b/doc/source/options.rst
index 79145dfbf..7e36f369b 100644
--- a/doc/source/options.rst
+++ b/doc/source/options.rst
@@ -15,7 +15,7 @@ Options and Settings
 
 Overview
 --------
-pandas has an options system that lets you customize some aspects of it's behaviour,
+pandas has an options system that lets you customize some aspects of its behaviour,
 display-related options being those the user is most likely to adjust.
 
 Options have a full "dotted-style", case-insensitive name (e.g. ``display.max_rows``),
@@ -291,7 +291,7 @@ display.expand_frame_repr  True         Whether to print out the full DataFrame
                                         multiple lines, `max_columns` is
                                         still respected, but the output will
                                         wrap-around across multiple "pages"
-                                        if it's width exceeds `display.width`.
+                                        if its width exceeds `display.width`.
 display.float_format       None         The callable should accept a floating
                                         point number and return a string with
                                         the desired format of the number.
diff --git a/pandas/core/index.py b/pandas/core/index.py
index 195cb21d6..e335d0055 100644
--- a/pandas/core/index.py
+++ b/pandas/core/index.py
@@ -699,7 +699,7 @@ class Index(IndexOpsMixin, PandasObject):
                 if v is None or is_integer(v):
                     return v
 
-                # warn if its a convertible float
+                # warn if it's a convertible float
                 if v == int(v):
                     warnings.warn("slice indexers when using iloc should be integers "
                                   "and not floating point",FutureWarning)
diff --git a/pandas/msgpack.pyx b/pandas/msgpack.pyx
index 4413e2c09..625ac55ee 100644
--- a/pandas/msgpack.pyx
+++ b/pandas/msgpack.pyx
@@ -112,7 +112,7 @@ cdef class Packer(object):
     * *encoding* - Convert unicode to bytes with this encoding. (default: 'utf-8')
     * *unicode_errors* - Error handler for encoding unicode. (default: 'strict')
     * *use_single_float* - Use single precision float type for float. (default: False)
-    * *autoreset* - Reset buffer after each pack and return it's content as `bytes`. (default: True).
+    * *autoreset* - Reset buffer after each pack and return its content as `bytes`. (default: True).
       If set this to false, use `bytes()` to get content and `.reset()` to clear buffer.
     """
     cdef msgpack_packer pk
diff --git a/pandas/tests/test_groupby.py b/pandas/tests/test_groupby.py
index 17ae8c66e..79ebb80fc 100644
--- a/pandas/tests/test_groupby.py
+++ b/pandas/tests/test_groupby.py
@@ -1039,7 +1039,7 @@ class TestGroupBy(tm.TestCase):
     def test_transform_exclude_nuisance(self):
 
         # this also tests orderings in transform between
-        # series/frame to make sure its consistent
+        # series/frame to make sure it's consistent
         expected = {}
         grouped = self.df.groupby('A')
         expected['C'] = grouped['C'].transform(np.mean)
diff --git a/pandas/tests/test_indexing.py b/pandas/tests/test_indexing.py
index dc77ab819..18baa941b 100644
--- a/pandas/tests/test_indexing.py
+++ b/pandas/tests/test_indexing.py
@@ -3717,7 +3717,7 @@ class TestIndexing(tm.TestCase):
         self.assertIsNotNone(df.is_copy)
         df.loc[:,'letters'] = df['letters'].apply(str.lower)
 
-        # should be ok even though its a copy!
+        # should be ok even though it's a copy!
         self.assertIsNone(df.is_copy)
         df['letters'] = df['letters'].apply(str.lower)
         self.assertIsNone(df.is_copy)
