commit 786bfd90cbff6e2fe21a614e2c6d722a80c9bb0e
Author: jbrockmendel <jbrockmendel@gmail.com>
Date:   Tue Feb 25 17:37:30 2020 -0800

    TST: show_versions test with unmerged commits (#32139)

diff --git a/pandas/tests/util/test_show_versions.py b/pandas/tests/util/test_show_versions.py
index 0d2c81c4e..e36ea662f 100644
--- a/pandas/tests/util/test_show_versions.py
+++ b/pandas/tests/util/test_show_versions.py
@@ -1,8 +1,26 @@
 import re
 
+import pytest
+
 import pandas as pd
 
 
+@pytest.mark.filterwarnings(
+    # openpyxl
+    "ignore:defusedxml.lxml is no longer supported:DeprecationWarning"
+)
+@pytest.mark.filterwarnings(
+    # html5lib
+    "ignore:Using or importing the ABCs from:DeprecationWarning"
+)
+@pytest.mark.filterwarnings(
+    # fastparquet
+    "ignore:pandas.core.index is deprecated:FutureWarning"
+)
+@pytest.mark.filterwarnings(
+    # pandas_datareader
+    "ignore:pandas.util.testing is deprecated:FutureWarning"
+)
 def test_show_versions(capsys):
     # gh-32041
     pd.show_versions()
diff --git a/pandas/util/_print_versions.py b/pandas/util/_print_versions.py
index 99b2b9e9f..f9502cc22 100644
--- a/pandas/util/_print_versions.py
+++ b/pandas/util/_print_versions.py
@@ -4,13 +4,23 @@ import locale
 import os
 import platform
 import struct
-import subprocess
 import sys
 from typing import List, Optional, Tuple, Union
 
 from pandas.compat._optional import VERSIONS, _get_version, import_optional_dependency
 
 
+def _get_commit_hash() -> Optional[str]:
+    """
+    Use vendored versioneer code to get git hash, which handles
+    git worktree correctly.
+    """
+    from pandas._version import get_versions
+
+    versions = get_versions()
+    return versions["full-revisionid"]
+
+
 def get_sys_info() -> List[Tuple[str, Optional[Union[str, int]]]]:
     """
     Returns system information as a list
@@ -18,20 +28,7 @@ def get_sys_info() -> List[Tuple[str, Optional[Union[str, int]]]]:
     blob: List[Tuple[str, Optional[Union[str, int]]]] = []
 
     # get full commit hash
-    commit = None
-    if os.path.isdir(".git") and os.path.isdir("pandas"):
-        try:
-            pipe = subprocess.Popen(
-                'git log --format="%H" -n 1'.split(" "),
-                stdout=subprocess.PIPE,
-                stderr=subprocess.PIPE,
-            )
-            so, serr = pipe.communicate()
-        except (OSError, ValueError):
-            pass
-        else:
-            if pipe.returncode == 0:
-                commit = so.decode("utf-8").strip().strip('"')
+    commit = _get_commit_hash()
 
     blob.append(("commit", commit))
 
