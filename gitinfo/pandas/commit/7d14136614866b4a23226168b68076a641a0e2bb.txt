commit 7d14136614866b4a23226168b68076a641a0e2bb
Author: y-p <yoval@gmx.com>
Date:   Wed Dec 12 13:42:18 2012 +0200

    DOC: update docs to reflect new mode.use_inf_as_null option

diff --git a/RELEASE.rst b/RELEASE.rst
index 26f326502..890425b72 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -99,7 +99,7 @@ pandas 0.10.0
     instead. This is a legacy hack and can lead to subtle bugs.
   - inf/-inf are no longer considered as NA by isnull/notnull. To be clear, this
     is legacy cruft from early pandas. This behavior can be globally re-enabled
-    using pandas.core.common.use_inf_as_na (#2050, #1919)
+    using the new option ``mode.use_inf_as_null`` (#2050, #1919)
   - ``pandas.merge`` will now default to ``sort=False``. For many use cases
     sorting the join keys is not necessary, and doing it by default is wasteful
   - ``names`` handling in file parsing: if explicit column `names` passed,
diff --git a/doc/source/missing_data.rst b/doc/source/missing_data.rst
index f514139a9..b8f3468f8 100644
--- a/doc/source/missing_data.rst
+++ b/doc/source/missing_data.rst
@@ -61,7 +61,7 @@ arise and we wish to also consider that "missing" or "null".
 
 Until recently, for legacy reasons ``inf`` and ``-inf`` were also
 considered to be "null" in computations. This is no longer the case by
-default; use the :func: `~pandas.core.common.use_inf_as_null` function to recover it.
+default; use the ``mode.use_inf_as_null`` option to recover it.
 
 .. _missing.isnull:
 
