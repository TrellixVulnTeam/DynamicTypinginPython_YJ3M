commit b247940bc7a5f314a9f00346f749b1dde105939b
Author: Chang She <chang@lambdafoundry.com>
Date:   Mon May 28 10:12:19 2012 -0400

    DOC: more ts docs. Need to do resampling then PeriodIndex

diff --git a/doc/source/timeseries.rst b/doc/source/timeseries.rst
index f8b628217..32ca0d246 100644
--- a/doc/source/timeseries.rst
+++ b/doc/source/timeseries.rst
@@ -457,20 +457,30 @@ and in Panel along the ``major_axis``.
    ts.shift(1)
 
 The shift method accepts an ``freq`` argument which can accept a
-``DateOffset`` class or other ``timedelta``-like object or also a :ref:`time
-rule <timeseries.alias>`:
+``DateOffset`` class or other ``timedelta``-like object or also a :ref:`offset alias <timeseries.alias>`:
 
 .. ipython:: python
 
    ts.shift(5, freq=datetools.bday)
-   ts.shift(5, freq='EOM')
+   ts.shift(5, freq='BM')
+
+Rather than changing the alignment of the data and the index, ``DataFrame`` and
+``TimeSeries`` objects also have a ``tshift`` convenience method that changes
+all the dates in the index by a specified number of offsets:
+
+.. ipython:: python
+
+   ts.tshift(5, freq='D')
+
+Note that with ``tshift``, the leading entry is no longer NaN because the data
+is not being realigned.
 
 Frequency conversion
 ~~~~~~~~~~~~~~~~~~~~
 
-The primary function for changing frequencies is the ``asfreq`` function. This
-is basically just a thin, but convenient wrapper around ``reindex`` which
-generates a ``date_range`` and calls ``reindex``.
+The primary function for changing frequencies is the ``asfreq`` function.
+For a ``DatetimeIndex``, this is basically just a thin, but convenient wrapper
+around ``reindex`` which generates a ``date_range`` and calls ``reindex``.
 
 .. ipython:: python
 
@@ -478,6 +488,12 @@ generates a ``date_range`` and calls ``reindex``.
    ts = Series(randn(3), index=dr)
    ts
    ts.asfreq(BDay())
+
+``asfreq`` provides a further convenience so you can specify an interpolation
+method for any gaps that may appear after the frequency conversion
+
+.. ipython:: python
+
    ts.asfreq(BDay(), method='pad')
 
 Filling forward / backward
@@ -486,12 +502,19 @@ Filling forward / backward
 Related to ``asfreq`` and ``reindex`` is the ``fillna`` function documented in
 the :ref:`missing data section <missing_data.fillna>`.
 
+.. _timeseries.resampling:
+
 Up- and downsampling
 --------------------
 
-We plan to add some efficient methods for doing resampling during frequency
-conversion. For example, converting secondly data into 5-minutely data. This is
-extremely common in, but not limited to, financial applications.
+With 0.8, pandas introduces some efficient and easy-to-use methods for
+performing resampling operations during frequency conversion (e.g., converting
+secondly data into 5-minutely data). This is extremely common in, but not
+limited to, financial applications.
+
+.. ipython:: python
+
+
 
 Until then, your best bet is a clever (or kludgy, depending on your point of
 view) application of GroupBy. Carry out the following steps:
