commit 0e61847e111a3ba181f16c8b9b974c74d360ad2e
Author: John Liekezer <cool.Bakov@yandex.ru>
Date:   Fri Aug 26 16:45:13 2016 -0400

    BUG: Dataframe.fillna with np.nan for dtype=category(GH 14021)
    
    closes #14021
    
    Author: John Liekezer <cool.Bakov@yandex.ru>
    
    Closes #14051 from conquistador1492/issue_14021 and squashes the following commits:
    
    a405777 [John Liekezer] BUG: Dataframe.fillna with np.nan for dtype=category(GH 14021)

diff --git a/doc/source/whatsnew/v0.19.0.txt b/doc/source/whatsnew/v0.19.0.txt
index 9ccbf5772..37c1be028 100644
--- a/doc/source/whatsnew/v0.19.0.txt
+++ b/doc/source/whatsnew/v0.19.0.txt
@@ -1188,7 +1188,8 @@ Bug Fixes
 - Bug in ``Series`` arithmetic raises ``TypeError`` if it contains datetime-like as ``object`` dtype (:issue:`13043`)
 
 - Bug ``Series.isnull()`` and ``Series.notnull()`` ignore ``Period('NaT')``  (:issue:`13737`)
-- Bug ``Series.fillna()`` and ``Series.dropna()`` don't affect to ``Period('NaT')``  (:issue:`13737`)
+- Bug ``Series.fillna()`` and ``Series.dropna()`` don't affect to ``Period('NaT')``  (:issue:`13737`
+- Bug in ``.fillna(value=np.nan)`` incorrectly raises ``KeyError`` on a ``category`` dtyped ``Series`` (:issue:`14021`)
 
 - Bug in extension dtype creation where the created types were not is/identical (:issue:`13285`)
 - Bug in ``.resample(..)`` where incorrect warnings were triggered by IPython introspection (:issue:`13618`)
diff --git a/pandas/core/categorical.py b/pandas/core/categorical.py
index 3ec1c7085..2c89e4c05 100644
--- a/pandas/core/categorical.py
+++ b/pandas/core/categorical.py
@@ -1464,7 +1464,10 @@ class Categorical(PandasObject):
             mask = values == -1
             if mask.any():
                 values = values.copy()
-                values[mask] = self.categories.get_loc(value)
+                if isnull(value):
+                    values[mask] = -1
+                else:
+                    values[mask] = self.categories.get_loc(value)
 
         return self._constructor(values, categories=self.categories,
                                  ordered=self.ordered, fastpath=True)
diff --git a/pandas/tests/test_categorical.py b/pandas/tests/test_categorical.py
index 70e07b1e4..d703ee7c1 100644
--- a/pandas/tests/test_categorical.py
+++ b/pandas/tests/test_categorical.py
@@ -4118,6 +4118,37 @@ Categories (10, timedelta64[ns]): [0 days 01:00:00 < 1 days 01:00:00 < 2 days 01
         res = df.fillna("a")
         tm.assert_frame_equal(res, df_exp)
 
+        # GH 14021
+        # np.nan should always be a is a valid filler
+        cat = Categorical([np.nan, 2, np.nan])
+        val = Categorical([np.nan, np.nan, np.nan])
+        df = DataFrame({"cats": cat, "vals": val})
+        res = df.fillna(df.median())
+        v_exp = [np.nan, np.nan, np.nan]
+        df_exp = pd.DataFrame({"cats": [2, 2, 2], "vals": v_exp},
+                              dtype='category')
+        tm.assert_frame_equal(res, df_exp)
+
+        result = df.cats.fillna(np.nan)
+        tm.assert_series_equal(result, df.cats)
+        result = df.vals.fillna(np.nan)
+        tm.assert_series_equal(result, df.vals)
+
+        idx = pd.DatetimeIndex(['2011-01-01 09:00', '2016-01-01 23:45',
+                                '2011-01-01 09:00', pd.NaT, pd.NaT])
+        df = DataFrame({'a': pd.Categorical(idx)})
+        tm.assert_frame_equal(df.fillna(value=pd.NaT), df)
+
+        idx = pd.PeriodIndex(['2011-01', '2011-01', '2011-01',
+                              pd.NaT, pd.NaT], freq='M')
+        df = DataFrame({'a': pd.Categorical(idx)})
+        tm.assert_frame_equal(df.fillna(value=pd.NaT), df)
+
+        idx = pd.TimedeltaIndex(['1 days', '2 days',
+                                 '1 days', pd.NaT, pd.NaT])
+        df = pd.DataFrame({'a': pd.Categorical(idx)})
+        tm.assert_frame_equal(df.fillna(value=pd.NaT), df)
+
     def test_astype_to_other(self):
 
         s = self.cat['value_group']
