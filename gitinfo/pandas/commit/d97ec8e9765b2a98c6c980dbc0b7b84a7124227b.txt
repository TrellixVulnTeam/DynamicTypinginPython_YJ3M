commit d97ec8e9765b2a98c6c980dbc0b7b84a7124227b
Author: TomAugspurger <thomas-augspurger@uiowa.edu>
Date:   Sat Apr 27 12:03:19 2013 -0500

    Adding some tests to cover the FRED data fetching code.
    
    This a very minimal, but it wasn't previously covered.
    I've added a new to contain the tests and more or less copied code
    from the test_yahoo file.

diff --git a/pandas/io/tests/test_fred.py b/pandas/io/tests/test_fred.py
new file mode 100644
index 000000000..5eaca28c8
--- /dev/null
+++ b/pandas/io/tests/test_fred.py
@@ -0,0 +1,79 @@
+import unittest
+import nose
+from datetime import datetime
+
+from pandas.util.py3compat import StringIO, BytesIO
+
+import pandas as pd
+import pandas.io.data as web
+from pandas.util.testing import (network, assert_frame_equal,
+                                 assert_series_equal,
+                                 assert_almost_equal)
+from numpy.testing.decorators import slow
+
+import urllib2
+
+
+class TestFred(unittest.TestCase):
+
+    @slow
+    @network
+    def test_fred(self):
+        """
+        Throws an exception when DataReader can't get a 200 response from
+        FRED.
+        """
+        start = datetime(2010, 1, 1)
+        end = datetime(2013, 01, 27)
+
+        try:
+            self.assertEquals(
+                web.DataReader("GDP", "fred", start, end)['GDP'].tail(1),
+                16010.2)
+
+            self.assertRaises(
+                Exception,
+                lambda: web.DataReader("NON EXISTENT SERIES", 'fred',
+                                       start, end))
+        except urllib2.URLError:
+            try:
+                urllib2.urlopen('http://google.com')
+            except urllib2.URLError:
+                raise nose.SkipTest
+            else:
+                raise
+
+    @slow
+    @network
+    def test_fred_nan(self):
+        start = datetime(2010, 1, 1)
+        end = datetime(2013, 01, 27)
+        df = web.DataReader("DFII5", "fred", start, end)
+        assert pd.isnull(df.ix['2010-01-01'])
+
+    @slow
+    @network
+    def test_fred_parts(self):
+        import numpy as np
+
+        start = datetime(2010, 1, 1)
+        end = datetime(2013, 01, 27)
+        df = web.get_data_fred("CPIAUCSL", start, end)
+        assert df.ix['2010-05-01'] == 217.23
+
+        t = np.array(df.CPIAUCSL.tolist())
+        assert np.issubdtype(t.dtype, np.floating)
+        assert t.shape == (37,)
+
+        # Test some older ones:
+        expected = [[576.7],
+                    [962.9],
+                    [684.7],
+                    [848.3],
+                    [933.3]]
+        result = web.get_data_fred("A09024USA144NNBR", start="1915").ix[:5]
+        assert (result.values == expected).all()
+
+if __name__ == '__main__':
+    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
+                   exit=False)
