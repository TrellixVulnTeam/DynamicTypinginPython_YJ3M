commit 77855a1e2d4a406e6dff7c629ee32c0b50c5eec4
Author: Vaibhav Vishal <vaibhav.hrt@gmail.com>
Date:   Fri Apr 26 06:23:26 2019 +0530

    Fix type annotation in pandas.compat.numpy.function (#25961)

diff --git a/mypy.ini b/mypy.ini
index 9d7262213..2069c736a 100644
--- a/mypy.ini
+++ b/mypy.ini
@@ -8,9 +8,6 @@ ignore_errors=True
 [mypy-pandas.compat]
 ignore_errors=True
 
-[mypy-pandas.compat.numpy.function]
-ignore_errors=True
-
 [mypy-pandas.core.api]
 ignore_errors=True
 
diff --git a/pandas/compat/numpy/function.py b/pandas/compat/numpy/function.py
index d318a07e0..f5f018ae2 100644
--- a/pandas/compat/numpy/function.py
+++ b/pandas/compat/numpy/function.py
@@ -18,6 +18,7 @@ and methods that are spread throughout the codebase. This module will make it
 easier to adjust to future upstream changes in the analogous numpy signatures.
 """
 from collections import OrderedDict
+from typing import Any, Dict, Optional, Union
 
 from numpy import ndarray
 
@@ -101,7 +102,8 @@ def validate_argmax_with_skipna(skipna, args, kwargs):
     return skipna
 
 
-ARGSORT_DEFAULTS = OrderedDict()
+ARGSORT_DEFAULTS = OrderedDict() \
+    # type: OrderedDict[str, Optional[Union[int, str]]]
 ARGSORT_DEFAULTS['axis'] = -1
 ARGSORT_DEFAULTS['kind'] = 'quicksort'
 ARGSORT_DEFAULTS['order'] = None
@@ -110,7 +112,8 @@ validate_argsort = CompatValidator(ARGSORT_DEFAULTS, fname='argsort',
 
 # two different signatures of argsort, this second validation
 # for when the `kind` param is supported
-ARGSORT_DEFAULTS_KIND = OrderedDict()
+ARGSORT_DEFAULTS_KIND = OrderedDict() \
+    # type: OrderedDict[str, Optional[int]]
 ARGSORT_DEFAULTS_KIND['axis'] = -1
 ARGSORT_DEFAULTS_KIND['order'] = None
 validate_argsort_kind = CompatValidator(ARGSORT_DEFAULTS_KIND, fname='argsort',
@@ -134,7 +137,7 @@ def validate_argsort_with_ascending(ascending, args, kwargs):
     return ascending
 
 
-CLIP_DEFAULTS = dict(out=None)
+CLIP_DEFAULTS = dict(out=None)  # type Dict[str, Any]
 validate_clip = CompatValidator(CLIP_DEFAULTS, fname='clip',
                                 method='both', max_fname_arg_count=3)
 
@@ -155,13 +158,13 @@ def validate_clip_with_axis(axis, args, kwargs):
     return axis
 
 
-COMPRESS_DEFAULTS = OrderedDict()
+COMPRESS_DEFAULTS = OrderedDict()  # type: OrderedDict[str, Any]
 COMPRESS_DEFAULTS['axis'] = None
 COMPRESS_DEFAULTS['out'] = None
 validate_compress = CompatValidator(COMPRESS_DEFAULTS, fname='compress',
                                     method='both', max_fname_arg_count=1)
 
-CUM_FUNC_DEFAULTS = OrderedDict()
+CUM_FUNC_DEFAULTS = OrderedDict()  # type: OrderedDict[str, Any]
 CUM_FUNC_DEFAULTS['dtype'] = None
 CUM_FUNC_DEFAULTS['out'] = None
 validate_cum_func = CompatValidator(CUM_FUNC_DEFAULTS, method='both',
@@ -185,7 +188,7 @@ def validate_cum_func_with_skipna(skipna, args, kwargs, name):
     return skipna
 
 
-ALLANY_DEFAULTS = OrderedDict()
+ALLANY_DEFAULTS = OrderedDict()  # type: OrderedDict[str, Optional[bool]]
 ALLANY_DEFAULTS['dtype'] = None
 ALLANY_DEFAULTS['out'] = None
 ALLANY_DEFAULTS['keepdims'] = False
@@ -203,26 +206,27 @@ validate_min = CompatValidator(MINMAX_DEFAULTS, fname='min',
 validate_max = CompatValidator(MINMAX_DEFAULTS, fname='max',
                                method='both', max_fname_arg_count=1)
 
-RESHAPE_DEFAULTS = dict(order='C')
+RESHAPE_DEFAULTS = dict(order='C')  # type: Dict[str, str]
 validate_reshape = CompatValidator(RESHAPE_DEFAULTS, fname='reshape',
                                    method='both', max_fname_arg_count=1)
 
-REPEAT_DEFAULTS = dict(axis=None)
+REPEAT_DEFAULTS = dict(axis=None)  # type: Dict[str, Any]
 validate_repeat = CompatValidator(REPEAT_DEFAULTS, fname='repeat',
                                   method='both', max_fname_arg_count=1)
 
-ROUND_DEFAULTS = dict(out=None)
+ROUND_DEFAULTS = dict(out=None)  # type: Dict[str, Any]
 validate_round = CompatValidator(ROUND_DEFAULTS, fname='round',
                                  method='both', max_fname_arg_count=1)
 
-SORT_DEFAULTS = OrderedDict()
+SORT_DEFAULTS = OrderedDict()  \
+    # type: OrderedDict[str, Optional[Union[int, str]]]
 SORT_DEFAULTS['axis'] = -1
 SORT_DEFAULTS['kind'] = 'quicksort'
 SORT_DEFAULTS['order'] = None
 validate_sort = CompatValidator(SORT_DEFAULTS, fname='sort',
                                 method='kwargs')
 
-STAT_FUNC_DEFAULTS = OrderedDict()
+STAT_FUNC_DEFAULTS = OrderedDict()  # type: OrderedDict[str, Optional[Any]]
 STAT_FUNC_DEFAULTS['dtype'] = None
 STAT_FUNC_DEFAULTS['out'] = None
 
@@ -247,14 +251,15 @@ validate_mean = CompatValidator(STAT_FUNC_DEFAULTS, fname='mean',
 validate_median = CompatValidator(MEDIAN_DEFAULTS, fname='median',
                                   method='both', max_fname_arg_count=1)
 
-STAT_DDOF_FUNC_DEFAULTS = OrderedDict()
+STAT_DDOF_FUNC_DEFAULTS = OrderedDict() \
+    # type: OrderedDict[str, Optional[bool]]
 STAT_DDOF_FUNC_DEFAULTS['dtype'] = None
 STAT_DDOF_FUNC_DEFAULTS['out'] = None
 STAT_DDOF_FUNC_DEFAULTS['keepdims'] = False
 validate_stat_ddof_func = CompatValidator(STAT_DDOF_FUNC_DEFAULTS,
                                           method='kwargs')
 
-TAKE_DEFAULTS = OrderedDict()
+TAKE_DEFAULTS = OrderedDict()  # type: OrderedDict[str, Optional[str]]
 TAKE_DEFAULTS['out'] = None
 TAKE_DEFAULTS['mode'] = 'raise'
 validate_take = CompatValidator(TAKE_DEFAULTS, fname='take',
