commit eea9361dd20239aebf6fe360194aa6fdbe3c5f02
Author: Joris Van den Bossche <jorisvandenbossche@gmail.com>
Date:   Thu May 21 18:20:55 2015 +0200

    Add repeat method to Categorical (ndarray compat) + fix PeriodIndex.repeat

diff --git a/pandas/core/categorical.py b/pandas/core/categorical.py
index c5cd83903..05886fb5a 100644
--- a/pandas/core/categorical.py
+++ b/pandas/core/categorical.py
@@ -1599,6 +1599,20 @@ class Categorical(PandasObject):
 
         return result
 
+    def repeat(self, repeats):
+        """
+        Repeat elements of a Categorical.
+
+        See also
+        --------
+        numpy.ndarray.repeat
+
+        """
+        codes = self._codes.repeat(repeats)
+        return Categorical(values=codes, categories=self.categories,
+                           ordered=self.ordered, name=self.name, fastpath=True)
+
+
 ##### The Series.cat accessor #####
 
 class CategoricalAccessor(PandasDelegate):
diff --git a/pandas/tests/test_categorical.py b/pandas/tests/test_categorical.py
index bec688db9..49efdff13 100755
--- a/pandas/tests/test_categorical.py
+++ b/pandas/tests/test_categorical.py
@@ -2714,7 +2714,6 @@ class TestCategoricalAsBlock(tm.TestCase):
             df.append(df_wrong_categories)
         self.assertRaises(ValueError, f)
 
-
     def test_merge(self):
         # GH 9426
 
@@ -2747,6 +2746,13 @@ class TestCategoricalAsBlock(tm.TestCase):
         result = pd.merge(cleft, cright, how='left', left_on='b', right_on='c')
         tm.assert_frame_equal(result, expected)
 
+    def test_repeat(self):
+        #GH10183
+        cat = pd.Categorical(["a","b"], categories=["a","b"])
+        exp = pd.Categorical(["a", "a", "b", "b"], categories=["a","b"])
+        res = cat.repeat(2)
+        self.assert_categorical_equal(res, exp)
+
     def test_na_actions(self):
 
         cat = pd.Categorical([1,2,3,np.nan], categories=[1,2,3])
diff --git a/pandas/tests/test_index.py b/pandas/tests/test_index.py
index ac071d6d3..21cd5f438 100644
--- a/pandas/tests/test_index.py
+++ b/pandas/tests/test_index.py
@@ -2857,6 +2857,14 @@ class TestPeriodIndex(DatetimeLike, tm.TestCase):
         with self.assertRaisesRegexp(ValueError, 'different freq'):
             idx.asfreq('D').get_indexer(idx)
 
+    def test_repeat(self):
+        # GH10183
+        idx = pd.period_range('2000-01-01', periods=3, freq='D')
+        res = idx.repeat(3)
+        exp = PeriodIndex(idx.values.repeat(3), freq='D')
+        self.assert_index_equal(res, exp)
+        self.assertEqual(res.freqstr, 'D')
+
 
 class TestTimedeltaIndex(DatetimeLike, tm.TestCase):
     _holder = TimedeltaIndex
diff --git a/pandas/tseries/period.py b/pandas/tseries/period.py
index 6627047f0..95bbc5016 100644
--- a/pandas/tseries/period.py
+++ b/pandas/tseries/period.py
@@ -783,6 +783,17 @@ class PeriodIndex(DatetimeIndexOpsMixin, Int64Index):
                      for x in to_concat]
         return Index(com._concat_compat(to_concat), name=name)
 
+    def repeat(self, n):
+        """
+        Return a new Index of the values repeated n times.
+
+        See also
+        --------
+        numpy.ndarray.repeat
+        """
+        # overwrites method from DatetimeIndexOpsMixin
+        return self._shallow_copy(self.values.repeat(n))
+
     def __setstate__(self, state):
         """Necessary for making this object picklable"""
 
