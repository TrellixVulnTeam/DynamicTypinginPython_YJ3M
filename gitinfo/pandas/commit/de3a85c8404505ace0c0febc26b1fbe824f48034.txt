commit de3a85c8404505ace0c0febc26b1fbe824f48034
Author: C John Klehm <cjohn@klehm.net>
Date:   Sat Mar 30 21:03:15 2019 -0500

    Pass the errors and kwargs arguments through to astype in the columnsâ€¦ (#25888)

diff --git a/doc/source/whatsnew/v0.25.0.rst b/doc/source/whatsnew/v0.25.0.rst
index 37f609b84..0d41b5199 100644
--- a/doc/source/whatsnew/v0.25.0.rst
+++ b/doc/source/whatsnew/v0.25.0.rst
@@ -299,7 +299,7 @@ Numeric
 Conversion
 ^^^^^^^^^^
 
--
+- Bug in :func:`DataFrame.astype()` when passing a dict of columns and types the `errors` parameter was ignored. (:issue:`25905`)
 -
 -
 
diff --git a/pandas/core/generic.py b/pandas/core/generic.py
index 3c5879ff8..2dcc7d3b0 100644
--- a/pandas/core/generic.py
+++ b/pandas/core/generic.py
@@ -5715,7 +5715,8 @@ class NDFrame(PandasObject, SelectionMixin):
             results = []
             for col_name, col in self.iteritems():
                 if col_name in dtype:
-                    results.append(col.astype(dtype[col_name], copy=copy))
+                    results.append(col.astype(dtype=dtype[col_name], copy=copy,
+                                              errors=errors, **kwargs))
                 else:
                     results.append(results.append(col.copy() if copy else col))
 
diff --git a/pandas/tests/frame/test_dtypes.py b/pandas/tests/frame/test_dtypes.py
index 1275a5bcc..fa8a6ab3c 100644
--- a/pandas/tests/frame/test_dtypes.py
+++ b/pandas/tests/frame/test_dtypes.py
@@ -840,6 +840,20 @@ class TestDataFrameDataTypes(TestData):
 
         df.astype(np.int8, errors='ignore')
 
+    def test_arg_for_errors_in_astype_dictlist(self):
+        # GH-25905
+        df = pd.DataFrame([
+            {'a': '1', 'b': '16.5%', 'c': 'test'},
+            {'a': '2.2', 'b': '15.3', 'c': 'another_test'}])
+        expected = pd.DataFrame([
+            {'a': 1.0, 'b': '16.5%', 'c': 'test'},
+            {'a': 2.2, 'b': '15.3', 'c': 'another_test'}])
+        type_dict = {'a': 'float64', 'b': 'float64', 'c': 'object'}
+
+        result = df.astype(dtype=type_dict, errors='ignore')
+
+        tm.assert_frame_equal(result, expected)
+
     @pytest.mark.parametrize('input_vals', [
         ([1, 2]),
         (['1', '2']),
