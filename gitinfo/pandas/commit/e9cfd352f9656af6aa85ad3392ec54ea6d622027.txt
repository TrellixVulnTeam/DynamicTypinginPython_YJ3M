commit e9cfd352f9656af6aa85ad3392ec54ea6d622027
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Tue Jan 24 17:55:22 2012 -0500

    BUG: groupby with dict passed had stopped working in some cases, GH #679

diff --git a/pandas/core/groupby.py b/pandas/core/groupby.py
index dbe484928..51238a262 100644
--- a/pandas/core/groupby.py
+++ b/pandas/core/groupby.py
@@ -688,7 +688,7 @@ def _get_groupings(obj, grouper=None, axis=0, level=None, sort=True):
 
     # what are we after, exactly?
     match_axis_length = len(groupers) == len(group_axis)
-    any_callable = any(callable(g) for g in groupers)
+    any_callable = any(callable(g) or isinstance(g, dict) for g in groupers)
     any_arraylike = any(isinstance(g, (list, tuple, np.ndarray))
                         for g in groupers)
 
diff --git a/pandas/tests/test_groupby.py b/pandas/tests/test_groupby.py
index f4370ea9b..0e44abcc6 100644
--- a/pandas/tests/test_groupby.py
+++ b/pandas/tests/test_groupby.py
@@ -120,6 +120,25 @@ class TestGroupBy(unittest.TestCase):
         # corner cases
         self.assertRaises(Exception, grouped.aggregate, lambda x: x * 2)
 
+    def test_groupby_dict_mapping(self):
+        # GH #679
+        from pandas import Series
+        s = Series({'T1': 5})
+        result = s.groupby({'T1': 'T2'}).agg(sum)
+        expected = s.groupby(['T2']).agg(sum)
+        assert_series_equal(result, expected)
+
+        s = Series([1., 2., 3., 4.], index=list('abcd'))
+        mapping = {'a' : 0, 'b' : 0, 'c' : 1, 'd' : 1}
+
+        result = s.groupby(mapping).mean()
+        result2 = s.groupby(mapping).agg(np.mean)
+        expected = s.groupby([0, 0, 1, 1]).mean()
+        expected2 = s.groupby([0, 0, 1, 1]).mean()
+        assert_series_equal(result, expected)
+        assert_series_equal(result, result2)
+        assert_series_equal(result, expected2)
+
     def test_groupby_nonobject_dtype(self):
         key = self.mframe.index.labels[0]
         grouped = self.mframe.groupby(key)
