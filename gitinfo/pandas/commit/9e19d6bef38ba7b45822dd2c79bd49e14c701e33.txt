commit 9e19d6bef38ba7b45822dd2c79bd49e14c701e33
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Fri Apr 27 19:31:50 2012 -0400

    ENH: add to_period method to TimeSeries to convert DatetimeIndex -> PeriodIndex

diff --git a/pandas/core/series.py b/pandas/core/series.py
index 4ef92da83..de40f6cba 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -2566,11 +2566,15 @@ class TimeSeries(Series):
 
         Parameters
         ----------
+        freq : string, default 'D'
+            Desired frequency
         how : {'s', 'e', 'start', 'end'}
+            Convention for converting period to timestamp; start of period
+            vs. end
 
         Returns
         -------
-        DatetimeIndex
+        ts : TimeSeries with DatetimeIndex
         """
         new_values = self.values
         if copy:
@@ -2579,4 +2583,24 @@ class TimeSeries(Series):
         new_index = self.index.to_timestamp(freq=freq, how=how)
         return Series(new_values, index=new_index, name=self.name)
 
+    def to_period(self, freq=None, copy=True):
+        """
+        Convert TimeSeries from DatetimeIndex to PeriodIndex with desired
+        frequency (inferred from index if not passed)
+
+        Parameters
+        ----------
+        freq : string, default
+
+        Returns
+        -------
+        ts : TimeSeries with PeriodIndex
+        """
+        new_values = self.values
+        if copy:
+            new_values = new_values.copy()
 
+        if freq is None:
+            freq = self.index.freqstr or self.index.inferred_freq
+        new_index = self.index.to_period(freq=freq)
+        return Series(new_values, index=new_index, name=self.name)
diff --git a/pandas/tseries/tests/test_timeseries.py b/pandas/tseries/tests/test_timeseries.py
index 55f103f2f..476a22072 100644
--- a/pandas/tseries/tests/test_timeseries.py
+++ b/pandas/tseries/tests/test_timeseries.py
@@ -511,6 +511,19 @@ class TestTimeSeries(unittest.TestCase):
         self.assert_(result.is_normalized)
         self.assert_(not rng.is_normalized)
 
+    def test_to_period(self):
+        from pandas.tseries.period import period_range
+
+        ts = _simple_ts('1/1/2000', '1/1/2001')
+
+        pts = ts.to_period()
+        exp = ts.copy()
+        exp.index = period_range('1/1/2000', '1/1/2001')
+        assert_series_equal(pts, exp)
+
+        pts = ts.to_period('M')
+        self.assert_(pts.index.equals(exp.index.asfreq('M')))
+
 def _simple_ts(start, end, freq='D'):
     rng = date_range(start, end, freq=freq)
     return Series(np.random.randn(len(rng)), index=rng)
