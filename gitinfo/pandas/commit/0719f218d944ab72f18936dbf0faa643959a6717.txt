commit 0719f218d944ab72f18936dbf0faa643959a6717
Author: jreback <jeff@reback.net>
Date:   Mon Mar 17 09:21:21 2014 -0400

    CLN: move set_grouper/get_grouper type pd.Grouper methods to internal

diff --git a/pandas/core/groupby.py b/pandas/core/groupby.py
index 9deee2d59..15e6381cb 100644
--- a/pandas/core/groupby.py
+++ b/pandas/core/groupby.py
@@ -198,7 +198,7 @@ class Grouper(object):
     def ax(self):
         return self.grouper
 
-    def get_grouper(self, obj):
+    def _get_grouper(self, obj):
 
         """
         Parameters
@@ -210,10 +210,10 @@ class Grouper(object):
         a tuple of binner, grouper, obj (possibly sorted)
         """
 
-        self.set_grouper(obj)
+        self._set_grouper(obj)
         return self.binner, self.grouper, self.obj
 
-    def set_grouper(self, obj, sort=False):
+    def _set_grouper(self, obj, sort=False):
         """
         given an object and the specifcations, setup the internal grouper for this particular specification
 
@@ -264,7 +264,7 @@ class Grouper(object):
         self.grouper = ax
         return self.grouper
 
-    def get_binner_for_grouping(self, obj):
+    def _get_binner_for_grouping(self, obj):
         raise NotImplementedError
 
     @property
@@ -1697,7 +1697,7 @@ class Grouping(object):
             elif isinstance(self.grouper, Grouper):
 
                 # get the new grouper
-                grouper = self.grouper.get_binner_for_grouping(self.obj)
+                grouper = self.grouper._get_binner_for_grouping(self.obj)
                 self.obj = self.grouper.obj
                 self.grouper = grouper
                 if self.name is None:
@@ -1807,7 +1807,7 @@ def _get_grouper(obj, key=None, axis=0, level=None, sort=True):
 
     # a passed in Grouper, directly convert
     if isinstance(key, Grouper):
-        binner, grouper, obj = key.get_grouper(obj)
+        binner, grouper, obj = key._get_grouper(obj)
         return grouper, [], obj
 
     # already have a BaseGrouper, just return it
diff --git a/pandas/tseries/resample.py b/pandas/tseries/resample.py
index b29f67b40..51144cb3b 100644
--- a/pandas/tseries/resample.py
+++ b/pandas/tseries/resample.py
@@ -76,7 +76,7 @@ class TimeGrouper(Grouper):
         super(TimeGrouper, self).__init__(freq=freq, axis=axis, **kwargs)
 
     def resample(self, obj):
-        self.set_grouper(obj, sort=True)
+        self._set_grouper(obj, sort=True)
         ax = self.grouper
 
         if isinstance(ax, DatetimeIndex):
@@ -93,7 +93,7 @@ class TimeGrouper(Grouper):
                 rs = self._resample_periods()
             else:
                 obj = self.obj.to_timestamp(how=self.convention)
-                self.set_grouper(obj)
+                self._set_grouper(obj)
                 rs = self._resample_timestamps()
         elif len(ax) == 0:
             return self.obj
@@ -104,11 +104,11 @@ class TimeGrouper(Grouper):
         rs_axis.name = ax.name
         return rs
 
-    def get_grouper(self, obj):
-        self.set_grouper(obj)
-        return self.get_binner_for_resample()
+    def _get_grouper(self, obj):
+        self._set_grouper(obj)
+        return self._get_binner_for_resample()
 
-    def get_binner_for_resample(self):
+    def _get_binner_for_resample(self):
         # create the BinGrouper
         # assume that self.set_grouper(obj) has already been called
 
@@ -121,12 +121,12 @@ class TimeGrouper(Grouper):
         self.grouper = BinGrouper(bins, binlabels)
         return self.binner, self.grouper, self.obj
 
-    def get_binner_for_grouping(self, obj):
+    def _get_binner_for_grouping(self, obj):
         # return an ordering of the transformed group labels,
         # suitable for multi-grouping, e.g the labels for
         # the resampled intervals
-        ax = self.set_grouper(obj)
-        self.get_binner_for_resample()
+        ax = self._set_grouper(obj)
+        self._get_binner_for_resample()
 
         # create the grouper
         binner = self.binner
@@ -233,7 +233,7 @@ class TimeGrouper(Grouper):
         # assumes set_grouper(obj) already called
         axlabels = self.ax
 
-        self.get_binner_for_resample()
+        self._get_binner_for_resample()
         grouper = self.grouper
         binner = self.binner
         obj = self.obj
diff --git a/pandas/tseries/tests/test_resample.py b/pandas/tseries/tests/test_resample.py
index 20c672472..242d656b8 100644
--- a/pandas/tseries/tests/test_resample.py
+++ b/pandas/tseries/tests/test_resample.py
@@ -1134,7 +1134,7 @@ class TestTimeGrouper(tm.TestCase):
         df = DataFrame({'open': 1, 'close': 2}, index=ind)
         tg = TimeGrouper('M')
 
-        _, grouper, _ = tg.get_grouper(df)
+        _, grouper, _ = tg._get_grouper(df)
 
         # Errors
         grouped = df.groupby(grouper, group_keys=False)
@@ -1151,7 +1151,7 @@ class TestTimeGrouper(tm.TestCase):
                       minor_axis=['A', 'B', 'C', 'D'])
 
         tg = TimeGrouper('M', axis=1)
-        _, grouper, _ = tg.get_grouper(wp)
+        _, grouper, _ = tg._get_grouper(wp)
         bingrouped = wp.groupby(grouper)
         binagg = bingrouped.mean()
 
