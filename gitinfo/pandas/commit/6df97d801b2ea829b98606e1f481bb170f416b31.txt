commit 6df97d801b2ea829b98606e1f481bb170f416b31
Author: Tom Augspurger <tom.w.augspurger@gmail.com>
Date:   Fri Nov 20 09:33:14 2015 -0600

    DOC: a few touchups

diff --git a/doc/source/api.rst b/doc/source/api.rst
index 668e297dc..ac79528f3 100644
--- a/doc/source/api.rst
+++ b/doc/source/api.rst
@@ -1710,7 +1710,7 @@ Style Export and Import
 
    Styler.render
    Styler.export
-   Styler.set
+   Styler.use
 
 .. currentmodule:: pandas
 
diff --git a/pandas/core/style.py b/pandas/core/style.py
index 2559b9a3a..550b0f16e 100644
--- a/pandas/core/style.py
+++ b/pandas/core/style.py
@@ -68,11 +68,11 @@ class Styler(object):
     Notes
     -----
     Most styling will be done by passing style functions into
-    Styler.apply or Styler.applymap. Style functions should
-    return values with strings containing CSS 'attr: value' that will
+    ``Styler.apply`` or ``Styler.applymap``. Style functions should
+    return values with strings containing CSS ``'attr: value'`` that will
     be applied to the indicated cells.
 
-    If using in the Jupyter notebook, Styler has defined a _repr_html_
+    If using in the Jupyter notebook, Styler has defined a ``_repr_html_``
     to automatically render itself. Otherwise call Styler.render to get
     the genterated HTML.
 
@@ -306,6 +306,10 @@ class Styler(object):
         return self._copy(deepcopy=True)
 
     def clear(self):
+        '''
+        "Reset" the styler, removing any previously applied styles.
+        Returns None.
+        '''
         self.ctx.clear()
         self._todo = []
 
@@ -360,9 +364,9 @@ class Styler(object):
 
         Notes
         -----
-        This is similar to DataFrame.apply, except that axis=None applies
-        the function to the entire DataFrame at once, rather tha column
-        or rowwise.
+        This is similar to ``DataFrame.apply``, except that ``axis=None``
+        applies the function to the entire DataFrame at once,
+        rather than column-wise or row-wise.
         """
         self._todo.append((lambda instance: getattr(instance, '_apply'),
                           (func, axis, subset),
@@ -424,7 +428,7 @@ class Styler(object):
     def set_table_attributes(self, attributes):
         """
         Set the table attributes. These are the items
-        that show up in the opening <table> tag in addition
+        that show up in the opening ``<table>`` tag in addition
         to to automatic (by default) id.
 
         .. versionadded:: 0.17.1
@@ -443,7 +447,7 @@ class Styler(object):
     def export(self):
         """
         Export the styles to applied to the current Styler.
-        Can be applied to a second style with `.use`.
+        Can be applied to a second style with ``Styler.use``.
 
         .. versionadded:: 0.17.1
 
@@ -460,7 +464,7 @@ class Styler(object):
     def use(self, styles):
         """
         Set the styles on the current Styler, possibly using styles
-        from `Styler.export`
+        from ``Styler.export``.
 
         .. versionadded:: 0.17.1
 
