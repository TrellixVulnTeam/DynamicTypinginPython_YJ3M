commit dcb4e47a0b6620f1efbe5e02ed493e6513fc8763
Author: Jeff Reback <jeff@reback.net>
Date:   Fri Feb 10 13:19:22 2017 -0500

    COMPAT: skip tests for numpy >= 1.12 with pow and integer inputs
    
    closes #15363
    
    CI: fix 3.5 build to numpy 1.11.3

diff --git a/.gitignore b/.gitignore
index 808d9fb73..a509fcf73 100644
--- a/.gitignore
+++ b/.gitignore
@@ -19,6 +19,7 @@
 .noseids
 .ipynb_checkpoints
 .tags
+.cache/
 
 # Compiled source #
 ###################
diff --git a/ci/requirements-3.5.build b/ci/requirements-3.5.build
index 9558cf00d..2fc2053e6 100644
--- a/ci/requirements-3.5.build
+++ b/ci/requirements-3.5.build
@@ -1,4 +1,4 @@
 python-dateutil
 pytz
-numpy
+numpy=1.11.3
 cython
diff --git a/ci/requirements-3.5.run b/ci/requirements-3.5.run
index ef354195c..b07ce611c 100644
--- a/ci/requirements-3.5.run
+++ b/ci/requirements-3.5.run
@@ -1,6 +1,6 @@
 python-dateutil
 pytz
-numpy
+numpy=1.11.3
 openpyxl
 xlsxwriter
 xlrd
diff --git a/pandas/tests/test_expressions.py b/pandas/tests/test_expressions.py
index eca4a8f3c..136786ecf 100644
--- a/pandas/tests/test_expressions.py
+++ b/pandas/tests/test_expressions.py
@@ -12,7 +12,7 @@ import numpy as np
 
 from pandas.core.api import DataFrame, Panel
 from pandas.computation import expressions as expr
-from pandas import compat
+from pandas import compat, _np_version_under1p12
 from pandas.util.testing import (assert_almost_equal, assert_series_equal,
                                  assert_frame_equal, assert_panel_equal,
                                  assert_panel4d_equal, slow)
@@ -78,6 +78,13 @@ class TestExpressions(tm.TestCase):
         if not compat.PY3:
             operations.append('div')
         for arith in operations:
+
+            # numpy >= 1.12 doesn't handle integers
+            # raised to integer powers
+            # https://github.com/pandas-dev/pandas/issues/15363
+            if arith == 'pow' and not _np_version_under1p12:
+                continue
+
             operator_name = arith
             if arith == 'div':
                 operator_name = 'truediv'
@@ -90,6 +97,7 @@ class TestExpressions(tm.TestCase):
             expr.set_use_numexpr(False)
             expected = op(df, other)
             expr.set_use_numexpr(True)
+
             result = op(df, other)
             try:
                 if check_dtype:
@@ -273,6 +281,13 @@ class TestExpressions(tm.TestCase):
 
                 for op, op_str in [('add', '+'), ('sub', '-'), ('mul', '*'),
                                    ('div', '/'), ('pow', '**')]:
+
+                    # numpy >= 1.12 doesn't handle integers
+                    # raised to integer powers
+                    # https://github.com/pandas-dev/pandas/issues/15363
+                    if op == 'pow' and not _np_version_under1p12:
+                        continue
+
                     if op == 'div':
                         op = getattr(operator, 'truediv', None)
                     else:
