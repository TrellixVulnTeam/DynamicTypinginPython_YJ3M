commit 92dbc78af9f34af83691d86347fc04d2c543b94c
Author: Ming Li <14131823+minggli@users.noreply.github.com>
Date:   Sun Feb 25 23:06:25 2018 +0000

    parameterize test_pct_change_periods_freq (#19897)

diff --git a/pandas/tests/frame/test_timeseries.py b/pandas/tests/frame/test_timeseries.py
index 9f94439a7..e1bc310e1 100644
--- a/pandas/tests/frame/test_timeseries.py
+++ b/pandas/tests/frame/test_timeseries.py
@@ -122,36 +122,31 @@ class TestDataFrameTimeSeriesMethods(TestData):
         edf = DataFrame({'a': expected, 'b': expected})
         assert_frame_equal(chg, edf)
 
-    def test_pct_change_periods_freq(self):
+    @pytest.mark.parametrize("freq, periods, fill_method, limit",
+                             [('5B', 5, None, None),
+                              ('3B', 3, None, None),
+                              ('3B', 3, 'bfill', None),
+                              ('7B', 7, 'pad', 1),
+                              ('7B', 7, 'bfill', 3),
+                              ('14B', 14, None, None)])
+    def test_pct_change_periods_freq(self, freq, periods, fill_method, limit):
         # GH 7292
-        rs_freq = self.tsframe.pct_change(freq='5B')
-        rs_periods = self.tsframe.pct_change(5)
-        assert_frame_equal(rs_freq, rs_periods)
-
-        rs_freq = self.tsframe.pct_change(freq='3B', fill_method=None)
-        rs_periods = self.tsframe.pct_change(3, fill_method=None)
-        assert_frame_equal(rs_freq, rs_periods)
-
-        rs_freq = self.tsframe.pct_change(freq='3B', fill_method='bfill')
-        rs_periods = self.tsframe.pct_change(3, fill_method='bfill')
-        assert_frame_equal(rs_freq, rs_periods)
-
-        rs_freq = self.tsframe.pct_change(freq='7B',
-                                          fill_method='pad',
-                                          limit=1)
-        rs_periods = self.tsframe.pct_change(7, fill_method='pad', limit=1)
-        assert_frame_equal(rs_freq, rs_periods)
-
-        rs_freq = self.tsframe.pct_change(freq='7B',
-                                          fill_method='bfill',
-                                          limit=3)
-        rs_periods = self.tsframe.pct_change(7, fill_method='bfill', limit=3)
+        rs_freq = self.tsframe.pct_change(freq=freq,
+                                          fill_method=fill_method,
+                                          limit=limit)
+        rs_periods = self.tsframe.pct_change(periods,
+                                             fill_method=fill_method,
+                                             limit=limit)
         assert_frame_equal(rs_freq, rs_periods)
 
         empty_ts = DataFrame(index=self.tsframe.index,
                              columns=self.tsframe.columns)
-        rs_freq = empty_ts.pct_change(freq='14B')
-        rs_periods = empty_ts.pct_change(14)
+        rs_freq = empty_ts.pct_change(freq=freq,
+                                      fill_method=fill_method,
+                                      limit=limit)
+        rs_periods = empty_ts.pct_change(periods,
+                                         fill_method=fill_method,
+                                         limit=limit)
         assert_frame_equal(rs_freq, rs_periods)
 
     def test_frame_ctor_datetime64_column(self):
diff --git a/pandas/tests/series/test_timeseries.py b/pandas/tests/series/test_timeseries.py
index 63a05ef7d..baf2619c7 100644
--- a/pandas/tests/series/test_timeseries.py
+++ b/pandas/tests/series/test_timeseries.py
@@ -355,31 +355,30 @@ class TestTimeSeries(TestData):
         expected = Series([np.nan, 0.5, 0., 2.5 / 1.5 - 1, .2])
         assert_series_equal(chg, expected)
 
-    def test_pct_change_periods_freq(self):
+    @pytest.mark.parametrize("freq, periods, fill_method, limit",
+                             [('5B', 5, None, None),
+                              ('3B', 3, None, None),
+                              ('3B', 3, 'bfill', None),
+                              ('7B', 7, 'pad', 1),
+                              ('7B', 7, 'bfill', 3),
+                              ('14B', 14, None, None)])
+    def test_pct_change_periods_freq(self, freq, periods, fill_method, limit):
         # GH 7292
-        rs_freq = self.ts.pct_change(freq='5B')
-        rs_periods = self.ts.pct_change(5)
-        assert_series_equal(rs_freq, rs_periods)
-
-        rs_freq = self.ts.pct_change(freq='3B', fill_method=None)
-        rs_periods = self.ts.pct_change(3, fill_method=None)
-        assert_series_equal(rs_freq, rs_periods)
-
-        rs_freq = self.ts.pct_change(freq='3B', fill_method='bfill')
-        rs_periods = self.ts.pct_change(3, fill_method='bfill')
-        assert_series_equal(rs_freq, rs_periods)
-
-        rs_freq = self.ts.pct_change(freq='7B', fill_method='pad', limit=1)
-        rs_periods = self.ts.pct_change(7, fill_method='pad', limit=1)
-        assert_series_equal(rs_freq, rs_periods)
-
-        rs_freq = self.ts.pct_change(freq='7B', fill_method='bfill', limit=3)
-        rs_periods = self.ts.pct_change(7, fill_method='bfill', limit=3)
+        rs_freq = self.ts.pct_change(freq=freq,
+                                     fill_method=fill_method,
+                                     limit=limit)
+        rs_periods = self.ts.pct_change(periods,
+                                        fill_method=fill_method,
+                                        limit=limit)
         assert_series_equal(rs_freq, rs_periods)
 
         empty_ts = Series(index=self.ts.index)
-        rs_freq = empty_ts.pct_change(freq='14B')
-        rs_periods = empty_ts.pct_change(14)
+        rs_freq = empty_ts.pct_change(freq=freq,
+                                      fill_method=fill_method,
+                                      limit=limit)
+        rs_periods = empty_ts.pct_change(periods,
+                                         fill_method=fill_method,
+                                         limit=limit)
         assert_series_equal(rs_freq, rs_periods)
 
     def test_autocorr(self):
