commit 5988d30e422886008990e3abec95d824aac842ab
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Sat Mar 20 17:51:21 2010 +0000

    test coverage
    
    git-svn-id: http://pandas.googlecode.com/svn/trunk@141 d5231056-7de3-11de-ac95-d976489f1ece

diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 9901af926..aa0889e21 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -880,9 +880,6 @@ class DataFrame(Picklable, Groupable):
         else:
             fillMethod = ''
 
-        if fillMethod not in ['BACKFILL', 'PAD', '']:
-            raise Exception("Don't recognize fillMethod: %s" % fillMethod)
-
         frame = self
 
         if index is not None:
diff --git a/pandas/core/series.py b/pandas/core/series.py
index d6e88953c..0dcb1d3ae 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -1046,9 +1046,6 @@ class Series(np.ndarray, Picklable, Groupable):
 
         fillMethod = fillMethod.upper()
 
-        if fillMethod not in ['BACKFILL', 'PAD']:
-            raise Exception("Don't recognize fillMethod: %s" % fillMethod)
-
         # Cython for blazing speed
         fillVec, mask = tseries.getFillVec(self.index, newIndex, oldMap,
                                            newMap, kind=fillMethod)
diff --git a/pandas/core/tests/test_frame.py b/pandas/core/tests/test_frame.py
index c72692d5a..dbde3ebbb 100644
--- a/pandas/core/tests/test_frame.py
+++ b/pandas/core/tests/test_frame.py
@@ -1,5 +1,6 @@
 # pylint: disable-msg=W0612
 from copy import deepcopy
+from datetime import timedelta
 from cStringIO import StringIO
 import os
 import unittest
@@ -247,6 +248,10 @@ class TestDataFrame(unittest.TestCase):
         biggie.toString(buffer=buf, columns=['B', 'A'],
                         formatters={'A' : lambda x: '%.1f' % x})
 
+        biggie.toString(buffer=buf, columns=['B', 'A'],
+                        float_format=str)
+
+
     def test_getitem(self):
         # slicing
 
@@ -1042,6 +1047,10 @@ class TestDataFrame(unittest.TestCase):
 
         self._check_statistic(self.frame, 'sum', f)
 
+    def test_sum_object(self):
+        deltas = self.frame.apply(lambda x: x.astype(int)) * timedelta(1)
+        deltas.sum()
+
     def test_product(self):
         def f(x):
             x = np.asarray(x)
diff --git a/pandas/core/tests/test_pytools.py b/pandas/core/tests/test_pytools.py
index 2be3af1b4..196e420c8 100644
--- a/pandas/core/tests/test_pytools.py
+++ b/pandas/core/tests/test_pytools.py
@@ -43,10 +43,26 @@ def test_map_indices_py():
     assert(result == expected)
 
 def test_union():
-    pass
+    a = [1, 2, 3]
+    b = [4, 5, 6]
+
+    union = sorted(pytools.union(a, b))
+
+    assert((a + b) == union)
 
 def test_difference():
-    pass
+    a = [1, 2, 3]
+    b = [1, 2, 3, 4, 5, 6]
+
+    inter = sorted(pytools.difference(b, a))
+
+    assert([4, 5, 6] == inter)
 
 def test_intersection():
-    pass
+    a = [1, 2, 3]
+    b = [1, 2, 3, 4, 5, 6]
+
+    inter = sorted(pytools.intersection(a, b))
+
+    assert(a == inter)
+
diff --git a/pandas/lib/src/reindex.pyx b/pandas/lib/src/reindex.pyx
index 595e256e4..4f19b301a 100644
--- a/pandas/lib/src/reindex.pyx
+++ b/pandas/lib/src/reindex.pyx
@@ -389,6 +389,8 @@ def getFillVec(ndarray oldIndex, ndarray newIndex, dict oldMap, dict newMap,
         fillVec, maskVec = _pad(oldIndex, newIndex, oldMap, newMap)
     elif kind == 'BACKFILL':
         fillVec, maskVec = _backfill(oldIndex, newIndex, oldMap, newMap)
+    else:
+        raise Exception("Don't recognize fillMethod: %s" % fillMethod)
 
     return fillVec, maskVec.astype(np.bool)
 
