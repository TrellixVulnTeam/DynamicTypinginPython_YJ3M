commit f5536682d1f6b63910184c5944428c6c19a18ebf
Author: Wouter Overmeire <lodagro@gmail.com>
Date:   Thu Sep 13 21:35:11 2012 +0200

    ENH: indicate DataFrame repr truncation, close #1854

diff --git a/pandas/core/format.py b/pandas/core/format.py
index d21e412ab..8f4d1b592 100644
--- a/pandas/core/format.py
+++ b/pandas/core/format.py
@@ -733,7 +733,11 @@ def _make_fixed_width(strings, justify='right', minimum=None):
         except UnicodeError:
             eff_len = max_len
 
-        return justfunc(x[:eff_len], eff_len)
+        if conf_max is not None:
+            if (conf_max > 3) & (_strlen(x) > max_len):
+                x = x[:eff_len - 3] + '...'
+
+        return justfunc(x, eff_len)
 
     return [just(x) for x in strings]
 
diff --git a/pandas/tests/test_format.py b/pandas/tests/test_format.py
index b4ab3edc1..571cc50f1 100644
--- a/pandas/tests/test_format.py
+++ b/pandas/tests/test_format.py
@@ -61,6 +61,26 @@ class TestDataFrameFormatting(unittest.TestCase):
         repr(df)
         df.to_string(col_space=10, buf=buf)
 
+    def test_repr_truncation(self):
+        max_len = 20
+        fmt.print_config.max_colwidth = max_len
+        df = DataFrame({'A': np.random.randn(10),
+                 'B': [tm.rands(np.random.randint(max_len - 1,
+                     max_len + 1)) for i in range(10)]})
+        r = repr(df)
+        r = r[r.find('\n') + 1:]
+        for line, value in zip(r.split('\n'), df['B']):
+            if fmt._strlen(value) + 1 > max_len:
+                self.assert_('...' in line)
+            else:
+                self.assert_('...' not in line)
+
+        fmt.print_config.max_colwidth = None
+        self.assert_('...' not in repr(df))
+
+        fmt.print_config.max_colwidth = max_len + 2
+        self.assert_('...' not in repr(df))
+
     def test_to_string_repr_unicode(self):
         buf = StringIO()
 
