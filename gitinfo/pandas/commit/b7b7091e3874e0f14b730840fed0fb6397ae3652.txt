commit b7b7091e3874e0f14b730840fed0fb6397ae3652
Author: sinhrks <sinhrks@gmail.com>
Date:   Sun Apr 3 17:22:30 2016 -0400

    PEP8: pandas/indexes
    
    Author: sinhrks <sinhrks@gmail.com>
    
    Closes #12786 from sinhrks/pep_indexes and squashes the following commits:
    
    f7ec60e [sinhrks] PEP8: pandas/indexes

diff --git a/ci/lint.sh b/ci/lint.sh
index 56bfb4cb0..08c3e4570 100755
--- a/ci/lint.sh
+++ b/ci/lint.sh
@@ -8,7 +8,7 @@ RET=0
 
 if [ "$LINT" ]; then
     echo "Linting"
-    for path in 'core' 'io' 'stats' 'compat' 'sparse' 'tools' 'tseries' 'tests' 'computation' 'util'
+    for path in 'core' 'indexes' 'io' 'stats' 'compat' 'sparse' 'tools' 'tseries' 'tests' 'computation' 'util'
     do
         echo "linting -> pandas/$path"
         flake8 pandas/$path --filename '*.py'
diff --git a/pandas/indexes/base.py b/pandas/indexes/base.py
index d5e0c7108..e1bc843eb 100644
--- a/pandas/indexes/base.py
+++ b/pandas/indexes/base.py
@@ -339,6 +339,7 @@ class Index(IndexOpsMixin, StringAccessorMixin, PandasObject):
         values : the values to create the new Index, optional
         kwargs : updates the default attributes for this Index
         """
+
     @Appender(_index_shared_docs['_shallow_copy'])
     def _shallow_copy(self, values=None, **kwargs):
         if values is None:
@@ -1349,6 +1350,7 @@ class Index(IndexOpsMixin, StringAccessorMixin, PandasObject):
         --------
         numpy.ndarray.take
         """
+
     @Appender(_index_shared_docs['take'])
     def take(self, indices, axis=0, allow_fill=True, fill_value=None):
         indices = com._ensure_platform_int(indices)
@@ -1848,8 +1850,8 @@ class Index(IndexOpsMixin, StringAccessorMixin, PandasObject):
 
         Notes
         -----
-        ``symmetric_difference`` contains elements that appear in either ``idx1`` or
-        ``idx2`` but not both. Equivalent to the Index created by
+        ``symmetric_difference`` contains elements that appear in either
+        ``idx1`` or ``idx2`` but not both. Equivalent to the Index created by
         ``(idx1 - idx2) + (idx2 - idx1)`` with duplicates dropped.
 
         The sorting of a result containing ``NaN`` values is not guaranteed
diff --git a/pandas/indexes/multi.py b/pandas/indexes/multi.py
index 49a9c3d62..de3a67ebc 100644
--- a/pandas/indexes/multi.py
+++ b/pandas/indexes/multi.py
@@ -12,7 +12,7 @@ from pandas.lib import Timestamp
 
 from pandas.compat import range, zip, lrange, lzip, map
 from pandas import compat
-from pandas.core.base import FrozenList, FrozenNDArray
+from pandas.core.base import FrozenList
 import pandas.core.base as base
 from pandas.util.decorators import (Appender, cache_readonly,
                                     deprecate, deprecate_kwarg)
@@ -1008,9 +1008,9 @@ class MultiIndex(Index):
     def take(self, indices, axis=0, allow_fill=True, fill_value=None):
         indices = com._ensure_platform_int(indices)
         taken = self._assert_take_fillable(self.labels, indices,
-                                                allow_fill=allow_fill,
-                                                fill_value=fill_value,
-                                                na_value=-1)
+                                           allow_fill=allow_fill,
+                                           fill_value=fill_value,
+                                           na_value=-1)
         return MultiIndex(levels=self.levels, labels=taken,
                           names=self.names, verify_integrity=False)
 
