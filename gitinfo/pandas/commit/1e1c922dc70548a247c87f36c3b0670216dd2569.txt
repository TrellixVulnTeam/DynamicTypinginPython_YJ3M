commit 1e1c922dc70548a247c87f36c3b0670216dd2569
Author: Chang She <changshe@gmail.com>
Date:   Mon Sep 10 16:29:12 2012 -0400

    BUG: DataFrame.shift converts to object for bool #1814

diff --git a/pandas/core/common.py b/pandas/core/common.py
index e46882289..3513bfb67 100644
--- a/pandas/core/common.py
+++ b/pandas/core/common.py
@@ -526,6 +526,19 @@ def ensure_float(arr):
 
     return arr
 
+def ensure_nansafe(arr):
+    """
+    convert int to float
+    convert bool to object
+    """
+    if issubclass(arr.dtype.type, np.integer):
+        arr = arr.astype(float)
+
+    elif issubclass(arr.dtype.type, np.bool_):
+        arr = arr.astype(object)
+
+    return arr
+
 def _mut_exclusive(arg1, arg2):
     if arg1 is not None and arg2 is not None:
         raise Exception('mutually exclusive arguments')
diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 114daff46..818131182 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -3567,7 +3567,7 @@ class DataFrame(NDFrame):
             new_values = blk.values.take(indexer, axis=1)
             # convert integer to float if necessary. need to do a lot more than
             # that, handle boolean etc also
-            new_values = com.ensure_float(new_values)
+            new_values = com.ensure_nansafe(new_values)
             if periods > 0:
                 new_values[:, :periods] = nan
             else:
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index fbc9b92b4..1ae31d4c1 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -4930,6 +4930,15 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
 
         self.assertRaises(ValueError, ps.shift, freq='D')
 
+    def test_shift_bool(self):
+        df = DataFrame({'high':[True, False],
+                        'low':[False, False]})
+        rs = df.shift(1)
+        xp = DataFrame(np.array([[np.nan, np.nan],
+                                 [True, False]], dtype=object),
+                       columns=['high', 'low'])
+        assert_frame_equal(rs, xp)
+
     def test_tshift(self):
         # PeriodIndex
         ps = tm.makePeriodFrame()
