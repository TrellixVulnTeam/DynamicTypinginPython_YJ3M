commit 659e0cae6be2d7ab3370cc7d8ab936bc3ee1b159
Author: Jeff Reback <jeff@reback.net>
Date:   Sun Feb 17 12:27:06 2019 -0500

    TST: xfail excel styler tests, xref GH25351 (#25352)
    
    * TST: xfail excel styler tests, xref GH25351
    
    * CI: cleanup .c files for cpplint>1.4

diff --git a/pandas/_libs/src/compat_helper.h b/pandas/_libs/src/compat_helper.h
index 462f53392..078069fb4 100644
--- a/pandas/_libs/src/compat_helper.h
+++ b/pandas/_libs/src/compat_helper.h
@@ -29,8 +29,8 @@ https://bugs.python.org/issue29943
 #ifndef PYPY_VERSION
 # if PY_VERSION_HEX < 0x03070000 && defined(PySlice_GetIndicesEx)
 #   undef PySlice_GetIndicesEx
-# endif
-#endif
+# endif  // PY_VERSION_HEX
+#endif  // PYPY_VERSION
 
 PANDAS_INLINE int slice_get_indices(PyObject *s,
                                     Py_ssize_t length,
@@ -44,7 +44,7 @@ PANDAS_INLINE int slice_get_indices(PyObject *s,
 #else
   return PySlice_GetIndicesEx((PySliceObject *)s, length, start,
                               stop, step, slicelength);
-#endif
+#endif  // PY_VERSION_HEX
 }
 
 #endif  // PANDAS__LIBS_SRC_COMPAT_HELPER_H_
diff --git a/pandas/_libs/src/inline_helper.h b/pandas/_libs/src/inline_helper.h
index 397ec8e7b..e203a05d2 100644
--- a/pandas/_libs/src/inline_helper.h
+++ b/pandas/_libs/src/inline_helper.h
@@ -19,7 +19,7 @@ The full license is in the LICENSE file, distributed with this software.
     #define PANDAS_INLINE static inline
   #else
     #define PANDAS_INLINE
-  #endif
-#endif
+  #endif  // __GNUC__
+#endif  // PANDAS_INLINE
 
 #endif  // PANDAS__LIBS_SRC_INLINE_HELPER_H_
diff --git a/pandas/_libs/src/parse_helper.h b/pandas/_libs/src/parse_helper.h
index b71131bee..6fcd2ed0a 100644
--- a/pandas/_libs/src/parse_helper.h
+++ b/pandas/_libs/src/parse_helper.h
@@ -30,7 +30,7 @@ int to_double(char *item, double *p_value, char sci, char decimal,
 #if PY_VERSION_HEX < 0x02060000
 #define PyBytes_Check PyString_Check
 #define PyBytes_AS_STRING PyString_AS_STRING
-#endif
+#endif  // PY_VERSION_HEX
 
 int floatify(PyObject *str, double *result, int *maybe_int) {
     int status;
diff --git a/pandas/_libs/src/parser/io.c b/pandas/_libs/src/parser/io.c
index 19271c785..f578ce138 100644
--- a/pandas/_libs/src/parser/io.c
+++ b/pandas/_libs/src/parser/io.c
@@ -15,7 +15,7 @@ The full license is in the LICENSE file, distributed with this software.
 
 #ifndef O_BINARY
 #define O_BINARY 0
-#endif /* O_BINARY */
+#endif  // O_BINARY
 
 /*
   On-disk FILE, uncompressed
@@ -277,4 +277,4 @@ void *buffer_mmap_bytes(void *source, size_t nbytes, size_t *bytes_read,
     return NULL;
 }
 
-#endif
+#endif  // HAVE_MMAP
diff --git a/pandas/_libs/src/parser/io.h b/pandas/_libs/src/parser/io.h
index d22e8ddae..074322c7b 100644
--- a/pandas/_libs/src/parser/io.h
+++ b/pandas/_libs/src/parser/io.h
@@ -25,7 +25,7 @@ typedef struct _file_source {
 
 #if !defined(_WIN32) && !defined(HAVE_MMAP)
 #define HAVE_MMAP
-#endif
+#endif  // HAVE_MMAP
 
 typedef struct _memory_map {
     int fd;
diff --git a/pandas/_libs/src/parser/tokenizer.c b/pandas/_libs/src/parser/tokenizer.c
index a86af7c54..6acf3c3de 100644
--- a/pandas/_libs/src/parser/tokenizer.c
+++ b/pandas/_libs/src/parser/tokenizer.c
@@ -1480,7 +1480,7 @@ int main(int argc, char *argv[]) {
 
     return 0;
 }
-#endif
+#endif  // TEST
 
 // ---------------------------------------------------------------------------
 // Implementation of xstrtod
diff --git a/pandas/_libs/src/parser/tokenizer.h b/pandas/_libs/src/parser/tokenizer.h
index c32c061c7..ce9dd39b1 100644
--- a/pandas/_libs/src/parser/tokenizer.h
+++ b/pandas/_libs/src/parser/tokenizer.h
@@ -42,7 +42,7 @@ See LICENSE for the license
 
 #if defined(_MSC_VER)
 #define strtoll _strtoi64
-#endif
+#endif  // _MSC_VER
 
 /*
 
@@ -75,7 +75,7 @@ See LICENSE for the license
 #define TRACE(X) printf X;
 #else
 #define TRACE(X)
-#endif
+#endif  // VERBOSE
 
 #define PARSER_OUT_OF_MEMORY -1
 
diff --git a/pandas/_libs/tslibs/src/datetime/np_datetime.c b/pandas/_libs/tslibs/src/datetime/np_datetime.c
index 866c9ca9d..87866d804 100644
--- a/pandas/_libs/tslibs/src/datetime/np_datetime.c
+++ b/pandas/_libs/tslibs/src/datetime/np_datetime.c
@@ -30,7 +30,7 @@ This file is derived from NumPy 1.7. See NUMPY_LICENSE.txt
 
 #if PY_MAJOR_VERSION >= 3
 #define PyInt_AsLong PyLong_AsLong
-#endif
+#endif  // PyInt_AsLong
 
 const npy_datetimestruct _NS_MIN_DTS = {
     1677, 9, 21, 0, 12, 43, 145225, 0, 0};
diff --git a/pandas/_libs/tslibs/src/datetime/np_datetime_strings.c b/pandas/_libs/tslibs/src/datetime/np_datetime_strings.c
index 05ccdd135..207da4b8f 100644
--- a/pandas/_libs/tslibs/src/datetime/np_datetime_strings.c
+++ b/pandas/_libs/tslibs/src/datetime/np_datetime_strings.c
@@ -609,7 +609,7 @@ int make_iso_8601_datetime(npy_datetimestruct *dts, char *outstr, int outlen,
     tmplen = _snprintf(substr, sublen, "%04" NPY_INT64_FMT, dts->year);
 #else
     tmplen = snprintf(substr, sublen, "%04" NPY_INT64_FMT, dts->year);
-#endif
+#endif  // _WIN32
     /* If it ran out of space or there isn't space for the NULL terminator */
     if (tmplen < 0 || tmplen > sublen) {
         goto string_too_short;
diff --git a/pandas/tests/io/test_excel.py b/pandas/tests/io/test_excel.py
index 8c92db734..09b2d86bd 100644
--- a/pandas/tests/io/test_excel.py
+++ b/pandas/tests/io/test_excel.py
@@ -2413,7 +2413,10 @@ def test_styler_to_excel(engine):
                           ['', '', '']],
                          index=df.index, columns=df.columns)
 
-    def assert_equal_style(cell1, cell2):
+    def assert_equal_style(cell1, cell2, engine):
+        if engine in ['xlsxwriter', 'openpyxl']:
+            pytest.xfail(reason=("GH25351: failing on some attribute "
+                                 "comparisons in {}".format(engine)))
         # XXX: should find a better way to check equality
         assert cell1.alignment.__dict__ == cell2.alignment.__dict__
         assert cell1.border.__dict__ == cell2.border.__dict__
@@ -2457,7 +2460,7 @@ def test_styler_to_excel(engine):
             assert len(col1) == len(col2)
             for cell1, cell2 in zip(col1, col2):
                 assert cell1.value == cell2.value
-                assert_equal_style(cell1, cell2)
+                assert_equal_style(cell1, cell2, engine)
                 n_cells += 1
 
         # ensure iteration actually happened:
@@ -2515,7 +2518,7 @@ def test_styler_to_excel(engine):
                     assert cell1.number_format == 'General'
                     assert cell2.number_format == '0%'
                 else:
-                    assert_equal_style(cell1, cell2)
+                    assert_equal_style(cell1, cell2, engine)
 
                 assert cell1.value == cell2.value
                 n_cells += 1
@@ -2533,7 +2536,7 @@ def test_styler_to_excel(engine):
                     assert not cell1.font.bold
                     assert cell2.font.bold
                 else:
-                    assert_equal_style(cell1, cell2)
+                    assert_equal_style(cell1, cell2, engine)
 
                 assert cell1.value == cell2.value
                 n_cells += 1
diff --git a/pandas/util/move.c b/pandas/util/move.c
index 9bb662d50..188d7b79b 100644
--- a/pandas/util/move.c
+++ b/pandas/util/move.c
@@ -19,15 +19,15 @@ The full license is in the LICENSE file, distributed with this software.
 
 /* in python 3, we cannot intern bytes objects so this is always false */
 #define PyString_CHECK_INTERNED(cs) 0
-#endif  /* !COMPILING_IN_PY2 */
+#endif  // !COMPILING_IN_PY2
 
 #ifndef Py_TPFLAGS_HAVE_GETCHARBUFFER
 #define Py_TPFLAGS_HAVE_GETCHARBUFFER 0
-#endif
+#endif  // Py_TPFLAGS_HAVE_GETCHARBUFFER
 
 #ifndef Py_TPFLAGS_HAVE_NEWBUFFER
 #define Py_TPFLAGS_HAVE_NEWBUFFER 0
-#endif
+#endif  // Py_TPFLAGS_HAVE_NEWBUFFER
 
 static PyObject *badmove;  /* bad move exception class */
 
@@ -85,14 +85,14 @@ static PyBufferProcs stolenbuf_as_buffer = {
     (getbufferproc) stolenbuf_getbuffer,
 };
 
-#else  /* Python 3 */
+#else  // Python 3
 
 static PyBufferProcs stolenbuf_as_buffer = {
     (getbufferproc) stolenbuf_getbuffer,
     NULL,
 };
 
-#endif  /* COMPILING_IN_PY2 */
+#endif  // COMPILING_IN_PY2
 
 PyDoc_STRVAR(stolenbuf_doc,
              "A buffer that is wrapping a stolen bytes object's buffer.");
@@ -208,7 +208,7 @@ static PyModuleDef move_module = {
     -1,
     methods,
 };
-#endif  /* !COMPILING_IN_PY2 */
+#endif  // !COMPILING_IN_PY2
 
 PyDoc_STRVAR(
     badmove_doc,
@@ -231,7 +231,7 @@ PyInit__move(void)
 #else
 #define ERROR_RETURN
 init_move(void)
-#endif  /* !COMPILING_IN_PY2 */
+#endif  // !COMPILING_IN_PY2
 {
     PyObject *m;
 
@@ -250,7 +250,7 @@ init_move(void)
     if (!(m = PyModule_Create(&move_module)))
 #else
     if (!(m = Py_InitModule(MODULE_NAME, methods)))
-#endif  /* !COMPILING_IN_PY2 */
+#endif  // !COMPILING_IN_PY2
     {
         return ERROR_RETURN;
     }
@@ -269,5 +269,5 @@ init_move(void)
 
 #if !COMPILING_IN_PY2
     return m;
-#endif  /* !COMPILING_IN_PY2 */
+#endif  // !COMPILING_IN_PY2
 }
