commit 42c9f828f4fb7cb8558242ae758665a04b0ebd20
Author: Jeff Reback <jeff@reback.net>
Date:   Thu Sep 24 18:57:32 2015 -0400

    TST: generate_bq_scheme deprecation and tests

diff --git a/doc/source/whatsnew/v0.17.0.txt b/doc/source/whatsnew/v0.17.0.txt
index f50d3ed2f..11aee7092 100644
--- a/doc/source/whatsnew/v0.17.0.txt
+++ b/doc/source/whatsnew/v0.17.0.txt
@@ -331,6 +331,7 @@ Google BigQuery Enhancements
 - Added ability to automatically create a dataset using the :func:`pandas.io.gbq.to_gbq` function if destination dataset does not exist. (:issue:`11121`).
 - Added ability to replace an existing table and schema when calling the :func:`pandas.io.gbq.to_gbq` function via the ``if_exists`` argument. See the :ref:`docs <io.bigquery>` for more details (:issue:`8325`).
 - ``InvalidColumnOrder`` and ``InvalidPageToken`` in the gbq module will raise ``ValueError`` instead of ``IOError``.
+- The ``generate_bq_schema()`` function is now deprecated and will be removed in a future version (:issue:`11121`)
 
 .. _whatsnew_0170.enhancements.other:
 
diff --git a/pandas/io/gbq.py b/pandas/io/gbq.py
index 91eb11f51..7e06d32ee 100644
--- a/pandas/io/gbq.py
+++ b/pandas/io/gbq.py
@@ -1,3 +1,4 @@
+import warnings
 from datetime import datetime
 import json
 import logging
@@ -513,6 +514,14 @@ def to_gbq(dataframe, destination_table, project_id, chunksize=10000,
     connector.load_data(dataframe, dataset_id, table_id, chunksize, verbose)
 
 
+def generate_bq_schema(df, default_type='STRING'):
+
+    # deprecation TimeSeries, #11121
+    warnings.warn("generate_bq_schema is deprecated and will be removed in a future version",
+                  FutureWarning, stacklevel=2)
+
+    return _generate_bq_schema(df, default_type=default_type)
+
 def _generate_bq_schema(df, default_type='STRING'):
     """ Given a passed df, generate the associated Google BigQuery schema.
 
@@ -541,9 +550,6 @@ def _generate_bq_schema(df, default_type='STRING'):
 
     return {'fields': fields}
 
-generate_bq_schema = deprecate('generate_bq_schema', _generate_bq_schema)
-
-
 class _Table(GbqConnector):
 
     def __init__(self, project_id, dataset_id, reauth=False):
@@ -794,4 +800,3 @@ class _Dataset(GbqConnector):
             return table_list
         except self.http_error as ex:
             self.process_http_error(ex)
-
diff --git a/pandas/io/tests/test_gbq.py b/pandas/io/tests/test_gbq.py
index 2b3d226cd..ebb615a42 100644
--- a/pandas/io/tests/test_gbq.py
+++ b/pandas/io/tests/test_gbq.py
@@ -120,13 +120,19 @@ def make_mixed_dataframe_v2(test_size):
                       index=range(test_size))
 
 
+def test_generate_bq_schema_deprecated():
+    # 11121 Deprecation of generate_bq_schema
+    with tm.assert_produces_warning(FutureWarning):
+        df = make_mixed_dataframe_v2(10)
+        gbq.generate_bq_schema(df)
+
 class TestGBQConnectorIntegration(tm.TestCase):
     def setUp(self):
         test_requirements()
 
         if not PROJECT_ID:
             raise nose.SkipTest("Cannot run integration tests without a project id")
-        
+
         self.sut = gbq.GbqConnector(PROJECT_ID)
 
     def test_should_be_able_to_make_a_connector(self):
