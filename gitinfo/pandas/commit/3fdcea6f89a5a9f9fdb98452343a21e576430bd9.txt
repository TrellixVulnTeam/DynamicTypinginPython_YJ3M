commit 3fdcea6f89a5a9f9fdb98452343a21e576430bd9
Author: sinhrks <sinhrks@gmail.com>
Date:   Mon Jul 25 19:40:54 2016 -0400

    PERF: RangeIndex.is_monotonic_inc/dec
    
    Author: sinhrks <sinhrks@gmail.com>
    
    Closes #13749 from sinhrks/perf_range and squashes the following commits:
    
    8e25563 [sinhrks] PERF: RangeIndex.is_monotonic_inc/dec

diff --git a/doc/source/whatsnew/v0.19.0.txt b/doc/source/whatsnew/v0.19.0.txt
index 9aa206adc..e340d0441 100644
--- a/doc/source/whatsnew/v0.19.0.txt
+++ b/doc/source/whatsnew/v0.19.0.txt
@@ -659,6 +659,7 @@ Performance Improvements
 - Improved performance of ``DataFrameGroupBy.transform`` (:issue:`12737`)
 - Improved performance of ``Index`` and ``Series`` ``.duplicated`` (:issue:`10235`)
 - Improved performance of ``Index.difference`` (:issue:`12044`)
+- Improved performance of ``RangeIndex.is_monotonic_increasing`` and ``is_monotonic_decreasing`` (:issue:`13749`)
 - Improved performance of datetime string parsing in ``DatetimeIndex`` (:issue:`13692`)
 - Improved performance of hashing ``Period`` (:issue:`12817`)
 - Improved performance of ``factorize`` of datetime with timezone (:issue:`13750`)
diff --git a/pandas/indexes/range.py b/pandas/indexes/range.py
index f680d2da0..a561cab30 100644
--- a/pandas/indexes/range.py
+++ b/pandas/indexes/range.py
@@ -221,6 +221,14 @@ class RangeIndex(Int64Index):
         """ return if the index has unique values """
         return True
 
+    @cache_readonly
+    def is_monotonic_increasing(self):
+        return self._step > 0 or len(self) <= 1
+
+    @cache_readonly
+    def is_monotonic_decreasing(self):
+        return self._step < 0 or len(self) <= 1
+
     @property
     def has_duplicates(self):
         return False
diff --git a/pandas/tests/indexes/test_range.py b/pandas/tests/indexes/test_range.py
index 99e4b72bc..329ffa9b7 100644
--- a/pandas/tests/indexes/test_range.py
+++ b/pandas/tests/indexes/test_range.py
@@ -315,6 +315,16 @@ class TestRangeIndex(Numeric, tm.TestCase):
         self.assertTrue(index.is_monotonic_increasing)
         self.assertTrue(index.is_monotonic_decreasing)
 
+        index = RangeIndex(2, 1)
+        self.assertTrue(index.is_monotonic)
+        self.assertTrue(index.is_monotonic_increasing)
+        self.assertTrue(index.is_monotonic_decreasing)
+
+        index = RangeIndex(1, 1)
+        self.assertTrue(index.is_monotonic)
+        self.assertTrue(index.is_monotonic_increasing)
+        self.assertTrue(index.is_monotonic_decreasing)
+
     def test_equals(self):
         equiv_pairs = [(RangeIndex(0, 9, 2), RangeIndex(0, 10, 2)),
                        (RangeIndex(0), RangeIndex(1, -1, 3)),
