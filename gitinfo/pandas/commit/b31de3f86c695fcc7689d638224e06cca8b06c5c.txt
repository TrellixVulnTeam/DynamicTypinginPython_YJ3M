commit b31de3f86c695fcc7689d638224e06cca8b06c5c
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Sun Jul 22 15:31:54 2012 -0400

    DOC: set_index/reset_index examples

diff --git a/doc/source/indexing.rst b/doc/source/indexing.rst
index 28fa9a697..fa133d45e 100644
--- a/doc/source/indexing.rst
+++ b/doc/source/indexing.rst
@@ -944,6 +944,15 @@ indexed DataFrame:
    indexed2 = data.set_index(['a', 'b'])
    indexed2
 
+The ``append`` keyword option allow you to keep the existing index and append the given
+columns to a MultiIndex:
+
+.. ipython:: python
+
+   frame = data.set_index('c', drop=False)
+   frame = frame.set_index(['a', 'b'], append=True)
+   frame
+
 Other options in ``set_index`` allow you not drop the index columns or to add
 the index in-place (without creating a new object):
 
@@ -968,6 +977,14 @@ integer index. This is the inverse operation to ``set_index``
 The output is more similar to a SQL table or a record array. The names for the
 columns derived from the index are the ones stored in the ``names`` attribute.
 
+You can use the ``level`` keyword to remove only a portion of the index:
+
+.. ipython:: python
+
+   frame
+   frame.reset_index(level=1)
+
+
 ``reset_index`` takes an optional parameter ``drop`` which if true simply
 discards the index, instead of putting index values in the DataFrame's columns.
 
