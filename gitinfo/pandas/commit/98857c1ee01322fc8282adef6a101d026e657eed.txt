commit 98857c1ee01322fc8282adef6a101d026e657eed
Author: Jeff Tratner <jeffrey.tratner@gmail.com>
Date:   Tue Nov 5 07:18:59 2013 -0500

    DOC: Add notes about truedivision

diff --git a/doc/source/release.rst b/doc/source/release.rst
index 5fef061b9..926e8f1d0 100644
--- a/doc/source/release.rst
+++ b/doc/source/release.rst
@@ -376,6 +376,25 @@ API Changes
     dates are given (:issue:`5242`)
   - ``Timestamp`` now supports ``now/today/utcnow`` class methods
     (:issue:`5339`)
+  - **All** division with ``NDFrame`` - likes is now truedivision, regardless
+    of the future import. You can use ``//`` and ``floordiv`` to do integer
+    division.
+
+  .. code-block:: python
+    In [3]: arr = np.array([1, 2, 3, 4])
+
+    In [4]: arr2 = np.array([5, 3, 2, 1])
+
+    In [5]: arr / arr2
+    Out[5]: array([0, 0, 1, 4])
+
+    In [6]: pd.Series(arr) / pd.Series(arr2) # no future import required
+    Out[6]:
+    0    0.200000
+    1    0.666667
+    2    1.500000
+    3    4.000000
+    dtype: float64
 
 Internal Refactoring
 ~~~~~~~~~~~~~~~~~~~~
diff --git a/doc/source/v0.13.0.txt b/doc/source/v0.13.0.txt
index 9b958d59d..c736a52cd 100644
--- a/doc/source/v0.13.0.txt
+++ b/doc/source/v0.13.0.txt
@@ -55,6 +55,26 @@ API changes
       # and all methods take an inplace kwarg - but returns None
       index.set_names(["bob", "cranberry"], inplace=True)
 
+- **All** division with ``NDFrame`` - likes is now truedivision, regardless
+  of the future import. You can use ``//`` and ``floordiv`` to do integer
+  division.
+
+  .. code-block:: python
+      In [3]: arr = np.array([1, 2, 3, 4])
+
+      In [4]: arr2 = np.array([5, 3, 2, 1])
+
+      In [5]: arr / arr2
+      Out[5]: array([0, 0, 1, 4])
+
+      In [6]: pd.Series(arr) / pd.Series(arr2) # no future import required
+      Out[6]:
+      0    0.200000
+      1    0.666667
+      2    1.500000
+      3    4.000000
+      dtype: float64
+
 - Infer and downcast dtype if ``downcast='infer'`` is passed to ``fillna/ffill/bfill`` (:issue:`4604`)
 - ``__nonzero__`` for all NDFrame objects, will now raise a ``ValueError``, this reverts back to (:issue:`1073`, :issue:`4633`)
   behavior. See :ref:`gotchas<gotchas.truth>` for a more detailed discussion.
