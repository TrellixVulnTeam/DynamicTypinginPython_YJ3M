commit a7402c680f8dcc69deb850f61fc6a2c7f7834120
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Sun Feb 5 21:25:06 2012 -0500

    DOC: very basic hack to separate vbench project from main docs, generate chapters by module. Need some prettification, close #718

diff --git a/doc/source/index.rst b/doc/source/index.rst
index 5e142f391..d0e42ec51 100755
--- a/doc/source/index.rst
+++ b/doc/source/index.rst
@@ -125,4 +125,4 @@ See the package overview for more detail about what's in the library.
     related
     comparison_with_r
     api
-    vbench
+
diff --git a/vb_suite/.gitignore b/vb_suite/.gitignore
index 126ee4071..cc110f04e 100644
--- a/vb_suite/.gitignore
+++ b/vb_suite/.gitignore
@@ -1 +1,4 @@
-benchmarks.db
\ No newline at end of file
+benchmarks.db
+build/*
+source/vbench/*
+source/*.rst
\ No newline at end of file
diff --git a/vb_suite/attrs_caching.py b/vb_suite/attrs_caching.py
new file mode 100644
index 000000000..e196546e6
--- /dev/null
+++ b/vb_suite/attrs_caching.py
@@ -0,0 +1,20 @@
+from vbench.benchmark import Benchmark
+
+common_setup = """from pandas_vb_common import *
+"""
+
+#----------------------------------------------------------------------
+# DataFrame.index / columns property lookup time
+
+setup = common_setup + """
+df = DataFrame(np.random.randn(10, 6))
+cur_index = df.index
+"""
+stmt = "foo = df.index"
+
+getattr_dataframe_index = Benchmark(stmt, setup,
+                                    name="getattr_dataframe_index")
+
+stmt = "df.index = cur_index"
+setattr_dataframe_index = Benchmark(stmt, setup,
+                                    name="setattr_dataframe_index")
diff --git a/vb_suite/make.py b/vb_suite/make.py
new file mode 100755
index 000000000..081c2c199
--- /dev/null
+++ b/vb_suite/make.py
@@ -0,0 +1,108 @@
+#!/usr/bin/env python
+
+"""
+Python script for building documentation.
+
+To build the docs you must have all optional dependencies for statsmodels
+installed. See the installation instructions for a list of these.
+
+Note: currently latex builds do not work because of table formats that are not
+supported in the latex generation.
+
+Usage
+-----
+python make.py clean
+python make.py html
+"""
+
+import glob
+import os
+import shutil
+import sys
+import sphinx
+
+os.environ['PYTHONPATH'] = '..'
+
+SPHINX_BUILD = 'sphinxbuild'
+
+def sf():
+    'push a copy to the sf site'
+    os.system('cd build/html; rsync -avz . wesmckinn,pandas@web.sf.net'
+              ':/home/groups/p/pa/pandas/htdocs/ -essh --cvs-exclude')
+def sfpdf():
+    'push a copy to the sf site'
+    os.system('cd build/latex; scp pandas.pdf wesmckinn,pandas@web.sf.net'
+              ':/home/groups/p/pa/pandas/htdocs/')
+
+def clean():
+    if os.path.exists('build'):
+        shutil.rmtree('build')
+
+    if os.path.exists('source/generated'):
+        shutil.rmtree('source/generated')
+
+def html():
+    check_build()
+    if os.system('sphinx-build -P -b html -d build/doctrees '
+                 'source build/html'):
+        raise SystemExit("Building HTML failed.")
+
+def latex():
+    check_build()
+    if sys.platform != 'win32':
+        # LaTeX format.
+        if os.system('sphinx-build -b latex -d build/doctrees '
+                     'source build/latex'):
+            raise SystemExit("Building LaTeX failed.")
+        # Produce pdf.
+
+        os.chdir('build/latex')
+
+        # Call the makefile produced by sphinx...
+        if os.system('make'):
+            raise SystemExit("Rendering LaTeX failed.")
+
+        os.chdir('../..')
+    else:
+        print 'latex build has not been tested on windows'
+
+def check_build():
+    build_dirs = [
+        'build', 'build/doctrees', 'build/html',
+        'build/latex', 'build/plots', 'build/_static',
+        'build/_templates']
+    for d in build_dirs:
+        try:
+            os.mkdir(d)
+        except OSError:
+            pass
+
+def all():
+    # clean()
+    html()
+
+funcd = {
+    'html'     : html,
+    'latex'    : latex,
+    'clean'    : clean,
+    'sf'       : sf,
+    'sfpdf'    : sfpdf,
+    'all'      : all,
+    }
+
+small_docs = False
+
+# current_dir = os.getcwd()
+# os.chdir(os.path.dirname(os.path.join(current_dir, __file__)))
+
+if len(sys.argv)>1:
+    for arg in sys.argv[1:]:
+        func = funcd.get(arg)
+        if func is None:
+            raise SystemExit('Do not know how to handle %s; valid args are %s'%(
+                    arg, funcd.keys()))
+        func()
+else:
+    small_docs = False
+    all()
+#os.chdir(current_dir)
diff --git a/vb_suite/source/conf.py b/vb_suite/source/conf.py
new file mode 100644
index 000000000..c3cc679cd
--- /dev/null
+++ b/vb_suite/source/conf.py
@@ -0,0 +1,224 @@
+# -*- coding: utf-8 -*-
+#
+# pandas documentation build configuration file, created by
+#
+# This file is execfile()d with the current directory set to its containing dir.
+#
+# Note that not all possible configuration values are present in this
+# autogenerated file.
+#
+# All configuration values have a default; values that are commented out
+# serve to show the default.
+
+import sys, os
+
+# If extensions (or modules to document with autodoc) are in another directory,
+# add these directories to sys.path here. If the directory is relative to the
+# documentation root, use os.path.abspath to make it absolute, like shown here.
+#sys.path.append(os.path.abspath('.'))
+sys.path.insert(0, os.path.abspath('../sphinxext'))
+
+sys.path.extend([
+
+    # numpy standard doc extensions
+    os.path.join(os.path.dirname(__file__),
+                 '..', '../..',
+                 'sphinxext')
+
+])
+
+# -- General configuration -----------------------------------------------------
+
+# Add any Sphinx extension module names here, as strings. They can be extensions
+# coming with Sphinx (named 'sphinx.ext.*') or your custom ones.  sphinxext.
+
+extensions = ['sphinx.ext.autodoc',
+              'sphinx.ext.doctest']
+
+# Add any paths that contain templates here, relative to this directory.
+templates_path = ['_templates', '_templates/autosummary']
+
+# The suffix of source filenames.
+source_suffix = '.rst'
+
+# The encoding of source files.
+#source_encoding = 'utf-8'
+
+# The master toctree document.
+master_doc = 'vbench'
+
+# General information about the project.
+project = u'pandas'
+copyright = u'2008-2011, the pandas development team'
+
+# The version info for the project you're documenting, acts as replacement for
+# |version| and |release|, also used in various other places throughout the
+# built documents.
+#
+# The short X.Y version.
+import pandas
+
+# version = '%s r%s' % (pandas.__version__, svn_version())
+version = '%s' % (pandas.__version__)
+
+# The full version, including alpha/beta/rc tags.
+release = version
+
+# JP: added from sphinxdocs
+autosummary_generate = True
+
+# The language for content autogenerated by Sphinx. Refer to documentation
+# for a list of supported languages.
+#language = None
+
+# There are two options for replacing |today|: either, you set today to some
+# non-false value, then it is used:
+#today = ''
+# Else, today_fmt is used as the format for a strftime call.
+#today_fmt = '%B %d, %Y'
+
+# List of documents that shouldn't be included in the build.
+#unused_docs = []
+
+# List of directories, relative to source directory, that shouldn't be searched
+# for source files.
+exclude_trees = []
+
+# The reST default role (used for this markup: `text`) to use for all documents.
+#default_role = None
+
+# If true, '()' will be appended to :func: etc. cross-reference text.
+#add_function_parentheses = True
+
+# If true, the current module name will be prepended to all description
+# unit titles (such as .. function::).
+#add_module_names = True
+
+# If true, sectionauthor and moduleauthor directives will be shown in the
+# output. They are ignored by default.
+#show_authors = False
+
+# The name of the Pygments (syntax highlighting) style to use.
+pygments_style = 'sphinx'
+
+# A list of ignored prefixes for module index sorting.
+#modindex_common_prefix = []
+
+
+# -- Options for HTML output ---------------------------------------------------
+
+# The theme to use for HTML and HTML Help pages.  Major themes that come with
+# Sphinx are currently 'default' and 'sphinxdoc'.
+html_theme = 'agogo'
+
+# The style sheet to use for HTML and HTML Help pages. A file of that name
+# must exist either in Sphinx' static/ path, or in one of the custom paths
+# given in html_static_path.
+#html_style = 'statsmodels.css'
+
+# Theme options are theme-specific and customize the look and feel of a theme
+# further.  For a list of options available for each theme, see the
+# documentation.
+#html_theme_options = {}
+
+# Add any paths that contain custom themes here, relative to this directory.
+html_theme_path = ['themes']
+
+# The name for this set of Sphinx documents.  If None, it defaults to
+# "<project> v<release> documentation".
+html_title = 'Vbench performance benchmarks for pandas'
+
+# A shorter title for the navigation bar.  Default is the same as html_title.
+#html_short_title = None
+
+# The name of an image file (relative to this directory) to place at the top
+# of the sidebar.
+#html_logo = None
+
+# The name of an image file (within the static path) to use as favicon of the
+# docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32
+# pixels large.
+#html_favicon = None
+
+# Add any paths that contain custom static files (such as style sheets) here,
+# relative to this directory. They are copied after the builtin static files,
+# so a file named "default.css" will overwrite the builtin "default.css".
+html_static_path = ['_static']
+
+# If not '', a 'Last updated on:' timestamp is inserted at every page bottom,
+# using the given strftime format.
+#html_last_updated_fmt = '%b %d, %Y'
+
+# If true, SmartyPants will be used to convert quotes and dashes to
+# typographically correct entities.
+#html_use_smartypants = True
+
+# Custom sidebar templates, maps document names to template names.
+#html_sidebars = {}
+
+# Additional templates that should be rendered to pages, maps page names to
+# template names.
+#html_additional_pages = {}
+
+# If false, no module index is generated.
+html_use_modindex = True
+
+# If false, no index is generated.
+#html_use_index = True
+
+# If true, the index is split into individual pages for each letter.
+#html_split_index = False
+
+# If true, links to the reST sources are added to the pages.
+#html_show_sourcelink = True
+
+# If true, an OpenSearch description file will be output, and all pages will
+# contain a <link> tag referring to it.  The value of this option must be the
+# base URL from which the finished HTML is served.
+#html_use_opensearch = ''
+
+# If nonempty, this is the file name suffix for HTML files (e.g. ".xhtml").
+#html_file_suffix = ''
+
+# Output file base name for HTML help builder.
+htmlhelp_basename = 'performance'
+
+
+# -- Options for LaTeX output --------------------------------------------------
+
+# The paper size ('letter' or 'a4').
+#latex_paper_size = 'letter'
+
+# The font size ('10pt', '11pt' or '12pt').
+#latex_font_size = '10pt'
+
+# Grouping the document tree into LaTeX files. List of tuples
+# (source start file, target name, title, author, documentclass [howto/manual]).
+latex_documents = [
+  ('index', 'performance.tex',
+   u'pandas vbench Performance Benchmarks',
+   u'Wes McKinney', 'manual'),
+]
+
+# The name of an image file (relative to this directory) to place at the top of
+# the title page.
+#latex_logo = None
+
+# For "manual" documents, if this is true, then toplevel headings are parts,
+# not chapters.
+#latex_use_parts = False
+
+# Additional stuff for the LaTeX preamble.
+#latex_preamble = ''
+
+# Documents to append as an appendix to all manuals.
+#latex_appendices = []
+
+# If false, no module index is generated.
+#latex_use_modindex = True
+
+
+# Example configuration for intersphinx: refer to the Python standard library.
+# intersphinx_mapping = {'http://docs.scipy.org/': None}
+import glob
+autosummary_generate = glob.glob("*.rst")
diff --git a/vb_suite/source/themes/agogo/layout.html b/vb_suite/source/themes/agogo/layout.html
new file mode 100644
index 000000000..cd0f3d7ff
--- /dev/null
+++ b/vb_suite/source/themes/agogo/layout.html
@@ -0,0 +1,95 @@
+{#
+    agogo/layout.html
+    ~~~~~~~~~~~~~~~~~
+
+    Sphinx layout template for the agogo theme, originally written
+    by Andi Albrecht.
+
+    :copyright: Copyright 2007-2011 by the Sphinx team, see AUTHORS.
+    :license: BSD, see LICENSE for details.
+#}
+{% extends "basic/layout.html" %}
+
+{% block header %}
+    <div class="header-wrapper">
+      <div class="header">
+        {%- if logo %}
+          <p class="logo"><a href="{{ pathto(master_doc) }}">
+            <img class="logo" src="{{ pathto('_static/' + logo, 1) }}" alt="Logo"/>
+          </a></p>
+        {%- endif %}
+        {%- block headertitle %}
+        <h1><a href="{{ pathto(master_doc) }}">{{ shorttitle|e }}</a></h1>
+        {%- endblock %}
+        <div class="rel">
+          {%- for rellink in rellinks|reverse %}
+          <a href="{{ pathto(rellink[0]) }}" title="{{ rellink[1]|striptags|e }}"
+             {{ accesskey(rellink[2]) }}>{{ rellink[3] }}</a>
+          {%- if not loop.last %}{{ reldelim2 }}{% endif %}
+          {%- endfor %}
+        </div>
+       </div>
+    </div>
+{% endblock %}
+
+{% block content %}
+    <div class="content-wrapper">
+      <div class="content">
+        <div class="sidebar">
+          {%- block sidebartoc %}
+          <h3>{{ _('Table Of Contents') }}</h3>
+          {{ toctree() }}
+          {%- endblock %}
+          {%- block sidebarsearch %}
+          <h3 style="margin-top: 1.5em;">{{ _('Search') }}</h3>
+          <form class="search" action="{{ pathto('search') }}" method="get">
+            <input type="text" name="q" size="18" />
+            <input type="submit" value="{{ _('Go') }}" />
+            <input type="hidden" name="check_keywords" value="yes" />
+            <input type="hidden" name="area" value="default" />
+          </form>
+          <p class="searchtip" style="font-size: 90%">
+            {{ _('Enter search terms or a module, class or function name.') }}
+          </p>
+		  <p>
+		  <p>
+			<script type="text/javascript" src="http://www.ohloh.net/p/482908/widgets/project_partner_badge.js"></script>
+	      </p>
+          {%- endblock %}
+        </div>
+        <div class="document">
+          {%- block document %}
+            {{ super() }}
+          {%- endblock %}
+        </div>
+        <div class="clearer"></div>
+      </div>
+    </div>
+{% endblock %}
+
+{% block footer %}
+    <div class="footer-wrapper">
+      <div class="footer">
+        <div class="left">
+          {%- for rellink in rellinks|reverse %}
+          <a href="{{ pathto(rellink[0]) }}" title="{{ rellink[1]|striptags|e }}"
+             {{ accesskey(rellink[2]) }}>{{ rellink[3] }}</a>
+          {%- if not loop.last %}{{ reldelim2 }}{% endif %}
+          {%- endfor %}
+          {%- if show_source and has_source and sourcename %}
+            <br/>
+            <a href="{{ pathto('_sources/' + sourcename, true)|e }}"
+               rel="nofollow">{{ _('Show Source') }}</a>
+          {%- endif %}
+        </div>
+
+        <div class="right">
+          {{ super() }}
+        </div>
+        <div class="clearer"></div>
+      </div>
+    </div>
+{% endblock %}
+
+{% block relbar1 %}{% endblock %}
+{% block relbar2 %}{% endblock %}
diff --git a/vb_suite/source/themes/agogo/static/agogo.css_t b/vb_suite/source/themes/agogo/static/agogo.css_t
new file mode 100644
index 000000000..ef909b72e
--- /dev/null
+++ b/vb_suite/source/themes/agogo/static/agogo.css_t
@@ -0,0 +1,476 @@
+/*
+ * agogo.css_t
+ * ~~~~~~~~~~~
+ *
+ * Sphinx stylesheet -- agogo theme.
+ *
+ * :copyright: Copyright 2007-2011 by the Sphinx team, see AUTHORS.
+ * :license: BSD, see LICENSE for details.
+ *
+ */
+
+* {
+  margin: 0px;
+  padding: 0px;
+}
+
+body {
+  font-family: {{ theme_bodyfont }};
+  line-height: 1.4em;
+  color: black;
+  background-color: {{ theme_bgcolor }};
+}
+
+
+/* Page layout */
+
+div.header, div.content, div.footer {
+  max-width: {{ theme_pagewidth }};
+  margin-left: auto;
+  margin-right: auto;
+}
+
+div.header-wrapper {
+  background: {{ theme_headerbg }};
+  padding: 1em 1em 0;
+  border-bottom: 3px solid #2e3436;
+  min-height: 0px;
+}
+
+
+/* Default body styles */
+a {
+  color: {{ theme_linkcolor }};
+}
+
+div.bodywrapper a, div.footer a {
+  text-decoration: underline;
+}
+
+.clearer {
+  clear: both;
+}
+
+.left {
+  float: left;
+}
+
+.right {
+  float: right;
+}
+
+.line-block {
+    display: block;
+    margin-top: 1em;
+    margin-bottom: 1em;
+}
+
+.line-block .line-block {
+    margin-top: 0;
+    margin-bottom: 0;
+    margin-left: 1.5em;
+}
+
+h1, h2, h3, h4 {
+  font-family: {{ theme_headerfont }};
+  font-weight: normal;
+  color: {{ theme_headercolor2 }};
+  margin-bottom: .8em;
+}
+
+h1 {
+  color: {{ theme_headercolor1 }};
+}
+
+h2 {
+  padding-bottom: .5em;
+  border-bottom: 1px solid {{ theme_headercolor2 }};
+}
+
+a.headerlink {
+  visibility: hidden;
+  color: #dddddd;
+  padding-left: .3em;
+}
+
+h1:hover > a.headerlink,
+h2:hover > a.headerlink,
+h3:hover > a.headerlink,
+h4:hover > a.headerlink,
+h5:hover > a.headerlink,
+h6:hover > a.headerlink,
+dt:hover > a.headerlink {
+  visibility: visible;
+}
+
+img {
+  border: 0;
+}
+
+pre {
+  background-color: #EEE;
+  padding: 0.5em;
+}
+
+div.admonition {
+  margin-top: 10px;
+  margin-bottom: 10px;
+  padding: 2px 7px 1px 7px;
+  border-left: 0.2em solid black;
+}
+
+p.admonition-title {
+  margin: 0px 10px 5px 0px;
+  font-weight: bold;
+}
+
+dt:target, .highlighted {
+  background-color: #fbe54e;
+}
+
+/* Header */
+
+/*
+div.header {
+  padding-top: 10px;
+  padding-bottom: 10px;
+}
+*/
+
+div.header {}
+
+div.header h1 {
+  font-family: {{ theme_headerfont }};
+  font-weight: normal;
+  font-size: 180%;
+  letter-spacing: .08em;
+}
+
+div.header h1 a {
+  color: white;
+}
+
+div.header div.rel {
+  text-decoration: none;
+}
+/*  margin-top: 1em; */
+
+div.header div.rel a {
+  margin-top: 1em;
+  color: {{ theme_headerlinkcolor }};
+  letter-spacing: .1em;
+  text-transform: uppercase;
+  padding: 3px 1em;
+}
+
+p.logo {
+    float: right;
+}
+
+img.logo {
+    border: 0;
+}
+
+
+/* Content */
+div.content-wrapper {
+  background-color: white;
+  padding: 1em;
+}
+/*
+  padding-top: 20px;
+  padding-bottom: 20px;
+*/
+
+/*  float: left; */
+
+div.document {
+  max-width: {{ theme_documentwidth }};
+}
+
+div.body {
+  padding-right: 2em;
+  text-align: {{ theme_textalign }};
+}
+
+div.document ul {
+  margin: 1.5em;
+  list-style-type: square;
+}
+
+div.document dd {
+  margin-left: 1.2em;
+  margin-top: .4em;
+  margin-bottom: 1em;
+}
+
+div.document .section {
+  margin-top: 1.7em;
+}
+div.document .section:first-child {
+  margin-top: 0px;
+}
+
+div.document div.highlight {
+  padding: 3px;
+  background-color: #eeeeec;
+  border-top: 2px solid #dddddd;
+  border-bottom: 2px solid #dddddd;
+  margin-top: .8em;
+  margin-bottom: .8em;
+}
+
+div.document h2 {
+  margin-top: .7em;
+}
+
+div.document p {
+  margin-bottom: .5em;
+}
+
+div.document li.toctree-l1 {
+  margin-bottom: 1em;
+}
+
+div.document .descname {
+  font-weight: bold;
+}
+
+div.document .docutils.literal {
+  background-color: #eeeeec;
+  padding: 1px;
+}
+
+div.document .docutils.xref.literal {
+  background-color: transparent;
+  padding: 0px;
+}
+
+div.document blockquote {
+  margin: 1em;
+}
+
+div.document ol {
+  margin: 1.5em;
+}
+
+
+/* Sidebar */
+
+
+div.sidebar {
+  width: {{ theme_sidebarwidth }};
+  padding: 0 1em;
+  float: right;
+  font-size: .93em;
+}
+
+div.sidebar a, div.header a {
+  text-decoration: none;
+}
+
+div.sidebar a:hover, div.header a:hover {
+  text-decoration: underline;
+}
+
+div.sidebar h3 {
+  color: #2e3436;
+  text-transform: uppercase;
+  font-size: 130%;
+  letter-spacing: .1em;
+}
+
+div.sidebar ul {
+  list-style-type: none;
+}
+
+div.sidebar li.toctree-l1 a {
+  display: block;
+  padding: 1px;
+  border: 1px solid #dddddd;
+  background-color: #eeeeec;
+  margin-bottom: .4em;
+  padding-left: 3px;
+  color: #2e3436;
+}
+
+div.sidebar li.toctree-l2 a {
+  background-color: transparent;
+  border: none;
+  margin-left: 1em;
+  border-bottom: 1px solid #dddddd;
+}
+
+div.sidebar li.toctree-l3 a {
+  background-color: transparent;
+  border: none;
+  margin-left: 2em;
+  border-bottom: 1px solid #dddddd;
+}
+
+div.sidebar li.toctree-l2:last-child a {
+  border-bottom: none;
+}
+
+div.sidebar li.toctree-l1.current a {
+  border-right: 5px solid {{ theme_headerlinkcolor }};
+}
+
+div.sidebar li.toctree-l1.current li.toctree-l2 a {
+  border-right: none;
+}
+
+
+/* Footer */
+
+div.footer-wrapper {
+  background: {{ theme_footerbg }};
+  border-top: 4px solid #babdb6;
+  padding-top: 10px;
+  padding-bottom: 10px;
+  min-height: 80px;
+}
+
+div.footer, div.footer a {
+  color: #888a85;
+}
+
+div.footer .right {
+  text-align: right;
+}
+
+div.footer .left {
+  text-transform: uppercase;
+}
+
+
+/* Styles copied from basic theme */
+
+img.align-left, .figure.align-left, object.align-left {
+    clear: left;
+    float: left;
+    margin-right: 1em;
+}
+
+img.align-right, .figure.align-right, object.align-right {
+    clear: right;
+    float: right;
+    margin-left: 1em;
+}
+
+img.align-center, .figure.align-center, object.align-center {
+  display: block;
+  margin-left: auto;
+  margin-right: auto;
+}
+
+.align-left {
+    text-align: left;
+}
+
+.align-center {
+    clear: both;
+    text-align: center;
+}
+
+.align-right {
+    text-align: right;
+}
+
+/* -- search page ----------------------------------------------------------- */
+
+ul.search {
+    margin: 10px 0 0 20px;
+    padding: 0;
+}
+
+ul.search li {
+    padding: 5px 0 5px 20px;
+    background-image: url(file.png);
+    background-repeat: no-repeat;
+    background-position: 0 7px;
+}
+
+ul.search li a {
+    font-weight: bold;
+}
+
+ul.search li div.context {
+    color: #888;
+    margin: 2px 0 0 30px;
+    text-align: left;
+}
+
+ul.keywordmatches li.goodmatch a {
+    font-weight: bold;
+}
+
+/* -- index page ------------------------------------------------------------ */
+
+table.contentstable {
+    width: 90%;
+}
+
+table.contentstable p.biglink {
+    line-height: 150%;
+}
+
+a.biglink {
+    font-size: 1.3em;
+}
+
+span.linkdescr {
+    font-style: italic;
+    padding-top: 5px;
+    font-size: 90%;
+}
+
+/* -- general index --------------------------------------------------------- */
+
+table.indextable td {
+    text-align: left;
+    vertical-align: top;
+}
+
+table.indextable dl, table.indextable dd {
+    margin-top: 0;
+    margin-bottom: 0;
+}
+
+table.indextable tr.pcap {
+    height: 10px;
+}
+
+table.indextable tr.cap {
+    margin-top: 10px;
+    background-color: #f2f2f2;
+}
+
+img.toggler {
+    margin-right: 3px;
+    margin-top: 3px;
+    cursor: pointer;
+}
+
+/* -- viewcode extension ---------------------------------------------------- */
+
+.viewcode-link {
+    float: right;
+}
+
+.viewcode-back {
+    float: right;
+    font-family:: {{ theme_bodyfont }};
+}
+
+div.viewcode-block:target {
+    margin: -1px -3px;
+    padding: 0 3px;
+    background-color: #f4debf;
+    border-top: 1px solid #ac9;
+    border-bottom: 1px solid #ac9;
+}
+
+th.field-name {
+    white-space: nowrap;
+}
diff --git a/vb_suite/source/themes/agogo/static/bgfooter.png b/vb_suite/source/themes/agogo/static/bgfooter.png
new file mode 100644
index 000000000..9ce5bdd90
Binary files /dev/null and b/vb_suite/source/themes/agogo/static/bgfooter.png differ
diff --git a/vb_suite/source/themes/agogo/static/bgtop.png b/vb_suite/source/themes/agogo/static/bgtop.png
new file mode 100644
index 000000000..a0d4709ba
Binary files /dev/null and b/vb_suite/source/themes/agogo/static/bgtop.png differ
diff --git a/vb_suite/source/themes/agogo/theme.conf b/vb_suite/source/themes/agogo/theme.conf
new file mode 100644
index 000000000..3fc88580f
--- /dev/null
+++ b/vb_suite/source/themes/agogo/theme.conf
@@ -0,0 +1,19 @@
+[theme]
+inherit = basic
+stylesheet = agogo.css
+pygments_style = tango
+
+[options]
+bodyfont = "Verdana", Arial, sans-serif
+headerfont = "Georgia", "Times New Roman", serif
+pagewidth = 70em
+documentwidth = 50em
+sidebarwidth = 20em
+bgcolor = #eeeeec
+headerbg = url(bgtop.png) top left repeat-x
+footerbg = url(bgfooter.png) top left repeat-x
+linkcolor = #ce5c00
+headercolor1 = #204a87
+headercolor2 = #3465a4
+headerlinkcolor = #fcaf3e
+textalign = justify
\ No newline at end of file
diff --git a/vb_suite/suite.py b/vb_suite/suite.py
index f65e59c56..c10512ae8 100644
--- a/vb_suite/suite.py
+++ b/vb_suite/suite.py
@@ -1,4 +1,4 @@
-from vbench.api import Benchmark, GitRepo, BenchmarkRunner
+from vbench.api import Benchmark, GitRepo
 from datetime import datetime
 
 import os
@@ -6,7 +6,7 @@ import os
 modules = ['groupby', 'indexing', 'reindex',
            'sparse', 'index_object', 'miscellaneous',
            'stat_ops', 'join_merge', 'panel_ctor', 'frame_ctor',
-           'frame_methods', 'io_bench']
+           'frame_methods', 'io_bench', 'attrs_caching']
 
 by_module = {}
 benchmarks = []
@@ -20,6 +20,16 @@ for modname in modules:
 for bm in benchmarks:
     assert(bm.name is not None)
 
+import getpass
+import sys
+
+USERNAME = getpass.getuser()
+
+if sys.platform == 'darwin':
+    HOME = '/Users/%s' % USERNAME
+else:
+    HOME = '/home/%s' % USERNAME
+
 try:
     import ConfigParser
 
@@ -31,10 +41,10 @@ try:
     DB_PATH = config.get('setup', 'db_path')
     TMP_DIR = config.get('setup', 'tmp_dir')
 except:
-    REPO_PATH = '/home/wesm/code/pandas'
+    REPO_PATH = os.path.join(HOME, 'code/pandas')
     REPO_URL = 'git@github.com:wesm/pandas.git'
-    DB_PATH = '/home/wesm/code/pandas/vb_suite/benchmarks.db'
-    TMP_DIR = '/home/wesm/tmp/vb_pandas'
+    DB_PATH = os.path.join(HOME, 'code/pandas/vb_suite/benchmarks.db')
+    TMP_DIR = os.path.join(HOME, 'tmp/vb_pandas')
 
 PREPARE = """
 python setup.py clean
@@ -48,7 +58,7 @@ START_DATE = datetime(2012, 1, 20)
 
 repo = GitRepo(REPO_PATH)
 
-RST_BASE = '../doc/source'
+RST_BASE = 'source'
 
 # HACK!
 
@@ -110,10 +120,19 @@ Produced on a machine with
   - (K)ubuntu Linux 12.10
   - Python 2.7.2 64-bit (Enthought Python Distribution 7.1-2)
   - NumPy 1.6.1
+
+.. toctree::
+    :hidden:
+    :maxdepth: 3
 """
         for modname, mod_bmks in sorted(by_module.items()):
-            print >> f, '%s\n%s\n' % (modname, '-' * len(modname))
-            for bmk in mod_bmks:
-                print >> f, bmk.name
-                print >> f, '~' * len(bmk.name)
-                print >> f, '.. include:: vbench/%s.txt\n' % bmk.name
+            print >> f, '    vb_%s' % modname
+            modpath = os.path.join(RST_BASE, 'vb_%s.rst' % modname)
+            with open(modpath, 'w') as mh:
+                header = '%s\n%s\n\n' % (modname, '=' * len(modname))
+                print >> mh, header
+
+                for bmk in mod_bmks:
+                    print >> mh, bmk.name
+                    print >> mh, '-' * len(bmk.name)
+                    print >> mh, '.. include:: vbench/%s.txt\n' % bmk.name
