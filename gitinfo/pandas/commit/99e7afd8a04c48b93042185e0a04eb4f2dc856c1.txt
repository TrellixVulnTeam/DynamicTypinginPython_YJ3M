commit 99e7afd8a04c48b93042185e0a04eb4f2dc856c1
Author: Vytautas Jancauskas <unaudio@gmail.com>
Date:   Sun Jun 17 13:47:49 2012 +0300

    Added bootstrap plot documentation

diff --git a/doc/source/visualization.rst b/doc/source/visualization.rst
index 34bd80351..a3bab5139 100644
--- a/doc/source/visualization.rst
+++ b/doc/source/visualization.rst
@@ -325,3 +325,21 @@ confidence band.
 
    @savefig autocorrelation_plot.png width=6in
    autocorrelation_plot(data)
+
+Bootstrap Plot
+~~~~~~~~~~~~~~
+
+Bootstrap plots are used to visually assess the uncertainty of a statistic, such
+as mean, median, midrange, etc. A random subset of a specified size is selected
+from a data set, the statistic in question is computed for this subset and the 
+process is repeated a specified number of times. Resulting plots and histograms
+are what constitutes the bootstrap plot.
+
+.. ipython:: python
+
+   from pandas.tools.plotting import bootstrap_plot
+
+   data = Series(np.random.random(1000))
+
+   @savefig bootstrap_plot.png width=8in
+   bootstrap_plot(data, size=50, samples=500, color='grey')
diff --git a/pandas/tools/plotting.py b/pandas/tools/plotting.py
index e1594a4ef..ea73974aa 100644
--- a/pandas/tools/plotting.py
+++ b/pandas/tools/plotting.py
@@ -194,7 +194,9 @@ def bootstrap_plot(series, fig=None, size=50, samples=500, **kwds):
     fig: matplotlib figure
     """
     import random
+    import matplotlib
     import matplotlib.pyplot as plt
+    matplotlib.rcParams.update({'font.size': 8})
     data = series.values
     samplings = [random.sample(data, size) for _ in range(samples)]
     means = np.array([np.mean(sampling) for sampling in samplings])
@@ -205,15 +207,12 @@ def bootstrap_plot(series, fig=None, size=50, samples=500, **kwds):
     x = range(samples)
     ax1 = fig.add_subplot(2, 3, 1)
     ax1.set_xlabel("Sample")
-    ax1.set_ylabel("Mean")
     ax1.plot(x, means, **kwds)
     ax2 = fig.add_subplot(2, 3, 2)
     ax2.set_xlabel("Sample")
-    ax2.set_ylabel("Median")
     ax2.plot(x, medians, **kwds)
     ax3 = fig.add_subplot(2, 3, 3)
     ax3.set_xlabel("Sample")
-    ax3.set_ylabel("Midrange")
     ax3.plot(x, midranges, **kwds)
     ax4 = fig.add_subplot(2, 3, 4)
     ax4.set_xlabel("Mean")
