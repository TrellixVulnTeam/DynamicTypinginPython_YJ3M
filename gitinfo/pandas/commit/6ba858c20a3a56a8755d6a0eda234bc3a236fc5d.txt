commit 6ba858c20a3a56a8755d6a0eda234bc3a236fc5d
Author: Stephen Lin <stephenwlin@gmail.com>
Date:   Thu Jan 31 17:19:50 2013 -0500

    BUG: Period slicing with period_range returns error

diff --git a/pandas/core/series.py b/pandas/core/series.py
index 337325441..118b8dba2 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -554,7 +554,7 @@ copy : boolean, default False
                 key = list(key)
 
             if isinstance(key, Index):
-                key_type = lib.infer_dtype(key.values)
+                key_type = key.inferred_type
             else:
                 key_type = lib.infer_dtype(key)
 
@@ -700,7 +700,7 @@ copy : boolean, default False
                 key = list(key)
 
             if isinstance(key, Index):
-                key_type = lib.infer_dtype(key.values)
+                key_type = key.inferred_type
             else:
                 key_type = lib.infer_dtype(key)
 
diff --git a/pandas/tests/test_series.py b/pandas/tests/test_series.py
index 5f20eb781..71db7135d 100644
--- a/pandas/tests/test_series.py
+++ b/pandas/tests/test_series.py
@@ -2544,6 +2544,38 @@ class TestSeries(unittest.TestCase, CheckNameIntegration):
         d = self.ts.index[0] - datetools.bday
         self.assert_(np.isnan(self.ts.asof(d)))
 
+    def test_getitem_setitem_periodindex(self):
+        from pandas import period_range, Period
+        # array or list or dates
+        N = 50
+        rng = period_range('1/1/1990', periods=N, freq='H')
+        ts = Series(np.random.randn(N), index=rng)
+
+        result = ts["1990-01-01 04":"1990-01-01 07"]
+        expected = ts[4:8]
+        assert_series_equal(result, expected)
+
+        result = ts.copy()
+        result["1990-01-01 04":"1990-01-01 07"] = 0
+        result["1990-01-01 04":"1990-01-01 07"] = ts[4:8]
+        assert_series_equal(result, ts)
+
+        lb = "1990-01-01 04"
+        rb = "1990-01-01 07"
+        result = ts[(ts.index >= lb) & (ts.index <= rb)]
+        expected = ts[4:8]
+        assert_series_equal(result, expected)
+
+        # GH 2782
+        result = ts[ts.index[4:8]]
+        expected = ts[4:8]
+        assert_series_equal(result, expected)
+
+        result = ts.copy()
+        result[ts.index[4:8]] = 0
+        result[4:8] = ts[4:8]
+        assert_series_equal(result, ts)
+
     def test_asof_periodindex(self):
         from pandas import period_range, PeriodIndex
         # array or list or dates
