commit 30fb087095d40230765fc544b3477700e04f0332
Author: jbrockmendel <jbrockmendel@gmail.com>
Date:   Mon Sep 2 14:17:43 2019 -0700

    BUG: fix+test Timestamp with int array (#28161)

diff --git a/pandas/_libs/tslibs/c_timestamp.pyx b/pandas/_libs/tslibs/c_timestamp.pyx
index 10ed2588d..41e2ae6b5 100644
--- a/pandas/_libs/tslibs/c_timestamp.pyx
+++ b/pandas/_libs/tslibs/c_timestamp.pyx
@@ -251,6 +251,14 @@ cdef class _Timestamp(datetime):
                 result = result.normalize()
             return result
 
+        elif is_array(other):
+            if other.dtype.kind in ['i', 'u']:
+                maybe_integer_op_deprecated(self)
+                if self.freq is None:
+                    raise ValueError("Cannot add integer-dtype array "
+                                     "to Timestamp without freq.")
+                return self.freq * other + self
+
         # index/series like
         elif hasattr(other, '_typ'):
             return NotImplemented
@@ -268,6 +276,14 @@ cdef class _Timestamp(datetime):
             neg_other = -other
             return self + neg_other
 
+        elif is_array(other):
+            if other.dtype.kind in ['i', 'u']:
+                maybe_integer_op_deprecated(self)
+                if self.freq is None:
+                    raise ValueError("Cannot subtract integer-dtype array "
+                                     "from Timestamp without freq.")
+                return self - self.freq * other
+
         typ = getattr(other, '_typ', None)
         if typ is not None:
             return NotImplemented
diff --git a/pandas/tests/scalar/timestamp/test_arithmetic.py b/pandas/tests/scalar/timestamp/test_arithmetic.py
index 58bd03129..2ef4fe79e 100644
--- a/pandas/tests/scalar/timestamp/test_arithmetic.py
+++ b/pandas/tests/scalar/timestamp/test_arithmetic.py
@@ -151,3 +151,56 @@ class TestTimestampArithmetic:
         result = ts + other
         valdiff = result.value - ts.value
         assert valdiff == expected_difference
+
+    @pytest.mark.parametrize("ts", [Timestamp.now(), Timestamp.now("utc")])
+    @pytest.mark.parametrize(
+        "other",
+        [
+            1,
+            np.int64(1),
+            np.array([1, 2], dtype=np.int32),
+            np.array([3, 4], dtype=np.uint64),
+        ],
+    )
+    def test_add_int_no_freq_raises(self, ts, other):
+        with pytest.raises(ValueError, match="without freq"):
+            ts + other
+        with pytest.raises(ValueError, match="without freq"):
+            other + ts
+
+        with pytest.raises(ValueError, match="without freq"):
+            ts - other
+        with pytest.raises(TypeError):
+            other - ts
+
+    @pytest.mark.parametrize(
+        "ts",
+        [
+            Timestamp("1776-07-04", freq="D"),
+            Timestamp("1776-07-04", tz="UTC", freq="D"),
+        ],
+    )
+    @pytest.mark.parametrize(
+        "other",
+        [
+            1,
+            np.int64(1),
+            np.array([1, 2], dtype=np.int32),
+            np.array([3, 4], dtype=np.uint64),
+        ],
+    )
+    def test_add_int_with_freq(self, ts, other):
+        with tm.assert_produces_warning(FutureWarning):
+            result1 = ts + other
+        with tm.assert_produces_warning(FutureWarning):
+            result2 = other + ts
+
+        assert np.all(result1 == result2)
+
+        with tm.assert_produces_warning(FutureWarning):
+            result = result1 - other
+
+        assert np.all(result == ts)
+
+        with pytest.raises(TypeError):
+            other - ts
