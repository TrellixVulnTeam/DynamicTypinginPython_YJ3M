commit 672f5a151886a8bf457ac499d9a9a471689ee9ff
Author: Sam Foo <sfoohei@gmail.com>
Date:   Tue Feb 6 05:15:50 2018 -0500

    DOC: Remove repeated duplicated word (#19546)

diff --git a/doc/source/advanced.rst b/doc/source/advanced.rst
index 25f7c5a3a..ca903dadc 100644
--- a/doc/source/advanced.rst
+++ b/doc/source/advanced.rst
@@ -672,7 +672,7 @@ The ``CategoricalIndex`` is **preserved** after indexing:
    df2.loc['a'].index
 
 Sorting the index will sort by the order of the categories (Recall that we 
-created the index with with ``CategoricalDtype(list('cab'))``, so the sorted 
+created the index with ``CategoricalDtype(list('cab'))``, so the sorted 
 order is ``cab``.). 
 
 .. ipython:: python
diff --git a/doc/source/comparison_with_sas.rst b/doc/source/comparison_with_sas.rst
index e9e0d7716..214667119 100644
--- a/doc/source/comparison_with_sas.rst
+++ b/doc/source/comparison_with_sas.rst
@@ -279,7 +279,7 @@ date/datetime columns.
 
 The equivalent pandas operations are shown below.  In addition to these
 functions pandas supports other Time Series features
-not available in Base SAS (such as resampling and and custom offsets) -
+not available in Base SAS (such as resampling and custom offsets) -
 see the :ref:`timeseries documentation<timeseries>` for more details.
 
 .. ipython:: python
@@ -584,7 +584,7 @@ For example, in SAS you could do this to filter missing values.
        if value_x ^= .;
    run;
 
-Which doesn't work in in pandas.  Instead, the ``pd.isna`` or ``pd.notna`` functions
+Which doesn't work in pandas.  Instead, the ``pd.isna`` or ``pd.notna`` functions
 should be used for comparisons.
 
 .. ipython:: python
diff --git a/doc/source/computation.rst b/doc/source/computation.rst
index a64542fa7..428576765 100644
--- a/doc/source/computation.rst
+++ b/doc/source/computation.rst
@@ -512,7 +512,7 @@ a same sized result as the input.
 
 When using ``.resample()`` with an offset. Construct a new index that is the frequency of the offset. For each frequency
 bin, aggregate points from the input within a backwards-in-time looking window that fall in that bin. The result of this
-aggregation is the output for that frequency point. The windows are fixed size size in the frequency space. Your result
+aggregation is the output for that frequency point. The windows are fixed size in the frequency space. Your result
 will have the shape of a regular frequency between the min and the max of the original input object.
 
 To summarize, ``.rolling()`` is a time-based window operation, while ``.resample()`` is a frequency-based window operation.
diff --git a/doc/source/io.rst b/doc/source/io.rst
index 60dc89f8f..1785de54b 100644
--- a/doc/source/io.rst
+++ b/doc/source/io.rst
@@ -4529,7 +4529,7 @@ Several caveats.
   on an attempt at serialization.
 
 You can specify an ``engine`` to direct the serialization. This can be one of ``pyarrow``, or ``fastparquet``, or ``auto``.
-If the engine is NOT specified, then the ``pd.options.io.parquet.engine`` option is checked; if this is also ``auto``, then
+If the engine is NOT specified, then the ``pd.options.io.parquet.engine`` option is checked; if this is also ``auto``, 
 then ``pyarrow`` is tried, and falling back to ``fastparquet``.
 
 See the documentation for `pyarrow <http://arrow.apache.org/docs/python/>`__ and `fastparquet <https://fastparquet.readthedocs.io/en/latest/>`__
diff --git a/doc/source/release.rst b/doc/source/release.rst
index cd763de42..8e063116c 100644
--- a/doc/source/release.rst
+++ b/doc/source/release.rst
@@ -406,7 +406,7 @@ of all enhancements and bugs that have been fixed in 0.20.1.
 
 .. note::
 
-   This is a combined release for 0.20.0 and and 0.20.1.
+   This is a combined release for 0.20.0 and 0.20.1.
    Version 0.20.1 contains one additional change for backwards-compatibility with downstream projects using pandas' ``utils`` routines. (:issue:`16250`)
 
 Thanks
@@ -2918,7 +2918,7 @@ Improvements to existing features
 - clipboard functions use pyperclip (no dependencies on Windows, alternative
   dependencies offered for Linux) (:issue:`3837`).
 - Plotting functions now raise a ``TypeError`` before trying to plot anything
-  if the associated objects have have a dtype of ``object`` (:issue:`1818`,
+  if the associated objects have a dtype of ``object`` (:issue:`1818`,
   :issue:`3572`, :issue:`3911`, :issue:`3912`), but they will try to convert object
   arrays to numeric arrays if possible so that you can still plot, for example, an
   object array with floats. This happens before any drawing takes place which
@@ -4082,7 +4082,7 @@ Bug Fixes
   columns (:issue:`1943`)
 - Fix time zone localization bug causing improper fields (e.g. hours) in time
   zones that have not had a UTC transition in a long time (:issue:`1946`)
-- Fix errors when parsing and working with with fixed offset timezones
+- Fix errors when parsing and working with fixed offset timezones
   (:issue:`1922`, :issue:`1928`)
 - Fix text parser bug when handling UTC datetime objects generated by
   dateutil (:issue:`1693`)
@@ -4383,7 +4383,7 @@ Bug Fixes
   error (:issue:`1090`)
 - Consistently set name on groupby pieces (:issue:`184`)
 - Treat dict return values as Series in GroupBy.apply (:issue:`823`)
-- Respect column selection for DataFrame in in GroupBy.transform (:issue:`1365`)
+- Respect column selection for DataFrame in GroupBy.transform (:issue:`1365`)
 - Fix MultiIndex partial indexing bug (:issue:`1352`)
 - Enable assignment of rows in mixed-type DataFrame via .ix (:issue:`1432`)
 - Reset index mapping when grouping Series in Cython (:issue:`1423`)
@@ -5040,7 +5040,7 @@ New Features
 - Add `melt` function to `pandas.core.reshape`
 - Add `level` parameter to group by level in Series and DataFrame
   descriptive statistics (:issue:`313`)
-- Add `head` and `tail` methods to Series, analogous to to DataFrame (PR
+- Add `head` and `tail` methods to Series, analogous to DataFrame (PR
   :issue:`296`)
 - Add `Series.isin` function which checks if each value is contained in a
   passed sequence (:issue:`289`)
diff --git a/doc/source/tutorials.rst b/doc/source/tutorials.rst
index 43ccd372d..710212bc2 100644
--- a/doc/source/tutorials.rst
+++ b/doc/source/tutorials.rst
@@ -19,7 +19,7 @@ pandas Cookbook
 The goal of this cookbook (by `Julia Evans <http://jvns.ca>`_) is to
 give you some concrete examples for getting started with pandas. These
 are examples with real-world data, and all the bugs and weirdness that
-that entails.
+entails.
 
 Here are links to the v0.1 release. For an up-to-date table of contents, see the `pandas-cookbook GitHub
 repository <http://github.com/jvns/pandas-cookbook>`_. To run the examples in this tutorial, you'll need to
