commit 5cb006fb7f20bc193f1578f5a7c8500f16a2f5af
Author: William Ayd <will_ayd@innobi.io>
Date:   Tue Apr 30 06:04:05 2019 -0700

    Fix Memory Leak in to_json with Numeric Values (#26239)

diff --git a/asv_bench/benchmarks/io/json.py b/asv_bench/benchmarks/io/json.py
index ec2ddc11b..19d11e661 100644
--- a/asv_bench/benchmarks/io/json.py
+++ b/asv_bench/benchmarks/io/json.py
@@ -124,4 +124,26 @@ class ToJSON(BaseIO):
         self.df_int_float_str.to_json(self.fname, orient='records', lines=True)
 
 
+class ToJSONMem:
+
+    def setup_cache(self):
+        df = DataFrame([[1]])
+        frames = {
+            'int': df,
+            'float': df.astype(float),
+        }
+
+        return frames
+
+    def peakmem_int(self, frames):
+        df = frames['int']
+        for _ in range(100_000):
+            df.to_json()
+
+    def peakmem_float(self, frames):
+        df = frames['float']
+        for _ in range(100_000):
+            df.to_json()
+
+
 from ..pandas_vb_common import setup  # noqa: F401
diff --git a/doc/source/whatsnew/v0.25.0.rst b/doc/source/whatsnew/v0.25.0.rst
index 66c05e8dd..9f8798273 100644
--- a/doc/source/whatsnew/v0.25.0.rst
+++ b/doc/source/whatsnew/v0.25.0.rst
@@ -368,6 +368,7 @@ I/O
 - Improved the ``col_space`` parameter in :meth:`DataFrame.to_html` to accept a string so CSS length values can be set correctly (:issue:`25941`)
 - Fixed bug in loading objects from S3 that contain ``#`` characters in the URL (:issue:`25945`)
 - Adds ``use_bqstorage_api`` parameter to :func:`read_gbq` to speed up downloads of large data frames. This feature requires version 0.10.0 of the ``pandas-gbq`` library as well as the ``google-cloud-bigquery-storage`` and ``fastavro`` libraries. (:issue:`26104`)
+- Fixed memory leak in :meth:`DataFrame.to_json` when dealing with numeric data (:issue:`24889`)
 
 Plotting
 ^^^^^^^^
diff --git a/pandas/_libs/src/ujson/python/objToJSON.c b/pandas/_libs/src/ujson/python/objToJSON.c
index ef6ff61a2..a70d675ee 100644
--- a/pandas/_libs/src/ujson/python/objToJSON.c
+++ b/pandas/_libs/src/ujson/python/objToJSON.c
@@ -709,7 +709,7 @@ int NpyArr_iterNextItem(JSOBJ obj, JSONTypeContext *tc) {
 
     NpyArr_freeItemValue(obj, tc);
 
-    if (PyArray_ISNUMBER(npyarr->array) || PyArray_ISDATETIME(npyarr->array))
+    if (PyArray_ISDATETIME(npyarr->array))
     {
         PRINTMARK();
         GET_TC(tc)->itemValue = obj;
