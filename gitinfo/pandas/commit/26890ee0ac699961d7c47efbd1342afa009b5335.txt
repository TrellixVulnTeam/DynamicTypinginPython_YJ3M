commit 26890ee0ac699961d7c47efbd1342afa009b5335
Author: Phillip Cloud <cpcloud@gmail.com>
Date:   Fri May 2 18:59:04 2014 -0400

    DOC: add release note and version doc/example

diff --git a/doc/source/release.rst b/doc/source/release.rst
index b8e5b31bd..86407ed19 100644
--- a/doc/source/release.rst
+++ b/doc/source/release.rst
@@ -206,6 +206,8 @@ API Changes
 - Added ``factorize`` functions to ``Index`` and ``Series`` to get indexer and unique values (:issue:`7090`)
 - :meth:`DataFrame.describe` on a DataFrame with a mix of Timestamp and string like objects
   returns a different Index (:issue:`7088`). Previously the index was unintentionally sorted.
+- arithmetic operations with **only** ``bool`` dtypes now raise an error
+  (:issue:`7011`, :issue:`6762`, :issue:`7015`)
 
 Deprecations
 ~~~~~~~~~~~~
diff --git a/doc/source/v0.14.0.txt b/doc/source/v0.14.0.txt
index 4c099c627..b5b261d47 100644
--- a/doc/source/v0.14.0.txt
+++ b/doc/source/v0.14.0.txt
@@ -228,6 +228,18 @@ Display Changes
   length of the series (:issue:`7101`)
 - Fixed a bug in the HTML repr of a truncated Series or DataFrame not showing the class name with the
   `large_repr` set to 'info' (:issue:`7105`)
+- arithmetic operations with **only** ``bool`` dtypes now raise an error
+  (:issue:`7011`, :issue:`6762`, :issue:`7015`)
+
+  .. code-block:: python
+
+     x = pd.Series(np.random.rand(10) > 0.5)
+     y = True
+     x * y
+
+     # this now raises for arith ops like ``+``, ``*``, etc.
+     NotImplementedError: operator '*' not implemented for bool dtypes
+
 
 .. _whatsnew_0140.groupby:
 
diff --git a/pandas/core/ops.py b/pandas/core/ops.py
index 0b044f727..a52c1034e 100644
--- a/pandas/core/ops.py
+++ b/pandas/core/ops.py
@@ -61,7 +61,7 @@ def _create_methods(arith_method, radd_func, comp_method, bool_method,
                               default_axis=default_axis, fill_zeros=np.inf),
         # Causes a floating point exception in the tests when numexpr
         # enabled, so for now no speedup
-        mod=arith_method(operator.mod, names('mod'), op('%'),
+        mod=arith_method(operator.mod, names('mod'), None,
                          default_axis=default_axis, fill_zeros=np.nan),
         pow=arith_method(operator.pow, names('pow'), op('**'),
                          default_axis=default_axis),
