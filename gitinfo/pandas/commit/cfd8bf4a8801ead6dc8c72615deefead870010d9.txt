commit cfd8bf4a8801ead6dc8c72615deefead870010d9
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Thu Apr 26 17:33:40 2012 -0400

    BLD: 32-bit / MSVC fixes

diff --git a/pandas/core/common.py b/pandas/core/common.py
index 838b22dc9..f07c4931c 100644
--- a/pandas/core/common.py
+++ b/pandas/core/common.py
@@ -285,7 +285,7 @@ def take_fast(arr, indexer, mask, needs_masking, axis=0, out=None,
         return take_2d(arr, indexer, out=out, mask=mask,
                        needs_masking=needs_masking,
                        axis=axis, fill_value=fill_value)
-
+    indexer = _ensure_platform_int(indexer)
     result = arr.take(indexer, axis=axis, out=out)
     result = _maybe_mask(result, mask, needs_masking, axis=axis,
                          out_passed=out is not None, fill_value=fill_value)
diff --git a/pandas/core/index.py b/pandas/core/index.py
index f9f4f4607..c21190ee1 100644
--- a/pandas/core/index.py
+++ b/pandas/core/index.py
@@ -676,7 +676,7 @@ class Index(np.ndarray):
         else:
             raise ValueError('unrecognized method: %s' % method)
 
-        return indexer
+        return com._ensure_platform_int(indexer)
 
     def _possibly_promote(self, other):
         # A hack, but it works
@@ -1460,11 +1460,11 @@ class MultiIndex(Index):
 
             return result
 
-    def take(self, *args, **kwargs):
+    def take(self, indexer, axis=None):
         """
         Analogous to ndarray.take
         """
-        new_labels = [lab.take(*args, **kwargs) for lab in self.labels]
+        new_labels = [lab.take(indexer) for lab in self.labels]
         return MultiIndex(levels=self.levels, labels=new_labels,
                           names=self.names)
 
@@ -1715,7 +1715,7 @@ class MultiIndex(Index):
         else:
             indexer = self_index._engine.get_indexer(target_index)
 
-        return indexer
+        return com._ensure_platform_int(indexer)
 
     def reindex(self, target, method=None, level=None, limit=None):
         """
diff --git a/pandas/core/internals.py b/pandas/core/internals.py
index c962dcc9f..545ede52f 100644
--- a/pandas/core/internals.py
+++ b/pandas/core/internals.py
@@ -43,6 +43,7 @@ class Block(object):
     def ref_locs(self):
         if self._ref_locs is None:
             indexer = self.ref_items.get_indexer(self.items)
+            indexer = com._ensure_platform_int(indexer)
             assert((indexer != -1).all())
             self._ref_locs = indexer
         return self._ref_locs
diff --git a/pandas/sparse/frame.py b/pandas/sparse/frame.py
index 06008dde0..3d530ecd3 100644
--- a/pandas/sparse/frame.py
+++ b/pandas/sparse/frame.py
@@ -502,6 +502,7 @@ class SparseDataFrame(DataFrame):
             return SparseDataFrame(index=index, columns=self.columns)
 
         indexer = self.index.get_indexer(index, method, limit=limit)
+        indexer = com._ensure_platform_int(indexer)
         mask = indexer == -1
         need_mask = mask.any()
 
diff --git a/pandas/tests/test_tseries.py b/pandas/tests/test_tseries.py
index bb37d6fab..6e34cb426 100644
--- a/pandas/tests/test_tseries.py
+++ b/pandas/tests/test_tseries.py
@@ -282,8 +282,8 @@ def test_series_bin_grouper():
 
 def test_generate_bins():
     from pandas.core.groupby import generate_bins_generic
-    values = np.array([1,2,3,4,5,6])
-    binner = np.array([0,3,6,9])
+    values = np.array([1,2,3,4,5,6], dtype=np.int64)
+    binner = np.array([0,3,6,9], dtype=np.int64)
 
     for func in [lib.generate_bins_dt64, generate_bins_generic]:
         bins = func(values, binner, closed='left')
diff --git a/pandas/tseries/period.py b/pandas/tseries/period.py
index 91aef9345..5453f2d39 100644
--- a/pandas/tseries/period.py
+++ b/pandas/tseries/period.py
@@ -129,7 +129,7 @@ class Period(object):
             dt = value
             if freq is None:
                 raise ValueError('Must supply freq for datetime value')
-        elif isinstance(value, (int, long)):
+        elif com.is_integer(value):
             if value <= 0:
                 raise ValueError("Value must be positive")
             self.ordinal = value
diff --git a/pandas/tseries/tests/test_timeseries.py b/pandas/tseries/tests/test_timeseries.py
index 77fd6da04..f392325d8 100644
--- a/pandas/tseries/tests/test_timeseries.py
+++ b/pandas/tseries/tests/test_timeseries.py
@@ -499,11 +499,11 @@ class TestLegacySupport(unittest.TestCase):
         pth, _ = os.path.split(os.path.abspath(__file__))
         filepath = os.path.join(pth, 'data', 'frame.pickle')
 
-        with open(filepath, 'r') as f:
+        with open(filepath, 'rb') as f:
             cls.frame = pickle.load(f)
 
         filepath = os.path.join(pth, 'data', 'series.pickle')
-        with open(filepath, 'r') as f:
+        with open(filepath, 'rb') as f:
             cls.series = pickle.load(f)
 
     def test_unpickle_legacy_frame(self):
