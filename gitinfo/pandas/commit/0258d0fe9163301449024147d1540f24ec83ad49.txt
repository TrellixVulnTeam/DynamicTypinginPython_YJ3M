commit 0258d0fe9163301449024147d1540f24ec83ad49
Author: Thomas Kluyver <takowl@gmail.com>
Date:   Wed Oct 5 23:54:15 2011 +0100

    More changes to support Python 3 better.

diff --git a/pandas/core/common.py b/pandas/core/common.py
index 1c46bc572..493f26b8e 100644
--- a/pandas/core/common.py
+++ b/pandas/core/common.py
@@ -1,8 +1,10 @@
 """
 Misc tools for implementing data structures
 """
-
-from cStringIO import StringIO
+try:
+    from io import BytesIO
+except ImportError:   # Python < 2.6
+    from cStringIO import StringIO as BytesIO
 import itertools
 
 from numpy.lib.format import read_array, write_array
@@ -77,13 +79,13 @@ def notnull(obj):
 def _pickle_array(arr):
     arr = arr.view(np.ndarray)
 
-    buf = StringIO()
+    buf = BytesIO()
     write_array(buf, arr)
 
     return buf.getvalue()
 
 def _unpickle_array(bytes):
-    arr = read_array(StringIO(bytes))
+    arr = read_array(BytesIO(bytes))
     return arr
 
 def _take_1d_bool(arr, indexer, out):
diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 2b458c05f..60cfb2b8c 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -926,7 +926,7 @@ class DataFrame(NDFrame):
     def _sanitize_column(self, value):
         # Need to make sure new columns (which go into the BlockManager as new
         # blocks) are always copied
-        if hasattr(value, '__iter__'):
+        if hasattr(value, '__iter__') and not isinstance(value, basestring):
             if isinstance(value, Series):
                 if value.index.equals(self.index):
                     # copy the values
diff --git a/pandas/tests/test_daterange.py b/pandas/tests/test_daterange.py
index 02ced4f5e..f301411a8 100644
--- a/pandas/tests/test_daterange.py
+++ b/pandas/tests/test_daterange.py
@@ -298,6 +298,7 @@ def _skip_if_no_pytz():
     try:
         import pytz
     except ImportError:
+        import nose
         raise nose.SkipTest
 
 if __name__ == '__main__':
diff --git a/pandas/util/testing.py b/pandas/util/testing.py
index 6d43682aa..7fff17e9f 100644
--- a/pandas/util/testing.py
+++ b/pandas/util/testing.py
@@ -70,6 +70,10 @@ def isiterable(obj):
 def assert_almost_equal(a, b):
     if isinstance(a, dict) or isinstance(b, dict):
         return assert_dict_equal(a, b)
+    
+    if isinstance(a, basestring):
+        assert a == b, (a, b)
+        return True
 
     if isiterable(a):
         np.testing.assert_(isiterable(b))
