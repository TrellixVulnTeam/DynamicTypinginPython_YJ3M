commit 207e0ce811451280e835475b7b8b2c34b3818d4e
Author: Zeke <kruglick@yahoo.com>
Date:   Mon Nov 16 14:01:17 2015 -0800

    BUG: to_sparse was dropping MultiIndex column names, #11600

diff --git a/doc/source/whatsnew/v0.17.1.txt b/doc/source/whatsnew/v0.17.1.txt
index 3b36ea8ec..f20087270 100755
--- a/doc/source/whatsnew/v0.17.1.txt
+++ b/doc/source/whatsnew/v0.17.1.txt
@@ -189,3 +189,4 @@ Bug Fixes
 - Bug in ``Series.quantile`` with empty list results has ``Index`` with ``object`` dtype (:issue:`11588`)
 - Bug in ``pd.merge`` results in empty ``Int64Index`` rather than ``Index(dtype=object)`` when the merge result is empty (:issue:`11588`)
 - Bug in ``remove_unused_categories`` when having ``NaN`` values (:issue:`11599`).
+- Bug in ``DataFrame.to_sparse()`` loses column names for MultiIndexes (:issue:`11600`)
diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 81da1223f..b3131b7e4 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -1191,7 +1191,7 @@ class DataFrame(NDFrame):
         y : SparseDataFrame
         """
         from pandas.core.sparse import SparseDataFrame
-        return SparseDataFrame(self._series, index=self.index,
+        return SparseDataFrame(self._series, index=self.index, columns=self.columns,
                                default_kind=kind,
                                default_fill_value=fill_value)
 
diff --git a/pandas/sparse/frame.py b/pandas/sparse/frame.py
index f1799eb99..5e3f59a24 100644
--- a/pandas/sparse/frame.py
+++ b/pandas/sparse/frame.py
@@ -246,7 +246,7 @@ class SparseDataFrame(DataFrame):
         df : DataFrame
         """
         data = dict((k, v.to_dense()) for k, v in compat.iteritems(self))
-        return DataFrame(data, index=self.index)
+        return DataFrame(data, index=self.index,columns=self.columns)
 
     def astype(self, dtype):
         raise NotImplementedError
diff --git a/pandas/sparse/tests/test_sparse.py b/pandas/sparse/tests/test_sparse.py
index 9ce08c550..2f148c89c 100644
--- a/pandas/sparse/tests/test_sparse.py
+++ b/pandas/sparse/tests/test_sparse.py
@@ -11,7 +11,7 @@ import numpy as np
 import pandas as pd
 dec = np.testing.dec
 
-from pandas.util.testing import (assert_almost_equal, assert_series_equal,
+from pandas.util.testing import (assert_almost_equal, assert_series_equal, assert_index_equal,
                                  assert_frame_equal, assert_panel_equal, assertRaisesRegexp,
                                  assert_numpy_array_equal, assert_attr_equal)
 from numpy.testing import assert_equal
@@ -770,6 +770,24 @@ class TestSparseSeries(tm.TestCase,
         assert_sp_series_equal(result, result2)
         assert_sp_series_equal(result, expected)
 
+class TestSparseHandlingMultiIndexes(tm.TestCase):
+
+    def setUp(self):
+        miindex = pd.MultiIndex.from_product([["x","y"], ["10","20"]],names=['row-foo', 'row-bar'])
+        micol = pd.MultiIndex.from_product([['a','b','c'], ["1","2"]],names=['col-foo', 'col-bar'])
+        dense_multiindex_frame = pd.DataFrame(index=miindex, columns=micol).sortlevel().sortlevel(axis=1)
+        self.dense_multiindex_frame = dense_multiindex_frame.fillna(value=3.14)
+
+    def test_to_sparse_preserve_multiindex_names_columns(self):
+        sparse_multiindex_frame = self.dense_multiindex_frame.to_sparse().copy()
+        assert_index_equal(sparse_multiindex_frame.columns,self.dense_multiindex_frame.columns)
+
+    def test_round_trip_preserve_multiindex_names(self):
+        sparse_multiindex_frame = self.dense_multiindex_frame.to_sparse()
+        round_trip_multiindex_frame = sparse_multiindex_frame.to_dense()
+        assert_frame_equal(self.dense_multiindex_frame,round_trip_multiindex_frame,
+                           check_column_type=True,check_names=True)
+
 
 class TestSparseSeriesScipyInteraction(tm.TestCase):
     # Issue 8048: add SparseSeries coo methods
