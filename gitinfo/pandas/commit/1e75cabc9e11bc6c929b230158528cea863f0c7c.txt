commit 1e75cabc9e11bc6c929b230158528cea863f0c7c
Author: Vytautas Jancauskas <unaudio@gmail.com>
Date:   Tue Aug 14 23:26:26 2012 +0300

    Added TestRPlot1 class

diff --git a/pandas/tests/test_rplot.py b/pandas/tests/test_rplot.py
index ae7e5dd94..692b577f8 100644
--- a/pandas/tests/test_rplot.py
+++ b/pandas/tests/test_rplot.py
@@ -2,6 +2,8 @@ import unittest
 import pandas.tools.rplot as rplot
 from pandas import read_csv
 import os
+import matplotlib.pyplot as plt
+import pdb
 
 def curpath():
     pth, _ = os.path.split(os.path.abspath(__file__))
@@ -221,5 +223,19 @@ class TestScaleSize(unittest.TestCase):
 			for index in range(len(self.data)):
 				self.scale2(self.data, index)
 
+class TestRPlot1(unittest.TestCase):
+	def setUp(self):
+		path = os.path.join(curpath(), 'data/tips.csv')
+		self.data = read_csv(path, sep=',')
+		self.plot = rplot.RPlot(self.data, x='tip', y='total_bill')
+		self.plot + rplot.TrellisGrid(['sex', 'smoker'])
+		self.plot + rplot.GeomPoint(colour=rplot.ScaleRandomColour('day'), shape=rplot.ScaleShape('size'))
+		self.fig = plt.gcf()
+		self.plot.render(self.fig)
+		pdb.set_trace()
+
+	def test_subplots(self):
+		self.assertEqual(len(self.fig.axes), 4)
+
 if __name__ == '__main__':
 	unittest.main()
\ No newline at end of file
diff --git a/pandas/tools/rplot.py b/pandas/tools/rplot.py
index 27da4cf6f..e9ac6b985 100644
--- a/pandas/tools/rplot.py
+++ b/pandas/tools/rplot.py
@@ -282,10 +282,10 @@ def make_aes(x=None, y=None, size=None, colour=None, shape=None, alpha=None):
 		pass
 	else:
 		raise ValueError('size mapping should be done through ScaleConstant or ScaleSize')
-	if any([isinstance(colour, scale) for scale in [ScaleConstant, ScaleGradient, ScaleGradient2]]) or colour is None:
+	if any([isinstance(colour, scale) for scale in [ScaleConstant, ScaleGradient, ScaleGradient2, ScaleRandomColour]]) or colour is None:
 		pass
 	else:
-		raise ValueError('colour mapping should be done through ScaleConstant, ScaleGradient or ScaleGradient2')
+		raise ValueError('colour mapping should be done through ScaleConstant, ScaleRandomColour, ScaleGradient or ScaleGradient2')
 	if any([isinstance(shape, scale) for scale in [ScaleConstant, ScaleShape]]) or shape is None:
 		pass
 	else:
