commit f4fe06511e056c4990dd0388cf5f927b259f5a46
Author: Wouter Overmeire <lodagro@gmail.com>
Date:   Mon Sep 10 21:40:27 2012 +0200

    ENH: api change to use label or position for x/y plotting, close #1842

diff --git a/pandas/core/index.py b/pandas/core/index.py
index 3fb68fa9e..ac954c8b6 100644
--- a/pandas/core/index.py
+++ b/pandas/core/index.py
@@ -225,6 +225,9 @@ class Index(np.ndarray):
     def is_numeric(self):
         return self.inferred_type in ['integer', 'floating']
 
+    def holds_integer(self):
+        return self.inferred_type in ['integer', 'mixed-integer']
+
     def get_duplicates(self):
         from collections import defaultdict
         counter = defaultdict(lambda: 0)
diff --git a/pandas/tests/test_graphics.py b/pandas/tests/test_graphics.py
index e4ce92f13..945943d80 100644
--- a/pandas/tests/test_graphics.py
+++ b/pandas/tests/test_graphics.py
@@ -208,20 +208,26 @@ class TestDataFramePlots(unittest.TestCase):
 
     @slow
     def test_plot_xy(self):
+        # columns.inferred_type == 'string'
         df = tm.makeTimeDataFrame()
         self._check_data(df.plot(x=0, y=1),
-                         df.set_index('A').sort_index()['B'].plot())
-
-        self._check_data(df.plot(x=0), df.set_index('A').sort_index().plot())
-
+                         df.set_index('A')['B'].plot())
+        self._check_data(df.plot(x=0), df.set_index('A').plot())
         self._check_data(df.plot(y=0), df.B.plot())
-
         self._check_data(df.plot(x='A', y='B'),
-                         df.set_index('A').sort_index().B.plot())
+                         df.set_index('A').B.plot())
+        self._check_data(df.plot(x='A'), df.set_index('A').plot())
+        self._check_data(df.plot(y='B'), df.B.plot())
 
-        self._check_data(df.plot(x='A'), df.set_index('A').sort_index().plot())
+        # columns.inferred_type == 'integer'
+        df.columns = range(1, len(df.columns) + 1)
+        self._check_data(df.plot(x=1, y=2),
+                         df.set_index(1)[2].plot())
+        self._check_data(df.plot(x=1), df.set_index(1).plot())
+        self._check_data(df.plot(y=1), df[1].plot())
 
-        self._check_data(df.plot(y='B'), df.B.plot())
+        # columns.inferred_type == 'mixed'
+        # TODO add MultiIndex test
 
     def _check_data(self, xp, rs):
         xp_lines = xp.get_lines()
diff --git a/pandas/tools/plotting.py b/pandas/tools/plotting.py
index 7afdbbec3..f33001f2c 100644
--- a/pandas/tools/plotting.py
+++ b/pandas/tools/plotting.py
@@ -1168,8 +1168,8 @@ def plot_frame(frame=None, x=None, y=None, subplots=False, sharex=True,
 
     Parameters
     ----------
-    x : int or str, default None
-    y : int or str, default None
+    x : label or position, default None
+    y : label or position, default None
         Allows plotting of one column versus another
     subplots : boolean, default False
         Make separate subplots for each time series
@@ -1226,15 +1226,14 @@ def plot_frame(frame=None, x=None, y=None, subplots=False, sharex=True,
     else:
         raise ValueError('Invalid chart type given %s' % kind)
 
-    if isinstance(x, int):
-        x = frame.columns[x]
-    if isinstance(y, int):
-        y = frame.columns[y]
-
     if x is not None:
-        frame = frame.set_index(x).sort_index()
+        if com.is_integer(x) and not frame.columns.holds_integer():
+            x = frame.columns[x]
+        frame = frame.set_index(x)
 
     if y is not None:
+        if com.is_integer(y) and not frame.columns.holds_integer():
+            y = frame.columns[y]
         return plot_series(frame[y], label=y, kind=kind, use_index=True,
                            rot=rot, xticks=xticks, yticks=yticks,
                            xlim=xlim, ylim=ylim, ax=ax, style=style,
