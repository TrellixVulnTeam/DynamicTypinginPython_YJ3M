commit 0b8fa9dcdb6f47e40441467dd7ebb529914bb719
Author: ranarag <anu15roy@gmail.com>
Date:   Thu Jan 21 01:24:40 2016 +0530

    DEPR/TST: compat for using signature in test_panel.py, xref #12101
    
    changed deprecated getargspec to signature for python 3 while keeping the getargspec for python 2

diff --git a/pandas/compat/__init__.py b/pandas/compat/__init__.py
index f69cd4ef4..d991b3f1f 100644
--- a/pandas/compat/__init__.py
+++ b/pandas/compat/__init__.py
@@ -35,6 +35,7 @@ import sys
 import types
 from unicodedata import east_asian_width
 import struct
+import inspect
 
 PY2 = sys.version_info[0] == 2
 PY3 = (sys.version_info[0] >= 3)
@@ -69,6 +70,9 @@ if PY3:
     def bytes_to_str(b, encoding=None):
         return b.decode(encoding or 'utf-8')
 
+    def signature(f):
+        return list(inspect.signature(f).parameters.keys())
+
     # have to explicitly put builtins into the namespace
     range = range
     map = map
@@ -105,6 +109,9 @@ else:
     def bytes_to_str(b, encoding='ascii'):
         return b
 
+    def signature(f):
+        return inspect.getargspec(f).args
+
     # import iterator versions of these functions
     range = xrange
     zip = itertools.izip
diff --git a/pandas/tests/test_panel.py b/pandas/tests/test_panel.py
index a1f2b3edf..5f58c26f6 100644
--- a/pandas/tests/test_panel.py
+++ b/pandas/tests/test_panel.py
@@ -2,7 +2,7 @@
 # pylint: disable=W0612,E1101
 
 from datetime import datetime
-from inspect import getargspec
+
 import operator
 import nose
 from functools import wraps
@@ -17,7 +17,7 @@ from pandas.core.panel import Panel
 from pandas.core.series import remove_na
 import pandas.core.common as com
 from pandas import compat
-from pandas.compat import range, lrange, StringIO, OrderedDict
+from pandas.compat import range, lrange, StringIO, OrderedDict, signature
 from pandas import SparsePanel
 
 from pandas.util.testing import (assert_panel_equal, assert_frame_equal,
@@ -198,7 +198,7 @@ class SafeForLongAndSparse(object):
         self.assertRaises(Exception, f, axis=obj.ndim)
 
         # Unimplemented numeric_only parameter.
-        if 'numeric_only' in getargspec(f).args:
+        if 'numeric_only' in signature(f):
             self.assertRaisesRegexp(NotImplementedError, name, f,
                                     numeric_only=True)
 
