commit 90842ba880bb3fda91ef9fea978540eab8f0a4fe
Author: Chang She <changshe@gmail.com>
Date:   Mon Jul 23 16:35:43 2012 -0400

    ENH: explicit data type specifications for getting table schema from DataFrame

diff --git a/pandas/io/sql.py b/pandas/io/sql.py
index 01942e268..47eef0c1a 100644
--- a/pandas/io/sql.py
+++ b/pandas/io/sql.py
@@ -169,7 +169,7 @@ def write_frame(frame, name=None, con=None, flavor='sqlite'):
     data = [tuple(x) for x in frame.values]
     con.executemany(insert_sql, data)
 
-def get_sqlite_schema(frame, name):
+def get_sqlite_schema(frame, name, dtypes=None):
     template = """
 CREATE TABLE %(name)s (
   %(columns)s
@@ -177,9 +177,9 @@ CREATE TABLE %(name)s (
 
     column_types = []
 
-    dtypes = frame.dtypes
-    for k in dtypes.index:
-        dt = dtypes[k]
+    frame_types = frame.dtypes
+    for k in frame_types.index:
+        dt = frame_types[k]
 
         if issubclass(dt.type, (np.integer, np.bool_)):
             sqltype = 'INTEGER'
@@ -188,6 +188,9 @@ CREATE TABLE %(name)s (
         else:
             sqltype = 'TEXT'
 
+        if dtypes is not None:
+            sqltype = dtypes.get(k, sqltype)
+
         column_types.append((k, sqltype))
 
     columns = ',\n  '.join('%s %s' % x for x in column_types)
@@ -225,5 +228,3 @@ def format_query(sql, *args):
         processed_args.append(formatter(arg))
 
     return sql % tuple(processed_args)
-
-
diff --git a/pandas/io/tests/test_sql.py b/pandas/io/tests/test_sql.py
index 0767bdcd1..d45ddb335 100644
--- a/pandas/io/tests/test_sql.py
+++ b/pandas/io/tests/test_sql.py
@@ -51,7 +51,14 @@ class TestSQLite(unittest.TestCase):
         result.index = frame.index[:1]
         tm.assert_frame_equal(result, frame[:1])
 
-
+    def test_schema(self):
+        frame = tm.makeTimeDataFrame()
+        create_sql = sql.get_sqlite_schema(frame, 'test', {'A': 'DATETIME'})
+        lines = create_sql.splitlines()
+        for l in lines:
+            tokens = l.split(' ')
+            if len(tokens) == 2 and tokens[0] == 'A':
+                self.assert_(tokens[1] == 'DATETIME')
 
     def test_execute_fail(self):
         create_sql = """
@@ -166,4 +173,3 @@ if __name__ == '__main__':
     #                exit=False)
     nose.runmodule(argv=[__file__,'-vvs','-x','--pdb', '--pdb-failure'],
                    exit=False)
-
