commit 2b44e8f9874d1b62ddda5caa026b38f9f8feb416
Author: Andy Hayden <andyhayden1@gmail.com>
Date:   Sat Jul 6 00:15:26 2013 +0100

    ENH melt uses column name if available

diff --git a/pandas/core/reshape.py b/pandas/core/reshape.py
index 2cbeb1cf5..e9d5fe124 100644
--- a/pandas/core/reshape.py
+++ b/pandas/core/reshape.py
@@ -601,7 +601,7 @@ def _stack_multi_columns(frame, level=-1, dropna=True):
 
 
 def melt(frame, id_vars=None, value_vars=None,
-         var_name='variable', value_name='value'):
+         var_name=None, value_name='value'):
     """
     "Unpivots" a DataFrame from wide format to long format, optionally leaving
     id variables set
@@ -611,8 +611,8 @@ def melt(frame, id_vars=None, value_vars=None,
     frame : DataFrame
     id_vars : tuple, list, or ndarray
     value_vars : tuple, list, or ndarray
-    var_name : scalar
-    value_name : scalar
+    var_name : scalar, if None uses frame.column.name or 'variable'
+    value_name : scalar, default 'value'
 
     Examples
     --------
@@ -634,6 +634,7 @@ def melt(frame, id_vars=None, value_vars=None,
     a         B          1
     b         B          3
     c         B          5
+
     """
     # TODO: what about the existing index?
     if id_vars is not None:
@@ -651,6 +652,9 @@ def melt(frame, id_vars=None, value_vars=None,
     else:
         frame = frame.copy()
 
+    if var_name is None:
+        var_name = frame.columns.name if frame.columns.name is not None else 'variable'
+
     N, K = frame.shape
     K -= len(id_vars)
 
diff --git a/pandas/tests/test_reshape.py b/pandas/tests/test_reshape.py
index 6e5f6bffd..c47b0f052 100644
--- a/pandas/tests/test_reshape.py
+++ b/pandas/tests/test_reshape.py
@@ -93,6 +93,11 @@ def test_melt():
                            columns=['id1', 'id2', var_name, value_name])                  
     tm.assert_frame_equal(result19, expected19)
 
+    df1 = df.copy()
+    df1.columns.name = 'foo'
+    result20 = melt(df1)
+    assert(result20.columns.tolist() == ['foo', 'value'])
+
 def test_convert_dummies():
     df = DataFrame({'A': ['foo', 'bar', 'foo', 'bar',
                           'foo', 'bar', 'foo', 'foo'],
