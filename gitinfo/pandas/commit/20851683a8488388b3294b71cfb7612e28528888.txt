commit 20851683a8488388b3294b71cfb7612e28528888
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Wed Dec 28 09:41:10 2011 -0500

    TST: plm fixes, test suite passes per #108

diff --git a/pandas/stats/plm.py b/pandas/stats/plm.py
index 5f7624718..2c597cc13 100644
--- a/pandas/stats/plm.py
+++ b/pandas/stats/plm.py
@@ -81,7 +81,7 @@ class PanelOLS(OLS):
             x_filtered = x_filtered.drop(self._x_effects, axis=1)
 
         if self._time_effects:
-            x_regressor = x.sub(x.mean(level=1), level=1)
+            x_regressor = x.sub(x.mean(level=0), level=0)
 
             unstacked_y = y.unstack()
             y_regressor = unstacked_y.sub(unstacked_y.mean(1), axis=0).stack()
@@ -781,7 +781,7 @@ def _xx_time_effects(x, y):
     """
     # X'X
     xx = np.dot(x.values.T, x.values)
-    xt = x.sum('minor').values
+    xt = x.sum(level=0).values
 
     count = y.unstack().count(1).values
     selector = count > 0
diff --git a/pandas/stats/tests/test_ols.py b/pandas/stats/tests/test_ols.py
index 6e3cbe247..42c814da5 100644
--- a/pandas/stats/tests/test_ols.py
+++ b/pandas/stats/tests/test_ols.py
@@ -496,26 +496,24 @@ class TestPanelOLS(BaseTest):
         result = ols(y=self.panel_y2, x=self.panel_x2, x_effects=['x1'])
 
         assert_almost_equal(result._y.values.flat, [1, 4, 5])
-        exp_x = [[0, 0, 14, 1], [0, 1, 17, 1], [1, 0, 48, 1]]
-        assert_almost_equal(result._x.values, exp_x)
-
-        exp_index = Index(['x1_30', 'x1_9', 'x2', 'intercept'])
-        self.assertTrue(exp_index.equals(result._x.columns))
 
-        # _check_non_raw_results(result)
+        res = result._x
+        exp_x = DataFrame([[0, 0, 14, 1], [0, 1, 17, 1], [1, 0, 48, 1]],
+                          columns=['x1_30', 'x1_9', 'x2', 'intercept'],
+                          index=res.index, dtype=float)
+        assert_frame_equal(res, exp_x.reindex(columns=res.columns))
 
     def testWithXEffectsAndDroppedDummies(self):
         result = ols(y=self.panel_y2, x=self.panel_x2, x_effects=['x1'],
                      dropped_dummies={'x1' : 30})
 
+        res = result._x
         assert_almost_equal(result._y.values.flat, [1, 4, 5])
-        exp_x = [[1, 0, 14, 1], [0, 1, 17, 1], [0, 0, 48, 1]]
-        assert_almost_equal(result._x.values, exp_x)
-
-        exp_index = Index(['x1_6', 'x1_9', 'x2', 'intercept'])
-        self.assertTrue(exp_index.equals(result._x.columns))
+        exp_x = DataFrame([[1, 0, 14, 1], [0, 1, 17, 1], [0, 0, 48, 1]],
+                          columns=['x1_6', 'x1_9', 'x2', 'intercept'],
+                          index=res.index, dtype=float)
 
-        # _check_non_raw_results(result)
+        assert_frame_equal(res, exp_x.reindex(columns=res.columns))
 
     def testWithXEffectsAndConversion(self):
         result = ols(y=self.panel_y3, x=self.panel_x3, x_effects=['x1', 'x2'])
diff --git a/pandas/tests/test_series.py b/pandas/tests/test_series.py
index d841dda48..d1b0d318a 100644
--- a/pandas/tests/test_series.py
+++ b/pandas/tests/test_series.py
@@ -440,9 +440,9 @@ class TestSeries(unittest.TestCase, CheckNameIntegration):
         assert_series_equal(self.series.ix[5::2], self.series[5::2])
 
         # slice with indices
-        d1, d2 = self.series.index[[5, 15]]
-        result = self.series.ix[d1:d2]
-        expected = self.series.truncate(d1, d2)
+        d1, d2 = self.ts.index[[5, 15]]
+        result = self.ts.ix[d1:d2]
+        expected = self.ts.truncate(d1, d2)
         assert_series_equal(result, expected)
 
         # boolean
@@ -450,8 +450,8 @@ class TestSeries(unittest.TestCase, CheckNameIntegration):
         assert_series_equal(self.series.ix[mask], self.series[mask])
 
         # ask for index value
-        self.assertEquals(self.series.ix[d1], self.series[d1])
-        self.assertEquals(self.series.ix[d2], self.series[d2])
+        self.assertEquals(self.ts.ix[d1], self.ts[d1])
+        self.assertEquals(self.ts.ix[d2], self.ts[d2])
 
     def test_ix_getitem_iterator(self):
         idx = iter(self.series.index[:10])
