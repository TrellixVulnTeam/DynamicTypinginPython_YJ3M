commit 9cbf89576b9491a379f6d54f769d8c97d07d9fc9
Author: Paul Reidy <paul_reidy@outlook.com>
Date:   Sat Oct 14 19:53:05 2017 +0100

    ERR: Raise ValueError when week is passed in to_datetime format withoâ€¦ (#17819)

diff --git a/doc/source/whatsnew/v0.21.0.txt b/doc/source/whatsnew/v0.21.0.txt
index 117e7c9d1..ce15fff81 100644
--- a/doc/source/whatsnew/v0.21.0.txt
+++ b/doc/source/whatsnew/v0.21.0.txt
@@ -784,6 +784,7 @@ Other API Changes
 - :func:`Series.argmin` and :func:`Series.argmax` will now raise a ``TypeError`` when used with ``object`` dtypes, instead of a ``ValueError`` (:issue:`13595`)
 - :class:`Period` is now immutable, and will now raise an ``AttributeError`` when a user tries to assign a new value to the ``ordinal`` or ``freq`` attributes (:issue:`17116`).
 - :func:`to_datetime` when passed a tz-aware ``origin=`` kwarg will now raise a more informative ``ValueError`` rather than a ``TypeError`` (:issue:`16842`)
+- :func:`to_datetime` now raises a ``ValueError`` when format includes ``%W`` or ``%U`` without also including day of the week and calendar year (:issue:`16774`)
 - Renamed non-functional ``index`` to ``index_col`` in :func:`read_stata` to improve API consistency (:issue:`16342`)
 - Bug in :func:`DataFrame.drop` caused boolean labels ``False`` and ``True`` to be treated as labels 0 and 1 respectively when dropping indices from a numeric index. This will now raise a ValueError (:issue:`16877`)
 - Restricted DateOffset keyword arguments.  Previously, ``DateOffset`` subclasses allowed arbitrary keyword arguments which could lead to unexpected behavior.  Now, only valid arguments will be accepted. (:issue:`17176`).
diff --git a/pandas/_libs/tslibs/strptime.pyx b/pandas/_libs/tslibs/strptime.pyx
index 20b24d6be..59a737628 100644
--- a/pandas/_libs/tslibs/strptime.pyx
+++ b/pandas/_libs/tslibs/strptime.pyx
@@ -83,6 +83,16 @@ def array_strptime(ndarray[object] values, object fmt,
 
     assert is_raise or is_ignore or is_coerce
 
+    if fmt is not None:
+        if '%W' in fmt or '%U' in fmt:
+            if '%Y' not in fmt and '%y' not in fmt:
+                raise ValueError("Cannot use '%W' or '%U' without "
+                                 "day and year")
+            if ('%A' not in fmt and '%a' not in fmt and '%w' not
+                    in fmt):
+                raise ValueError("Cannot use '%W' or '%U' without "
+                                 "day and year")
+
     global _TimeRE_cache, _regex_cache
     with _cache_lock:
         if _getlang() != _TimeRE_cache.locale_time.lang:
diff --git a/pandas/tests/indexes/datetimes/test_tools.py b/pandas/tests/indexes/datetimes/test_tools.py
index b8ce1f0af..330ec9f35 100644
--- a/pandas/tests/indexes/datetimes/test_tools.py
+++ b/pandas/tests/indexes/datetimes/test_tools.py
@@ -372,6 +372,20 @@ class TestToDatetime(object):
         with pytest.raises(TypeError):
             pd.to_datetime(pd.to_datetime)
 
+    @pytest.mark.parametrize('date, format',
+                             [('2017-20', '%Y-%W'),
+                              ('20 Sunday', '%W %A'),
+                              ('20 Sun', '%W %a'),
+                              ('2017-21', '%Y-%U'),
+                              ('20 Sunday', '%U %A'),
+                              ('20 Sun', '%U %a')])
+    def test_week_without_day_and_calendar_year(self, date, format):
+        # GH16774
+
+        msg = "Cannot use '%W' or '%U' without day and year"
+        with tm.assert_raises_regex(ValueError, msg):
+            pd.to_datetime(date, format=format)
+
 
 class TestToDatetimeUnit(object):
 
