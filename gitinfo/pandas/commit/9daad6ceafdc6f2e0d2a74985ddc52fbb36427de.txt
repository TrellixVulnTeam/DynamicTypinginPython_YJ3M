commit 9daad6ceafdc6f2e0d2a74985ddc52fbb36427de
Author: Phillip Cloud <cpcloud@gmail.com>
Date:   Mon Feb 24 17:03:34 2014 -0500

    BUG: split should respect maxsplit when no pat is given

diff --git a/pandas/core/strings.py b/pandas/core/strings.py
index c8493317e..3e3d1e2db 100644
--- a/pandas/core/strings.py
+++ b/pandas/core/strings.py
@@ -163,11 +163,11 @@ def str_contains(arr, pat, case=True, flags=0, na=np.nan, regex=True):
     na : default NaN, fill value for missing values.
     regex : bool, default True
         If True use re.search, otherwise use Python in operator
-        
+
     Returns
     -------
     Series of boolean values
-        
+
     See Also
     --------
     match : analagous, but stricter, relying on re.match instead of re.search
@@ -345,7 +345,7 @@ def str_match(arr, pat, case=True, flags=0, na=np.nan, as_indexer=False):
 
     See Also
     --------
-    contains : analagous, but less strict, relying on re.search instead of 
+    contains : analagous, but less strict, relying on re.search instead of
         re.match
     extract : now preferred to the deprecated usage of match (as_indexer=False)
 
@@ -413,7 +413,7 @@ def str_extract(arr, pat, flags=0):
     dtype: object
 
     A pattern with more than one group will return a DataFrame.
-    
+
     >>> Series(['a1', 'b2', 'c3']).str.extract('([ab])(\d)')
          0    1
     0    a    1
@@ -421,7 +421,7 @@ def str_extract(arr, pat, flags=0):
     2  NaN  NaN
 
     A pattern may contain optional groups.
-    
+
     >>> Series(['a1', 'b2', 'c3']).str.extract('([ab])?(\d)')
          0  1
     0    a  1
@@ -429,7 +429,7 @@ def str_extract(arr, pat, flags=0):
     2  NaN  3
 
     Named groups will become column names in the result.
-    
+
     >>> Series(['a1', 'b2', 'c3']).str.extract('(?P<letter>[ab])(?P<digit>\d)')
       letter digit
     0      a     1
@@ -451,14 +451,14 @@ def str_extract(arr, pat, flags=0):
         else:
             return empty_row
     if regex.groups == 1:
-        result = Series([f(val)[0] for val in arr], 
+        result = Series([f(val)[0] for val in arr],
                         name=regex.groupindex.get(1),
                         index=arr.index)
     else:
         names = dict(zip(regex.groupindex.values(), regex.groupindex.keys()))
         columns = [names.get(1 + i, i) for i in range(regex.groups)]
-        result = DataFrame([f(val) for val in arr], 
-                           columns=columns, 
+        result = DataFrame([f(val) for val in arr],
+                           columns=columns,
                            index=arr.index)
     return result
 
@@ -617,7 +617,7 @@ def str_split(arr, pat=None, n=None):
     if pat is None:
         if n is None or n == 0:
             n = -1
-        f = lambda x: x.split()
+        f = lambda x: x.split(pat, n)
     else:
         if len(pat) == 1:
             if n is None or n == 0:
diff --git a/pandas/tests/test_strings.py b/pandas/tests/test_strings.py
index 270e398e0..53cf3d9b5 100644
--- a/pandas/tests/test_strings.py
+++ b/pandas/tests/test_strings.py
@@ -565,7 +565,6 @@ class TestStringMethods(tm.TestCase):
                        tm.makeDateIndex, tm.makePeriodIndex ]:
             check_index(index())
 
-
     def test_get_dummies(self):
         s = Series(['a|b', 'a|c', np.nan])
         result = s.str.get_dummies('|')
@@ -796,6 +795,12 @@ class TestStringMethods(tm.TestCase):
         result = s.str.split('asdf', n=-1)
         tm.assert_series_equal(result, xp)
 
+    def test_split_no_pat_with_nonzero_n(self):
+        s = Series(['split once', 'split once too!'])
+        result = s.str.split(n=1)
+        expected = Series({0: ['split', 'once'], 1: ['split', 'once too!']})
+        tm.assert_series_equal(expected, result)
+
     def test_pipe_failures(self):
         # #2119
         s = Series(['A|B|C'])
@@ -1092,6 +1097,7 @@ class TestStringMethods(tm.TestCase):
 
         tm.assert_series_equal(result, exp)
 
+
 if __name__ == '__main__':
     nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
                    exit=False)
