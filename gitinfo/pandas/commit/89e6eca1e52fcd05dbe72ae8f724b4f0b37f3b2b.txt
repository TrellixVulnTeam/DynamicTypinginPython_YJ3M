commit 89e6eca1e52fcd05dbe72ae8f724b4f0b37f3b2b
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Mon Jun 11 13:17:06 2012 -0400

    BUG: ensure arithmetic ops between equal, but different time zone DatetimeIndex always yield UTC, close #1422

diff --git a/pandas/core/series.py b/pandas/core/series.py
index 9be6ae9df..b804f8f05 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -72,12 +72,22 @@ def _arith_method(op, name):
                 return Series(na_op(self.values, other.values),
                               index=self.index, name=name)
 
-            this_reindexed, other_reindexed = self.align(other, join='outer',
-                                                         copy=False)
-            arr = na_op(this_reindexed.values, other_reindexed.values)
+            join_idx, lidx, ridx = self.index.join(other.index, how='outer',
+                                                   return_indexers=True)
+
+            lvalues = self.values
+            rvalues = other.values
+
+            if lidx is not None:
+                lvalues = com.take_1d(lvalues, lidx)
+
+            if ridx is not None:
+                rvalues = com.take_1d(rvalues, ridx)
+
+            arr = na_op(lvalues, rvalues)
 
             name = _maybe_match_name(self, other)
-            return Series(arr, index=this_reindexed.index, name=name)
+            return Series(arr, index=join_idx, name=name)
         elif isinstance(other, DataFrame):
             return NotImplemented
         else:
@@ -2045,9 +2055,10 @@ copy : boolean, default False
             new_values = com.take_1d(self.values, indexer)
         else:
             if copy:
-                return self.copy()
+                result = self.copy()
             else:
-                return self
+                result = self
+            return result
 
         # be subclass-friendly
         return self._constructor(new_values, new_index, name=self.name)
diff --git a/pandas/tseries/tests/test_timezones.py b/pandas/tseries/tests/test_timezones.py
index f5e1a3446..d68284f3e 100644
--- a/pandas/tseries/tests/test_timezones.py
+++ b/pandas/tseries/tests/test_timezones.py
@@ -410,6 +410,26 @@ class TestTimeZones(unittest.TestCase):
         self.assertRaises(Exception, ts.__add__, ts_utc)
         self.assertRaises(Exception, ts_utc.__add__, ts)
 
+    def test_equal_join_ensure_utc(self):
+        rng = date_range('1/1/2011', periods=10, freq='H', tz='US/Eastern')
+        ts = Series(np.random.randn(len(rng)), index=rng)
+
+        ts_moscow = ts.tz_convert('Europe/Moscow')
+
+        result = ts + ts_moscow
+        self.assert_(result.index.tz is pytz.utc)
+
+        result = ts_moscow + ts
+        self.assert_(result.index.tz is pytz.utc)
+
+        df = DataFrame({'a': ts})
+        df_moscow = df.tz_convert('Europe/Moscow')
+        result = df + df_moscow
+        self.assert_(result.index.tz is pytz.utc)
+
+        result = df_moscow + df
+        self.assert_(result.index.tz is pytz.utc)
+
     def test_arith_utc_convert(self):
         rng = date_range('1/1/2011', periods=100, freq='H', tz='utc')
 
