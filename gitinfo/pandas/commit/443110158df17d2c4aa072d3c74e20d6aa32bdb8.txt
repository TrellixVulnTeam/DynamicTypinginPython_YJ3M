commit 443110158df17d2c4aa072d3c74e20d6aa32bdb8
Author: jreback <jeff@reback.net>
Date:   Thu Oct 31 08:00:04 2013 -0400

    BUG/TST: fix downcasting of float-like object array

diff --git a/pandas/core/common.py b/pandas/core/common.py
index d05c3dbaf..e89ae44da 100644
--- a/pandas/core/common.py
+++ b/pandas/core/common.py
@@ -1038,7 +1038,8 @@ def _possibly_downcast_to_dtype(result, dtype):
             # try to upcast here
             elif inferred_type == 'floating':
                 dtype = 'int64'
-                trans = lambda x: x.round()
+                if issubclass(result.dtype.type, np.number):
+                    trans = lambda x: x.round()
 
             else:
                 dtype = 'object'
diff --git a/pandas/tests/test_common.py b/pandas/tests/test_common.py
index 3fd40062e..dfedfd629 100644
--- a/pandas/tests/test_common.py
+++ b/pandas/tests/test_common.py
@@ -135,6 +135,20 @@ def test_downcast_conv():
     expected = np.array([8, 8, 8, 8, 9])
     assert (np.array_equal(result, expected))
 
+    # conversions
+
+    expected = np.array([1,2])
+    for dtype in [np.float64,object,np.int64]:
+        arr = np.array([1.0,2.0],dtype=dtype)
+        result = com._possibly_downcast_to_dtype(arr,'infer')
+        tm.assert_almost_equal(result, expected)
+
+    expected = np.array([1.0,2.0,np.nan])
+    for dtype in [np.float64,object]:
+        arr = np.array([1.0,2.0,np.nan],dtype=dtype)
+        result = com._possibly_downcast_to_dtype(arr,'infer')
+        tm.assert_almost_equal(result, expected)
+
 def test_datetimeindex_from_empty_datetime64_array():
     for unit in [ 'ms', 'us', 'ns' ]:
         idx = DatetimeIndex(np.array([], dtype='datetime64[%s]' % unit))
