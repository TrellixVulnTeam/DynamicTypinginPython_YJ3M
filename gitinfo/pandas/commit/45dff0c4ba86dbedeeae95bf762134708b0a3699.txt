commit 45dff0c4ba86dbedeeae95bf762134708b0a3699
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Mon Nov 28 19:10:26 2011 -0500

    BUG: DataFrame.count behavior in corner case as described in GH #423

diff --git a/RELEASE.rst b/RELEASE.rst
index 3d214423e..d1c7675b2 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -22,6 +22,16 @@ Where to get it
 * Binary installers on PyPI: http://pypi.python.org/pypi/pandas
 * Documentation: http://pandas.sourceforge.net
 
+pandas 0.6.1
+============
+
+**Release date:** Not yet released
+
+**Bug fixes**
+
+  - `DataFrame.count` should return Series with zero instead of NA with length-0
+    axis (GH #423)
+
 pandas 0.6.0
 ============
 
diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 5ddaf9239..e36bf59e9 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -2702,7 +2702,11 @@ class DataFrame(NDFrame):
         else:
             frame = self
 
-        result = DataFrame.apply(frame, Series.count, axis=axis)
+        # GH #423
+        if len(frame._get_axis(axis)) == 0:
+            result = Series(0, index=frame._get_agg_axis(axis))
+        else:
+            result = DataFrame.apply(frame, Series.count, axis=axis)
 
         # what happens with empty DataFrame
         if isinstance(result, DataFrame):
diff --git a/pandas/io/data.py b/pandas/io/data.py
index 707d80af9..75c84b272 100644
--- a/pandas/io/data.py
+++ b/pandas/io/data.py
@@ -115,7 +115,7 @@ def get_data_fred(name=None, start=dt.datetime(2010, 1, 1),
     data = read_csv(urllib.urlopen(url), index_col=0, parse_dates=True)
     return data.truncate(start, end)
 
-def get_data_famafrench(name):
+def get_data_famafrench(name, start=None, end=None):
     start, end = _sanitize_dates(start, end)
 
     # path of zip files
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index 79d757ff0..c02cc5d3f 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -3085,7 +3085,8 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
 
     def test_count(self):
         f = lambda s: notnull(s).sum()
-        self._check_stat_op('count', f, has_skipna=False,
+        self._check_stat_op('count', f,
+                            has_skipna=False,
                             has_numeric_only=True)
 
         # corner case
@@ -3096,6 +3097,17 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
         ct2 = frame.count(0)
         self.assert_(isinstance(ct2, Series))
 
+        # GH #423
+        df = DataFrame(index=range(10))
+        result = df.count(1)
+        expected = Series(0, index=df.index)
+        assert_series_equal(result, expected)
+
+        df = DataFrame(columns=range(10))
+        result = df.count(0)
+        expected = Series(0, index=df.columns)
+        assert_series_equal(result, expected)
+
     def test_sum(self):
         self._check_stat_op('sum', np.sum, has_numeric_only=True)
 
diff --git a/setup.py b/setup.py
index 315168ff5..05ab8b5e6 100755
--- a/setup.py
+++ b/setup.py
@@ -129,8 +129,8 @@ CLASSIFIERS = [
 
 MAJOR = 0
 MINOR = 6
-MICRO = 0
-ISRELEASED = True
+MICRO = 1
+ISRELEASED = False
 VERSION = '%d.%d.%d' % (MAJOR, MINOR, MICRO)
 QUALIFIER = ''
 
