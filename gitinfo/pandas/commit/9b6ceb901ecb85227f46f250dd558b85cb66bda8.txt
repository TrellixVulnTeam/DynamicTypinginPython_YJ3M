commit 9b6ceb901ecb85227f46f250dd558b85cb66bda8
Author: Chang She <chang@lambdafoundry.com>
Date:   Sun Jun 3 12:07:12 2012 -0400

    DOC: links for some of whatsnew features

diff --git a/doc/source/computation.rst b/doc/source/computation.rst
index f058eab89..c2dc73db6 100644
--- a/doc/source/computation.rst
+++ b/doc/source/computation.rst
@@ -19,6 +19,26 @@ Computational tools
 Statistical functions
 ---------------------
 
+.. _computation.pct_change:
+Percent Change
+~~~~~~~~~~~~~~
+
+Both ``Series`` and ``DataFrame`` has a method ``pct_change`` to compute the
+percent change over a given number of periods (using ``fill_method`` to fill
+NA/null values).
+
+.. ipython:: python
+
+   ser = Series(randn(8))
+
+   ser.pct_change()
+
+.. ipython:: python
+
+   df = DataFrame(randn(10, 4))
+
+   df.pct_change(periods=3)
+
 .. _computation.covariance:
 
 Covariance
diff --git a/doc/source/io.rst b/doc/source/io.rst
index 9dc5547ab..e96f52dfb 100644
--- a/doc/source/io.rst
+++ b/doc/source/io.rst
@@ -158,6 +158,8 @@ You can also use a list of columns to create a hierarchical index:
 
    read_csv('foo.csv', index_col=[0, 'A'])
 
+.. _io.dialect:
+
 The ``dialect`` keyword gives greater flexibility in specifying the file format.
 By default it uses the Excel dialect but you can specify either the dialect name
 or a `csv.Dialect <docs.python.org/library/csv.html#csv.Dialect>`_ instance.
@@ -294,7 +296,7 @@ a single date rather than the entire array.
 
    os.remove('tmp.csv')
 
-.. _io.convenience:
+.. _io.thousands:
 
 Thousand Separators
 ~~~~~~~~~~~~~~~~~~~
@@ -338,6 +340,8 @@ The ``thousands`` keyword allows integers to be parsed correctly
 
    os.remove('tmp.csv')
 
+.. _io.comments:
+
 Comments
 ~~~~~~~~
 Sometimes comments or meta data may be included in a file:
diff --git a/doc/source/missing_data.rst b/doc/source/missing_data.rst
index 293832e23..b6c855d13 100644
--- a/doc/source/missing_data.rst
+++ b/doc/source/missing_data.rst
@@ -155,6 +155,23 @@ can propagate non-null values forward or backward:
    df
    df.fillna(method='pad')
 
+.. _missing_data.fillna.limit:
+
+**Limit the amount of filling**
+
+If we only want consecutive gaps filled up to a certain number of data points,
+we can use the `limit` keyword:
+
+.. ipython:: python
+   :suppress:
+
+   df.ix[2:4, :] = np.nan
+
+.. ipython:: python
+
+   df
+   df.fillna(method='pad', limit=1)
+
 To remind you, these are the available filling methods:
 
 .. csv-table::
diff --git a/doc/source/visualization.rst b/doc/source/visualization.rst
index fefacdc0a..840d3dc35 100644
--- a/doc/source/visualization.rst
+++ b/doc/source/visualization.rst
@@ -244,8 +244,17 @@ Scatter plot matrix
    @savefig scatter_matrix_kde.png width=6in
    scatter_matrix(df, alpha=0.2, figsize=(8, 8), diagonal='kde')
 
-   @savefig scatter_matrix_hist.png width=6in
-   scatter_matrix(df, alpha=0.2, figsize=(8, 8), diagonal='hist')
+.. _visualization.kde:
+
+*New in 0.8.0* You can create density plots using the Series/DataFrame.plot and
+setting `kind='kde'`:
+
+.. ipython:: python
+
+   ser = Series(np.random.randn(1000))
+
+   @savefig kde_plot.png width=6in
+   ser.plot(kind='kde')
 
 .. _visualization.andrews_curves:
 
diff --git a/doc/source/whatsnew/v0.8.0.txt b/doc/source/whatsnew/v0.8.0.txt
index cf5a9953a..c1dd2f7ab 100644
--- a/doc/source/whatsnew/v0.8.0.txt
+++ b/doc/source/whatsnew/v0.8.0.txt
@@ -103,15 +103,19 @@ Other new features
 
 - New ``cut`` function (like R's cut function) for computing a categorical
   variable from a continuous variable by binning values
-- Add limit argument to fillna/reindex
+- Add :ref:`limit <missing_data.fillna.limit>` argument to fillna/reindex
 - More flexible multiple function application in GroupBy, and can pass list
   (name, function) tuples to get result in particular order with given names
 - Add flexible ``replace`` method for efficiently substituting values
-- Enhanced read_csv/read_table for reading time series data and converting
-  multiple columns to dates
-- Add comments option to parser functions: read_csv, etc.
+- Enhanced :ref:`read_csv/read_table <io.parse_dates>` for reading time series
+  data and converting multiple columns to dates
+- Add :ref:`comments <io.comments>` option to parser functions: read_csv, etc.
 - Add ``dayfirst`` option to parser functions for parsing international
   DD/MM/YYYY dates
+- Allow the user to specify the CSV reader :ref:`dialect <io.dialect>` to
+  control quoting etc.
+- Handling :ref:`thousands <io.thousands>` separators in read_csv to improve
+  integer parsing.
 - Enable unstacking of multiple levels in one shot. Alleviate ``pivot_table``
   bugs (empty columns being introduced)
 - Move to klib-based hash tables for indexing; better performance and less
@@ -120,12 +124,12 @@ Other new features
 - New ordered_merge function
 - Add flexible comparison instance methods eq, ne, lt, gt, etc. to DataFrame,
   Series
-- Improve scatter_matrix plotting function and add histogram or kernel density
-  estimates to diagonal
-- Add ``'kde'`` plot option for density plots
+- Improve :ref:`scatter_matrix <visualization.scatter_matrix>` plotting
+  function and add histogram or kernel density estimates to diagonal
+- Add :ref:`'kde' <visualization.kde>` plot option for density plots
 - Support for converting DataFrame to R data.frame through rpy2
 - Improved support for complex numbers in Series and DataFrame
-- Add ``pct_change`` method to all data structures
+- Add :ref:`pct_change <computation.pct_change>` method to all data structures
 - Add max_colwidth configuration option for DataFrame console output
 - Interpolate Series values using index values
 - Can select multiple columns from GroupBy
