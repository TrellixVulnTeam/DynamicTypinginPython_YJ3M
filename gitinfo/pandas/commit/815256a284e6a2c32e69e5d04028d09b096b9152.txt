commit 815256a284e6a2c32e69e5d04028d09b096b9152
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Mon Sep 17 14:03:34 2012 -0400

    BUG: raise TypeError when appending to HDFStore table with different index_kind, close #1881

diff --git a/RELEASE.rst b/RELEASE.rst
index c5551c7fe..e8f019698 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -167,6 +167,7 @@ pandas 0.9.0
     view(...) calls inside the NumPy infrastructure
   - Support datetime.date again in DateOffset.rollback/rollforward
   - Raise Exception if set passed to Series constructor (#1913)
+  - Add TypeError when appending HDFStore table w/ wrong index type (#1881)
 
 pandas 0.8.1
 ============
diff --git a/pandas/io/pytables.py b/pandas/io/pytables.py
index 266d06d4e..e1dc008ae 100644
--- a/pandas/io/pytables.py
+++ b/pandas/io/pytables.py
@@ -769,6 +769,13 @@ class HDFStore(object):
             # the table must already exist
             table = getattr(group, 'table', None)
 
+        # check for backwards incompatibility
+        if append:
+            existing_kind = table._v_attrs.index_kind
+            if existing_kind != index_kind:
+                raise TypeError("incompatible kind in index [%s - %s]" %
+                                (existing_kind, index_kind))
+
         # add kinds
         table._v_attrs.index_kind = index_kind
         table._v_attrs.columns_kind = cols_kind
diff --git a/pandas/io/tests/test_pytables.py b/pandas/io/tests/test_pytables.py
index ae4958a61..57c57bfca 100644
--- a/pandas/io/tests/test_pytables.py
+++ b/pandas/io/tests/test_pytables.py
@@ -155,6 +155,15 @@ class TestHDFStore(unittest.TestCase):
         self.assertRaises(Exception, self.store.put, 'panel', wp2,
                           append=True)
 
+    def test_append_incompatible_dtypes(self):
+        df1 = DataFrame({'a': [1, 2, 3]})
+        df2 = DataFrame({'a': [4, 5, 6]},
+                        index=date_range('1/1/2000', periods=3))
+
+        self.store.put('frame', df1, table=True)
+        self.assertRaises(Exception, self.store.put, 'frame', df2,
+                          table=True, append=True)
+
     def test_remove(self):
         ts = tm.makeTimeSeries()
         df = tm.makeDataFrame()
