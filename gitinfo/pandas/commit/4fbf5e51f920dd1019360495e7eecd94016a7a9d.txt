commit 4fbf5e51f920dd1019360495e7eecd94016a7a9d
Author: srib <srib@users.noreply.github.com>
Date:   Sun Dec 6 21:32:41 2015 -0600

    BUG: Fix for Period.end_time when multiple of a frequency is requested, #11738
    
    1. Added a new test with the multiple of a frequency.
    2. Rearranged some tests to improve readability of the code.
    3. Added bug fix to whatsnew
    4. Added a comment in the test

diff --git a/doc/source/whatsnew/v0.18.0.txt b/doc/source/whatsnew/v0.18.0.txt
index 5d26896ba..508fcf4a8 100644
--- a/doc/source/whatsnew/v0.18.0.txt
+++ b/doc/source/whatsnew/v0.18.0.txt
@@ -153,7 +153,7 @@ Bug Fixes
 ~~~~~~~~~
 
 - Bug in ``GroupBy.size`` when data-frame is empty. (:issue:`11699`)
-
+- Bug in ``Period.end_time`` when a multiple of time period is requested (:issue:`11738`)
 
 
 
diff --git a/pandas/src/period.pyx b/pandas/src/period.pyx
index 43adbbb66..b325ccbb5 100644
--- a/pandas/src/period.pyx
+++ b/pandas/src/period.pyx
@@ -889,7 +889,8 @@ cdef class Period(object):
             ordinal = self.ordinal
         else:
             # freq.n can't be negative or 0
-            ordinal = (self + self.freq.n).start_time.value - 1
+            # ordinal = (self + self.freq.n).start_time.value - 1
+            ordinal = (self + 1).start_time.value - 1
         return Timestamp(ordinal)
 
     def to_timestamp(self, freq=None, how='start', tz=None):
diff --git a/pandas/tseries/tests/test_period.py b/pandas/tseries/tests/test_period.py
index c6fb54cee..68bdacd0c 100644
--- a/pandas/tseries/tests/test_period.py
+++ b/pandas/tseries/tests/test_period.py
@@ -566,19 +566,26 @@ class TestPeriodProperties(tm.TestCase):
         xp = _ex(2012, 2, 1)
         self.assertEqual(xp, p.end_time)
 
-        xp = _ex(2012, 1, 2)
         p = Period('2012', freq='D')
-        self.assertEqual(p.end_time, xp)
+        xp = _ex(2012, 1, 2)
+        self.assertEqual(xp, p.end_time)
 
-        xp = _ex(2012, 1, 1, 1)
         p = Period('2012', freq='H')
-        self.assertEqual(p.end_time, xp)
+        xp = _ex(2012, 1, 1, 1)
+        self.assertEqual(xp, p.end_time)
 
+        p = Period('2012', freq='B')
         xp = _ex(2012, 1, 3)
-        self.assertEqual(Period('2012', freq='B').end_time, xp)
+        self.assertEqual(xp, p.end_time)
 
+        p = Period('2012', freq='W')
         xp = _ex(2012, 1, 2)
-        self.assertEqual(Period('2012', freq='W').end_time, xp)
+        self.assertEqual(xp, p.end_time)
+
+        # Test for GH 11738
+        p = Period('2012', freq='15D')
+        xp = _ex(2012, 1, 16)
+        self.assertEqual(xp, p.end_time)
 
         p = Period('NaT', freq='W')
         self.assertTrue(p.end_time is tslib.NaT)
