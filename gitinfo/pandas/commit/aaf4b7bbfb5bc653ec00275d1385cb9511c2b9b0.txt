commit aaf4b7bbfb5bc653ec00275d1385cb9511c2b9b0
Author: Simon Hawkins <simonjayhawkins@gmail.com>
Date:   Sat Jun 13 19:25:53 2020 +0100

    TYP: check_untyped_defs pandas.core.resample (#34692)

diff --git a/pandas/core/indexes/period.py b/pandas/core/indexes/period.py
index 49cb78340..fc29f786a 100644
--- a/pandas/core/indexes/period.py
+++ b/pandas/core/indexes/period.py
@@ -64,8 +64,7 @@ def _new_PeriodIndex(cls, **d):
 
 
 @inherit_names(
-    ["strftime", "to_timestamp", "asfreq", "start_time", "end_time"]
-    + PeriodArray._field_ops,
+    ["strftime", "to_timestamp", "start_time", "end_time"] + PeriodArray._field_ops,
     PeriodArray,
     wrap=True,
 )
@@ -152,6 +151,14 @@ class PeriodIndex(DatetimeIndexOpsMixin, Int64Index):
     _engine_type = libindex.PeriodEngine
     _supports_partial_string_indexing = True
 
+    # --------------------------------------------------------------------
+    # methods that dispatch to array and wrap result in PeriodIndex
+
+    @doc(PeriodArray.asfreq)
+    def asfreq(self, freq=None, how: str = "E") -> "PeriodIndex":
+        arr = self._data.asfreq(freq, how)
+        return type(self)._simple_new(arr, name=self.name)
+
     # ------------------------------------------------------------------------
     # Index Constructors
 
diff --git a/pandas/core/resample.py b/pandas/core/resample.py
index 32e947dc4..5e363f281 100644
--- a/pandas/core/resample.py
+++ b/pandas/core/resample.py
@@ -966,7 +966,8 @@ class _GroupByMixin(GroupByMixin):
         for attr in self._attributes:
             setattr(self, attr, kwargs.get(attr, getattr(parent, attr)))
 
-        super().__init__(None)
+        # error: Too many arguments for "__init__" of "object"
+        super().__init__(None)  # type: ignore
         self._groupby = groupby
         self._groupby.mutated = True
         self._groupby.grouper.mutated = True
@@ -1553,7 +1554,7 @@ class TimeGrouper(Grouper):
 
         return binner, bins, labels
 
-    def _get_time_period_bins(self, ax):
+    def _get_time_period_bins(self, ax: DatetimeIndex):
         if not isinstance(ax, DatetimeIndex):
             raise TypeError(
                 "axis must be a DatetimeIndex, but got "
@@ -1569,13 +1570,13 @@ class TimeGrouper(Grouper):
         labels = binner = period_range(start=ax[0], end=ax[-1], freq=freq, name=ax.name)
 
         end_stamps = (labels + freq).asfreq(freq, "s").to_timestamp()
-        if ax.tzinfo:
-            end_stamps = end_stamps.tz_localize(ax.tzinfo)
+        if ax.tz:
+            end_stamps = end_stamps.tz_localize(ax.tz)
         bins = ax.searchsorted(end_stamps, side="left")
 
         return binner, bins, labels
 
-    def _get_period_bins(self, ax):
+    def _get_period_bins(self, ax: PeriodIndex):
         if not isinstance(ax, PeriodIndex):
             raise TypeError(
                 "axis must be a PeriodIndex, but got "
@@ -1898,6 +1899,7 @@ def _asfreq_compat(index, freq):
         raise ValueError(
             "Can only set arbitrary freq for empty DatetimeIndex or TimedeltaIndex"
         )
+    new_index: Index
     if isinstance(index, PeriodIndex):
         new_index = index.asfreq(freq=freq)
     else:
diff --git a/setup.cfg b/setup.cfg
index e31d6001e..65749941c 100644
--- a/setup.cfg
+++ b/setup.cfg
@@ -214,9 +214,6 @@ check_untyped_defs=False
 [mypy-pandas.core.ops.docstrings]
 check_untyped_defs=False
 
-[mypy-pandas.core.resample]
-check_untyped_defs=False
-
 [mypy-pandas.core.reshape.merge]
 check_untyped_defs=False
 
