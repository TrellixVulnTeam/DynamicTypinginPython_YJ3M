commit 56fac890ed44608ba2b122a94942d9c8c04a236f
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Wed Oct 31 17:02:18 2012 -0400

    ENH: enable DataFrame.dot to accept ndarrays. close #2042

diff --git a/RELEASE.rst b/RELEASE.rst
index a97aa8100..8c25834d1 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -33,6 +33,7 @@ pandas 0.9.1
     offset periods
   - Improve HTML display of DataFrame objects with hierarchical columns
   - Enable referencing of Excel columns by their column names (#1936)
+  - DataFrame.dot can accept ndarrays (#2042)
 
 **Bug fixes**
 
diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 06a290b6e..7dff897fa 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -729,19 +729,34 @@ class DataFrame(NDFrame):
         -------
         dot_product : DataFrame or Series
         """
-        common = self.columns.union(other.index)
-        if len(common) > len(self.columns) or len(common) > len(other.index):
-            raise ValueError('matrices are not aligned')
-        left = self.reindex(columns=common, copy=False)
-        right = other.reindex(index=common, copy=False)
-        lvals = left.values
-        rvals = right.values
+        if isinstance(other, (Series, DataFrame)):
+            common = self.columns.union(other.index)
+            if len(common) > len(self.columns) or len(common) > len(other.index):
+                raise ValueError('matrices are not aligned')
+            left = self.reindex(columns=common, copy=False)
+            right = other.reindex(index=common, copy=False)
+            lvals = left.values
+            rvals = right.values
+        else:
+            left = self
+            lvals = self.values
+            rvals = np.asarray(other)
+            if lvals.shape[1] != rvals.shape[0]:
+                raise Exception('Dot product shape mismatch, %s vs %s' %
+                                (lvals.shape, rvals.shape))
+
         if isinstance(other, DataFrame):
             return DataFrame(np.dot(lvals, rvals),
-                             index=self.index,
+                             index=left.index,
                              columns=other.columns)
         elif isinstance(other, Series):
             return Series(np.dot(lvals, rvals), index=left.index)
+        elif isinstance(rvals, np.ndarray):
+            result = np.dot(lvals, rvals)
+            if result.ndim == 2:
+                return DataFrame(result, index=left.index)
+            else:
+                return Series(result, index=left.index)
         else:
             raise TypeError('unsupported type: %s' % type(other))
 
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index 45ec1fa42..a3a3d1022 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -6961,6 +6961,23 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
         result = a.dot(b1['one'])
         assert_series_equal(result, expected['one'])
 
+        # can pass correct-length arrays
+        row = a.ix[0].values
+
+        result = a.dot(row)
+        exp = a.dot(a.ix[0])
+        assert_series_equal(result, exp)
+
+        self.assertRaises(Exception, a.dot, row[:-1])
+
+        a = np.random.rand(1,5)
+        b = np.random.rand(5,1)
+        A = DataFrame(a)
+        B = DataFrame(b)
+
+        # it works
+        result = A.dot(b)
+
     def test_idxmin(self):
         frame = self.frame
         frame.ix[5:10] = np.nan
