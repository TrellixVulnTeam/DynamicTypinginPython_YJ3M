commit 1126cba42bac42f818f2e5165a8ca4a5720b8d51
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Fri Sep 21 17:21:17 2012 -0400

    BUG: fix segfault in SeriesGrouper with non-contiguous index

diff --git a/pandas/src/reduce.pyx b/pandas/src/reduce.pyx
index 115eec1f0..752aef2a3 100644
--- a/pandas/src/reduce.pyx
+++ b/pandas/src/reduce.pyx
@@ -334,7 +334,7 @@ cdef class Slider:
     '''
     cdef:
         ndarray values, buf
-        Py_ssize_t stride, orig_len
+        Py_ssize_t stride, orig_len, orig_stride
         char *orig_data
 
     def __init__(self, object values, object buf):
@@ -345,12 +345,14 @@ cdef class Slider:
         assert(values.dtype == buf.dtype)
         self.values = values
         self.buf = buf
-        self.stride = values.dtype.itemsize
+        self.stride = values.strides[0]
 
         self.orig_data = self.buf.data
         self.orig_len = self.buf.shape[0]
+        self.orig_stride = self.buf.strides[0]
 
         self.buf.data = self.values.data
+        self.buf.strides[0] = self.stride
 
     cpdef advance(self, Py_ssize_t k):
         self.buf.data = <char*> self.buf.data + self.stride * k
@@ -361,6 +363,7 @@ cdef class Slider:
     cpdef cleanup(self):
         self.buf.shape[0] = self.orig_len
         self.buf.data = self.orig_data
+        self.buf.strides[0] = self.orig_stride
 
 def reduce(arr, f, axis=0, dummy=None, labels=None):
     if labels._has_complex_internals:
diff --git a/pandas/tests/test_groupby.py b/pandas/tests/test_groupby.py
index bf46ed4d2..215daf38d 100644
--- a/pandas/tests/test_groupby.py
+++ b/pandas/tests/test_groupby.py
@@ -1503,6 +1503,19 @@ class TestGroupBy(unittest.TestCase):
         result = obj.groupby(inds).agg(Series.median)
         self.assert_(result.isnull().all())
 
+    def test_series_grouper_noncontig_index(self):
+        index = Index([tm.rands(10) for _ in xrange(100)])
+
+        values = Series(np.random.randn(50), index=index[::2])
+        labels = np.random.randint(0, 5, 50)
+
+        # it works!
+        grouped = values.groupby(labels)
+
+        # accessing the index elements causes segfault
+        f = lambda x: len(set(map(id, x.index)))
+        grouped.agg(f)
+
     def test_convert_objects_leave_decimal_alone(self):
         from decimal import Decimal
 
@@ -2061,6 +2074,9 @@ class TestGroupBy(unittest.TestCase):
         exp = data.groupby(labels).mean().reindex(cats.levels)
         assert_series_equal(result, exp)
 
+
+
+
 def _check_groupby(df, result, keys, field, f=lambda x: x.sum()):
     tups = map(tuple, df[keys].values)
     tups = com._asarray_tuplesafe(tups)
