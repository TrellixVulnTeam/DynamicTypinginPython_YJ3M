commit c18d2b8e411cfdf10c6d52daf708c12eba49505a
Author: Thomas Kluyver <takowl@gmail.com>
Date:   Thu Oct 6 18:55:56 2011 +0100

    Sort out division for in sparse code.

diff --git a/pandas/src/sparse.pyx b/pandas/src/sparse.pyx
index 1a4415292..96ad5d5f1 100644
--- a/pandas/src/sparse.pyx
+++ b/pandas/src/sparse.pyx
@@ -31,6 +31,15 @@ cdef inline float64_t __div(float64_t a, float64_t b):
     else:
         return a / b
 
+cdef inline float64_t __floordiv(float64_t a, float64_t b):
+    if b == 0:
+        if a >= 0:
+            return INF
+        else:
+            return -INF
+    else:
+        return a // b
+
 cdef inline float64_t __mul(float64_t a, float64_t b):
     return a * b
 cdef inline float64_t __eq(float64_t a, float64_t b):
@@ -725,6 +734,12 @@ cpdef sparse_nandiv(ndarray x, SparseIndex xindex,
                     ndarray y, SparseIndex yindex):
     return sparse_nancombine(x, xindex, y, yindex, __div)
 
+sparse_nantruediv = sparse_nandiv
+
+cpdef sparse_nanfloordiv(ndarray x, SparseIndex xindex,
+                    ndarray y, SparseIndex yindex):
+    return sparse_nancombine(x, xindex, y, yindex, __floordiv)
+
 cpdef sparse_nanpow(ndarray x, SparseIndex xindex,
                     ndarray y, SparseIndex yindex):
     return sparse_nancombine(x, xindex, y, yindex, __pow)
@@ -758,6 +773,12 @@ cpdef sparse_div(ndarray x, SparseIndex xindex, float64_t xfill,
                  ndarray y, SparseIndex yindex, float64_t yfill):
     return sparse_combine(x, xindex, xfill,
                              y, yindex, yfill, __div)
+sparse_truediv = sparse_div
+
+cpdef sparse_floordiv(ndarray x, SparseIndex xindex, float64_t xfill,
+                 ndarray y, SparseIndex yindex, float64_t yfill):
+    return sparse_combine(x, xindex, xfill,
+                             y, yindex, yfill, __floordiv)
 
 cpdef sparse_pow(ndarray x, SparseIndex xindex, float64_t xfill,
                  ndarray y, SparseIndex yindex, float64_t yfill):
diff --git a/pandas/tests/test_libsparse.py b/pandas/tests/test_libsparse.py
index 5782b1ad2..2ff417537 100644
--- a/pandas/tests/test_libsparse.py
+++ b/pandas/tests/test_libsparse.py
@@ -333,7 +333,7 @@ class TestSparseOperators(TestCase):
 
 # too cute? oh but how I abhor code duplication
 
-check_ops = ['add', 'sub', 'mul', 'div']
+check_ops = ['add', 'sub', 'mul', 'truediv', 'floordiv']
 def make_nanoptestf(op):
     def f(self):
         sparse_op = getattr(splib, 'sparse_nan%s' % op)
diff --git a/pandas/tests/test_sparse.py b/pandas/tests/test_sparse.py
index cc742a7e7..3ac04eb4d 100644
--- a/pandas/tests/test_sparse.py
+++ b/pandas/tests/test_sparse.py
@@ -361,12 +361,14 @@ class TestSparseSeries(TestCase,
         def check(a, b):
             _check_op(a, b, operator.add)
             _check_op(a, b, operator.sub)
-            _check_op(a, b, operator.div)
+            _check_op(a, b, operator.truediv)
+            _check_op(a, b, operator.floordiv)
             _check_op(a, b, operator.mul)
 
             _check_op(a, b, lambda x, y: operator.add(y, x))
             _check_op(a, b, lambda x, y: operator.sub(y, x))
-            _check_op(a, b, lambda x, y: operator.div(y, x))
+            _check_op(a, b, lambda x, y: operator.truediv(y, x))
+            _check_op(a, b, lambda x, y: operator.floordiv(y, x))
             _check_op(a, b, lambda x, y: operator.mul(y, x))
 
             # NaN ** 0 = 1 in C?
@@ -761,7 +763,7 @@ class TestSparseDataFrame(TestCase, test_frame.SafeForSparse):
                 assert_sp_frame_equal(mixed_result, sparse_result,
                                       exact_indices=False)
 
-        opnames = ['add', 'sub', 'mul', 'div']
+        opnames = ['add', 'sub', 'mul', 'truediv', 'floordiv']
         ops = [getattr(operator, name) for name in opnames]
 
         fidx = frame.index
