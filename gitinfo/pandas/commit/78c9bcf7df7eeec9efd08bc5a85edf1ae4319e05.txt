commit 78c9bcf7df7eeec9efd08bc5a85edf1ae4319e05
Author: jreback <jeff@reback.net>
Date:   Tue Mar 12 10:26:54 2013 -0400

    BUG: Bug in DataFrame update where non-specified values could cause dtype changes (GH3016_)

diff --git a/RELEASE.rst b/RELEASE.rst
index 970b89c99..84934bf3d 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -143,6 +143,7 @@ pandas 0.11.0
   - Bug in ``icol`` with negative indicies was incorrect producing incorrect return values (see GH2922_)
   - Bug in DataFrame column insertion when the column creation fails, existing frame is left in
     an irrecoverable state (GH3010_)
+  - Bug in DataFrame update where non-specified values could cause dtype changes (GH3016_)
 
 .. _GH622: https://github.com/pydata/pandas/issues/622
 .. _GH797: https://github.com/pydata/pandas/issues/797
diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 7ae2cc6d5..13a2bb5a1 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -3843,8 +3843,13 @@ class DataFrame(NDFrame):
 
                 if overwrite:
                     mask = isnull(that)
+
+                    # don't overwrite columns unecessarily
+                    if mask.all():
+                        continue
                 else:
                     mask = notnull(this)
+
             self[col] = np.where(mask, this, that)
 
     #----------------------------------------------------------------------
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index 85f66148e..85f506419 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -7265,6 +7265,19 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
                               [1.5, nan, 7.]])
         assert_frame_equal(df, expected)
 
+    def test_update_dtypes(self):
+
+        # gh 3016
+        df = DataFrame([[1.,2.,False, True],[4.,5.,True,False]],
+                       columns=['A','B','bool1','bool2'])
+
+        other = DataFrame([[45,45]],index=[0],columns=['A','B'])
+        df.update(other)
+
+        expected = DataFrame([[45.,45.,False, True],[4.,5.,True,False]],
+                             columns=['A','B','bool1','bool2'])
+        assert_frame_equal(df, expected)
+
     def test_update_nooverwrite(self):
         df = DataFrame([[1.5, nan, 3.],
                         [1.5, nan, 3.],
