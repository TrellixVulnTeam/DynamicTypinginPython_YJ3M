commit 784ce1d4237e8f89bc0b64c64dd99c2379f6bee9
Author: Chang She <changshe@gmail.com>
Date:   Mon Dec 10 11:34:16 2012 -0500

    BUG: asobject if appending dti and non-dti or mixed naive and aware dti

diff --git a/pandas/tseries/index.py b/pandas/tseries/index.py
index 13833b459..1d03e4df5 100644
--- a/pandas/tseries/index.py
+++ b/pandas/tseries/index.py
@@ -861,7 +861,7 @@ class DatetimeIndex(Int64Index):
         to_concat = self._ensure_compat_concat(to_concat)
         to_concat, factory = _process_concat_data(to_concat, name)
 
-        return factory(com._concat_compat(to_concat))
+        return factory(to_concat)
 
     def join(self, other, how='left', level=None, return_indexers=False):
         """
@@ -1636,29 +1636,50 @@ def _time_to_micros(time):
 def _process_concat_data(to_concat, name):
     klass = Index
     kwargs = {}
+    concat = np.concatenate
 
     all_dti = True
     need_utc_convert = False
+    has_naive = False
     tz = None
+
     for x in to_concat:
         if not isinstance(x, DatetimeIndex):
             all_dti = False
         else:
             if tz is None:
                 tz = x.tz
-            elif x.tz != tz:
+
+            if x.tz is None:
+                has_naive = True
+
+            if x.tz != tz:
                 need_utc_convert = True
                 tz = 'UTC'
 
-    if need_utc_convert:
-        to_concat = [x.tz_convert('UTC') for x in to_concat]
-
     if all_dti:
-        klass = DatetimeIndex
-        kwargs = {'tz' : tz}
+        need_obj_convert = False
+        if has_naive and tz is not None:
+            need_obj_convert = True
+
+        if need_obj_convert:
+            to_concat = [x.asobject.values for x in to_concat]
 
-    to_concat = [x.values if isinstance(x, Index) else x
-                 for x in to_concat]
+        else:
+            if need_utc_convert:
+                to_concat = [x.tz_convert('UTC').values for x in to_concat]
+            else:
+                to_concat = [x.values for x in to_concat]
+
+            klass = DatetimeIndex
+            kwargs = {'tz' : tz}
+            concat = com._concat_compat
+    else:
+        for i, x in enumerate(to_concat):
+            if isinstance(x, DatetimeIndex):
+                to_concat[i] = x.asobject.values
+            elif isinstance(x, Index):
+                to_concat[i] = x.values
 
-    factory_func = lambda x: klass(x, name=name, **kwargs)
+    factory_func = lambda x: klass(concat(x), name=name, **kwargs)
     return to_concat, factory_func
diff --git a/pandas/tseries/tests/test_timezones.py b/pandas/tseries/tests/test_timezones.py
index 6243b8bcb..51dd4133c 100644
--- a/pandas/tseries/tests/test_timezones.py
+++ b/pandas/tseries/tests/test_timezones.py
@@ -705,6 +705,26 @@ class TestTimeZones(unittest.TestCase):
         ts_result = ts1.append(ts2)
         self.assertEqual(utc, ts_result.index.tz)
 
+    def test_append_aware_naive(self):
+        rng1 = date_range('1/1/2011 01:00', periods=1, freq='H')
+        rng2 = date_range('1/1/2011 02:00', periods=1, freq='H',
+                          tz='US/Eastern')
+        ts1 = Series(np.random.randn(len(rng1)), index=rng1)
+        ts2 = Series(np.random.randn(len(rng2)), index=rng2)
+        ts_result = ts1.append(ts2)
+        self.assert_(ts_result.index.equals(
+                ts1.index.asobject.append(ts2.index.asobject)))
+
+        #mixed
+
+        rng1 = date_range('1/1/2011 01:00', periods=1, freq='H')
+        rng2 = range(100)
+        ts1 = Series(np.random.randn(len(rng1)), index=rng1)
+        ts2 = Series(np.random.randn(len(rng2)), index=rng2)
+        ts_result = ts1.append(ts2)
+        self.assert_(ts_result.index.equals(
+                ts1.index.asobject.append(ts2.index)))
+
     def test_equal_join_ensure_utc(self):
         rng = date_range('1/1/2011', periods=10, freq='H', tz='US/Eastern')
         ts = Series(np.random.randn(len(rng)), index=rng)
