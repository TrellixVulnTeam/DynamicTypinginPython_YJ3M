commit 6beaf4072b52c490a374372bcb16a571e5f52382
Author: Adam Klein <adamklein@gmail.com>
Date:   Thu Dec 29 11:21:03 2011 -0500

    continuing v0.6.0 docs

diff --git a/doc/source/basics.rst b/doc/source/basics.rst
index 32a77fadd..671c54a23 100644
--- a/doc/source/basics.rst
+++ b/doc/source/basics.rst
@@ -271,6 +271,7 @@ Here is a quick reference summary table of common functions
     ``count``, Number of non-null observations
     ``sum``, Sum of values
     ``mean``, Mean of values
+    ``mad``, Mean absolute deviation
     ``median``, Arithmetic median of values
     ``min``, Minimum
     ``max``, Maximum
diff --git a/doc/source/dsintro.rst b/doc/source/dsintro.rst
index 3a415704e..3067981b2 100644
--- a/doc/source/dsintro.rst
+++ b/doc/source/dsintro.rst
@@ -482,6 +482,8 @@ similar to an ndarray:
 DataFrame interoperability with NumPy functions
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 
+.. _dsintro.numpy_interop:
+
 Elementwise NumPy ufuncs (log, exp, sqrt, ...) and various other NumPy functions
 can be used with no issues on DataFrame, assuming the data within are numeric:
 
@@ -490,6 +492,19 @@ can be used with no issues on DataFrame, assuming the data within are numeric:
    np.exp(df)
    np.asarray(df)
 
+The dot method on DataFrame implements matrix multiplication:
+
+.. ipython:: python
+
+   df.T.dot(df)
+
+Similarly, the dot method on Series implements dot product:
+
+.. ipython:: python
+
+   s1 = Series(np.arange(5,10))
+   s1.dot(s1)
+
 DataFrame is not intended to be a drop-in replacement for ndarray as its
 indexing semantics are quite different in places from a matrix.
 
@@ -596,6 +611,24 @@ Note that the values in the dict need only be **convertible to
 DataFrame**. Thus, they can be any of the other valid inputs to DataFrame as
 per above.
 
+One helpful factory method is ``Panel.from_dict``, which takes a
+dictionary of DataFrames as above, and the following named parameters:
+
+.. csv-table::
+   :header: "Parameter", "Default", "Description"
+   :widths: 10, 10, 40
+
+   intersect, ``False``, drops elements whose indices do not align
+   orient, ``items``, use ``minor`` to use DataFrames' columns as panel items
+
+For example, compare to the construction above:
+
+.. ipython:: python
+
+   Panel.from_dict(data, orient='minor')
+
+Orient is especially useful for mixed-type DataFrames.
+
 .. note::
 
    Unfortunately Panel, being less commonly used than Series and DataFrame,
diff --git a/doc/source/timeseries.rst b/doc/source/timeseries.rst
index 7c9038ce1..25312e188 100644
--- a/doc/source/timeseries.rst
+++ b/doc/source/timeseries.rst
@@ -56,6 +56,7 @@ logic via subclasses:
     Week, "one week, optionally anchored on a day of the week"
     MonthEnd, "calendar month end"
     BMonthEnd, "business month end"
+    QuarterEnd, "calendar quarter end"
     BQuarterEnd, "business quarter end"
     YearEnd, "calendar year end"
     YearBegin, "calendar year begin"
diff --git a/doc/source/whatsnew/v0.6.0.txt b/doc/source/whatsnew/v0.6.0.txt
index 8c03d07e7..f79c619e6 100644
--- a/doc/source/whatsnew/v0.6.0.txt
+++ b/doc/source/whatsnew/v0.6.0.txt
@@ -14,10 +14,10 @@ New Features
 - Added proper, tested weighted least squares to standard and panel OLS (GH303_)
 - :ref:`Added <indexing.duplicate>` ``drop_duplicates`` and ``duplicated`` functions for removing duplicate DataFrame rows and checking for duplicate rows, respectively (GH319_)
 - :ref:`Implemented <dsintro.boolean>` operators '&', '|', '^', '-' on DataFrame (GH347_)
-- MAYBE ? Add ``Series.mad``, mean absolute deviation, matching DataFrame
-- MAYBE? Add ``QuarterEnd`` DateOffset (PR321_)
-- Add matrix multiplication function ``dot`` to DataFrame (GH65_)
-- Add ``orient`` option to ``Panel.from_dict`` to ease creation of mixed-type Panels (GH359_, GH301_)
+- :ref:`Added <basics.stats>` ``Series.mad``, mean absolute deviation
+- :ref:`Added <timeseries.offsets>` ``QuarterEnd`` DateOffset (PR321_)
+- :ref:`Added <dsintro.numpy_interop>` ``dot`` to DataFrame (GH65_)
+- :ref:`Added <basics.panel>` ``orient`` option to ``Panel.from_dict`` (GH359_, GH301_)
 - Add ``DataFrame.from_dict`` with similar ``orient`` option
 - Can now pass list of tuples or list of lists to ``DataFrame.from_records`` for fast conversion to DataFrame (GH357_)
 - Can pass multiple levels to groupby, e.g. ``df.groupby(level=[0, 1])`` (GH103_)
