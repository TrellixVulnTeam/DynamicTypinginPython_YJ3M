commit 70d2eb64cf53fb7ef95ec64b1eb02d61116e58a0
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Wed Sep 12 11:04:28 2012 -0400

    ENH: clean up #1691 changes, rls note

diff --git a/RELEASE.rst b/RELEASE.rst
index ac0bed88d..44879dbf5 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -34,6 +34,8 @@ pandas 0.9.0
   - Add convenient expanding window equivalents of all rolling_* ops (#1785)
   - Add Options class to pandas.io.data for fetching options data from Yahoo!
     Finance (#1748, #1739)
+  - Recognize and convert more boolean values in file parsing (Yes, No, TRUE,
+    FALSE, variants thereof) (#1691)
 
 **Improvements to existing features**
 
@@ -149,6 +151,8 @@ pandas 0.9.0
     AS-DEC) (#1772)
   - Fix .ix indexing bugs with mixed-integer indexes (#1799)
   - Respect passed color keyword argument in Series.plot (#1890)
+  - Fix rolling_min/max when the window is larger than the size of the input
+    array. Check other malformed inputs (#1899, #1897)
 
 pandas 0.8.1
 ============
diff --git a/pandas/io/tests/test_parsers.py b/pandas/io/tests/test_parsers.py
index e28edc6a6..9c82f9ef9 100644
--- a/pandas/io/tests/test_parsers.py
+++ b/pandas/io/tests/test_parsers.py
@@ -862,6 +862,24 @@ bar,12,13,14,15
 True,1
 False,2
 True,3
+"""
+        data = read_csv(StringIO(data))
+        self.assert_(data['A'].dtype == np.bool_)
+
+        data = """A,B
+YES,1
+no,2
+yes,3
+No,3
+Yes,3
+"""
+        data = read_csv(StringIO(data))
+        self.assert_(data['A'].dtype == np.bool_)
+
+        data = """A,B
+TRUE,1
+FALSE,2
+TRUE,3
 """
         data = read_csv(StringIO(data))
         self.assert_(data['A'].dtype == np.bool_)
diff --git a/pandas/src/inference.pyx b/pandas/src/inference.pyx
index ca02a9380..2f699c287 100644
--- a/pandas/src/inference.pyx
+++ b/pandas/src/inference.pyx
@@ -674,18 +674,25 @@ def maybe_convert_bool(ndarray[object] arr):
         Py_ssize_t i, n
         ndarray[uint8_t] result
         object val
+        set true_vals, false_vals
 
     n = len(arr)
     result = np.empty(n, dtype=np.uint8)
 
+    true_vals = set(('True', 'TRUE', 'true', 'Yes', 'YES', 'yes'))
+    false_vals = set(('False', 'FALSE', 'false', 'No', 'NO', 'no'))
+
     for i from 0 <= i < n:
         val = arr[i]
 
-        true_vals = ('True', 'TRUE', 'true', 'Yes', 'YES', 'yes')
-        false_vals = ('False', 'FALSE', 'false', 'No', 'NO', 'no')
-        if val in true_vals or type(val) == bool and val:
+        if cpython.PyBool_Check(val):
+            if val is True:
+                result[i] = 1
+            else:
+                result[i] = 0
+        elif val in true_vals:
             result[i] = 1
-        elif val in false_vals or type(val) == bool and not val:
+        elif val in false_vals:
             result[i] = 0
         else:
             return arr
