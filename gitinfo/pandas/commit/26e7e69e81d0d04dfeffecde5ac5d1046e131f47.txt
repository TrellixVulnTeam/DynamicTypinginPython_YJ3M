commit 26e7e69e81d0d04dfeffecde5ac5d1046e131f47
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Mon Sep 10 18:09:33 2012 -0400

    BUG: fix Series.__repr__ issue with NumPy scalars introduced in last few days close #1887

diff --git a/RELEASE.rst b/RELEASE.rst
index b58234605..fb5ea1918 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -140,6 +140,8 @@ pandas 0.9.0
   - Only use Q-OCT/NOV/DEC in quarterly frequency inference (#1789)
   - Upcast to dtype=object when unstacking boolean DataFrame (#1820)
   - Fix float64/float32 merging bug (#1849)
+  - Fixes to Period.start_time for non-daily frequencies (#1857)
+  - Fix failure when converter used on index_col in read_csv (#1835)
 
 pandas 0.8.1
 ============
diff --git a/pandas/core/format.py b/pandas/core/format.py
index 35bf64c93..d96b3a929 100644
--- a/pandas/core/format.py
+++ b/pandas/core/format.py
@@ -82,16 +82,12 @@ class SeriesFormatter(object):
             if self.series.name:
                 if isinstance(self.series.name, basestring):
                     series_name = self.series.name
-                elif (hasattr(self.series.name, "__getitem__") or
-                      hasattr(self.series.name, "__iter__")):
-                    series_name ="('"
-                    series_name += "', '".join([unicode(x)
-                                                for x in self.series.name])
-                    series_name += "')"
+                elif isinstance(self.series.name, tuple):
+                    series_name = "('%s')" % "', '".join(self.series.name)
                 else:
                     series_name = str(self.series.name)
             else:
-                series_name=self.series.name
+                series_name = self.series.name
 
             footer += (("Name: %s" % series_name)
                        if series_name is not None else '')
diff --git a/pandas/tests/test_series.py b/pandas/tests/test_series.py
index aa8e140eb..5f6245f62 100644
--- a/pandas/tests/test_series.py
+++ b/pandas/tests/test_series.py
@@ -1036,6 +1036,15 @@ class TestSeries(unittest.TestCase, CheckNameIntegration):
         sys.stderr = sys.__stderr__
         self.assertEquals(buf.getvalue(), '')
 
+    def test_repr_name_iterable_indexable(self):
+        s = Series([1, 2, 3], name=np.int64(3))
+
+        # it works!
+        repr(s)
+
+        s.name = (u"\u05d0",) * 2
+        repr(s)
+
     def test_timeseries_repr_object_dtype(self):
         index = Index([datetime(2000, 1, 1) + timedelta(i)
                        for i in range(1000)], dtype=object)
