commit 9ab404648e005222ea1af66fb9911c3aca96e6ab
Author: Jeff Reback <jeff@reback.net>
Date:   Thu Dec 15 06:48:35 2016 -0500

    DOC: doc changes in whatsnew 0.20.0

diff --git a/doc/source/whatsnew/v0.20.0.txt b/doc/source/whatsnew/v0.20.0.txt
index 1d226a2a9..508093380 100644
--- a/doc/source/whatsnew/v0.20.0.txt
+++ b/doc/source/whatsnew/v0.20.0.txt
@@ -23,11 +23,10 @@ New features
 ~~~~~~~~~~~~
 
 
-``dtype`` keyword for data io
+``dtype`` keyword for data IO
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 
-The ``dtype`` keyword argument in the :func:`read_csv` function for specifying the types of parsed columns
- is now supported with the ``'python'`` engine (:issue:`14295`). See the :ref:`io docs <io.dtypes>` for more information.
+The ``dtype`` keyword argument in the :func:`read_csv` function for specifying the types of parsed columns is now supported with the ``'python'`` engine (:issue:`14295`). See the :ref:`io docs <io.dtypes>` for more information.
 
 .. ipython:: python
 
@@ -44,14 +43,12 @@ fixed-width text files, and :func:`read_excel` for parsing Excel files.
    pd.read_fwf(StringIO(data)).dtypes
    pd.read_fwf(StringIO(data), dtype={'a':'float64', 'b':'object'}).dtypes
 
-.. _whatsnew_0200.enhancements.other:
+.. _whatsnew_0200.enhancements.groupby_access:
 
-Other enhancements
-^^^^^^^^^^^^^^^^^^
-- ``Series.sort_index`` accepts parameters ``kind`` and ``na_position`` (:issue:`13589`, :issue:`14444`)
+Groupby Enhancements
+^^^^^^^^^^^^^^^^^^^^
 
-- ``pd.read_excel`` now preserves sheet order when using ``sheetname=None`` (:issue:`9930`)
-- Strings passed to ``DataFrame.groupby()`` as the ``by`` parameter may now reference either column names or index level names (:issue:`5677`)
+Strings passed to ``DataFrame.groupby()`` as the ``by`` parameter may now reference either column names or index level names (:issue:`5677`)
 
 .. ipython:: python
 
@@ -63,17 +60,25 @@ Other enhancements
    df = pd.DataFrame({'A': [1, 1, 1, 1, 2, 2, 3, 3],
                       'B': np.arange(8)},
                      index=index)
+   df
 
    df.groupby(['second', 'A']).sum()
 
 
+.. _whatsnew_0200.enhancements.other:
+
+Other enhancements
+^^^^^^^^^^^^^^^^^^
+- ``Series.sort_index`` accepts parameters ``kind`` and ``na_position`` (:issue:`13589`, :issue:`14444`)
+
+- ``pd.read_excel`` now preserves sheet order when using ``sheetname=None`` (:issue:`9930`)
 - Multiple offset aliases with decimal points are now supported (e.g. '0.5min' is parsed as '30s') (:issue:`8419`)
 
 - New ``UnsortedIndexError`` (subclass of ``KeyError``) raised when indexing/slicing into an
   unsorted MultiIndex (:issue:`11897`). This allows differentiation between errors due to lack
   of sorting or an incorrect key. See :ref:`here <advanced.unsorted>`
 
-- ``pd.cut`` and ``pd.qcut`` now support datetime64 and timedelta64 dtypes (issue:`14714`)
+- ``pd.cut`` and ``pd.qcut`` now support datetime64 and timedelta64 dtypes (:issue:`14714`)
 - ``Series`` provides a ``to_excel`` method to output Excel files (:issue:`8825`)
 - The ``usecols`` argument in ``pd.read_csv`` now accepts a callable function as a value  (:issue:`14154`)
 - ``pd.DataFrame.plot`` now prints a title above each subplot if ``suplots=True`` and ``title`` is a list of strings (:issue:`14753`)
@@ -98,8 +103,6 @@ Backwards incompatible API changes
 Other API Changes
 ^^^^^^^^^^^^^^^^^
 
-- Change error message text when indexing via a
-  boolean ``Series`` that has an incompatible index (:issue:`14491`)
 
 .. _whatsnew_0200.deprecations:
 
