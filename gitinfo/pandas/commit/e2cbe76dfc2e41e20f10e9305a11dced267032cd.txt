commit e2cbe76dfc2e41e20f10e9305a11dced267032cd
Author: Chang She <chang@lambdafoundry.com>
Date:   Mon Nov 19 13:22:44 2012 -0500

    ENH: pivot annual hourly #2183

diff --git a/pandas/tseries/tests/test_util.py b/pandas/tseries/tests/test_util.py
index 1b634d2e4..0df8394c0 100644
--- a/pandas/tseries/tests/test_util.py
+++ b/pandas/tseries/tests/test_util.py
@@ -2,6 +2,7 @@ import nose
 import unittest
 
 import numpy as np
+from numpy.testing.decorators import slow
 
 from pandas import Series, date_range
 import pandas.util.testing as tm
@@ -36,6 +37,34 @@ class TestPivotAnnual(unittest.TestCase):
         leaps.index = leaps.index.year
         tm.assert_series_equal(annual[day].dropna(), leaps)
 
+    @slow
+    def test_hourly(self):
+        rng_hourly = date_range('1/1/1994', periods=(18* 8760 + 4*24), freq='H')
+        data_hourly = np.random.randint(100, 350, rng_hourly.size)
+        data_hourly = data_hourly.astype('float64')
+        ts_hourly = Series(data_hourly, index=rng_hourly)
+
+        grouped = ts_hourly.groupby(ts_hourly.index.year)
+        hoy = grouped.apply(lambda x: x.reset_index(drop=True))
+        hoy = hoy.index.droplevel(0).values
+        hoy[-isleapyear(ts_hourly.index.year) & (hoy >= 1416)] += 24
+        hoy += 1
+
+        annual = pivot_annual(ts_hourly)
+
+        for i in [1, 1416, 1417, 1418, 8784]:
+            subset = ts_hourly[hoy == i]
+            subset.index = [x.year for x in subset.index]
+
+            tm.assert_series_equal(annual[i].dropna(), subset)
+
+        leaps = ts_hourly[(ts_hourly.index.month == 2) &
+                          (ts_hourly.index.day == 29) &
+                          (ts_hourly.index.hour == 0)]
+        hour = leaps.index.dayofyear[0] * 24 - 23
+        leaps.index = leaps.index.year
+        tm.assert_series_equal(annual[hour].dropna(), leaps)
+
     def test_weekly(self):
         pass
 
@@ -46,7 +75,6 @@ class TestPivotAnnual(unittest.TestCase):
         annual = pivot_annual(ts, 'M')
 
         month = ts.index.month
-
         for i in range(1, 13):
             subset = ts[month == i]
             subset.index = [x.year for x in subset.index]
diff --git a/pandas/tseries/util.py b/pandas/tseries/util.py
index 0702bc403..298a1389d 100644
--- a/pandas/tseries/util.py
+++ b/pandas/tseries/util.py
@@ -1,5 +1,7 @@
 import numpy as np
 
+import pandas as pd
+
 from pandas.core.frame import DataFrame
 import pandas.core.nanops as nanops
 
@@ -56,6 +58,14 @@ def pivot_annual(series, freq=None):
         width = 12
         offset = index.month - 1
         columns = range(1, 13)
+    elif freq == 'H':
+        width = 8784
+        grouped = series.groupby(series.index.year)
+        defaulted = grouped.apply(lambda x: x.reset_index(drop=True))
+        defaulted.index = defaulted.index.droplevel(0)
+        offset = np.asarray(defaulted.index)
+        offset[-isleapyear(year) & (offset >= 1416)] += 24
+        columns = range(1, 8785)
     else:
         raise NotImplementedError(freq)
 
