commit 814a3c87021d2c5fe3b727a57c5c984cb34ef00b
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Fri Mar 16 12:11:48 2012 -0400

    BUG: allow numerical/NA comparisons to flow through in dtype=object arrays, GH #925

diff --git a/pandas/src/tseries.pyx b/pandas/src/tseries.pyx
index 2c72f51c3..1de0d6d4c 100644
--- a/pandas/src/tseries.pyx
+++ b/pandas/src/tseries.pyx
@@ -558,12 +558,15 @@ def vec_compare(ndarray[object] left, ndarray[object] right, object op):
     for i in range(n):
         x = left[i]
         y = right[i]
-        if _checknull(x):
-            result[i] = x
-        elif _checknull(y):
-            result[i] = y
-        else:
+        try:
             result[i] = cpython.PyObject_RichCompareBool(x, y, flag)
+        except TypeError:
+            if _checknull(x):
+                result[i] = x
+            elif _checknull(y):
+                result[i] = y
+            else:
+                raise
 
     return maybe_convert_bool(result)
 
@@ -597,12 +600,15 @@ def vec_binop(ndarray[object] left, ndarray[object] right, object op):
     for i in range(n):
         x = left[i]
         y = right[i]
-        if _checknull(x):
-            result[i] = x
-        elif _checknull(y):
-            result[i] = y
-        else:
+        try:
             result[i] = op(x, y)
+        except TypeError:
+            if _checknull(x):
+                result[i] = x
+            elif _checknull(y):
+                result[i] = y
+            else:
+                raise
 
     return maybe_convert_bool(result)
 
diff --git a/pandas/tests/test_series.py b/pandas/tests/test_series.py
index a3997ef32..896f550ff 100644
--- a/pandas/tests/test_series.py
+++ b/pandas/tests/test_series.py
@@ -1160,6 +1160,18 @@ class TestSeries(unittest.TestCase, CheckNameIntegration):
             expected = f(s.dropna() < s[9], s.dropna() > s[3]).reindex(s.index)
             assert_series_equal(result, expected)
 
+    def test_comparison_object_numeric_nas(self):
+        s = Series(np.random.randn(10), dtype=object)
+        shifted = s.shift(2)
+
+        ops = ['lt', 'le', 'gt', 'ge', 'eq', 'ne']
+        for op in ops:
+            f = getattr(operator, op)
+
+            result = f(s, shifted)
+            expected = f(s.astype(float), shifted.astype(float))
+            assert_series_equal(result, expected)
+
     def test_between(self):
         from pandas import DateRange
 
