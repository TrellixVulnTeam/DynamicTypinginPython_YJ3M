commit 5505aa112f3f6ef3ab9845c4a46b6491befafda0
Author: Adam Klein <adamklein@gmail.com>
Date:   Thu Feb 23 15:58:13 2012 -0500

    BUG: close #812, reindex keeps original name along both axes

diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index ec9bbec43..032e7469e 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -1822,9 +1822,11 @@ class DataFrame(NDFrame):
 
         if index is not None:
             frame = frame._reindex_index(index, method, copy, level)
+            frame.index.name = self.index.name
 
         if columns is not None:
             frame = frame._reindex_columns(columns, copy, level)
+            frame.columns.name = self.columns.name
 
         return frame
 
@@ -1866,9 +1868,13 @@ class DataFrame(NDFrame):
         """
         self._consolidate_inplace()
         if axis == 0:
-            return self._reindex_index(labels, method, copy, level)
+            df = self._reindex_index(labels, method, copy, level)
+            df.index.name = self.index.name
+            return df
         elif axis == 1:
-            return self._reindex_columns(labels, copy, level)
+            df = self._reindex_columns(labels, copy, level)
+            df.columns.name = self.columns.name
+            return df
         else:  # pragma: no cover
             raise ValueError('Must specify axis=0 or 1')
 
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index a20318718..b4ea9c984 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -3100,6 +3100,19 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
         newFrame = self.frame.reindex(list(self.ts1.index))
         self.assert_(newFrame.index.equals(self.ts1.index))
 
+    def test_reindex_name_remains(self):
+        s = Series(random.rand(10))
+        df = DataFrame(s, index=np.arange(len(s)))
+        df.index.name = 'iname'
+        df = df.reindex(s.index)
+        self.assert_(df.index.name == 'iname')
+
+        s = Series(random.rand(10))
+        df = DataFrame(s.T, index=np.arange(len(s)))
+        df.columns.name = 'iname'
+        df = df.reindex(columns=s.index)
+        self.assert_(df.columns.name == 'iname')
+
     def test_reindex_int(self):
         smaller = self.intframe.reindex(self.intframe.index[::2])
 
