commit b62c324775ab9453cf62a6cacecae886a38096fe
Author: Jeremy Schendel <jschendel@users.noreply.github.com>
Date:   Tue Jul 31 19:07:53 2018 -0600

    DEPR: deprecate IntervalIndex.itemsize and remove IntervalArray.itemsize (#22149)

diff --git a/pandas/core/arrays/interval.py b/pandas/core/arrays/interval.py
index 60464bcfd..76614454e 100644
--- a/pandas/core/arrays/interval.py
+++ b/pandas/core/arrays/interval.py
@@ -688,10 +688,6 @@ class IntervalArray(IntervalMixin, ExtensionArray):
     def shape(self):
         return self.left.shape
 
-    @property
-    def itemsize(self):
-        return self.left.itemsize + self.right.itemsize
-
     def take(self, indices, allow_fill=False, fill_value=None, axis=None,
              **kwargs):
         """
diff --git a/pandas/core/indexes/interval.py b/pandas/core/indexes/interval.py
index 0b467760d..838b12468 100644
--- a/pandas/core/indexes/interval.py
+++ b/pandas/core/indexes/interval.py
@@ -369,8 +369,14 @@ class IntervalIndex(IntervalMixin, Index):
 
     @property
     def itemsize(self):
-        # Avoid materializing ndarray[Interval]
-        return self._data.itemsize
+        msg = ('IntervalIndex.itemsize is deprecated and will be removed in '
+               'a future version')
+        warnings.warn(msg, FutureWarning, stacklevel=2)
+
+        # supress the warning from the underlying left/right itemsize
+        with warnings.catch_warnings():
+            warnings.simplefilter('ignore')
+            return self.left.itemsize + self.right.itemsize
 
     def __len__(self):
         return len(self.left)
diff --git a/pandas/tests/indexes/interval/test_interval.py b/pandas/tests/indexes/interval/test_interval.py
index e179286e8..71f56c5bc 100644
--- a/pandas/tests/indexes/interval/test_interval.py
+++ b/pandas/tests/indexes/interval/test_interval.py
@@ -989,9 +989,11 @@ class TestIntervalIndex(Base):
         # GH 19209
         left = np.arange(0, 4, dtype='i8')
         right = np.arange(1, 5, dtype='i8')
-
-        result = IntervalIndex.from_arrays(left, right).itemsize
         expected = 16  # 8 * 2
+
+        with tm.assert_produces_warning(FutureWarning, check_stacklevel=False):
+            result = IntervalIndex.from_arrays(left, right).itemsize
+
         assert result == expected
 
     @pytest.mark.parametrize('new_closed', [
