commit 2570a3bfc5633da74258084ad489999e05c5aebe
Author: jreback <jeff@reback.net>
Date:   Thu Dec 20 11:12:48 2012 -0500

    DOC: io.rst example for multi-index frame was propgating, making next examples confusing

diff --git a/RELEASE.rst b/RELEASE.rst
index cb3f840fe..1df9d7115 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -35,7 +35,7 @@ pandas 0.10.1
     - enables storing of multi-index dataframes (closes GH1277_)
     - support data column indexing and selection, via ``columns`` keyword in append
     - support write chunking to reduce memory footprint, via ``chunksize`` keywork to append
-    - support automagic indexing via ``index`` keyworkd to append
+    - support automagic indexing via ``index`` keywork to append
     - support ``expectedrows`` keyword in append to inform ``PyTables`` about the expected tablesize
     - support ``start`` and ``stop`` keywords in select to limit the row selection space
     - added ``get_store`` context manager to automatically import with pandas
diff --git a/doc/source/io.rst b/doc/source/io.rst
index ef611780d..00e6519d5 100644
--- a/doc/source/io.rst
+++ b/doc/source/io.rst
@@ -1135,15 +1135,15 @@ Storing multi-index dataframes is very similar to storing/selecting from homogen
                            labels=[[0, 0, 0, 1, 1, 2, 2, 3, 3, 3],
                                    [0, 1, 2, 0, 1, 1, 2, 0, 1, 2]],
                            names=['foo', 'bar'])
-        df = DataFrame(np.random.randn(10, 3), index=index,
+        df_mi = DataFrame(np.random.randn(10, 3), index=index,
                        columns=['A', 'B', 'C'])
-        df
+        df_mi
 
-        store.append('mi',df)
-        store.select('mi')
+        store.append('df_mi',df_mi)
+        store.select('df_mi')
 
 	# the levels are automatically included as data columns
-        store.select('mi', Term('foo=bar'))
+        store.select('df_mi', Term('foo=bar'))
 
 
 Querying a Table
