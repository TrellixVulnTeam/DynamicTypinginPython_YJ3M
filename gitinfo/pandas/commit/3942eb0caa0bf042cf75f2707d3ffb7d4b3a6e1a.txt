commit 3942eb0caa0bf042cf75f2707d3ffb7d4b3a6e1a
Author: Chang She <changshe@gmail.com>
Date:   Mon Aug 20 02:24:02 2012 -0400

    ENH: format string for to_csv #1525

diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index d36cccedb..dc2648a11 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -1032,7 +1032,8 @@ class DataFrame(NDFrame):
     to_wide = deprecate('to_wide', to_panel)
 
     def _helper_csvexcel(self, writer, na_rep=None, cols=None,
-                         header=True, index=True, index_label=None):
+                         header=True, index=True, index_label=None,
+                         float_format=None):
         if cols is None:
             cols = self.columns
 
@@ -1089,13 +1090,15 @@ class DataFrame(NDFrame):
                 val = series[col][j]
                 if isnull(val):
                     val = na_rep
+                if float_format is not None and com.is_float(val):
+                    val = float_format % val
 
                 row_fields.append(val)
 
             writer.writerow(row_fields)
 
-    def to_csv(self, path_or_buf, sep=",", na_rep='', cols=None,
-               header=True, index=True, index_label=None,
+    def to_csv(self, path_or_buf, sep=",", na_rep='', float_format=None,
+               cols=None, header=True, index=True, index_label=None,
                mode='w', nanRep=None, encoding=None):
         """
         Write DataFrame to a comma-separated values (csv) file
@@ -1106,6 +1109,8 @@ class DataFrame(NDFrame):
             File path
         na_rep : string, default ''
             Missing data representation
+        float_format : string, default None
+            Format string for floating point numbers
         cols : sequence, optional
             Columns to write
         header : boolean or list of string, default True
@@ -1143,7 +1148,8 @@ class DataFrame(NDFrame):
                                            delimiter=sep, encoding=encoding)
             else:
                 csvout = csv.writer(f, lineterminator='\n', delimiter=sep)
-            self._helper_csvexcel(csvout, na_rep=na_rep, cols=cols,
+            self._helper_csvexcel(csvout, na_rep=na_rep,
+                                  float_format=float_format, cols=cols,
                                   header=header, index=index,
                                   index_label=index_label)
 
@@ -1152,7 +1158,8 @@ class DataFrame(NDFrame):
                 f.close()
 
     def to_excel(self, excel_writer, sheet_name='sheet1', na_rep='',
-                 cols=None, header=True, index=True, index_label=None):
+                 float_format=None, cols=None, header=True, index=True,
+                 index_label=None):
         """
         Write DataFrame to a excel sheet
 
@@ -1164,6 +1171,8 @@ class DataFrame(NDFrame):
             Name of sheet which will contain DataFrame
         na_rep : string, default ''
             Missing data representation
+        float_format : string, default None
+            Format string for floating point numbers
         cols : sequence, optional
             Columns to write
         header : boolean or list of string, default True
@@ -1192,7 +1201,8 @@ class DataFrame(NDFrame):
             excel_writer = ExcelWriter(excel_writer)
             need_save = True
         excel_writer.cur_sheet = sheet_name
-        self._helper_csvexcel(excel_writer, na_rep=na_rep, cols=cols,
+        self._helper_csvexcel(excel_writer, na_rep=na_rep,
+                              float_format=float_format, cols=cols,
                               header=header, index=index,
                               index_label=index_label)
         if need_save:
diff --git a/pandas/core/series.py b/pandas/core/series.py
index d045d8da2..7046dba7a 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -2355,7 +2355,8 @@ copy : boolean, default False
         result.index.name = result.name = None
         return result
 
-    def to_csv(self, path, index=True, sep=",", na_rep='', header=False,
+    def to_csv(self, path, index=True, sep=",", na_rep='',
+               float_format=None, header=False,
                index_label=None, mode='w', nanRep=None, encoding=None):
         """
         Write Series to a comma-separated values (csv) file
@@ -2365,6 +2366,8 @@ copy : boolean, default False
         path : string file path or file handle / StringIO
         na_rep : string, default ''
             Missing data representation
+        float_format : string, default None
+            Format string for floating point numbers
         header : boolean, default False
             Write out series name
         index : boolean, default True
@@ -2382,7 +2385,8 @@ copy : boolean, default False
         """
         from pandas.core.frame import DataFrame
         df = DataFrame(self)
-        df.to_csv(path, index=index, sep=sep, na_rep=na_rep, header=header,
+        df.to_csv(path, index=index, sep=sep, na_rep=na_rep,
+                  float_format=float_format, header=header,
                   index_label=index_label, mode=mode, nanRep=nanRep,
                   encoding=encoding)
 
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index 05173abe9..976d49ddb 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -3300,6 +3300,20 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
         recons = pan.read_csv(buf, index_col=0)
         assert_frame_equal(recons, self.frame)
 
+    def test_to_csv_float_format(self):
+        filename = '__tmp__.csv'
+        df = DataFrame([[0.123456, 0.234567, 0.567567],
+                        [12.32112, 123123.2, 321321.2]],
+                       index=['A', 'B'], columns=['X', 'Y', 'Z'])
+        df.to_csv(filename, float_format='%.2f')
+
+        rs = pan.read_csv(filename, index_col=0)
+        xp = DataFrame([[0.12, 0.23, 0.57],
+                        [12.32, 123123.20, 321321.20]],
+                       index=['A', 'B'], columns=['X', 'Y', 'Z'])
+        assert_frame_equal(rs, xp)
+        os.remove(filename)
+
     def test_to_excel_from_excel(self):
         try:
             import xlwt
@@ -3478,6 +3492,22 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
 
             os.remove(path)
 
+    def test_to_excel_float_format(self):
+        for ext in ['xls', 'xlsx']:
+            filename = '__tmp__.' + ext
+            df = DataFrame([[0.123456, 0.234567, 0.567567],
+                            [12.32112, 123123.2, 321321.2]],
+                           index=['A', 'B'], columns=['X', 'Y', 'Z'])
+            df.to_excel(filename, 'test1', float_format='%.2f')
+
+            reader = ExcelFile(filename)
+            rs = reader.parse('test1', index_col=None)
+            xp = DataFrame([[0.12, 0.23, 0.57],
+                            [12.32, 123123.20, 321321.20]],
+                           index=['A', 'B'], columns=['X', 'Y', 'Z'])
+            assert_frame_equal(rs, xp)
+            os.remove(filename)
+
     def test_info(self):
         io = StringIO()
         self.frame.info(buf=io)
diff --git a/pandas/tests/test_series.py b/pandas/tests/test_series.py
index 26f6a5f2e..da0a52e8d 100644
--- a/pandas/tests/test_series.py
+++ b/pandas/tests/test_series.py
@@ -2018,6 +2018,16 @@ class TestSeries(unittest.TestCase, CheckNameIntegration):
     def test_to_dict(self):
         self.assert_(np.array_equal(Series(self.ts.to_dict()), self.ts))
 
+    def test_to_csv_float_format(self):
+        filename = '__tmp__.csv'
+        ser = Series([0.123456, 0.234567, 0.567567])
+        ser.to_csv(filename, float_format='%.2f')
+
+        rs = Series.from_csv(filename)
+        xp = Series([0.12, 0.23, 0.57])
+        assert_series_equal(rs, xp)
+        os.remove(filename)
+
     def test_clip(self):
         val = self.ts.median()
 
