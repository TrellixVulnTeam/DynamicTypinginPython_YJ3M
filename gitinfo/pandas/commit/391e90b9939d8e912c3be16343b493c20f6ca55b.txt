commit 391e90b9939d8e912c3be16343b493c20f6ca55b
Author: Jesse Farnham <jfarnham20@gmail.com>
Date:   Mon Sep 22 14:51:56 2014 -0400

    BUG: OLS with clustering and nw_lags does not error (GH5884)
    
    Added statement to raise ValueError when OLS is run with clustering and
    Newey-West adjustments. Closes GH5884.

diff --git a/doc/source/v0.15.0.txt b/doc/source/v0.15.0.txt
index 73b8b7ddb..a6e035b26 100644
--- a/doc/source/v0.15.0.txt
+++ b/doc/source/v0.15.0.txt
@@ -383,9 +383,9 @@ Rolling/Expanding Moments API changes
 
     rolling_sum(Series(range(4)), window=3, min_periods=0, center=True)
 
-- :func:`rolling_window` now normalizes the weights properly in rolling mean mode (`mean=True`) so that 
-  the calculated weighted means (e.g. 'triang', 'gaussian') are distributed about the same means as those 
-  calculated without weighting (i.e. 'boxcar'). See :ref:`the note on normalization 
+- :func:`rolling_window` now normalizes the weights properly in rolling mean mode (`mean=True`) so that
+  the calculated weighted means (e.g. 'triang', 'gaussian') are distributed about the same means as those
+  calculated without weighting (i.e. 'boxcar'). See :ref:`the note on normalization
   <stats.moments.normalization>` for further details. (:issue:`7618`)
 
   .. ipython:: python
@@ -393,7 +393,7 @@ Rolling/Expanding Moments API changes
     s = Series([10.5, 8.8, 11.4, 9.7, 9.3])
 
   Behavior prior to 0.15.0:
-  
+
   .. code-block:: python
 
     In [39]: rolling_window(s, window=3, win_type='triang', center=True)
@@ -968,3 +968,6 @@ Bug Fixes
 - Bug where ``col_space`` was ignored in ``DataFrame.to_string()`` when ``header=False`` (:issue:`8230`).
 
 - Bug in DataFrame terminal display: Setting max_column/max_rows to zero did not trigger auto-resizing of dfs to fit terminal width/height (:issue:`7180`).
+- Bug in OLS where running with "cluster" and "nw_lags" parameters did not work correctly, but also did not throw an error
+  (:issue:`5884').
+
diff --git a/pandas/stats/interface.py b/pandas/stats/interface.py
index 6d7bf329b..96b2b3e32 100644
--- a/pandas/stats/interface.py
+++ b/pandas/stats/interface.py
@@ -83,6 +83,14 @@ def ols(**kwargs):
     The appropriate OLS object, which allows you to obtain betas and various
     statistics, such as std err, t-stat, etc.
     """
+
+    if (kwargs.get('cluster') is not None and
+        kwargs.get('nw_lags') is not None):
+        raise ValueError(
+            'Pandas OLS does not work with Newey-West correction '
+            'and clustering.')
+
+
     pool = kwargs.get('pool')
     if 'pool' in kwargs:
         del kwargs['pool']
diff --git a/pandas/stats/tests/test_ols.py b/pandas/stats/tests/test_ols.py
index 5a34048fd..5c8d47ec2 100644
--- a/pandas/stats/tests/test_ols.py
+++ b/pandas/stats/tests/test_ols.py
@@ -682,13 +682,15 @@ class TestPanelOLS(BaseTest):
                             cluster='time')
 
     def testRollingWithNeweyWestAndEntityCluster(self):
-        self.checkMovingOLS(self.panel_x, self.panel_y,
-                            nw_lags=1, cluster='entity')
+        self.assertRaises(ValueError, self.checkMovingOLS,
+                          self.panel_x, self.panel_y,
+                          nw_lags=1, cluster='entity')
 
     def testRollingWithNeweyWestAndTimeEffectsAndEntityCluster(self):
-        self.checkMovingOLS(self.panel_x, self.panel_y,
-                            nw_lags=1, cluster='entity',
-                            time_effects=True)
+        self.assertRaises(ValueError,
+                          self.checkMovingOLS, self.panel_x, self.panel_y,
+                          nw_lags=1, cluster='entity',
+                          time_effects=True)
 
     def testExpanding(self):
         self.checkMovingOLS(
