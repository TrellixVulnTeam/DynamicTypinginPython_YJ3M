commit d4274d59fa625a1c0796285940371c910287867e
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Wed Jul 11 14:56:56 2012 -0400

    BUG: partial indexing bug with PeriodIndex close #1601

diff --git a/RELEASE.rst b/RELEASE.rst
index 2fc259a2b..8b77d1bb9 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -48,6 +48,7 @@ pandas 0.8.1
   - Fix bug in DataFrame.set_index (#1592)
   - Don't ignore axes in boxplot if by specified (#1565)
   - Fix Panel .ix indexing with integers bug (#1603)
+  - Fix Partial indexing bugs (years, months, ...) with PeriodIndex (#1601)
 
 pandas 0.8.0
 ============
diff --git a/pandas/tseries/period.py b/pandas/tseries/period.py
index 0a8c54e1c..a129b6387 100644
--- a/pandas/tseries/period.py
+++ b/pandas/tseries/period.py
@@ -829,6 +829,55 @@ class PeriodIndex(Int64Index):
             key = Period(key, self.freq).ordinal
             return self._engine.get_loc(key)
 
+    def slice_locs(self, start=None, end=None):
+        """
+        Index.slice_locs, customized to handle partial ISO-8601 string slicing
+        """
+        if isinstance(start, basestring) or isinstance(end, basestring):
+            try:
+                if start:
+                    start_loc = self._get_string_slice(start).start
+                else:
+                    start_loc = 0
+
+                if end:
+                    end_loc = self._get_string_slice(end).stop
+                else:
+                    end_loc = len(self)
+
+                return start_loc, end_loc
+            except KeyError:
+                pass
+
+        return Int64Index.slice_locs(self, start, end)
+
+    def _get_string_slice(self, key):
+        if not self.is_monotonic:
+            raise ValueError('Partial indexing only valid for '
+                             'ordered time series')
+
+        asdt, parsed, reso = parse_time_string(key, self.freq)
+        key = asdt
+
+        if reso == 'year':
+            t1 = Period(year=parsed.year, freq='A')
+        elif reso == 'month':
+            t1 = Period(year=parsed.year, motnh=parsed.month, freq='M')
+        elif reso == 'quarter':
+            q = (parsed.month - 1) // 4 + 1
+            t1 = Period(year=parsed.year, quarter=q, freq='Q-DEC')
+        else:
+            raise KeyError(key)
+
+        ordinals = self.values
+
+        t2 = t1.asfreq(self.freq, how='end')
+        t1 = t1.asfreq(self.freq, how='start')
+
+        left = ordinals.searchsorted(t1.ordinal, side='left')
+        right = ordinals.searchsorted(t2.ordinal, side='right')
+        return slice(left, right)
+
     def join(self, other, how='left', level=None, return_indexers=False):
         """
         See Index.join
diff --git a/pandas/tseries/tests/test_period.py b/pandas/tseries/tests/test_period.py
index 984a082f2..6aa4087c5 100644
--- a/pandas/tseries/tests/test_period.py
+++ b/pandas/tseries/tests/test_period.py
@@ -1115,11 +1115,17 @@ class TestPeriodIndex(TestCase):
         self.assert_(type(result) == PeriodIndex)
 
     def test_getitem_partial(self):
-        rng = period_range('2007-01', periods=50)
+        rng = period_range('2007-01', periods=50, freq='M')
         ts = Series(np.random.randn(len(rng)), rng)
 
         self.assertRaises(KeyError, ts.__getitem__, '2006')
 
+        result = ts['2008']
+        self.assert_((result.index.year == 2008).all())
+
+        result = ts['2008':'2009']
+        self.assertEquals(len(result), 24)
+
     def test_sub(self):
         rng = period_range('2007-01', periods=50)
 
