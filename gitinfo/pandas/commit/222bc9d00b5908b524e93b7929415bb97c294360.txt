commit 222bc9d00b5908b524e93b7929415bb97c294360
Author: jreback <jeff@reback.net>
Date:   Wed Dec 11 13:27:16 2013 -0500

    CLN: remove core/generic/_setitem_copy in favor of obj.is_copy

diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index f869b7e79..90641a833 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -1566,11 +1566,14 @@ class DataFrame(NDFrame):
 
                     # a location index by definition
                     i = _maybe_convert_indices(i, len(self._get_axis(axis)))
-                    return self.reindex(i, takeable=True)._setitem_copy(True)
+                    result = self.reindex(i, takeable=True)
+                    copy=True
                 else:
                     new_values, copy = self._data.fast_2d_xs(i, copy=copy)
-                    return Series(new_values, index=self.columns,
-                                  name=self.index[i])._setitem_copy(copy)
+                    result = Series(new_values, index=self.columns,
+                                    name=self.index[i])
+                result.is_copy=copy
+                return result
 
         # icol
         else:
@@ -1677,11 +1680,10 @@ class DataFrame(NDFrame):
             if self._is_mixed_type:
                 result = self.reindex(columns=new_columns)
                 result.columns = result_columns
-                result.is_copy=True
             else:
                 new_values = self.values[:, loc]
                 result = DataFrame(new_values, index=self.index,
-                                   columns=result_columns)
+                                   columns=result_columns).__finalize__(self)
             if len(result.columns) == 1:
                 top = result.columns[0]
                 if ((type(top) == str and top == '') or
@@ -1690,6 +1692,7 @@ class DataFrame(NDFrame):
                     if isinstance(result, Series):
                         result = Series(result, index=self.index, name=key)
 
+            result.is_copy=True
             return result
         else:
             return self._get_item_cache(key)
@@ -2137,7 +2140,8 @@ class DataFrame(NDFrame):
 
             new_values, copy = self._data.fast_2d_xs(loc, copy=copy)
             result = Series(new_values, index=self.columns,
-                            name=self.index[loc])._setitem_copy(copy)
+                            name=self.index[loc])
+            result.is_copy=True
 
         else:
             result = self[loc]
diff --git a/pandas/core/generic.py b/pandas/core/generic.py
index 45dd3f5a4..253136b9a 100644
--- a/pandas/core/generic.py
+++ b/pandas/core/generic.py
@@ -1022,11 +1022,6 @@ class NDFrame(PandasObject):
         self._data.set(key, value)
         self._clear_item_cache()
 
-    def _setitem_copy(self, copy):
-        """ set the _is_copy of the iiem """
-        self.is_copy = copy
-        return self
-
     def _check_setitem_copy(self, stacklevel=4, t='setting'):
         """ validate if we are doing a settitem on a chained copy.
 
@@ -1115,7 +1110,7 @@ class NDFrame(PandasObject):
 
         # maybe set copy if we didn't actually change the index
         if is_copy and not result._get_axis(axis).equals(self._get_axis(axis)):
-            result = result._setitem_copy(is_copy)
+            result.is_copy=is_copy
 
         return result
 
diff --git a/pandas/core/indexing.py b/pandas/core/indexing.py
index a4e273c43..8444c7a9b 100644
--- a/pandas/core/indexing.py
+++ b/pandas/core/indexing.py
@@ -209,7 +209,7 @@ class _NDFrameIndexer(object):
                     labels = _safe_append_to_index(index, key)
                     self.obj._data = self.obj.reindex_axis(labels, i)._data
                     self.obj._maybe_update_cacher(clear=True)
-                    self.obj._setitem_copy(False)
+                    self.obj.is_copy=False
 
                     if isinstance(labels, MultiIndex):
                         self.obj.sortlevel(inplace=True)
diff --git a/pandas/tests/test_multilevel.py b/pandas/tests/test_multilevel.py
index 7562fb71f..7dd9dbd51 100644
--- a/pandas/tests/test_multilevel.py
+++ b/pandas/tests/test_multilevel.py
@@ -1141,7 +1141,10 @@ Thur,Lunch,Yes,51.51,17"""
         self.assert_(index.lexsort_depth == 0)
 
     def test_frame_getitem_view(self):
-        df = self.frame.T
+        df = self.frame.T.copy()
+
+        # this works because we are modifying the underlying array
+        # really a no-no
         df['foo'].values[:] = 0
         self.assert_((df['foo'].values == 0).all())
 
