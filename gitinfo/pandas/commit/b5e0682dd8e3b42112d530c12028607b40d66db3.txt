commit b5e0682dd8e3b42112d530c12028607b40d66db3
Author: Andy Hayden <andyhayden1@gmail.com>
Date:   Thu Jan 3 21:57:52 2013 +0000

    Reverted 4 test failures from autopep8 commit:
    66fc98f0b7316331b505c4c4d4929fcbdc668d86
    
    Arising from correcting PEP8 E712, changing == boolean to is boolean.
    Possible that these are bugs in the tests?

diff --git a/pandas/io/tests/test_pytables.py b/pandas/io/tests/test_pytables.py
index 8e46f260c..90f88573d 100644
--- a/pandas/io/tests/test_pytables.py
+++ b/pandas/io/tests/test_pytables.py
@@ -1482,7 +1482,7 @@ class TestHDFStore(unittest.TestCase):
         df = tm.makeTimeDataFrame()
 
         def check(x, y):
-            self.assert_((np.unique(x) == np.unique(y)).all() is True)
+            self.assert_((np.unique(x) == np.unique(y)).all() == True)
 
         self.store.remove('df')
         self.store.append('df', df)
@@ -1521,7 +1521,7 @@ class TestHDFStore(unittest.TestCase):
 
         # all
         c = self.store.select_as_coordinates('df')
-        assert((c.values == np.arange(len(df.index))).all() is True)
+        assert((c.values == np.arange(len(df.index))).all() == True)
 
         # get coordinates back & test vs frame
         self.store.remove('df')
@@ -1529,13 +1529,13 @@ class TestHDFStore(unittest.TestCase):
         df = DataFrame(dict(A=range(5), B=range(5)))
         self.store.append('df', df)
         c = self.store.select_as_coordinates('df', ['index<3'])
-        assert((c.values == np.arange(3)).all() is True)
+        assert((c.values == np.arange(3)).all() == True)
         result = self.store.select('df', where=c)
         expected = df.ix[0:2, :]
         tm.assert_frame_equal(result, expected)
 
         c = self.store.select_as_coordinates('df', ['index>=3', 'index<=4'])
-        assert((c.values == np.arange(2) + 3).all() is True)
+        assert((c.values == np.arange(2) + 3).all() == True)
         result = self.store.select('df', where=c)
         expected = df.ix[3:4, :]
         tm.assert_frame_equal(result, expected)
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index 5e01116a7..80a55db84 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -1096,7 +1096,7 @@ class CheckIndexing(object):
 
         # allow this syntax
         df.ix['d', :] = nan
-        self.assert_(com.isnull(df.ix['c', :]).all() is False)
+        self.assert_(com.isnull(df.ix['c', :]).all() == False)
 
         # try to set with a list like item
         self.assertRaises(
diff --git a/pandas/tests/test_series.py b/pandas/tests/test_series.py
index ceb11231b..335d747e9 100644
--- a/pandas/tests/test_series.py
+++ b/pandas/tests/test_series.py
@@ -360,20 +360,20 @@ class TestSeries(unittest.TestCase, CheckNameIntegration):
         import pandas.tslib as tslib
 
         s = Series(tslib.iNaT, dtype='M8[ns]', index=range(5))
-        self.assert_(isnull(s).all() is True)
+        self.assert_(isnull(s).all() == True)
 
         s = Series(tslib.NaT, dtype='M8[ns]', index=range(5))
-        self.assert_(isnull(s).all() is True)
+        self.assert_(isnull(s).all() == True)
 
         s = Series(nan, dtype='M8[ns]', index=range(5))
-        self.assert_(isnull(s).all() is True)
+        self.assert_(isnull(s).all() == True)
 
         s = Series([datetime(2001, 1, 2, 0, 0), tslib.iNaT], dtype='M8[ns]')
-        self.assert_(isnull(s[1]) is True)
+        self.assert_(isnull(s[1]) == True)
         self.assert_(s.dtype == 'M8[ns]')
 
         s = Series([datetime(2001, 1, 2, 0, 0), nan], dtype='M8[ns]')
-        self.assert_(isnull(s[1]) is True)
+        self.assert_(isnull(s[1]) == True)
         self.assert_(s.dtype == 'M8[ns]')
 
     def test_constructor_dict(self):
