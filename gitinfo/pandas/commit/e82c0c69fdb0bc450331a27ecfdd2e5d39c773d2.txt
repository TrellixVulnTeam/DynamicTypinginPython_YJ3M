commit e82c0c69fdb0bc450331a27ecfdd2e5d39c773d2
Author: Daniel Saxton <2658661+dsaxton@users.noreply.github.com>
Date:   Sat Apr 25 16:47:27 2020 -0500

    CLN: Pass numpy args as kwargs (#33789)

diff --git a/pandas/compat/numpy/function.py b/pandas/compat/numpy/function.py
index 30768f9bf..d7a14c28c 100644
--- a/pandas/compat/numpy/function.py
+++ b/pandas/compat/numpy/function.py
@@ -251,11 +251,16 @@ STAT_FUNC_DEFAULTS: "OrderedDict[str, Optional[Any]]" = OrderedDict()
 STAT_FUNC_DEFAULTS["dtype"] = None
 STAT_FUNC_DEFAULTS["out"] = None
 
-PROD_DEFAULTS = SUM_DEFAULTS = STAT_FUNC_DEFAULTS.copy()
+SUM_DEFAULTS = STAT_FUNC_DEFAULTS.copy()
 SUM_DEFAULTS["axis"] = None
 SUM_DEFAULTS["keepdims"] = False
 SUM_DEFAULTS["initial"] = None
 
+PROD_DEFAULTS = STAT_FUNC_DEFAULTS.copy()
+PROD_DEFAULTS["axis"] = None
+PROD_DEFAULTS["keepdims"] = False
+PROD_DEFAULTS["initial"] = None
+
 MEDIAN_DEFAULTS = STAT_FUNC_DEFAULTS.copy()
 MEDIAN_DEFAULTS["overwrite_input"] = False
 MEDIAN_DEFAULTS["keepdims"] = False
diff --git a/pandas/core/arrays/numpy_.py b/pandas/core/arrays/numpy_.py
index e9950e0ed..6806ed2af 100644
--- a/pandas/core/arrays/numpy_.py
+++ b/pandas/core/arrays/numpy_.py
@@ -365,36 +365,14 @@ class PandasArray(ExtensionArray, ExtensionOpsMixin, NDArrayOperatorsMixin):
         )
         return result
 
-    def sum(
-        self,
-        axis=None,
-        dtype=None,
-        out=None,
-        keepdims=False,
-        initial=None,
-        skipna=True,
-        min_count=0,
-    ):
-        nv.validate_sum(
-            (), dict(dtype=dtype, out=out, keepdims=keepdims, initial=initial)
-        )
+    def sum(self, axis=None, skipna=True, min_count=0, **kwargs) -> Scalar:
+        nv.validate_sum((), kwargs)
         return nanops.nansum(
             self._ndarray, axis=axis, skipna=skipna, min_count=min_count
         )
 
-    def prod(
-        self,
-        axis=None,
-        dtype=None,
-        out=None,
-        keepdims=False,
-        initial=None,
-        skipna=True,
-        min_count=0,
-    ):
-        nv.validate_prod(
-            (), dict(dtype=dtype, out=out, keepdims=keepdims, initial=initial)
-        )
+    def prod(self, axis=None, skipna=True, min_count=0, **kwargs) -> Scalar:
+        nv.validate_prod((), kwargs)
         return nanops.nanprod(
             self._ndarray, axis=axis, skipna=skipna, min_count=min_count
         )
