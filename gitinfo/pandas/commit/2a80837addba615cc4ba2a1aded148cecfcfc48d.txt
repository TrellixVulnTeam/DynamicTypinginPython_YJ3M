commit 2a80837addba615cc4ba2a1aded148cecfcfc48d
Author: jreback <jeff@reback.net>
Date:   Thu May 22 11:04:53 2014 -0400

    COMPAT: disable Series datetimeindex/periodindex methods introduced in (GH6380)

diff --git a/pandas/core/base.py b/pandas/core/base.py
index 5605e1b0b..68200f5ed 100644
--- a/pandas/core/base.py
+++ b/pandas/core/base.py
@@ -261,12 +261,10 @@ class IndexOpsMixin(object):
 
     def max(self):
         """ The maximum value of the object """
-        self._is_allowed_index_op('max')
         return self.values.max()
 
     def min(self):
         """ The minimum value of the object """
-        self._is_allowed_index_op('min')
         return self.values.min()
 
     def value_counts(self, normalize=False, sort=True, ascending=False,
diff --git a/pandas/core/series.py b/pandas/core/series.py
index 1637ba49d..a483bc03d 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -121,11 +121,15 @@ class Series(base.IndexOpsMixin, generic.NDFrame):
 
     @property
     def _allow_datetime_index_ops(self):
-        return self.index.is_all_dates and isinstance(self.index, DatetimeIndex)
+        # disabling to invalidate datetime index ops
+        # return self.index.is_all_dates and isinstance(self.index, DatetimeIndex)
+        return False
 
     @property
     def _allow_period_index_ops(self):
-        return self.index.is_all_dates and isinstance(self.index, PeriodIndex)
+        # disabling to invalidate period index ops
+        # return self.index.is_all_dates and isinstance(self.index, PeriodIndex)
+        return False
 
     def __init__(self, data=None, index=None, dtype=None, name=None,
                  copy=False, fastpath=False):
diff --git a/pandas/tests/test_base.py b/pandas/tests/test_base.py
index b50f13e84..4e8a9f796 100644
--- a/pandas/tests/test_base.py
+++ b/pandas/tests/test_base.py
@@ -452,7 +452,14 @@ class TestDatetimeIndexOps(Ops):
 
     def test_ops_properties(self):
         self.check_ops_properties(['year','month','day','hour','minute','second','weekofyear','week','dayofweek','dayofyear','quarter'])
-        self.check_ops_properties(['date','time','microsecond','nanosecond', 'is_month_start', 'is_month_end', 'is_quarter_start', 'is_quarter_end', 'is_year_start', 'is_year_end'], lambda x: isinstance(x,DatetimeIndex))
+        self.check_ops_properties(['date','time','microsecond','nanosecond', 'is_month_start', 'is_month_end', 'is_quarter_start',
+                                   'is_quarter_end', 'is_year_start', 'is_year_end'], lambda x: isinstance(x,DatetimeIndex))
+
+    def test_ops_properties_basic(self):
+
+        # sanity check that the behavior didn't change
+        for op in ['year','day','second','weekday']:
+            self.assertRaises(TypeError, lambda x: getattr(self.dt_series,op))
 
 class TestPeriodIndexOps(Ops):
     _allowed = '_allow_period_index_ops'
diff --git a/pandas/tests/test_series.py b/pandas/tests/test_series.py
index bb7b0a32b..e0ae6a30c 100644
--- a/pandas/tests/test_series.py
+++ b/pandas/tests/test_series.py
@@ -5619,7 +5619,9 @@ class TestSeries(tm.TestCase, CheckNameIntegration):
 
     def test_weekday(self):
         # Just run the function
-        weekdays = self.ts.weekday
+        def f():
+            self.ts.weekday
+        self.assertRaises(TypeError, f)
 
     def test_diff(self):
         # Just run the function
@@ -5715,7 +5717,7 @@ class TestSeries(tm.TestCase, CheckNameIntegration):
         assert_series_equal(result, expected)
 
         result = self.ts.select(lambda x: x.weekday() == 2)
-        expected = self.ts[self.ts.weekday == 2]
+        expected = self.ts[self.ts.index.weekday == 2]
         assert_series_equal(result, expected)
 
 #------------------------------------------------------------------------------
