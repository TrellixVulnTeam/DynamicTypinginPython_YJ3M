commit a2f5e56b13dff45a82c4fa068ec5edf35bece645
Author: Chang She <chang@lambdafoundry.com>
Date:   Thu Sep 20 14:35:49 2012 -0400

    BUG: DatetimeConverter does not handle datetime64 arrays properly

diff --git a/pandas/tseries/converter.py b/pandas/tseries/converter.py
index e2d1284d2..fa0467762 100644
--- a/pandas/tseries/converter.py
+++ b/pandas/tseries/converter.py
@@ -137,6 +137,7 @@ class DatetimeConverter(dates.DateConverter):
 
     @staticmethod
     def convert(values, unit, axis):
+        from pandas.tseries.index import DatetimeIndex
         def try_parse(values):
             try:
                 return _dt_to_float_ordinal(tools.to_datetime(values))
@@ -151,10 +152,19 @@ class DatetimeConverter(dates.DateConverter):
             return values
         elif isinstance(values, str):
             return try_parse(values)
-        elif isinstance(values, Index):
-            return values.map(try_parse)
         elif isinstance(values, (list, tuple, np.ndarray)):
-            return [try_parse(x) for x in values]
+            if not isinstance(values, np.ndarray):
+                values = np.array(values, dtype='O')
+
+            try:
+                values = tools.to_datetime(values)
+                if isinstance(values, Index):
+                    values = values.map(_dt_to_float_ordinal)
+                else:
+                    values = [_dt_to_float_ordinal(x) for x in values]
+            except Exception:
+                pass
+
         return values
 
     @staticmethod
diff --git a/pandas/tseries/tests/test_plotting.py b/pandas/tseries/tests/test_plotting.py
index 63a4d31b2..d710c09dd 100644
--- a/pandas/tseries/tests/test_plotting.py
+++ b/pandas/tseries/tests/test_plotting.py
@@ -286,6 +286,9 @@ class TestTSPlot(unittest.TestCase):
             self.assertEqual(int(result[0]), expected[0].ordinal)
             self.assertEqual(int(result[1]), expected[1].ordinal)
 
+        import matplotlib.pyplot as plt
+        plt.close('all')
+
         ser = tm.makeTimeSeries()
         ax = ser.plot()
         _test(ax)
@@ -840,6 +843,16 @@ class TestTSPlot(unittest.TestCase):
             if len(l.get_text()) > 0:
                 self.assert_(l.get_rotation() == 30)
 
+    @slow
+    def test_ax_plot(self):
+        x = DatetimeIndex(start='2012-01-02', periods=10,
+                          freq='D')
+        y = range(len(x))
+        import matplotlib.pyplot as plt
+        fig = plt.figure()
+        ax = fig.add_subplot(111)
+        lines = ax.plot(x, y, label='Y')
+        assert_array_equal(DatetimeIndex(lines[0].get_xdata()), x)
 
 PNG_PATH = 'tmp.png'
 def _check_plot_works(f, freq=None, series=None, *args, **kwargs):
diff --git a/pandas/tseries/tools.py b/pandas/tseries/tools.py
index cb10820ff..36bfca3ec 100644
--- a/pandas/tseries/tools.py
+++ b/pandas/tseries/tools.py
@@ -91,8 +91,25 @@ def to_datetime(arg, errors='ignore', dayfirst=False, utc=None, box=True):
     elif isinstance(arg, (np.ndarray, list)):
         if isinstance(arg, list):
             arg = np.array(arg, dtype='O')
-        result = _convert_f(arg)
-        return result
+
+        if com.is_datetime64_dtype(arg):
+            if box and not isinstance(arg, DatetimeIndex):
+                try:
+                    return DatetimeIndex(arg, tz='utc' if utc else None)
+                except ValueError, e:
+                    try:
+                        values, tz = lib.datetime_to_datetime64(arg)
+                        return DatetimeIndex._simple_new(values, None, tz=tz)
+                    except (ValueError, TypeError):
+                        raise e
+            return arg
+
+        try:
+            return _convert_f(arg)
+        except ValueError:
+            raise
+        return arg
+
     try:
         if not arg:
             return arg
