commit 713a105ff5885bccb37255d2813fca708b640c6b
Author: jreback <jeff@reback.net>
Date:   Mon Nov 25 12:32:57 2013 -0500

    TST: add testing base TestCase to provide global testing config

diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index 280b0476e..cef8edaea 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -1872,7 +1872,7 @@ class SafeForSparse(object):
         self.assert_(np.array_equal(with_suffix.columns, expected))
 
 
-class TestDataFrame(unittest.TestCase, CheckIndexing,
+class TestDataFrame(tm.TestCase, CheckIndexing,
                     SafeForSparse):
     klass = DataFrame
 
@@ -12026,15 +12026,18 @@ class TestDataFrameQueryWithMultiIndex(object):
             pd.eval('p4d + 1', parser=parser, engine=engine)
 
 
-class TestDataFrameQueryNumExprPandas(unittest.TestCase):
+class TestDataFrameQueryNumExprPandas(tm.TestCase):
+
     @classmethod
     def setUpClass(cls):
+        super(TestDataFrameQueryNumExprPandas, cls).setUpClass()
         cls.engine = 'numexpr'
         cls.parser = 'pandas'
         skip_if_no_ne()
 
     @classmethod
     def tearDownClass(cls):
+        super(TestDataFrameQueryNumExprPandas, cls).tearDownClass()
         del cls.engine, cls.parser
 
     def test_date_query_method(self):
diff --git a/pandas/util/testing.py b/pandas/util/testing.py
index 2ea570d6f..ebadc2103 100644
--- a/pandas/util/testing.py
+++ b/pandas/util/testing.py
@@ -11,6 +11,7 @@ import inspect
 import os
 import subprocess
 import locale
+import unittest
 
 from datetime import datetime
 from functools import wraps, partial
@@ -52,6 +53,17 @@ N = 30
 K = 4
 _RAISE_NETWORK_ERROR_DEFAULT = False
 
+class TestCase(unittest.TestCase):
+
+    @classmethod
+    def setUpClass(cls):
+        pd.set_option('chained_assignment','raise')
+        print("setting up: {0}".format(cls))
+
+    @classmethod
+    def tearDownClass(cls):
+        pass
+
 # NOTE: don't pass an NDFrame or index to this function - may not handle it
 # well.
 assert_almost_equal = _testing.assert_almost_equal
