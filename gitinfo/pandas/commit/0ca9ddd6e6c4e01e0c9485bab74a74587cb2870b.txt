commit 0ca9ddd6e6c4e01e0c9485bab74a74587cb2870b
Author: jbrockmendel <jbrockmendel@gmail.com>
Date:   Sat Feb 1 06:22:05 2020 -0800

    REGR: DataFrame.__setitem__(slice, val) is positional  (#31515)

diff --git a/doc/source/whatsnew/v1.0.1.rst b/doc/source/whatsnew/v1.0.1.rst
index ff8433c7c..206be97fe 100644
--- a/doc/source/whatsnew/v1.0.1.rst
+++ b/doc/source/whatsnew/v1.0.1.rst
@@ -67,7 +67,7 @@ Interval
 
 Indexing
 ^^^^^^^^
-
+- Fixed regression in :class:`DataFrame` setting values with a slice (e.g. ``df[-4:] = 1``) indexing by label instead of position (:issue:`31469`)
 -
 -
 
diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 70e440b49..0dea8235e 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -2937,8 +2937,11 @@ class DataFrame(NDFrame):
             self._set_item(key, value)
 
     def _setitem_slice(self, key, value):
+        # NB: we can't just use self.loc[key] = value because that
+        #  operates on labels and we need to operate positional for
+        #  backwards-compat, xref GH#31469
         self._check_setitem_copy()
-        self.loc[key] = value
+        self.loc._setitem_with_indexer(key, value)
 
     def _setitem_array(self, key, value):
         # also raises Exception if object array with NA values
diff --git a/pandas/tests/frame/indexing/test_indexing.py b/pandas/tests/frame/indexing/test_indexing.py
index cbb9dd09b..64d0f9ee2 100644
--- a/pandas/tests/frame/indexing/test_indexing.py
+++ b/pandas/tests/frame/indexing/test_indexing.py
@@ -860,6 +860,15 @@ class TestDataFrameIndexing:
 
         assert (float_frame["C"] == 4).all()
 
+    def test_setitem_slice_position(self):
+        # GH#31469
+        df = pd.DataFrame(np.zeros((100, 1)))
+        df[-4:] = 1
+        arr = np.zeros((100, 1))
+        arr[-4:] = 1
+        expected = pd.DataFrame(arr)
+        tm.assert_frame_equal(df, expected)
+
     def test_getitem_setitem_non_ix_labels(self):
         df = tm.makeTimeDataFrame()
 
