commit 665af950e88c06a639f1ac758313a714c244a619
Author: Adam Klein <adamklein@gmail.com>
Date:   Tue Mar 6 17:00:57 2012 -0500

    BUG: close #869, method count accepts level name

diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 543da269b..459ec3280 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -3439,6 +3439,12 @@ class DataFrame(NDFrame):
         # python 2.5
         mask = notnull(frame.values).view(np.uint8)
 
+        if isinstance(level, basestring):
+            if self.index.names is None:
+                raise ValueError("Could not access level by name")
+
+            level = self.index.names.index(level)
+
         level_index = frame.index.levels[level]
         counts = lib.count_level_2d(mask, frame.index.labels[level],
                                     len(level_index))
diff --git a/pandas/core/series.py b/pandas/core/series.py
index f5b1ee8c8..f8a254951 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -896,6 +896,13 @@ copy : boolean, default False
         """
         if level is not None:
             mask = notnull(self.values)
+
+            if isinstance(level, basestring):
+                if self.index.names is None:
+                    raise ValueError("Could not access level by name")
+
+                level = self.index.names.index(level)
+
             level_index = self.index.levels[level]
 
             if len(self) == 0:
diff --git a/pandas/tests/test_multilevel.py b/pandas/tests/test_multilevel.py
index ad990f84f..e0a371ce8 100644
--- a/pandas/tests/test_multilevel.py
+++ b/pandas/tests/test_multilevel.py
@@ -862,6 +862,32 @@ x   q   30      3    -0.6662 -0.5243 -0.3580  0.89145  2.5838"""
         assert_series_equal(result, expected)
         assert_series_equal(result2, expected)
 
+    def test_count(self):
+        frame = self.frame.copy()
+        frame.index.names = ['a', 'b']
+
+        result = frame.count(level='b')
+        expect = self.frame.count(level=1)
+        assert_frame_equal(result, expect)
+
+        result = frame.count(level='a')
+        expect = self.frame.count(level=0)
+        assert_frame_equal(result, expect)
+
+        series = self.series.copy()
+        series.index.names = ['a', 'b']
+
+        result = series.count(level='b')
+        expect = self.series.count(level=1)
+        assert_series_equal(result, expect)
+
+        result = series.count(level='a')
+        expect = self.series.count(level=0)
+        assert_series_equal(result, expect)
+
+        self.assertRaises(ValueError, series.count, 'x')
+        self.assertRaises(ValueError, frame.count, level='x')
+
     AGG_FUNCTIONS = ['sum', 'prod', 'min', 'max', 'median', 'mean', 'skew',
                      'mad', 'std', 'var']
 
