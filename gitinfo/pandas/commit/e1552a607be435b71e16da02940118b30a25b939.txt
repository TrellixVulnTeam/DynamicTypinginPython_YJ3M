commit e1552a607be435b71e16da02940118b30a25b939
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Mon Apr 16 16:45:37 2012 -0400

    BUG: fix searchsorted off by one error, close #1068

diff --git a/pandas/core/groupby.py b/pandas/core/groupby.py
index e14193b65..b84df0ac5 100644
--- a/pandas/core/groupby.py
+++ b/pandas/core/groupby.py
@@ -1323,10 +1323,6 @@ class SeriesGroupBy(GroupBy):
                 index = MultiIndex.from_tuples(keys, names=self.grouper.names)
             else:
                 index = Index(keys, name=self.grouper.names[0])
-                # if len(keys) == self.grouper.ngroups:
-                #     index = self.grouper.result_index
-                # else:
-                #     index = Index(keys, name=self.grouper.names[0])
             return index
 
         if isinstance(values[0], Series):
diff --git a/pandas/core/index.py b/pandas/core/index.py
index d0a68d8a1..3d121e8c5 100644
--- a/pandas/core/index.py
+++ b/pandas/core/index.py
@@ -1711,23 +1711,22 @@ class DatetimeIndex(Int64Index):
         if reso == 'year':
             t1 = to_timestamp(datetime(parsed.year, 1, 1))
             t2 = to_timestamp(datetime(parsed.year, 12, 31))
-            i1, i2 = np.searchsorted(self.asi8, [t1.value, t2.value])
-            return slice(i1, i2+1)
         elif reso == 'month':
             d = lib.monthrange(parsed.year, parsed.month)[1]
             t1 = to_timestamp(datetime(parsed.year, parsed.month, 1))
             t2 = to_timestamp(datetime(parsed.year, parsed.month, d))
-            i1, i2 = np.searchsorted(self.asi8, [t1.value, t2.value])
-            return slice(i1, i2+1)
         elif reso == 'quarter':
             qe = (((parsed.month - 1) + 2) % 12) + 1 # two months ahead
             d = lib.monthrange(parsed.year, qe)[1]   # at end of month
             t1 = to_timestamp(datetime(parsed.year, parsed.month, 1))
             t2 = to_timestamp(datetime(parsed.year, qe, d))
-            i1, i2 = np.searchsorted(self.asi8, [t1.value, t2.value])
-            return slice(i1, i2+1)
+        else:
+            raise KeyError
 
-        raise KeyError
+        stamps = self.asi8
+        left = stamps.searchsorted(t1.value, side='left')
+        right = stamps.searchsorted(t2.value, side='right')
+        return slice(left, right)
 
     def get_value(self, series, key):
         """
diff --git a/pandas/tests/test_timeseries.py b/pandas/tests/test_timeseries.py
index 6539419bc..dc6db28c9 100644
--- a/pandas/tests/test_timeseries.py
+++ b/pandas/tests/test_timeseries.py
@@ -548,10 +548,14 @@ class TestLegacySupport(unittest.TestCase):
         dti = DatetimeIndex(freq='B', start=datetime(2005,1,1), periods=500)
 
         s = Series(np.arange(len(dti)), index=dti)
-        self.assertEquals(len(s['2005']), 261)
+        result = s['2005']
+        expected = s[s.index.year == 2005]
+        assert_series_equal(result, expected)
 
         df = DataFrame(np.random.rand(len(dti), 5), index=dti)
-        self.assertEquals(len(df.ix['2005']), 261)
+        result = df.ix['2005']
+        expected = df[df.index.year == 2005]
+        assert_frame_equal(result, expected)
 
     def test_slice_quarter(self):
         dti = DatetimeIndex(freq='D', start=datetime(2000,6,1), periods=500)
