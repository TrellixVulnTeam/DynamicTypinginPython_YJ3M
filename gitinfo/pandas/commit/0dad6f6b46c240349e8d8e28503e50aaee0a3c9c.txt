commit 0dad6f6b46c240349e8d8e28503e50aaee0a3c9c
Author: jreback <jeff@reback.net>
Date:   Wed Sep 25 22:18:04 2013 -0400

    CLN: fix py2to3 issues in categorical.py

diff --git a/pandas/core/categorical.py b/pandas/core/categorical.py
index 0868ead2c..97ed0fdb0 100644
--- a/pandas/core/categorical.py
+++ b/pandas/core/categorical.py
@@ -2,6 +2,9 @@
 
 import numpy as np
 
+from pandas import compat
+from pandas.compat import u
+
 from pandas.core.algorithms import factorize
 from pandas.core.base import PandasObject
 from pandas.core.index import Index
@@ -147,7 +150,7 @@ class Categorical(PandasObject):
         #TODO: tidy_repr for footer since there may be a ton of levels?
         result = '%s\n%s' % (result, self._repr_footer())
 
-        return result
+        return compat.text_type(result)
 
     def _repr_footer(self):
         levheader = 'Levels (%d): ' % len(self.levels)
@@ -158,17 +161,16 @@ class Categorical(PandasObject):
         levstring = '\n'.join([lines[0]] +
                               [indent + x.lstrip() for x in lines[1:]])
 
-        namestr = u"Name: %s, " % com.pprint_thing(
-                        self.name) if self.name is not None else ""
-        return u'%s\n%sLength: %d' % (levheader + levstring, namestr,
-                                      len(self))
+        namestr = "Name: %s, " % self.name if self.name is not None else ""
+        return u('%s\n%sLength: %d' % (levheader + levstring, namestr,
+                                       len(self)))
 
     def _get_repr(self, name=False, length=True, na_rep='NaN', footer=True):
         formatter = fmt.CategoricalFormatter(self, name=name,
                                         length=length, na_rep=na_rep,
                                         footer=footer)
         result = formatter.to_string()
-        return result
+        return compat.text_type(result)
 
     def __unicode__(self):
         width, height = get_terminal_size()
@@ -180,10 +182,10 @@ class Categorical(PandasObject):
             result = self._get_repr(length=len(self) > 50,
                                     name=True)
         else:
-            result = u'Categorical([], %s' % self._get_repr(name=True,
-                                                            length=False,
-                                                            footer=True,
-                                                            )
+            result = 'Categorical([], %s' % self._get_repr(name=True,
+                                                           length=False,
+                                                           footer=True,
+                                                           )
 
         return result
 
diff --git a/pandas/core/format.py b/pandas/core/format.py
index 749120f87..be6ad4d2b 100644
--- a/pandas/core/format.py
+++ b/pandas/core/format.py
@@ -65,14 +65,14 @@ class CategoricalFormatter(object):
     def __init__(self, categorical, buf=None, length=True,
                  na_rep='NaN', name=False, footer=True):
         self.categorical = categorical
-        self.buf = buf if buf is not None else StringIO(u"")
+        self.buf = buf if buf is not None else StringIO(u(""))
         self.name = name
         self.na_rep = na_rep
         self.length = length
         self.footer = footer
 
     def _get_footer(self):
-        footer = u''
+        footer = ''
 
         if self.name:
             name = com.pprint_thing(self.categorical.name,
@@ -82,7 +82,7 @@ class CategoricalFormatter(object):
 
         if self.length:
             if footer:
-                footer += u', '
+                footer += ', '
             footer += "Length: %d" % len(self.categorical)
 
         levheader = 'Levels (%d): ' % len(self.categorical.levels)
@@ -94,10 +94,10 @@ class CategoricalFormatter(object):
         levstring = '\n'.join([lines[0]] +
                               [indent + x.lstrip() for x in lines[1:]])
         if footer:
-            footer += u', '
+            footer += ', '
         footer += levheader + levstring
 
-        return footer
+        return compat.text_type(footer)
 
     def _get_formatted_values(self):
         return format_array(np.asarray(self.categorical), None,
@@ -111,18 +111,18 @@ class CategoricalFormatter(object):
             if self.footer:
                 return self._get_footer()
             else:
-                return u''
+                return u('')
 
         fmt_values = self._get_formatted_values()
         pad_space = 10
 
-        result = [u'%s' % i for i in fmt_values]
+        result = ['%s' % i for i in fmt_values]
         if self.footer:
             footer = self._get_footer()
             if footer:
                 result.append(footer)
 
-        return u'\n'.join(result)
+        return compat.text_type(u('\n').join(result))
 
 
 class SeriesFormatter(object):
diff --git a/pandas/tests/test_categorical.py b/pandas/tests/test_categorical.py
index f4d1c6a01..e47ba0c8e 100644
--- a/pandas/tests/test_categorical.py
+++ b/pandas/tests/test_categorical.py
@@ -1,7 +1,7 @@
 # pylint: disable=E1101,E1103,W0232
 
 from datetime import datetime
-from pandas.compat import range, lrange
+from pandas.compat import range, lrange, u
 import unittest
 import nose
 import re
