commit 62119368fed007f4d7ddadd88036ce5569aa5ea7
Author: jreback <jeff@reback.net>
Date:   Tue Jan 15 14:22:17 2013 -0500

    BUG: reading non-well formed generic_tables not working (e.g. detector/readout), where readout is a table
         added pytables_native2.h5 for testing
    
    BUG: force travis to rebuild
    
    BUG: fix travis build 2

diff --git a/pandas/core/reshape.py b/pandas/core/reshape.py
index 7db6d301f..e16fdffd1 100644
--- a/pandas/core/reshape.py
+++ b/pandas/core/reshape.py
@@ -834,5 +834,5 @@ def block2d_to_blocknd(values, items, shape, labels, ref_items=None):
 
 def factor_indexer(shape, labels):
     """ given a tuple of shape and a list of Factor lables, return the expanded label indexer """
-    mult = np.array(shape, dtype = 'i8')[::-1].cumprod()[::-1]
-    return np.sum(np.array(labels, dtype = 'i8').T * np.append(mult, [1]), axis=1).T
+    mult = np.array(shape)[::-1].cumprod()[::-1]
+    return (np.sum(np.array(labels).T * np.append(mult, [1]), axis=1).T).astype('i8')
diff --git a/pandas/io/pytables.py b/pandas/io/pytables.py
index f4b1af63c..5812b8a7e 100644
--- a/pandas/io/pytables.py
+++ b/pandas/io/pytables.py
@@ -612,7 +612,7 @@ class HDFStore(object):
     def groups(self):
         """ return a list of all the top-level nodes (that are not themselves a pandas storage object) """
         _tables()
-        return [ g for g in self.handle.walkGroups() if getattr(g._v_attrs,'pandas_type',None) or getattr(g,'table',None) or isinstance(g,_table_mod.table.Table) ]
+        return [ g for g in self.handle.walkNodes() if getattr(g._v_attrs,'pandas_type',None) or getattr(g,'table',None) or (isinstance(g,_table_mod.table.Table) and g._v_name != 'table') ]
 
     def get_node(self, key):
         """ return the node with the key or None if it does not exist """
diff --git a/pandas/io/tests/pytables_native.h5 b/pandas/io/tests/pytables_native.h5
index 4786eea07..a01b0f1dc 100644
Binary files a/pandas/io/tests/pytables_native.h5 and b/pandas/io/tests/pytables_native.h5 differ
diff --git a/pandas/io/tests/pytables_native2.h5 b/pandas/io/tests/pytables_native2.h5
new file mode 100644
index 000000000..4786eea07
Binary files /dev/null and b/pandas/io/tests/pytables_native2.h5 differ
diff --git a/pandas/io/tests/test_pytables.py b/pandas/io/tests/test_pytables.py
index 19343973d..31cda093a 100644
--- a/pandas/io/tests/test_pytables.py
+++ b/pandas/io/tests/test_pytables.py
@@ -754,7 +754,7 @@ class TestHDFStore(unittest.TestCase):
         x = time.time()
         try:
             store = HDFStore(self.scratchpath)
-            store.prof_append('wp', wp)
+            store.append('wp', wp)
             rows = store.root.wp.table.nrows
             recons = store.select('wp')
         finally:
@@ -1748,9 +1748,11 @@ class TestHDFStore(unittest.TestCase):
     def test_pytables_native_read(self):
         pth = curpath()
         store = HDFStore(os.path.join(pth, 'pytables_native.h5'), 'r')
+        d2 = store['detector/readout']
+        store.close()
+        store = HDFStore(os.path.join(pth, 'pytables_native2.h5'), 'r')
+        str(store)
         d1 = store['detector']
-        d2 = store['detector/table']
-        assert_frame_equal(d1, d2)
         store.close()
 
     def test_legacy_read(self):
@@ -1826,7 +1828,7 @@ class TestHDFStore(unittest.TestCase):
                             if a.is_indexed:
                                 self.assert_(new_t[a.name].is_indexed == True)
 
-            except:
+            except (Exception), detail:
                 pass
             finally:
                 store.close()
