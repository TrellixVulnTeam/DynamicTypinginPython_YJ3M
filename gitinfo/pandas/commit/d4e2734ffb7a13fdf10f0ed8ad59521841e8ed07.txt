commit d4e2734ffb7a13fdf10f0ed8ad59521841e8ed07
Author: Tom Augspurger <TomAugspurger@users.noreply.github.com>
Date:   Mon Jul 15 14:11:13 2019 -0600

    Added 32-bit build (#27274)

diff --git a/ci/azure/posix.yml b/ci/azure/posix.yml
index c5676e0a2..39f862290 100644
--- a/ci/azure/posix.yml
+++ b/ci/azure/posix.yml
@@ -33,6 +33,12 @@ jobs:
           PATTERN: "not slow and not network"
           LOCALE_OVERRIDE: "it_IT.UTF-8"
 
+        py36_32bit:
+          ENV_FILE: ci/deps/azure-36-32bit.yaml
+          CONDA_PY: "36"
+          PATTERN: "not slow and not network"
+          BITS32: "yes"
+
         py37_locale:
           ENV_FILE: ci/deps/azure-37-locale.yaml
           CONDA_PY: "37"
diff --git a/ci/deps/azure-36-32bit.yaml b/ci/deps/azure-36-32bit.yaml
new file mode 100644
index 000000000..43bf0ecdd
--- /dev/null
+++ b/ci/deps/azure-36-32bit.yaml
@@ -0,0 +1,20 @@
+name: pandas-dev
+channels:
+  - defaults
+  - conda-forge
+dependencies:
+  - gcc_linux-32
+  - gcc_linux-32
+  - gxx_linux-32
+  - cython=0.28.2
+  - numpy=1.14.*
+  - python-dateutil
+  - python=3.6.*
+  - pytz=2017.2
+  # universal
+  - pytest>=4.0.2,<5.0.0
+  - pytest-xdist
+  - pytest-mock
+  - pytest-azurepipelines
+  - hypothesis>=3.58.0
+  - pip
diff --git a/ci/setup_env.sh b/ci/setup_env.sh
index 8f73bb228..88742e048 100755
--- a/ci/setup_env.sh
+++ b/ci/setup_env.sh
@@ -94,6 +94,12 @@ echo
 echo "conda env create -q --file=${ENV_FILE}"
 time conda env create -q --file="${ENV_FILE}"
 
+
+if [[ "$BITS32" == "yes" ]]; then
+    # activate 32-bit compiler
+    export CONDA_BUILD=1
+fi
+
 echo "activate pandas-dev"
 source activate pandas-dev
 
diff --git a/pandas/tests/groupby/test_grouping.py b/pandas/tests/groupby/test_grouping.py
index 72099f2fa..403f5f11e 100644
--- a/pandas/tests/groupby/test_grouping.py
+++ b/pandas/tests/groupby/test_grouping.py
@@ -616,7 +616,7 @@ class TestGrouping:
         # check group properties
         assert len(gr.grouper.groupings) == 1
         tm.assert_numpy_array_equal(
-            gr.grouper.group_info[0], np.array([], dtype=np.dtype("intp"))
+            gr.grouper.group_info[0], np.array([], dtype=np.dtype("int64"))
         )
 
         tm.assert_numpy_array_equal(
