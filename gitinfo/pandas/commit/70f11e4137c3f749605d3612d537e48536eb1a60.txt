commit 70f11e4137c3f749605d3612d537e48536eb1a60
Author: Ben Schiller <ben.schiller@invitae.com>
Date:   Fri Sep 26 16:32:48 2014 -0700

    Fix VECTOR_TYPES and NA_TYPES dicts used for pd DataFrame <-> R data.frame conversion
    
    added commas to dict
    
    string_ not string
    
    changed parse_version to LooseVersion
    
    Updated release notes

diff --git a/doc/source/v0.15.0.txt b/doc/source/v0.15.0.txt
index f0c1d1d89..cd62f2228 100644
--- a/doc/source/v0.15.0.txt
+++ b/doc/source/v0.15.0.txt
@@ -287,7 +287,7 @@ API changes
 - ``DataFrame.info()`` now ends its output with a newline character (:issue:`8114`)
 - add ``copy=True`` argument to ``pd.concat`` to enable pass thrue of complete blocks (:issue:`8252`)
 
-
+- Added support for numpy 1.8+ data types (bool_, int_, float_, string_) for conversion to R dataframe  (:issue:`8400`)
 
 .. _whatsnew_0150.dt:
 
diff --git a/pandas/rpy/common.py b/pandas/rpy/common.py
index 5747285de..55adad361 100644
--- a/pandas/rpy/common.py
+++ b/pandas/rpy/common.py
@@ -4,6 +4,7 @@ developer-friendly.
 """
 from __future__ import print_function
 
+from distutils.version import LooseVersion
 from pandas.compat import zip, range
 import numpy as np
 
@@ -72,7 +73,7 @@ def _convert_array(obj):
             return list(item)
         except TypeError:
             return []
-        
+
     # For iris3, HairEyeColor, UCBAdmissions, Titanic
     dim = list(obj.dim)
     values = np.array(list(obj))
@@ -101,9 +102,9 @@ def _convert_vector(obj):
     except AttributeError:
         return list(obj)
     if 'names' in attributes:
-        return pd.Series(list(obj), index=r['names'](obj)) 
+        return pd.Series(list(obj), index=r['names'](obj))
     elif 'tsp' in attributes:
-        return pd.Series(list(obj), index=r['time'](obj)) 
+        return pd.Series(list(obj), index=r['time'](obj))
     elif 'labels' in attributes:
         return pd.Series(list(obj), index=r['labels'](obj))
     if _rclass(obj) == 'dist':
@@ -268,6 +269,7 @@ VECTOR_TYPES = {np.float64: robj.FloatVector,
                 np.str: robj.StrVector,
                 np.bool: robj.BoolVector}
 
+
 NA_TYPES = {np.float64: robj.NA_Real,
             np.float32: robj.NA_Real,
             np.float: robj.NA_Real,
@@ -279,6 +281,16 @@ NA_TYPES = {np.float64: robj.NA_Real,
             np.bool: robj.NA_Logical}
 
 
+if LooseVersion(np.__version__) >= LooseVersion('1.8'):
+    for dict_ in (VECTOR_TYPES, NA_TYPES):
+        dict_.update({
+            np.bool_: dict_[np.bool],
+            np.int_: dict_[np.int],
+            np.float_: dict_[np.float],
+            np.string_: dict_[np.str]
+        })
+
+
 def convert_to_r_dataframe(df, strings_as_factors=False):
     """
     Convert a pandas DataFrame to a R data.frame.
