commit 84d3a4a8d14cd147ec91821bead8fe6a60fd5de1
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Mon Apr 30 16:09:29 2012 -0400

    BLD: get rid of parse_python_string for python 2.5

diff --git a/pandas/src/datetime.pxd b/pandas/src/datetime.pxd
index e89be7f52..ecb81a7c5 100644
--- a/pandas/src/datetime.pxd
+++ b/pandas/src/datetime.pxd
@@ -96,7 +96,7 @@ cdef extern from "np_datetime_strings.h":
 
     int get_datetime_iso_8601_strlen(int local, NPY_DATETIMEUNIT base)
 
-    int parse_python_string(object obj, npy_datetimestruct *out) except -1
+    # int parse_python_string(object obj, npy_datetimestruct *out) except -1
 
 cdef extern from "period.h":
     ctypedef struct date_info:
diff --git a/pandas/src/np_datetime_strings.c b/pandas/src/np_datetime_strings.c
index 132b6811d..5382fd8e4 100644
--- a/pandas/src/np_datetime_strings.c
+++ b/pandas/src/np_datetime_strings.c
@@ -305,39 +305,39 @@ convert_datetimestruct_local_to_utc(npy_datetimestruct *out_dts_utc,
     return 0;
 }
 
-int
-parse_python_string(PyObject* obj, npy_datetimestruct *dts) {
-    PyObject *bytes = NULL;
-    char *str = NULL;
-    Py_ssize_t len = 0;
-    NPY_DATETIMEUNIT bestunit = -1;
-
-    /* Convert to an ASCII string for the date parser */
-    if (PyUnicode_Check(obj)) {
-        bytes = PyUnicode_AsASCIIString(obj);
-        if (bytes == NULL) {
-            return -1;
-        }
-    }
-    else {
-        bytes = obj;
-        Py_INCREF(bytes);
-    }
-    if (PyBytes_AsStringAndSize(bytes, &str, &len) == -1) {
-        Py_DECREF(bytes);
-        return -1;
-    }
-
-    /* Parse the ISO date */
-    if (parse_iso_8601_datetime(str, len, NPY_FR_us, NPY_UNSAFE_CASTING,
-                            &dts, NULL, &bestunit, NULL) < 0) {
-        Py_DECREF(bytes);
-        return -1;
-    }
-    Py_DECREF(bytes);
-
-    return 0;
-}
+/* int */
+/* parse_python_string(PyObject* obj, npy_datetimestruct *dts) { */
+/*     PyObject *bytes = NULL; */
+/*     char *str = NULL; */
+/*     Py_ssize_t len = 0; */
+/*     NPY_DATETIMEUNIT bestunit = -1; */
+
+/*     /\* Convert to an ASCII string for the date parser *\/ */
+/*     if (PyUnicode_Check(obj)) { */
+/*         bytes = PyUnicode_AsASCIIString(obj); */
+/*         if (bytes == NULL) { */
+/*             return -1; */
+/*         } */
+/*     } */
+/*     else { */
+/*         bytes = obj; */
+/*         Py_INCREF(bytes); */
+/*     } */
+/*     if (PyBytes_AsStringAndSize(bytes, &str, &len) == -1) { */
+/*         Py_DECREF(bytes); */
+/*         return -1; */
+/*     } */
+
+/*     /\* Parse the ISO date *\/ */
+/*     if (parse_iso_8601_datetime(str, len, NPY_FR_us, NPY_UNSAFE_CASTING, */
+/*                             dts, NULL, &bestunit, NULL) < 0) { */
+/*         Py_DECREF(bytes); */
+/*         return -1; */
+/*     } */
+/*     Py_DECREF(bytes); */
+
+/*     return 0; */
+/* } */
 
 
 /*
