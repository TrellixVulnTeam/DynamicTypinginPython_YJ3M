commit 872d8c510806b27095d1f4c126dc482a3e2f433d
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Sun Dec 11 23:06:55 2011 -0500

    BUG: handle floating point values when storing the index in HDF5, GH #454

diff --git a/pandas/core/common.py b/pandas/core/common.py
index 01c1b3208..cfd798348 100644
--- a/pandas/core/common.py
+++ b/pandas/core/common.py
@@ -661,7 +661,10 @@ def _asarray_tuplesafe(values, dtype=None):
     return result
 
 def is_integer(obj):
-    return isinstance(obj, (int, np.integer))
+    return isinstance(obj, (int, long, np.integer))
+
+def is_float(obj):
+    return isinstance(obj, (float, np.floating))
 
 def is_integer_dtype(arr):
     return issubclass(arr.dtype.type, np.integer)
diff --git a/pandas/io/pytables.py b/pandas/io/pytables.py
index 8b8ac500c..866060ef1 100644
--- a/pandas/io/pytables.py
+++ b/pandas/io/pytables.py
@@ -12,6 +12,7 @@ import numpy as np
 from pandas import (Series, TimeSeries, DataFrame, Panel, LongPanel,
                     Index, MultiIndex)
 from pandas.core.common import adjoin
+import pandas.core.common as com
 import pandas._tseries as lib
 
 # reading and writing the full object in one go
@@ -724,10 +725,13 @@ def _convert_index(index):
         converted = np.array(list(values), dtype=np.str_)
         itemsize = converted.dtype.itemsize
         return converted, 'string', _tables().StringCol(itemsize)
-    elif isinstance(values[0], (long, int, np.integer)):
+    elif com.is_integer(values[0]):
         # take a guess for now, hope the values fit
         atom = _tables().Int64Col()
         return np.asarray(values, dtype=np.int64), 'integer', atom
+    elif com.is_float(values[0]):
+        atom = _tables().Float64Col()
+        return np.asarray(values, dtype=np.float64), 'float', atom
     else: # pragma: no cover
         raise ValueError('unrecognized index type %s' % type(values[0]))
 
@@ -749,8 +753,8 @@ def _unconvert_index(data, kind):
         index = np.array([date.fromtimestamp(v) for v in data],
                          dtype=object)
 
-    elif kind in ('string', 'integer'):
-        index = np.array(data, dtype=object)
+    elif kind in ('string', 'integer', 'float'):
+        index = np.array(data)
     else: # pragma: no cover
         raise ValueError('unrecognized index type %s' % kind)
     return index
diff --git a/pandas/io/tests/test_pytables.py b/pandas/io/tests/test_pytables.py
index 6d980d8b1..9c17a95ad 100644
--- a/pandas/io/tests/test_pytables.py
+++ b/pandas/io/tests/test_pytables.py
@@ -173,6 +173,12 @@ class TesttHDFStore(unittest.TestCase):
         ts = tm.makeTimeSeries()
         self._check_roundtrip(ts, tm.assert_series_equal)
 
+    def test_float_index(self):
+        # GH #454
+        index = np.random.randn(10)
+        s = Series(np.random.randn(10), index=index)
+        self._check_roundtrip(s, tm.assert_series_equal)
+
     def test_timeseries_preepoch(self):
         if sys.version_info[0] == 2 and sys.version_info[1] < 7:
             raise nose.SkipTest
