commit ff213553080889e3159b47879e880cb633011077
Author: jreback <jeff@reback.net>
Date:   Sat Dec 1 14:35:32 2012 -0500

    added test for trying to write to legacy_tables (which now fails correctly)

diff --git a/.gitignore b/.gitignore
index 320f03a01..eb26b3ced 100644
--- a/.gitignore
+++ b/.gitignore
@@ -11,6 +11,7 @@ MANIFEST
 *.cpp
 *.so
 *.pyd
+*.h5
 pandas/version.py
 doc/source/generated
 doc/source/_static
diff --git a/pandas/io/pytables.py b/pandas/io/pytables.py
index bfe447cf0..8af7151cb 100644
--- a/pandas/io/pytables.py
+++ b/pandas/io/pytables.py
@@ -1355,6 +1355,9 @@ class LegacyTable(Table):
     _indexables = [Col(name = 'index'),Col(name = 'column', index_kind = 'columns_kind'), DataCol(name = 'fields', cname = 'values', kind_attr = 'fields') ]
     table_type = 'legacy'
 
+    def write(self, **kwargs):
+        raise Exception("write operations are not allowed on legacy tables!")
+
     def read(self, where=None):
         """ we have 2 indexable columns, with an arbitrary number of data axes """
 
@@ -1429,6 +1432,21 @@ class LegacyTable(Table):
 
         return wp
 
+class LegacyFrameTable(LegacyTable):
+    """ support the legacy frame table """
+    table_type = 'legacy_frame'
+    def read(self, *args, **kwargs):
+        return super(LegacyFrameTable, self).read(*args, **kwargs)['value']
+
+class LegacyPanelTable(LegacyTable):
+    """ support the legacy panel table """
+    table_type = 'legacy_panel'
+
+class AppendableTable(LegacyTable):
+    """ suppor the new appendable table formats """
+    _indexables = None
+    table_type = 'appendable'
+
     def write(self, axes_to_index, obj, append=False, compression=None,
               complevel=None, min_itemsize = None, **kwargs):
 
@@ -1537,22 +1555,6 @@ class LegacyTable(Table):
         # return the number of rows removed
         return ln
 
-
-class LegacyFrameTable(LegacyTable):
-    """ support the legacy frame table """
-    table_type = 'legacy_frame'
-    def read(self, *args, **kwargs):
-        return super(LegacyFrameTable, self).read(*args, **kwargs)['value']
-
-class LegacyPanelTable(LegacyTable):
-    """ support the legacy panel table """
-    table_type = 'legacy_panel'
-
-class AppendableTable(LegacyTable):
-    """ suppor the new appendable table formats """
-    _indexables = None
-    table_type = 'appendable'
-
 class AppendableFrameTable(AppendableTable):
     """ suppor the new appendable table formats """
     table_type = 'appendable_frame'
diff --git a/pandas/io/tests/test_pytables.py b/pandas/io/tests/test_pytables.py
index bc949a859..2e37e4840 100644
--- a/pandas/io/tests/test_pytables.py
+++ b/pandas/io/tests/test_pytables.py
@@ -898,6 +898,19 @@ class TestHDFStore(unittest.TestCase):
         store.select('wp1')
         store.close()
 
+    def test_legacy_table_write(self):
+        # legacy table types
+        pth = curpath()
+        df = tm.makeDataFrame()
+        wp = tm.makePanel()
+
+        store = HDFStore(os.path.join(pth, 'legacy_table.h5'), 'a')
+
+        self.assertRaises(Exception, store.append, 'df1', df)
+        self.assertRaises(Exception, store.append, 'wp1', wp)
+
+        store.close()
+
     def test_store_datetime_fractional_secs(self):
         dt = datetime(2012, 1, 2, 3, 4, 5, 123456)
         series = Series([0], [dt])
