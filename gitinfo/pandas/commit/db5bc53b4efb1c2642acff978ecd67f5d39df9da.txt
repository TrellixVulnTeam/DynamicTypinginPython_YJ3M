commit db5bc53b4efb1c2642acff978ecd67f5d39df9da
Author: Paul Ivanov <pivanov314@gmail.com>
Date:   Tue Aug 7 14:40:12 2012 -0700

    ENH: inplace keyword argument for df.reset_index

diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index dc5c6c0f6..683f0e468 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -2335,7 +2335,7 @@ class DataFrame(NDFrame):
         frame.index = index
         return frame
 
-    def reset_index(self, level=None, drop=False):
+    def reset_index(self, level=None, drop=False, inplace=False):
         """
         For DataFrame with multi-level index, return new DataFrame with
         labeling information in the columns under the index names, defaulting
@@ -2350,12 +2350,17 @@ class DataFrame(NDFrame):
             default
         drop : boolean, default False
             Do not try to insert index into dataframe columns
+        inplace : boolean, default False
+            Modify the DataFrame in place (do not create a new object)
 
         Returns
         -------
         resetted : DataFrame
         """
-        new_obj = self.copy()
+        if inplace:
+            new_obj  = self
+        else:
+            new_obj = self.copy()
 
         def _maybe_cast(values):
             if values.dtype == np.object_:
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index aab353a7e..da760860c 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -6273,6 +6273,12 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
         xp = self.frame.reset_index().set_index(['index', 'B'])
         assert_frame_equal(rs, xp)
 
+        #test resetting in place
+        df = self.frame.copy()
+        resetted = self.frame.reset_index()
+        df.reset_index(inplace=True)
+        assert_frame_equal(df, resetted)
+
     def test_reset_index_right_dtype(self):
         time = np.arange(0.0, 10, np.sqrt(2)/2)
         s1 = Series((9.81 * time ** 2) /2,
