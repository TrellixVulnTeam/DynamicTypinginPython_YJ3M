commit 0eb158745b484e7560d46135f9a42af2eed1d198
Author: Terry Santegoeds <terry.santegoeds@ahl.com>
Date:   Mon Jun 29 14:42:54 2015 +0100

    BUG: Fix csv_read bugs when using empty input. GH10467 & GH10413

diff --git a/doc/source/whatsnew/v0.17.0.txt b/doc/source/whatsnew/v0.17.0.txt
index da16734dc..6b2985414 100644
--- a/doc/source/whatsnew/v0.17.0.txt
+++ b/doc/source/whatsnew/v0.17.0.txt
@@ -134,3 +134,5 @@ Bug Fixes
 
 - Bug in `pandas.concat` with ``axis=0`` when column is of dtype ``category`` (:issue:`10177`)
 - Bug in ``read_msgpack`` where input type is not always checked (:issue:`10369`)
+
+- Bug in `pandas.read_csv` with ``index_col=False`` or with ``index_col=['a', 'b']``  (:issue:`10413`, :issue:`10467`)
diff --git a/pandas/io/parsers.py b/pandas/io/parsers.py
index dd972150d..67bc20b80 100755
--- a/pandas/io/parsers.py
+++ b/pandas/io/parsers.py
@@ -2223,13 +2223,13 @@ def _clean_index_names(columns, index_col):
 def _get_empty_meta(columns, index_col, index_names):
     columns = list(columns)
 
-    if index_col is not None:
-        index = MultiIndex.from_arrays([[]] * len(index_col),
-                                       names=index_names)
-        for n in index_col:
-            columns.pop(n)
-    else:
+    if index_col is None or index_col is False:
         index = Index([])
+    else:
+        index_col = list(index_col)
+        index = MultiIndex.from_arrays([[]] * len(index_col), names=index_names)
+        for i, n in enumerate(index_col):
+            columns.pop(n-i)
 
     return index, columns, {}
 
diff --git a/pandas/io/tests/test_parsers.py b/pandas/io/tests/test_parsers.py
index 52430bb6e..2cd3b5421 100755
--- a/pandas/io/tests/test_parsers.py
+++ b/pandas/io/tests/test_parsers.py
@@ -2301,6 +2301,20 @@ MyColumn
         expected = DataFrame([], columns=['y'], index=Index([], name='x'))
         tm.assert_frame_equal(result, expected)
 
+    def test_emtpy_with_multiindex(self):
+        # GH 10467
+        data = 'x,y,z'
+        result = self.read_csv(StringIO(data), index_col=['x', 'y'])
+        expected = DataFrame([], columns=['z'], index=MultiIndex.from_arrays([[]] * 2, names=['x', 'y']))
+        tm.assert_frame_equal(result, expected)
+
+    def test_empty_with_index_col_false(self):
+        # GH 10413
+        data = 'x,y'
+        result = self.read_csv(StringIO(data), index_col=False)
+        expected = DataFrame([], columns=['x', 'y'])
+        tm.assert_frame_equal(result, expected)
+
     def test_float_parser(self):
         # GH 9565
         data = '45e-1,4.5,45.,inf,-inf'
