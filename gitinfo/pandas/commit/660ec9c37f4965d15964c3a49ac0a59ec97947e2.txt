commit 660ec9c37f4965d15964c3a49ac0a59ec97947e2
Author: jreback <jeff@reback.net>
Date:   Sun Mar 24 17:37:55 2013 -0400

    DOC: minor edits in io.rst

diff --git a/doc/source/cookbook.rst b/doc/source/cookbook.rst
index 1d8701368..12140bcc6 100644
--- a/doc/source/cookbook.rst
+++ b/doc/source/cookbook.rst
@@ -127,12 +127,18 @@ Splitting
 `Splitting a frame
 <http://stackoverflow.com/questions/13353233/best-way-to-split-a-dataframe-given-an-edge/15449992#15449992>`__
 
+.. _cookbook.pivot:
+
 Pivot
 ~~~~~
+The :ref:`Pivot <reshaping.pivot>` docs.
 
 `Partial sums and subtotals
 <http://stackoverflow.com/questions/15570099/pandas-pivot-tables-row-subtotals/15574875#15574875>`__
 
+`Frequency table like plyr in R
+<http://stackoverflow.com/questions/15589354/frequency-tables-in-pandas-like-plyr-in-r>`__
+
 Timeseries
 ----------
 
diff --git a/doc/source/groupby.rst b/doc/source/groupby.rst
index 107200a82..c18cfbd01 100644
--- a/doc/source/groupby.rst
+++ b/doc/source/groupby.rst
@@ -59,7 +59,7 @@ We aim to make operations like this natural and easy to express using
 pandas. We'll address each area of GroupBy functionality then provide some
 non-trivial examples / use cases.
 
-See some :ref:`cookbook examples <cookbook.grouping>` for some advanced strategies
+See the :ref:`cookbook<cookbook.grouping>` for some advanced strategies
 
 .. _groupby.split:
 
diff --git a/doc/source/indexing.rst b/doc/source/indexing.rst
index 272a22431..3222176af 100644
--- a/doc/source/indexing.rst
+++ b/doc/source/indexing.rst
@@ -32,7 +32,7 @@ attention in this area. Expect more work to be invested higher-dimensional data
 structures (including Panel) in the future, especially in label-based advanced
 indexing.
 
-See some :ref:`cookbook examples <cookbook.selection>` for some advanced strategies
+See the :ref:`cookbook<cookbook.selection>` for some advanced strategies
 
 Choice
 ------
@@ -920,7 +920,7 @@ described above and in prior sections. Later, when discussing :ref:`group by
 non-trivial applications to illustrate how it aids in structuring data for
 analysis.
 
-See some :ref:`cookbook examples <cookbook.multi_index>` for some advanced strategies
+See the :ref:`cookbook<cookbook.multi_index>` for some advanced strategies
 
 .. note::
 
diff --git a/doc/source/io.rst b/doc/source/io.rst
index a244b9c54..1bcaf0475 100644
--- a/doc/source/io.rst
+++ b/doc/source/io.rst
@@ -35,10 +35,10 @@ CSV & Text files
 The two workhorse functions for reading text files (a.k.a. flat files) are
 :func:`~pandas.io.parsers.read_csv` and :func:`~pandas.io.parsers.read_table`.
 They both use the same parsing code to intelligently convert tabular
-data into a DataFrame object. They can take a number of arguments:
+data into a DataFrame object. See the :ref:`cookbook<cookbook.csv>` 
+for some advanced strategies
 
-See some :ref:`cookbook examples <cookbook.csv>` for some advanced strategies
-See some :ref:`cookbook examples <cookbook.csv>` for some advanced strategies
+They can take a number of arguments:
 
   - ``filepath_or_buffer``: Either a string path to a file, or any object with a
     ``read`` method (such as an open file or ``StringIO``).
@@ -917,9 +917,10 @@ Excel files
 
 The ``ExcelFile`` class can read an Excel 2003 file using the ``xlrd`` Python
 module and use the same parsing code as the above to convert tabular data into
-a DataFrame. To use it, create the ``ExcelFile`` object:
+a DataFrame. See the :ref:`cookbook<cookbook.excel>` for some 
+advanced strategies
 
-See some :ref:`cookbook examples <cookbook.excel>` for some advanced strategies
+To use it, create the ``ExcelFile`` object:
 
 .. code-block:: python
 
@@ -985,9 +986,8 @@ HDF5 (PyTables)
 
 ``HDFStore`` is a dict-like object which reads and writes pandas using
 the high performance HDF5 format using the excellent `PyTables
-<http://www.pytables.org/>`__ library.
-
-See some :ref:`cookbook examples <cookbook.hdf>` for some advanced strategies
+<http://www.pytables.org/>`__ library. See the :ref:`cookbook<cookbook.hdf>`
+for some advanced strategies
 
 .. ipython:: python
    :suppress:
@@ -1696,9 +1696,8 @@ SQL Queries
 The :mod:`pandas.io.sql` module provides a collection of query wrappers to both
 facilitate data retrieval and to reduce dependency on DB-specific API. There
 wrappers only support the Python database adapters which respect the `Python
-DB-API <http://www.python.org/dev/peps/pep-0249/>`_.
-
-See some :ref:`cookbook examples <cookbook.sql>` for some advanced strategies
+DB-API <http://www.python.org/dev/peps/pep-0249/>`_. See some 
+:ref:`cookbook examples <cookbook.sql>` for some advanced strategies
 
 Suppose you want to query some data with different types from a table such as:
 
diff --git a/doc/source/merging.rst b/doc/source/merging.rst
index 1495e9218..b719f0c24 100644
--- a/doc/source/merging.rst
+++ b/doc/source/merging.rst
@@ -304,7 +304,7 @@ better) than other open source implementations (like ``base::merge.data.frame``
 in R). The reason for this is careful algorithmic design and internal layout of
 the data in DataFrame.
 
-See some :ref:`cookbook examples <cookbook.merge>` for some advanced strategies
+See the :ref:`cookbook<cookbook.merge>` for some advanced strategies
 
 pandas provides a single function, ``merge``, as the entry point for all
 standard database join operations between DataFrame objects:
diff --git a/doc/source/reshaping.rst b/doc/source/reshaping.rst
index 7f799a8e8..9a7a9c2a8 100644
--- a/doc/source/reshaping.rst
+++ b/doc/source/reshaping.rst
@@ -239,7 +239,9 @@ Pivot tables and cross-tabulations
 .. _reshaping.pivot:
 
 The function ``pandas.pivot_table`` can be used to create spreadsheet-style pivot
-tables. It takes a number of arguments
+tables. See the :ref:`cookbook<cookbook.pivot>` for some advanced strategies
+
+It takes a number of arguments
 
 - ``data``: A DataFrame object
 - ``values``: a column or a list of columns to aggregate
diff --git a/doc/source/visualization.rst b/doc/source/visualization.rst
index 97e7661cd..da1f092a1 100644
--- a/doc/source/visualization.rst
+++ b/doc/source/visualization.rst
@@ -33,7 +33,7 @@ We use the standard convention for referencing the matplotlib API:
 Basic plotting: ``plot``
 ------------------------
 
-See some :ref:`cookbook examples <cookbook.plotting>` for some advanced strategies
+See the :ref:`cookbook<cookbook.plotting>` for some advanced strategies
 
 The ``plot`` method on Series and DataFrame is just a simple wrapper around
 ``plt.plot``:
