commit d6c7a3a884232948a198ba4a9475325cacb5ca98
Author: Jeff Reback <jeff@reback.net>
Date:   Sat Oct 3 11:43:43 2015 -0400

    COMPAT: skip some test on 32-bit platforms for ordering issues

diff --git a/pandas/compat/__init__.py b/pandas/compat/__init__.py
index ba5114dd7..9df53bd32 100644
--- a/pandas/compat/__init__.py
+++ b/pandas/compat/__init__.py
@@ -36,6 +36,7 @@ from itertools import product
 import sys
 import types
 from unicodedata import east_asian_width
+import struct
 
 PY2 = sys.version_info[0] == 2
 PY3 = (sys.version_info[0] >= 3)
@@ -800,10 +801,11 @@ class OrderedDefaultdict(OrderedDict):
 def is_platform_windows():
     return sys.platform == 'win32' or sys.platform == 'cygwin'
 
-
 def is_platform_linux():
     return sys.platform == 'linux2'
 
-
 def is_platform_mac():
     return sys.platform == 'darwin'
+
+def is_platform_32bit():
+    return struct.calcsize("P") * 8 < 64
diff --git a/pandas/tests/test_algos.py b/pandas/tests/test_algos.py
index 6164b1b49..3c9931b93 100644
--- a/pandas/tests/test_algos.py
+++ b/pandas/tests/test_algos.py
@@ -7,6 +7,7 @@ from numpy.random import RandomState
 from pandas.core.api import Series, Categorical, CategoricalIndex
 import pandas as pd
 
+from pandas import compat
 import pandas.core.algorithms as algos
 import pandas.util.testing as tm
 import pandas.hashtable as hashtable
@@ -405,7 +406,6 @@ class TestValueCounts(tm.TestCase):
         tm.assert_series_equal(
             pd.Series([True, True, False, None]).value_counts(dropna=False),
             pd.Series([2, 1, 1], index=[True, False, np.nan]))
-
         tm.assert_series_equal(
             pd.Series([10.3, 5., 5.]).value_counts(dropna=True),
             pd.Series([2, 1], index=[5., 10.3]))
@@ -416,9 +416,12 @@ class TestValueCounts(tm.TestCase):
         tm.assert_series_equal(
             pd.Series([10.3, 5., 5., None]).value_counts(dropna=True),
             pd.Series([2, 1], index=[5., 10.3]))
-        tm.assert_series_equal(
-            pd.Series([10.3, 5., 5., None]).value_counts(dropna=False),
-            pd.Series([2, 1, 1], index=[5., 10.3, np.nan]))
+
+        # 32-bit linux has a different ordering
+        if not compat.is_platform_32bit():
+            tm.assert_series_equal(
+                pd.Series([10.3, 5., 5., None]).value_counts(dropna=False),
+                pd.Series([2, 1, 1], index=[5., 10.3, np.nan]))
 
 
 class GroupVarTestMixin(object):
diff --git a/pandas/util/testing.py b/pandas/util/testing.py
index d70e6349d..362351c7c 100644
--- a/pandas/util/testing.py
+++ b/pandas/util/testing.py
@@ -31,7 +31,7 @@ from pandas.core.common import (is_sequence, array_equivalent, is_list_like, is_
 import pandas.compat as compat
 from pandas.compat import(
     filter, map, zip, range, unichr, lrange, lmap, lzip, u, callable, Counter,
-    raise_with_traceback, httplib, is_platform_windows
+    raise_with_traceback, httplib, is_platform_windows, is_platform_32bit
 )
 
 from pandas.computation import expressions as expr
@@ -176,8 +176,7 @@ def close(fignum=None):
 
 def _skip_if_32bit():
     import nose
-    import struct
-    if struct.calcsize("P") * 8 < 64:
+    if is_platform_32bit():
         raise nose.SkipTest("skipping for 32 bit")
 
 def mplskip(cls):
