commit 5983b4635439390b7532bd5ee891b3a9c05f8769
Author: jbrockmendel <jbrockmendel@gmail.com>
Date:   Thu Nov 7 13:21:42 2019 -0800

    CLN: remove dead code, closes #28898 (#29470)

diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 40efc4c65..c9111812e 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -2731,38 +2731,6 @@ class DataFrame(NDFrame):
 
     T = property(transpose)
 
-    # ----------------------------------------------------------------------
-    # Picklability
-
-    # legacy pickle formats
-    def _unpickle_frame_compat(self, state):  # pragma: no cover
-        if len(state) == 2:  # pragma: no cover
-            series, idx = state
-            columns = sorted(series)
-        else:
-            series, cols, idx = state
-            columns = com._unpickle_array(cols)
-
-        index = com._unpickle_array(idx)
-        self._data = self._init_dict(series, index, columns, None)
-
-    def _unpickle_matrix_compat(self, state):  # pragma: no cover
-        # old unpickling
-        (vals, idx, cols), object_state = state
-
-        index = com._unpickle_array(idx)
-        dm = DataFrame(vals, index=index, columns=com._unpickle_array(cols), copy=False)
-
-        if object_state is not None:
-            ovals, _, ocols = object_state
-            objects = DataFrame(
-                ovals, index=index, columns=com._unpickle_array(ocols), copy=False
-            )
-
-            dm = dm.join(objects)
-
-        self._data = dm._data
-
     # ----------------------------------------------------------------------
     # Indexing Methods
 
diff --git a/pandas/core/generic.py b/pandas/core/generic.py
index 2c778b701..73ec96d61 100644
--- a/pandas/core/generic.py
+++ b/pandas/core/generic.py
@@ -2089,18 +2089,8 @@ class NDFrame(PandasObject, SelectionMixin):
 
             else:
                 self._unpickle_series_compat(state)
-        elif isinstance(state[0], dict):
-            if len(state) == 5:
-                self._unpickle_sparse_frame_compat(state)
-            else:
-                self._unpickle_frame_compat(state)
-        elif len(state) == 4:
-            self._unpickle_panel_compat(state)
         elif len(state) == 2:
             self._unpickle_series_compat(state)
-        else:  # pragma: no cover
-            # old pickling format, for compatibility
-            self._unpickle_matrix_compat(state)
 
         self._item_cache = {}
 
diff --git a/pandas/io/pickle.py b/pandas/io/pickle.py
index 8f9bae0f7..5e066c4f9 100644
--- a/pandas/io/pickle.py
+++ b/pandas/io/pickle.py
@@ -1,10 +1,7 @@
 """ pickle compat """
-from io import BytesIO
 import pickle
 import warnings
 
-from numpy.lib.format import read_array
-
 from pandas.compat import PY36, pickle_compat as pc
 
 from pandas.io.common import _get_handle, _stringify_path
@@ -164,12 +161,3 @@ def read_pickle(path, compression="infer"):
         f.close()
         for _f in fh:
             _f.close()
-
-
-# compat with sparse pickle / unpickle
-
-
-def _unpickle_array(bytes):
-    arr = read_array(BytesIO(bytes))
-
-    return arr
