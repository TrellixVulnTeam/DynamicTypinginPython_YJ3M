commit 73bacad0c5dec527171e9b8e801c66f3959a74b8
Author: Jeff Reback <jeff@reback.net>
Date:   Wed Dec 3 21:45:00 2014 -0500

    TST: skip test for test_precise_conversion GH8646

diff --git a/pandas/io/tests/test_parsers.py b/pandas/io/tests/test_parsers.py
index 05a5493d0..2f211ab03 100644
--- a/pandas/io/tests/test_parsers.py
+++ b/pandas/io/tests/test_parsers.py
@@ -3049,31 +3049,23 @@ A,B,C
         tm.assert_almost_equal(df.values, expected)
 
     def test_trailing_spaces(self):
-        data = """A B C  
-random line with trailing spaces    
-skip
-1,2,3
-1,2.,4.
-random line with trailing tabs\t\t\t
-     
-5.1,NaN,10.0
-"""
+        data = "A B C  \nrandom line with trailing spaces    \nskip\n1,2,3\n1,2.,4.\nrandom line with trailing tabs\t\t\t\n   \n5.1,NaN,10.0\n"
         expected = pd.DataFrame([[1., 2., 4.],
                     [5.1, np.nan, 10.]])
-        # this should ignore six lines including lines with trailing 
+        # this should ignore six lines including lines with trailing
         # whitespace and blank lines.  issues 8661, 8679
-        df = self.read_csv(StringIO(data.replace(',', '  ')), 
+        df = self.read_csv(StringIO(data.replace(',', '  ')),
                            header=None, delim_whitespace=True,
                            skiprows=[0,1,2,3,5,6], skip_blank_lines=True)
         tm.assert_frame_equal(df, expected)
-        df = self.read_table(StringIO(data.replace(',', '  ')), 
+        df = self.read_table(StringIO(data.replace(',', '  ')),
                              header=None, delim_whitespace=True,
                              skiprows=[0,1,2,3,5,6], skip_blank_lines=True)
         tm.assert_frame_equal(df, expected)
         # test skipping set of rows after a row with trailing spaces, issue #8983
-        expected = pd.DataFrame({"A":[1., 5.1], "B":[2., np.nan], 
+        expected = pd.DataFrame({"A":[1., 5.1], "B":[2., np.nan],
                                 "C":[4., 10]})
-        df = self.read_table(StringIO(data.replace(',', '  ')), 
+        df = self.read_table(StringIO(data.replace(',', '  ')),
                              delim_whitespace=True,
                              skiprows=[1,2,3,5,6], skip_blank_lines=True)
         tm.assert_frame_equal(df, expected)
@@ -3265,6 +3257,7 @@ class TestCParserLowMemory(ParserTests, tm.TestCase):
 
     def test_precise_conversion(self):
         # GH #8002
+        tm._skip_if_32bit()
         from decimal import Decimal
         normal_errors = []
         precise_errors = []
diff --git a/pandas/util/testing.py b/pandas/util/testing.py
index 6a71160a0..5674e16d6 100644
--- a/pandas/util/testing.py
+++ b/pandas/util/testing.py
@@ -171,6 +171,11 @@ def close(fignum=None):
         _close(fignum)
 
 
+def _skip_if_32bit():
+    import struct
+    if struct.calcsize("P") * 8 < 64:
+        raise nose.SkipTest("skipping for 32 bit")
+
 def mplskip(cls):
     """Skip a TestCase instance if matplotlib isn't installed"""
 
@@ -1761,4 +1766,3 @@ def use_numexpr(use, min_elements=expr._MIN_ELEMENTS):
 for name, obj in inspect.getmembers(sys.modules[__name__]):
     if inspect.isfunction(obj) and name.startswith('assert'):
         setattr(TestCase, name, staticmethod(obj))
-
