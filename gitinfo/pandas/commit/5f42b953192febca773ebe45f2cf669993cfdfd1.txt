commit 5f42b953192febca773ebe45f2cf669993cfdfd1
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Sat Jan 5 14:51:18 2013 -0500

    ENH: enable pivot_table with more complex aggregation function and hack multiple level column unstacking into existing hierarchical columns. close #2643

diff --git a/pandas/core/index.py b/pandas/core/index.py
index 8ac5f6feb..ecf924f62 100644
--- a/pandas/core/index.py
+++ b/pandas/core/index.py
@@ -753,6 +753,22 @@ class Index(np.ndarray):
         """
         self._engine.set_value(arr, key, value)
 
+    def get_level_values(self, level):
+        """
+        Return vector of label values for requested level, equal to the length
+        of the index
+
+        Parameters
+        ----------
+        level : int
+
+        Returns
+        -------
+        values : ndarray
+        """
+        num = self._get_level_number(level)
+        return self
+
     def get_indexer(self, target, method=None, limit=None):
         """
         Compute indexer and mask for new index given the current index. The
diff --git a/pandas/core/reshape.py b/pandas/core/reshape.py
index 86923df06..fb175cc9c 100644
--- a/pandas/core/reshape.py
+++ b/pandas/core/reshape.py
@@ -244,8 +244,10 @@ def _unstack_multiple(data, clocs):
         new_labels = recons_labels
     else:
         if isinstance(data.columns, MultiIndex):
-            raise NotImplementedError('Unstacking multiple levels with '
-                                      'hierarchical columns not yet supported')
+            result = data
+            for val in clocs:
+                result = result.unstack(val)
+            return result
 
         dummy = DataFrame(data.values, index=dummy_index,
                           columns=data.columns)
diff --git a/pandas/tests/test_index.py b/pandas/tests/test_index.py
index cac895ed3..e4ba2fbeb 100644
--- a/pandas/tests/test_index.py
+++ b/pandas/tests/test_index.py
@@ -515,6 +515,11 @@ class TestIndex(unittest.TestCase):
         self.assert_(res.dtype == 'bool')
         self.assert_(not isinstance(res, Index))
 
+    def test_get_level_values(self):
+        result = self.strIndex.get_level_values(0)
+        self.assert_(result.equals(self.strIndex))
+
+
 class TestInt64Index(unittest.TestCase):
     _multiprocess_can_split_ = True
     def setUp(self):
diff --git a/pandas/tools/tests/test_pivot.py b/pandas/tools/tests/test_pivot.py
index 133f6757f..eea9a76b9 100644
--- a/pandas/tools/tests/test_pivot.py
+++ b/pandas/tools/tests/test_pivot.py
@@ -221,6 +221,14 @@ class TestPivotTable(unittest.TestCase):
 
         self.assert_(pivoted.columns.is_monotonic)
 
+    def test_pivot_complex_aggfunc(self):
+        f = {'D': ['std'], 'E': ['sum']}
+        expected = self.data.groupby(['A', 'B']).agg(f).unstack('B')
+        result = self.data.pivot_table(rows='A', cols='B', aggfunc=f)
+
+        tm.assert_frame_equal(result, expected)
+
+
 class TestCrosstab(unittest.TestCase):
 
     def setUp(self):
