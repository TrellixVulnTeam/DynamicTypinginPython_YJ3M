commit 512d9d5db5573e04d84d888c3da792682b9cff7d
Author: Jeff Reback <jeff@reback.net>
Date:   Wed Jun 24 16:28:27 2015 -0400

    DOC: update missing.rst with ref to groupby.rst

diff --git a/doc/source/groupby.rst b/doc/source/groupby.rst
index c9e18b585..bb424e29c 100644
--- a/doc/source/groupby.rst
+++ b/doc/source/groupby.rst
@@ -784,6 +784,8 @@ will be (silently) dropped. Thus, this does not pose any problems:
 
    df.groupby('A').std()
 
+.. _groupby.missing:
+
 NA and NaT group handling
 ~~~~~~~~~~~~~~~~~~~~~~~~~
 
diff --git a/doc/source/missing_data.rst b/doc/source/missing_data.rst
index 04a6302f9..8ea28c6b6 100644
--- a/doc/source/missing_data.rst
+++ b/doc/source/missing_data.rst
@@ -158,10 +158,10 @@ The descriptive statistics and computational methods discussed in the
 <api.series.stats>` and :ref:`here <api.dataframe.stats>`) are all written to
 account for missing data. For example:
 
-  * When summing data, NA (missing) values will be treated as zero
-  * If the data are all NA, the result will be NA
-  * Methods like **cumsum** and **cumprod** ignore NA values, but preserve them
-    in the resulting arrays
+* When summing data, NA (missing) values will be treated as zero
+* If the data are all NA, the result will be NA
+* Methods like **cumsum** and **cumprod** ignore NA values, but preserve them
+  in the resulting arrays
 
 .. ipython:: python
 
@@ -176,7 +176,7 @@ NA values in GroupBy
 NA groups in GroupBy are automatically excluded. This behavior is consistent
 with R, for example.
 
-
+See the groupby section :ref:`here <groupby.missing>` for more information.
 
 Cleaning / filling missing data
 --------------------------------
