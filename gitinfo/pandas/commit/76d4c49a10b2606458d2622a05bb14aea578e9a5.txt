commit 76d4c49a10b2606458d2622a05bb14aea578e9a5
Author: Philipp A <flying-sheep@web.de>
Date:   Thu Oct 1 15:24:45 2015 +0200

    Use set literal syntax for set prettyprinting, #11215

diff --git a/doc/source/whatsnew/v0.17.1.txt b/doc/source/whatsnew/v0.17.1.txt
index 60c8b5876..b0e97eeb0 100755
--- a/doc/source/whatsnew/v0.17.1.txt
+++ b/doc/source/whatsnew/v0.17.1.txt
@@ -31,6 +31,9 @@ API changes
 - min and max reductions on ``datetime64`` and ``timedelta64`` dtyped series now
   result in ``NaT`` and not ``nan`` (:issue:`11245`).
 
+- Prettyprinting sets (e.g. in DataFrame cells) now uses set literal syntax (``{x, y}``) instead of
+  Legacy Python syntax (``set([x, y])``) (:issue:`11215`)
+
 .. _whatsnew_0171.deprecations:
 
 Deprecations
diff --git a/pandas/core/common.py b/pandas/core/common.py
index da30ca053..0de1f8ca5 100644
--- a/pandas/core/common.py
+++ b/pandas/core/common.py
@@ -3193,7 +3193,7 @@ def _pprint_seq(seq, _nest_lvl=0, max_seq_items=None, **kwds):
     bounds length of printed sequence, depending on options
     """
     if isinstance(seq, set):
-        fmt = u("set([%s])")
+        fmt = u("{%s}")
     else:
         fmt = u("[%s]") if hasattr(seq, '__setitem__') else u("(%s)")
 
diff --git a/pandas/tests/test_format.py b/pandas/tests/test_format.py
index 14ff9e65c..bf2cfc621 100644
--- a/pandas/tests/test_format.py
+++ b/pandas/tests/test_format.py
@@ -191,13 +191,14 @@ class TestDataFrameFormatting(tm.TestCase):
             self.assertEqual(repr(df),  '     0    1\n0  0.1  0.5\n1  0.5 -0.1')
 
     def test_repr_obeys_max_seq_limit(self):
-        import pandas.core.common as com
-
         with option_context("display.max_seq_items",2000):
             self.assertTrue(len(com.pprint_thing(lrange(1000))) > 1000)
 
         with option_context("display.max_seq_items",5):
-            self.assertTrue(len(com.pprint_thing(lrange(1000)))< 100)
+            self.assertTrue(len(com.pprint_thing(lrange(1000))) < 100)
+
+    def test_repr_set(self):
+        self.assertEqual(com.pprint_thing(set([1])), '{1}')
 
     def test_repr_is_valid_construction_code(self):
         # for the case of Index, where the repr is traditional rather then stylized
