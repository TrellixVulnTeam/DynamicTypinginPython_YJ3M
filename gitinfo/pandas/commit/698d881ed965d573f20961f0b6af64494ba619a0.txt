commit 698d881ed965d573f20961f0b6af64494ba619a0
Author: Garrett Drapala <drapala@gmail.com>
Date:   Sat Feb 23 16:20:22 2013 -0500

    ENH: add escape parameter to to_html()

diff --git a/pandas/core/format.py b/pandas/core/format.py
index 862b09f5e..89e24fa34 100644
--- a/pandas/core/format.py
+++ b/pandas/core/format.py
@@ -495,6 +495,7 @@ class HTMLFormatter(TableFormatter):
         self.columns = formatter.columns
         self.elements = []
         self.bold_rows = self.fmt.kwds.get('bold_rows', False)
+        self.escape = self.fmt.kwds.get('escape', True)
 
     def write(self, s, indent=0):
         rs = com.pprint_thing(s)
@@ -517,7 +518,10 @@ class HTMLFormatter(TableFormatter):
         else:
             start_tag = '<%s>' % kind
 
-        esc = {'<' : r'&lt;', '>' : r'&gt;'}
+        if self.escape:
+            esc = {'<' : r'&lt;', '>' : r'&gt;', '&' : r'&amp;'}
+        else:
+            esc = {}
         rs = com.pprint_thing(s, escape_chars=esc)
         self.write(
             '%s%s</%s>' % (start_tag, rs, kind), indent)
diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 0d7913819..091b99265 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -1459,13 +1459,15 @@ class DataFrame(NDFrame):
                 header=True, index=True, na_rep='NaN', formatters=None,
                 float_format=None, sparsify=None, index_names=True,
                 justify=None, force_unicode=None, bold_rows=True,
-                classes=None):
+                classes=None, escape=True):
         """
         to_html-specific options
         bold_rows : boolean, default True
             Make the row labels bold in the output
         classes : str or list or tuple, default None
             CSS class(es) to apply to the resulting html table
+        escape : boolean, default True
+            Convert the characters <, >, and & to HTML-safe sequences.
 
         Render a DataFrame to an html table.
         """
@@ -1488,7 +1490,8 @@ class DataFrame(NDFrame):
                                            justify=justify,
                                            index_names=index_names,
                                            header=header, index=index,
-                                           bold_rows=bold_rows)
+                                           bold_rows=bold_rows,
+                                           escape=escape)
         formatter.to_html(classes=classes)
 
         if buf is None:
diff --git a/pandas/tests/test_format.py b/pandas/tests/test_format.py
index 0ae8934c8..f013f1a7c 100644
--- a/pandas/tests/test_format.py
+++ b/pandas/tests/test_format.py
@@ -275,8 +275,8 @@ class TestDataFrameFormatting(unittest.TestCase):
         df.to_html()
 
     def test_to_html_escaped(self):
-        a = 'str<ing1'
-        b = 'stri>ng2'
+        a = 'str<ing1 &amp;'
+        b = 'stri>ng2 &amp;'
 
         test_dict = {'co<l1': {a: "<type 'str'>",
                                b: "<type 'str'>"},
@@ -293,12 +293,12 @@ class TestDataFrameFormatting(unittest.TestCase):
   </thead>
   <tbody>
     <tr>
-      <th>str&lt;ing1</th>
+      <th>str&lt;ing1 &amp;amp;</th>
       <td> &lt;type 'str'&gt;</td>
       <td> &lt;type 'str'&gt;</td>
     </tr>
     <tr>
-      <th>stri&gt;ng2</th>
+      <th>stri&gt;ng2 &amp;amp;</th>
       <td> &lt;type 'str'&gt;</td>
       <td> &lt;type 'str'&gt;</td>
     </tr>
@@ -306,6 +306,38 @@ class TestDataFrameFormatting(unittest.TestCase):
 </table>"""
         self.assertEqual(xp, rs)
 
+    def test_to_html_escape_disabled(self):
+        a = 'str<ing1 &amp;'
+        b = 'stri>ng2 &amp;'
+
+        test_dict = {'co<l1': {a: "<b>bold</b>",
+                               b: "<b>bold</b>"},
+                     'co>l2': {a: "<b>bold</b>",
+                               b: "<b>bold</b>"}}
+        rs = pd.DataFrame(test_dict).to_html(escape=False)
+        xp = """<table border="1" class="dataframe">
+  <thead>
+    <tr style="text-align: right;">
+      <th></th>
+      <th>co<l1</th>
+      <th>co>l2</th>
+    </tr>
+  </thead>
+  <tbody>
+    <tr>
+      <th>str<ing1 &amp;</th>
+      <td> <b>bold</b></td>
+      <td> <b>bold</b></td>
+    </tr>
+    <tr>
+      <th>stri>ng2 &amp;</th>
+      <td> <b>bold</b></td>
+      <td> <b>bold</b></td>
+    </tr>
+  </tbody>
+</table>"""
+        self.assertEqual(xp, rs)
+
     def test_to_html_multiindex_sparsify(self):
         index = pd.MultiIndex.from_arrays([[0, 0, 1, 1], [0, 1, 0, 1]],
                                           names=['foo', None])
