commit 6636ad5fbadbf7f70ed1bb07fa29df5342c60024
Author: Jeff Reback <jeff@reback.net>
Date:   Wed Sep 9 17:37:41 2015 -0400

    whatsnew note / fixes xref #4125

diff --git a/doc/source/whatsnew/v0.17.0.txt b/doc/source/whatsnew/v0.17.0.txt
index 5d63da68d..0b6f6522d 100644
--- a/doc/source/whatsnew/v0.17.0.txt
+++ b/doc/source/whatsnew/v0.17.0.txt
@@ -1023,7 +1023,7 @@ Bug Fixes
 - Bug in ``read_stata`` when reading a file with a different order set in ``columns`` (:issue:`10757`)
 - Bug in ``Categorical`` may not representing properly when category contains ``tz`` or ``Period`` (:issue:`10713`)
 - Bug in ``Categorical.__iter__`` may not returning correct ``datetime`` and ``Period`` (:issue:`10713`)
-
+- Bug in indexing with a ``PeriodIndex`` on an object with a ``PeriodIndex`` (:issue:`4125`)
 - Bug in ``read_csv`` with ``engine='c'``: EOF preceded by a comment, blank line, etc. was not handled correctly (:issue:`10728`, :issue:`10548`)
 
 - Reading "famafrench" data via ``DataReader`` results in HTTP 404 error because of the website url is changed (:issue:`10591`).
diff --git a/pandas/core/index.py b/pandas/core/index.py
index 9344e8499..025b8c9d0 100644
--- a/pandas/core/index.py
+++ b/pandas/core/index.py
@@ -19,9 +19,9 @@ from pandas.util.decorators import (Appender, Substitution, cache_readonly,
                                     deprecate, deprecate_kwarg)
 import pandas.core.common as com
 from pandas.core.common import (isnull, array_equivalent, is_dtype_equal, is_object_dtype,
-                                is_datetimetz,
+                                is_datetimetz, ABCSeries, ABCCategorical, ABCPeriodIndex,
                                 _values_from_object, is_float, is_integer, is_iterator, is_categorical_dtype,
-                                ABCSeries, ABCCategorical, _ensure_object, _ensure_int64, is_bool_indexer,
+                                _ensure_object, _ensure_int64, is_bool_indexer,
                                 is_list_like, is_bool_dtype, is_null_slice, is_integer_dtype)
 from pandas.core.config import get_option
 from pandas.io.common import PerformanceWarning
@@ -976,8 +976,8 @@ class Index(IndexOpsMixin, PandasObject):
         and we have a mixed index (e.g. number/labels). figure out
         the indexer. return None if we can't help
         """
-        if (kind is None or kind in ['iloc', 'ix']) and (
-            is_integer_dtype(keyarr) and not self.is_floating() and not com.is_period_arraylike(keyarr)):
+        if kind in [None, 'iloc', 'ix'] and is_integer_dtype(keyarr) \
+           and not self.is_floating() and not isinstance(keyarr, ABCPeriodIndex):
 
             if self.inferred_type != 'integer':
                 keyarr = np.where(keyarr < 0,
diff --git a/pandas/tests/test_index.py b/pandas/tests/test_index.py
index 0ec34e011..0ab80ad91 100644
--- a/pandas/tests/test_index.py
+++ b/pandas/tests/test_index.py
@@ -3261,7 +3261,9 @@ class TestPeriodIndex(DatetimeLike, tm.TestCase):
         df = pd.DataFrame(pd.np.random.randn(24,10), index=idx)
         self.assert_frame_equal(df, df.ix[idx])
         self.assert_frame_equal(df, df.ix[list(idx)])
-
+        self.assert_frame_equal(df, df.loc[list(idx)])
+        self.assert_frame_equal(df.iloc[0:5], df.loc[idx[0:5]])
+        self.assert_frame_equal(df, df.loc[list(idx)])
 
 class TestTimedeltaIndex(DatetimeLike, tm.TestCase):
     _holder = TimedeltaIndex
