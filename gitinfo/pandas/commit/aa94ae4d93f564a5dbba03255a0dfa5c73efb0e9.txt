commit aa94ae4d93f564a5dbba03255a0dfa5c73efb0e9
Author: Maximilian Roos <m@maxroos.com>
Date:   Sat Oct 3 14:01:16 2015 -0400

    BUG: squeeze works on 0 length arrays, #11299, #8999

diff --git a/doc/source/whatsnew/v0.17.1.txt b/doc/source/whatsnew/v0.17.1.txt
index e4a318398..04c9bc501 100755
--- a/doc/source/whatsnew/v0.17.1.txt
+++ b/doc/source/whatsnew/v0.17.1.txt
@@ -42,4 +42,6 @@ Performance Improvements
 
 Bug Fixes
 ~~~~~~~~~
-Bug in ``.to_latex()`` output broken when the index has a name (:issue: `10660`)
+
+- Bug in ``.to_latex()`` output broken when the index has a name (:issue: `10660`)
+- Bug in ``squeeze()`` with zero length arrays (:issue:`11230`, :issue:`8999`)
diff --git a/pandas/core/generic.py b/pandas/core/generic.py
index 2def8180a..98f9677fb 100644
--- a/pandas/core/generic.py
+++ b/pandas/core/generic.py
@@ -513,7 +513,7 @@ class NDFrame(PandasObject):
     def squeeze(self):
         """ squeeze length 1 dimensions """
         try:
-            return self.ix[tuple([slice(None) if len(a) > 1 else a[0]
+            return self.iloc[tuple([0 if len(a) == 1 else slice(None)
                                   for a in self.axes])]
         except:
             return self
diff --git a/pandas/tests/test_generic.py b/pandas/tests/test_generic.py
index 3a26be2ca..061382e0e 100644
--- a/pandas/tests/test_generic.py
+++ b/pandas/tests/test_generic.py
@@ -1717,6 +1717,15 @@ class TestNDFrame(tm.TestCase):
         p4d = tm.makePanel4D().reindex(labels=['label1'],items=['ItemA'])
         tm.assert_frame_equal(p4d.squeeze(),p4d.ix['label1','ItemA'])
 
+        # don't fail with 0 length dimensions GH11229 & GH8999
+        empty_series=pd.Series([], name='five')
+        empty_frame=pd.DataFrame([empty_series])
+        empty_panel=pd.Panel({'six':empty_frame})
+
+        [tm.assert_series_equal(empty_series, higher_dim.squeeze())
+         for higher_dim in [empty_series, empty_frame, empty_panel]]
+
+
     def test_equals(self):
         s1 = pd.Series([1, 2, 3], index=[0, 2, 1])
         s2 = s1.copy()
