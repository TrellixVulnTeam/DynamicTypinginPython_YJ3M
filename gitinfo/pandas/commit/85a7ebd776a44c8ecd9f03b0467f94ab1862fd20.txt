commit 85a7ebd776a44c8ecd9f03b0467f94ab1862fd20
Author: Phillip Cloud <cpcloud@gmail.com>
Date:   Thu May 9 18:20:45 2013 -0400

    BUG: fix typeerror caused by spurious call to len on frame multiindex

diff --git a/pandas/core/format.py b/pandas/core/format.py
index fa2135bb4..ecce3b542 100644
--- a/pandas/core/format.py
+++ b/pandas/core/format.py
@@ -736,7 +736,7 @@ class HTMLFormatter(TableFormatter):
                 row.extend(idx_values[i])
                 row.extend(fmt_values[j][i] for j in range(ncols))
                 self.write_tr(row, indent, self.indent_delta, tags=None,
-                              nindex_levels=len(frame.index.nlevels))
+                              nindex_levels=frame.index.nlevels)
 
 
 def _get_level_lengths(levels):
diff --git a/pandas/tests/test_format.py b/pandas/tests/test_format.py
index 37f08dd17..89988a218 100644
--- a/pandas/tests/test_format.py
+++ b/pandas/tests/test_format.py
@@ -435,6 +435,114 @@ class TestDataFrameFormatting(unittest.TestCase):
 </table>"""
         self.assertEqual(xp, rs)
 
+    def test_to_html_multiindex_sparsify_false_multi_sparse(self):
+        with option_context('display.multi_sparse', False):
+            index = pd.MultiIndex.from_arrays([[0, 0, 1, 1], [0, 1, 0, 1]],
+                                              names=['foo', None])
+
+            df = DataFrame([[0, 1], [2, 3], [4, 5], [6, 7]], index=index)
+
+            result = df.to_html()
+            expected = """\
+<table border="1" class="dataframe">
+  <thead>
+    <tr style="text-align: right;">
+      <th></th>
+      <th></th>
+      <th>0</th>
+      <th>1</th>
+    </tr>
+    <tr>
+      <th>foo</th>
+      <th></th>
+      <th></th>
+      <th></th>
+    </tr>
+  </thead>
+  <tbody>
+    <tr>
+      <th>0</th>
+      <th>0</th>
+      <td> 0</td>
+      <td> 1</td>
+    </tr>
+    <tr>
+      <th>0</th>
+      <th>1</th>
+      <td> 2</td>
+      <td> 3</td>
+    </tr>
+    <tr>
+      <th>1</th>
+      <th>0</th>
+      <td> 4</td>
+      <td> 5</td>
+    </tr>
+    <tr>
+      <th>1</th>
+      <th>1</th>
+      <td> 6</td>
+      <td> 7</td>
+    </tr>
+  </tbody>
+</table>"""
+            self.assertEquals(result, expected)
+
+            df = DataFrame([[0, 1], [2, 3], [4, 5], [6, 7]],
+                           columns=index[::2], index=index)
+
+            result = df.to_html()
+            expected = """\
+<table border="1" class="dataframe">
+  <thead>
+    <tr>
+      <th></th>
+      <th>foo</th>
+      <th>0</th>
+      <th>1</th>
+    </tr>
+    <tr>
+      <th></th>
+      <th></th>
+      <th>0</th>
+      <th>0</th>
+    </tr>
+    <tr>
+      <th>foo</th>
+      <th></th>
+      <th></th>
+      <th></th>
+    </tr>
+  </thead>
+  <tbody>
+    <tr>
+      <th>0</th>
+      <th>0</th>
+      <td> 0</td>
+      <td> 1</td>
+    </tr>
+    <tr>
+      <th>0</th>
+      <th>1</th>
+      <td> 2</td>
+      <td> 3</td>
+    </tr>
+    <tr>
+      <th>1</th>
+      <th>0</th>
+      <td> 4</td>
+      <td> 5</td>
+    </tr>
+    <tr>
+      <th>1</th>
+      <th>1</th>
+      <td> 6</td>
+      <td> 7</td>
+    </tr>
+  </tbody>
+</table>"""
+            self.assertEquals(result, expected)
+
     def test_to_html_multiindex_sparsify(self):
         index = pd.MultiIndex.from_arrays([[0, 0, 1, 1], [0, 1, 0, 1]],
                                           names=['foo', None])
