commit 7e2a47d1c95c1116f015efe4f99dceeb99d63121
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Sun Dec 2 13:48:10 2012 -0500

    TST: unit test to try to replicate #2298

diff --git a/pandas/io/parsers.py b/pandas/io/parsers.py
index 79b6e8b7e..44c7be853 100644
--- a/pandas/io/parsers.py
+++ b/pandas/io/parsers.py
@@ -661,7 +661,7 @@ class ParserBase(object):
                 return (j in self.parse_dates) or (name in self.parse_dates)
 
     def _make_index(self, data, alldata, columns):
-        if self.index_col is None:
+        if self.index_col is None or len(self.index_col) == 0:
             index = None
 
         elif not self._has_complex_date_col:
diff --git a/pandas/io/tests/test_parsers.py b/pandas/io/tests/test_parsers.py
index 879735356..8c96d3bd7 100644
--- a/pandas/io/tests/test_parsers.py
+++ b/pandas/io/tests/test_parsers.py
@@ -1582,6 +1582,32 @@ eight,1,2,3"""
                                header=None, skipinitialspace=True)
         self.assertTrue(pd.isnull(result.ix[0, 29]))
 
+    def test_utf16_bom_skiprows(self):
+        # #2298
+        data = u"""skip this
+skip this too
+A,B,C\n
+1,2,3
+4,5,6"""
+        path = '__%s__.csv' % tm.rands(10)
+
+        for enc in ['utf-16', 'utf-16le', 'utf-16be']:
+            bytes = data.encode(enc)
+            with open(path, 'wb') as f:
+                f.write(bytes)
+
+            result = self.read_csv(path, encoding=enc, skiprows=2)
+            expected = self.read_csv(StringIO(data.encode('utf-8')),
+                                     encoding='utf-8', skiprows=2)
+
+            tm.assert_frame_equal(result, expected)
+
+        try:
+            os.remove(path)
+        except os.error:
+            pass
+
+
 class TestCParserHighMemory(ParserTests, unittest.TestCase):
 
     def read_csv(self, *args, **kwds):
