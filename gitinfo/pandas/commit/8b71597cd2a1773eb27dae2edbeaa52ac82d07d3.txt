commit 8b71597cd2a1773eb27dae2edbeaa52ac82d07d3
Author: Adam Klein <adamklein@gmail.com>
Date:   Sun Jan 22 19:23:00 2012 -0500

    sketched fast accessor for grouping

diff --git a/pandas/core/index.py b/pandas/core/index.py
index 677321fbc..d24bfe8e0 100644
--- a/pandas/core/index.py
+++ b/pandas/core/index.py
@@ -12,6 +12,7 @@ from pandas.core.datetools import _dt_box, _dt_unbox
 from pandas.util.decorators import cache_readonly
 import pandas._tseries as lib
 import pandas._engines as _gin
+import pandas._datetime as _dt
 
 from datetime import datetime
 
@@ -1100,6 +1101,10 @@ class DatetimeIndex(Int64Index):
 
             return DatetimeIndex(result, name=self.name)
 
+    # TODO: make accessors for fast groupby work
+    def year(self):
+        return _dt.fast_field_accessor(self.values.view('i8'), 'Y')
+
     def __iter__(self):
         # TODO: again, figure out how to expose elements as nice datetime
         # objects so you can do obj.year etc
diff --git a/pandas/src/datetime.pyx b/pandas/src/datetime.pyx
index a4417d7af..807d96e17 100644
--- a/pandas/src/datetime.pyx
+++ b/pandas/src/datetime.pyx
@@ -1,9 +1,9 @@
-cimport numpy as cnp
+cimport numpy as np
 cimport cython
 cimport cpython
 import numpy as np
 
-from numpy cimport int64_t, import_array
+from numpy cimport int32_t, int64_t, import_array, ndarray
 
 # this is our datetime.pxd
 from datetime cimport *
@@ -80,3 +80,33 @@ def pydt_to_dt64(object pydt):
         return PyArray_DatetimeStructToDatetime(g_out_bestunit, &g_dts)
 
     raise ValueError("Expected a datetime, received a %s" % type(pydt))
+
+def fast_field_accessor(ndarray[int64_t] dtindex, object field):
+    cdef:
+        npy_datetimestruct dts
+        Py_ssize_t i, count = 0
+        ndarray[int32_t] out
+
+    count = len(dtindex)
+    out = np.empty(count, dtype='i4')
+
+    if field == 'Y':
+        for i in range(count):
+            PyArray_DatetimeToDatetimeStruct(dtindex[i], NPY_FR_us, &dts)
+            out[i] = dts.year
+        return out
+
+    elif field == 'M':
+        pass
+    elif field == 'D':
+        pass
+    elif field == 'h':
+        pass
+    elif field == 'm':
+        pass
+    elif field == 's':
+        pass
+    elif field == 'us':
+        pass
+    else:
+        raise ValueError("Field %s not supported, must be Y,M,D,h,m,s,us" % field)
