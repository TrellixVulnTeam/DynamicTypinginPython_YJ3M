commit f3d7c18190045bdf02f4448e46880a7030829716
Author: Roger Thomas <roger.thomas@cremeglobal.com>
Date:   Tue May 31 11:39:48 2016 -0400

    BUG: Fix maybe_convert_numeric for unhashable objects
    
    closes #13324
    
    Author: Roger Thomas <roger.thomas@cremeglobal.com>
    
    Closes #13326 from RogerThomas/fix_maybe_convert_numeric_for_unhashable_objects and squashes the following commits:
    
    76a0738 [Roger Thomas] Fix maybe_convert_numeric for unhashable objects

diff --git a/doc/source/whatsnew/v0.18.2.txt b/doc/source/whatsnew/v0.18.2.txt
index 984001db5..33a48671a 100644
--- a/doc/source/whatsnew/v0.18.2.txt
+++ b/doc/source/whatsnew/v0.18.2.txt
@@ -368,6 +368,7 @@ Bug Fixes
 - Bug in ``groupby`` where ``apply`` returns different result depending on whether first result is ``None`` or not (:issue:`12824`)
 
 
+- Bug in ``pd.to_numeric`` when ``errors='coerce'`` and input contains non-hashable objects (:issue:`13324`)
 
 
 - Bug in ``Categorical.remove_unused_categories()`` changes ``.codes`` dtype to platform int (:issue:`13261`)
diff --git a/pandas/src/inference.pyx b/pandas/src/inference.pyx
index e2c59a34b..d4e149eb0 100644
--- a/pandas/src/inference.pyx
+++ b/pandas/src/inference.pyx
@@ -569,7 +569,7 @@ def maybe_convert_numeric(object[:] values, set na_values,
     for i in range(n):
         val = values[i]
 
-        if val in na_values:
+        if val.__hash__ is not None and val in na_values:
             floats[i] = complexes[i] = nan
             seen_float = True
         elif util.is_float_object(val):
diff --git a/pandas/tests/test_infer_and_convert.py b/pandas/tests/test_infer_and_convert.py
index 06e2a82e0..7558934c3 100644
--- a/pandas/tests/test_infer_and_convert.py
+++ b/pandas/tests/test_infer_and_convert.py
@@ -102,6 +102,13 @@ class TestInference(tm.TestCase):
         result = lib.maybe_convert_numeric(arr, set(), False, True)
         self.assertTrue(np.all(np.isnan(result)))
 
+    def test_convert_non_hashable(self):
+        # GH13324
+        # make sure that we are handing non-hashables
+        arr = np.array([[10.0, 2], 1.0, 'apple'])
+        result = lib.maybe_convert_numeric(arr, set(), False, True)
+        tm.assert_numpy_array_equal(result, np.array([np.nan, 1.0, np.nan]))
+
 
 class TestTypeInference(tm.TestCase):
     _multiprocess_can_split_ = True
diff --git a/pandas/tools/tests/test_util.py b/pandas/tools/tests/test_util.py
index 4e704554f..c592b33bd 100644
--- a/pandas/tools/tests/test_util.py
+++ b/pandas/tools/tests/test_util.py
@@ -279,6 +279,18 @@ class TestToNumeric(tm.TestCase):
         # res = pd.to_numeric(pd.Series(idx, name='xxx'))
         # tm.assert_series_equal(res, pd.Series(idx.asi8, name='xxx'))
 
+    def test_non_hashable(self):
+        # Test for Bug #13324
+        s = pd.Series([[10.0, 2], 1.0, 'apple'])
+        res = pd.to_numeric(s, errors='coerce')
+        tm.assert_series_equal(res, pd.Series([np.nan, 1.0, np.nan]))
+
+        res = pd.to_numeric(s, errors='ignore')
+        tm.assert_series_equal(res, pd.Series([[10.0, 2], 1.0, 'apple']))
+
+        with self.assertRaisesRegexp(TypeError, "Invalid object type"):
+            pd.to_numeric(s)
+
 
 if __name__ == '__main__':
     nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
