commit e79058d360b083983bb89f7261fb52da957651a6
Author: Phillip Cloud <cpcloud@gmail.com>
Date:   Sun Apr 6 13:03:23 2014 -0400

    TST/BUG: make the gender variable non random in test_hist_by_no_extra_plots

diff --git a/pandas/tests/test_graphics.py b/pandas/tests/test_graphics.py
index a64f24a61..efefc96b5 100644
--- a/pandas/tests/test_graphics.py
+++ b/pandas/tests/test_graphics.py
@@ -182,7 +182,7 @@ class TestSeriesPlots(tm.TestCase):
     def test_hist_by_no_extra_plots(self):
         import matplotlib.pyplot as plt
         n = 10
-        df = DataFrame({'gender': tm.choice(['Male', 'Female'], size=n),
+        df = DataFrame({'gender': ['Male'] * 5 + ['Female'] * 5,
                         'height': random.normal(66, 4, size=n)})
         axes = df.height.hist(by=df.gender)
         self.assertEqual(len(plt.get_fignums()), 1)
@@ -593,9 +593,9 @@ class TestDataFramePlots(tm.TestCase):
     @slow
     def test_bar_barwidth(self):
         df = DataFrame(randn(5, 5))
-        
+
         width = 0.9
-        
+
         # regular
         ax = df.plot(kind='bar', width=width)
         for r in ax.patches:
@@ -681,7 +681,7 @@ class TestDataFramePlots(tm.TestCase):
                        align=align, width=width, position=position,
                        grid=True)
 
-        tick_pos = np.arange(len(df)) 
+        tick_pos = np.arange(len(df))
 
         if not isinstance(axes, np.ndarray):
             axes = [axes]
@@ -780,7 +780,7 @@ class TestDataFramePlots(tm.TestCase):
             self.assertEqual(ax.get_xlim(), (-0.5, 4.75))
 
         self._check_bar_alignment(df, kind='bar', subplots=True, width=0.9)
-        
+
         axes = self._check_bar_alignment(df, kind='barh', subplots=True)
         for ax in axes:
             self.assertEqual(ax.get_ylim(), (-0.5, 4.75))
diff --git a/pandas/tools/plotting.py b/pandas/tools/plotting.py
index 8fdd6087b..c2a929bab 100644
--- a/pandas/tools/plotting.py
+++ b/pandas/tools/plotting.py
@@ -221,7 +221,7 @@ def scatter_matrix(frame, alpha=0.5, figsize=None, ax=None, grid=False,
         either Kernel Density Estimation or Histogram
         plot in the diagonal
     marker : str, optional
-        Matplotlib marker type, default '.'    
+        Matplotlib marker type, default '.'
     hist_kwds : other plotting keyword arguments
         To be passed to hist function
     density_kwds : other plotting keyword arguments
@@ -1678,7 +1678,7 @@ class BarPlot(MPLPlot):
 
         kwargs['align'] = kwargs.pop('align', 'center')
         self.tick_pos = np.arange(len(data))
- 
+
         self.log = kwargs.pop('log',False)
         MPLPlot.__init__(self, data, **kwargs)
 
