commit 6100a769ebd4ad9129d09feb16029be283bbccd7
Author: Jeff Reback <jeff@reback.net>
Date:   Sat Feb 13 11:31:02 2016 -0500

    COMPAT: fix .xpt, .dta to all lowercase
    
    DEPR: remove test in categorical for deprecation of .labels

diff --git a/.gitignore b/.gitignore
index d33df2df6..c8cda81d4 100644
--- a/.gitignore
+++ b/.gitignore
@@ -66,6 +66,7 @@ Thumbs.db
 # Data files #
 ##############
 *.dta
+*.xpt
 *.h5
 pandas/io/*.dat
 pandas/io/*.json
diff --git a/doc/source/whatsnew/v0.18.0.txt b/doc/source/whatsnew/v0.18.0.txt
index 8a4cfa38d..a0a6332c5 100644
--- a/doc/source/whatsnew/v0.18.0.txt
+++ b/doc/source/whatsnew/v0.18.0.txt
@@ -23,7 +23,7 @@ Highlights include:
 - API breaking ``.resample`` changes to make it more ``.groupby`` like, see :ref:`here <whatsnew_0180.breaking.resample>`.
 - Removal of support for deprecated float indexers; these will now raise a ``TypeError``, see :ref:`here <whatsnew_0180.enhancements.float_indexers>`.
 - The ``.to_xarray()`` function has been added for compatibility with the `xarray package <http://xarray.pydata.org/en/stable/>`__, see :ref:`here <whatsnew_0180.enhancements.xarray>`.
-- Addition of the :ref:`.str.extractall() method <whatsnew_0180.enhancements.extract>`, and API changes to the :ref:`.str.extract() method <whatsnew_0180.enhancements.extract>` and :ref:`.str.cat() method <whatsnew_0180.enhancements.strcat>`.
+- Addition of the :ref:`.str.extractall() method <whatsnew_0180.enhancements.extractall>`, and API changes to the :ref:`.str.extract() method <whatsnew_0180.enhancements.extract>` and :ref:`.str.cat() method <whatsnew_0180.enhancements.strcat>`.
 
 
 Check the :ref:`API Changes <whatsnew_0180.api_breaking>` and :ref:`deprecations <whatsnew_0180.deprecations>` before updating.
diff --git a/pandas/io/tests/data/DEMO_G.XPT b/pandas/io/tests/data/DEMO_G.xpt
similarity index 100%
rename from pandas/io/tests/data/DEMO_G.XPT
rename to pandas/io/tests/data/DEMO_G.xpt
diff --git a/pandas/io/tests/data/DRXFCD_G.XPT b/pandas/io/tests/data/DRXFCD_G.xpt
similarity index 100%
rename from pandas/io/tests/data/DRXFCD_G.XPT
rename to pandas/io/tests/data/DRXFCD_G.xpt
diff --git a/pandas/io/tests/data/S4_EDUC1.DTA b/pandas/io/tests/data/S4_EDUC1.dta
similarity index 100%
rename from pandas/io/tests/data/S4_EDUC1.DTA
rename to pandas/io/tests/data/S4_EDUC1.dta
diff --git a/pandas/io/tests/data/SSHSV1_A.XPT b/pandas/io/tests/data/SSHSV1_A.xpt
similarity index 100%
rename from pandas/io/tests/data/SSHSV1_A.XPT
rename to pandas/io/tests/data/SSHSV1_A.xpt
diff --git a/pandas/io/tests/test_sas.py b/pandas/io/tests/test_sas.py
index 3a235eafe..9b31d9443 100644
--- a/pandas/io/tests/test_sas.py
+++ b/pandas/io/tests/test_sas.py
@@ -4,7 +4,7 @@ from pandas.io.sas import XportReader, read_sas
 import numpy as np
 import os
 
-# CSV versions of test XPT files were obtained using the R foreign library
+# CSV versions of test xpt files were obtained using the R foreign library
 
 # Numbers in a SAS xport file are always float64, so need to convert
 # before making comparisons.
@@ -20,16 +20,16 @@ class TestXport(tm.TestCase):
 
     def setUp(self):
         self.dirpath = tm.get_data_path()
-        self.file01 = os.path.join(self.dirpath, "DEMO_G.XPT")
-        self.file02 = os.path.join(self.dirpath, "SSHSV1_A.XPT")
-        self.file03 = os.path.join(self.dirpath, "DRXFCD_G.XPT")
+        self.file01 = os.path.join(self.dirpath, "DEMO_G.xpt")
+        self.file02 = os.path.join(self.dirpath, "SSHSV1_A.xpt")
+        self.file03 = os.path.join(self.dirpath, "DRXFCD_G.xpt")
         self.file04 = os.path.join(self.dirpath, "paxraw_d_short.xpt")
 
     def test1_basic(self):
-        # Tests with DEMO_G.XPT (all numeric file)
+        # Tests with DEMO_G.xpt (all numeric file)
 
         # Compare to this
-        data_csv = pd.read_csv(self.file01.replace(".XPT", ".csv"))
+        data_csv = pd.read_csv(self.file01.replace(".xpt", ".csv"))
         numeric_as_float(data_csv)
 
         # Read full file
@@ -51,10 +51,10 @@ class TestXport(tm.TestCase):
         tm.assert_frame_equal(data, data_csv)
 
     def test1_index(self):
-        # Tests with DEMO_G.XPT using index (all numeric file)
+        # Tests with DEMO_G.xpt using index (all numeric file)
 
         # Compare to this
-        data_csv = pd.read_csv(self.file01.replace(".XPT", ".csv"))
+        data_csv = pd.read_csv(self.file01.replace(".xpt", ".csv"))
         data_csv = data_csv.set_index("SEQN")
         numeric_as_float(data_csv)
 
@@ -75,9 +75,9 @@ class TestXport(tm.TestCase):
                               0:10, :], check_index_type=False)
 
     def test1_incremental(self):
-        # Test with DEMO_G.XPT, reading full file incrementally
+        # Test with DEMO_G.xpt, reading full file incrementally
 
-        data_csv = pd.read_csv(self.file01.replace(".XPT", ".csv"))
+        data_csv = pd.read_csv(self.file01.replace(".xpt", ".csv"))
         data_csv = data_csv.set_index("SEQN")
         numeric_as_float(data_csv)
 
@@ -94,20 +94,20 @@ class TestXport(tm.TestCase):
         tm.assert_frame_equal(data, data_csv, check_index_type=False)
 
     def test2(self):
-        # Test with SSHSV1_A.XPT
+        # Test with SSHSV1_A.xpt
 
         # Compare to this
-        data_csv = pd.read_csv(self.file02.replace(".XPT", ".csv"))
+        data_csv = pd.read_csv(self.file02.replace(".xpt", ".csv"))
         numeric_as_float(data_csv)
 
         data = XportReader(self.file02).read()
         tm.assert_frame_equal(data, data_csv)
 
     def test_multiple_types(self):
-        # Test with DRXFCD_G.XPT (contains text and numeric variables)
+        # Test with DRXFCD_G.xpt (contains text and numeric variables)
 
         # Compare to this
-        data_csv = pd.read_csv(self.file03.replace(".XPT", ".csv"))
+        data_csv = pd.read_csv(self.file03.replace(".xpt", ".csv"))
 
         data = XportReader(self.file03).read()
         tm.assert_frame_equal(data, data_csv)
diff --git a/pandas/io/tests/test_stata.py b/pandas/io/tests/test_stata.py
index ef009c3ec..a4c6e1279 100644
--- a/pandas/io/tests/test_stata.py
+++ b/pandas/io/tests/test_stata.py
@@ -571,7 +571,7 @@ class TestStata(tm.TestCase):
     def test_105(self):
         # Data obtained from:
         # http://go.worldbank.org/ZXY29PVJ21
-        dpath = os.path.join(self.dirpath, 'S4_EDUC1.DTA')
+        dpath = os.path.join(self.dirpath, 'S4_EDUC1.dta')
         df = pd.read_stata(dpath)
         df0 = [[1, 1, 3, -2], [2, 1, 2, -2], [4, 1, 1, -2]]
         df0 = pd.DataFrame(df0)
diff --git a/pandas/tests/test_categorical.py b/pandas/tests/test_categorical.py
index 9305cabe6..9aeff41ee 100755
--- a/pandas/tests/test_categorical.py
+++ b/pandas/tests/test_categorical.py
@@ -1427,7 +1427,6 @@ Categories (3, object): [ああああ, いいいいい, ううううううう]""
         with tm.assert_produces_warning(FutureWarning):
             res = cat.labels
         self.assert_numpy_array_equal(res, exp)
-        self.assertFalse(LooseVersion(pd.__version__) >= '0.18')
 
     def test_deprecated_levels(self):
         # TODO: levels is deprecated and should be removed in 0.18 or 2017,
@@ -1441,8 +1440,6 @@ Categories (3, object): [ああああ, いいいいい, ううううううう]""
             res = pd.Categorical([1, 2, 3, np.nan], levels=[1, 2, 3])
         self.assert_numpy_array_equal(res.categories, exp)
 
-        self.assertFalse(LooseVersion(pd.__version__) >= '0.18')
-
     def test_removed_names_produces_warning(self):
 
         # 10482
diff --git a/setup.py b/setup.py
index 984714eb5..b5609d213 100755
--- a/setup.py
+++ b/setup.py
@@ -551,7 +551,7 @@ setup(name=DISTNAME,
                                   'tests/data/legacy_pickle/*/*.pickle',
                                   'tests/data/legacy_msgpack/*/*.msgpack',
                                   'tests/data/*.csv*',
-                                  'tests/data/*.XPT',
+                                  'tests/data/*.xpt',
                                   'tests/data/*.dta',
                                   'tests/data/*.txt',
                                   'tests/data/*.xls',
