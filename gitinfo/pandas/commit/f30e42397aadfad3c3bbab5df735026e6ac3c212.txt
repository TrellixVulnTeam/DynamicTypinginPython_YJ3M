commit f30e42397aadfad3c3bbab5df735026e6ac3c212
Author: jreback <jeff@reback.net>
Date:   Thu Aug 20 14:22:00 2015 -0400

    TST: #10822, skip tests on windows for odd error message in to_datetime with unicode

diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index 7b6243f39..465f1da05 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -16,7 +16,8 @@ from distutils.version import LooseVersion
 
 from pandas.compat import(
     map, zip, range, long, lrange, lmap, lzip,
-    OrderedDict, u, StringIO, string_types
+    OrderedDict, u, StringIO, string_types,
+    is_platform_windows
 )
 from pandas import compat
 
@@ -13894,7 +13895,11 @@ class TestDataFrame(tm.TestCase, CheckIndexing,
         # these work (though results may be unexpected)
         f('int64')
         f('float64')
-        f('M8[ns]')
+
+        # 10822
+        # invalid error message on dt inference
+        if not is_platform_windows():
+            f('M8[ns]')
 
     def test_assign_columns(self):
         self.frame['hi'] = 'there'
diff --git a/pandas/tseries/tests/test_frequencies.py b/pandas/tseries/tests/test_frequencies.py
index 29152551f..68b656979 100644
--- a/pandas/tseries/tests/test_frequencies.py
+++ b/pandas/tseries/tests/test_frequencies.py
@@ -15,6 +15,7 @@ from pandas.tseries.tools import to_datetime
 import pandas.tseries.offsets as offsets
 from pandas.tseries.period import PeriodIndex
 import pandas.compat as compat
+from pandas.compat import is_platform_windows
 
 import pandas.util.testing as tm
 from pandas import Timedelta
@@ -500,9 +501,12 @@ class TestFrequencyInference(tm.TestCase):
                    tm.makePeriodIndex(10) ]:
             self.assertRaises(TypeError, lambda : frequencies.infer_freq(i))
 
-        for i in [ tm.makeStringIndex(10),
-                   tm.makeUnicodeIndex(10) ]:
-            self.assertRaises(ValueError, lambda : frequencies.infer_freq(i))
+        # GH 10822
+        # odd error message on conversions to datetime for unicode
+        if not is_platform_windows():
+            for i in [ tm.makeStringIndex(10),
+                       tm.makeUnicodeIndex(10) ]:
+                self.assertRaises(ValueError, lambda : frequencies.infer_freq(i))
 
     def test_string_datetimelike_compat(self):
 
