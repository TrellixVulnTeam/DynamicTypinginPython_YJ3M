commit c03c1b90f176b0ac7dfd087f7a248ebaf73011fe
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Tue Apr 10 00:16:34 2012 -0400

    ENH: fix merge conflict from cherry-picking PR #964

diff --git a/RELEASE.rst b/RELEASE.rst
index cae1981b7..4fb386e0c 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -31,6 +31,7 @@ pandas 0.7.3
 
   - Add group_keys argument to groupby to not add group names to MultiIndex in
     result of apply (GH #938)
+  - scatter_matrix method in pandas/tools/plotting.py (PR #935)
 
 **API Changes**
 
diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 988a8594f..b7c0339a4 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -3642,6 +3642,17 @@ class DataFrame(NDFrame):
         return self._reduce(nanops.nanskew, axis=axis, skipna=skipna,
                             numeric_only=None)
 
+
+    @Substitution(name='unbiased kurtosis', shortname='kurt',
+                  na_action=_doc_exclude_na, extras='')
+    @Appender(_stat_doc)
+    def kurt(self, axis=0, skipna=True, level=None):
+        if level is not None:
+            return self._agg_by_level('kurt', axis=axis, level=level,
+                                      skipna=skipna)
+        return self._reduce(nanops.nankurt, axis=axis, skipna=skipna,
+                            numeric_only=None)
+
     def _agg_by_level(self, name, axis=0, level=0, skipna=True, **kwds):
         grouped = self.groupby(level=level, axis=axis)
         if hasattr(grouped, name) and skipna:
diff --git a/pandas/core/nanops.py b/pandas/core/nanops.py
index aa947847b..f7cd560ab 100644
--- a/pandas/core/nanops.py
+++ b/pandas/core/nanops.py
@@ -219,6 +219,38 @@ def nanskew(values, axis=None, skipna=True):
             return np.nan
         return result
 
+def nankurt(values, axis=None, skipna=True):
+    if not isinstance(values.dtype.type, np.floating):
+        values = values.astype('f8')
+
+    mask = isnull(values)
+    count = _get_counts(mask, axis)
+
+    if skipna:
+        values = values.copy()
+        np.putmask(values, mask, 0)
+
+    A = values.sum(axis) / count
+    B = (values ** 2).sum(axis) / count - A ** 2
+    C = (values ** 3).sum(axis) / count - A ** 3 - 3 * A * B
+    D = (values ** 4).sum(axis) / count - A ** 4 - 6 * B * A * A - 4 * C * A
+
+    B = _zero_out_fperr(B)
+    C = _zero_out_fperr(C)
+    D = _zero_out_fperr(D)
+
+    result = (((count*count - 1.)*D / (B*B) - 3*((count-1.)**2)) /
+              ((count - 2.)*(count-3.)))
+    if isinstance(result, np.ndarray):
+        result = np.where(B == 0, 0, result)
+        result[count < 4] = np.nan
+        return result
+    else:
+        result = 0 if B == 0 else result
+        if count < 4:
+            return np.nan
+        return result
+
 def nanprod(values, axis=None, skipna=True):
     mask = isnull(values)
     if skipna and not issubclass(values.dtype.type, np.integer):
diff --git a/pandas/core/series.py b/pandas/core/series.py
index 60bf8694a..1e981e919 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -1050,6 +1050,15 @@ copy : boolean, default False
 
         return nanops.nanskew(self.values, skipna=skipna)
 
+    @Substitution(name='unbiased kurtosis', shortname='kurt',
+                  na_action=_doc_exclude_na, extras='')
+    @Appender(_stat_doc)
+    def kurt(self, skipna=True, level=None):
+        if level is not None:
+            return self._agg_by_level('kurt', level=level, skipna=skipna)
+
+        return nanops.nankurt(self.values, skipna=skipna)
+
     def _agg_by_level(self, name, level=0, skipna=True, **kwds):
         grouped = self.groupby(level=level)
         if hasattr(grouped, name) and skipna:
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index c1893ddef..bc6ece927 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -4349,6 +4349,16 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
 
         self._check_stat_op('skew', alt)
 
+    def test_kurt(self):
+        from scipy.stats import kurtosis
+
+        def alt(x):
+            if len(x) < 4:
+                return np.nan
+            return kurtosis(x, bias=False)
+
+        self._check_stat_op('kurt', alt)
+
     def _check_stat_op(self, name, alternative, frame=None, has_skipna=True,
                        has_numeric_only=False):
         if frame is None:
diff --git a/pandas/tests/test_series.py b/pandas/tests/test_series.py
index 4c44cd379..05563266f 100644
--- a/pandas/tests/test_series.py
+++ b/pandas/tests/test_series.py
@@ -912,6 +912,11 @@ class TestSeries(unittest.TestCase, CheckNameIntegration):
         alt =lambda x: skew(x, bias=False)
         self._check_stat_op('skew', alt)
 
+    def test_kurt(self):
+        from scipy.stats import kurtosis
+        alt = lambda x: kurtosis(x, bias=False)
+        self._check_stat_op('kurt', alt)
+
     def test_argsort(self):
         self._check_accum_op('argsort')
         argsorted = self.ts.argsort()
