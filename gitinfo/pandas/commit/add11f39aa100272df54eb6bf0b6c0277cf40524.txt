commit add11f39aa100272df54eb6bf0b6c0277cf40524
Author: Phillip Cloud <cpcloud@gmail.com>
Date:   Tue Jun 25 21:20:55 2013 -0400

    CLN/DOC: move all 0.12s to 0.13

diff --git a/doc/source/faq.rst b/doc/source/faq.rst
index 2613a8181..044922101 100644
--- a/doc/source/faq.rst
+++ b/doc/source/faq.rst
@@ -35,7 +35,7 @@ horizontal scrolling, auto-detection of width/height.
 To appropriately address all these environments, the display behavior is controlled
 by several options, which you're encouraged to tweak to suit your setup.
 
-As of 0.12, these are the relavent options, all under the `display` namespace,
+As of 0.12, these are the relevant options, all under the `display` namespace,
 (e.g. display.width,  etc'):
 
 - notebook_repr_html: if True, IPython frontends with HTML support will display
diff --git a/pandas/core/api.py b/pandas/core/api.py
index a8f5bb2a4..14af72a2a 100644
--- a/pandas/core/api.py
+++ b/pandas/core/api.py
@@ -28,7 +28,7 @@ from pandas.tseries.period import Period, PeriodIndex
 
 # legacy
 from pandas.core.daterange import DateRange  # deprecated
-from pandas.core.common import save, load # deprecated, remove in 0.12
+from pandas.core.common import save, load # deprecated, remove in 0.13
 import pandas.core.datetools as datetools
 
 from pandas.core.config import get_option, set_option, reset_option,\
diff --git a/pandas/core/common.py b/pandas/core/common.py
index a31c92caf..96c567cbb 100644
--- a/pandas/core/common.py
+++ b/pandas/core/common.py
@@ -2076,7 +2076,7 @@ def console_encode(object, **kwds):
     return pprint_thing_encoded(object,
                                 get_option("display.encoding"))
 
-def load(path):  # TODO remove in 0.12
+def load(path):  # TODO remove in 0.13
     """
     Load pickled pandas object (or any other pickled object) from the specified
     file path
@@ -2098,7 +2098,7 @@ def load(path):  # TODO remove in 0.12
     from pandas.io.pickle import read_pickle
     return read_pickle(path)
 
-def save(obj, path):  # TODO remove in 0.12
+def save(obj, path):  # TODO remove in 0.13
     '''
     Pickle (serialize) object to input file path
 
diff --git a/pandas/core/format.py b/pandas/core/format.py
index b1f7a2a89..2f4432e44 100644
--- a/pandas/core/format.py
+++ b/pandas/core/format.py
@@ -793,7 +793,7 @@ class CSVFormatter(object):
                  line_terminator='\n', chunksize=None, engine=None,
                  tupleize_cols=True):
 
-        self.engine = engine  # remove for 0.12
+        self.engine = engine  # remove for 0.13
         self.obj = obj
 
         self.path_or_buf = path_or_buf
@@ -962,7 +962,7 @@ class CSVFormatter(object):
                                          delimiter=self.sep, quoting=self.quoting)
 
             if self.engine == 'python':
-            # to be removed in 0.12
+            # to be removed in 0.13
                 self._helper_csv(self.writer, na_rep=self.na_rep,
                                  float_format=self.float_format, cols=self.cols,
                                  header=self.header, index=self.index,
diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 43b4e8c3c..3a23a212c 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -568,14 +568,14 @@ class DataFrame(NDFrame):
     def _verbose_info(self):
         import warnings
         warnings.warn('The _verbose_info property will be removed in version '
-                      '0.12. please use "max_info_rows"', FutureWarning)
+                      '0.13. please use "max_info_rows"', FutureWarning)
         return get_option('display.max_info_rows') is None
 
     @_verbose_info.setter
     def _verbose_info(self, value):
         import warnings
         warnings.warn('The _verbose_info property will be removed in version '
-                      '0.12. please use "max_info_rows"', FutureWarning)
+                      '0.13. please use "max_info_rows"', FutureWarning)
 
         value = None if value else 1000000
         set_option('display.max_info_rows', value)
@@ -3593,12 +3593,12 @@ class DataFrame(NDFrame):
         if method is not None:
             from warnings import warn
             warn('the "method" argument is deprecated and will be removed in'
-                 'v0.12; this argument has no effect')
+                 'v0.13; this argument has no effect')
 
         if axis is not None:
             from warnings import warn
             warn('the "axis" argument is deprecated and will be removed in'
-                 'v0.12; this argument has no effect')
+                 'v0.13; this argument has no effect')
 
         self._consolidate_inplace()
 
@@ -3733,7 +3733,7 @@ class DataFrame(NDFrame):
         reindex, replace, fillna
         """
         from warnings import warn
-        warn('DataFrame.interpolate will be removed in v0.12, please use '
+        warn('DataFrame.interpolate will be removed in v0.13, please use '
              'either DataFrame.fillna or DataFrame.replace instead',
              FutureWarning)
         if self._is_mixed_type and axis == 1:
diff --git a/pandas/core/generic.py b/pandas/core/generic.py
index 2bbb0da9a..627a8ab82 100644
--- a/pandas/core/generic.py
+++ b/pandas/core/generic.py
@@ -36,13 +36,13 @@ class PandasObject(object):
         from pandas.io.pickle import to_pickle
         return to_pickle(self, path)
 
-    def save(self, path):  # TODO remove in 0.12
+    def save(self, path):  # TODO remove in 0.13
         import warnings
         from pandas.io.pickle import to_pickle
         warnings.warn("save is deprecated, use to_pickle", FutureWarning)
         return to_pickle(self, path)
 
-    def load(self, path):  # TODO remove in 0.12
+    def load(self, path):  # TODO remove in 0.13
         import warnings
         from pandas.io.pickle import read_pickle
         warnings.warn("load is deprecated, use pd.read_pickle", FutureWarning)
diff --git a/pandas/tools/plotting.py b/pandas/tools/plotting.py
index 039e13f35..a5aaac05d 100644
--- a/pandas/tools/plotting.py
+++ b/pandas/tools/plotting.py
@@ -880,7 +880,7 @@ class MPLPlot(object):
         try:
             # might be an ndframe
             numeric_data = self.data._get_numeric_data()
-        except AttributeError:  # TODO: rm in 0.12 (series-inherit-ndframe)
+        except AttributeError:  # TODO: rm in 0.13 (series-inherit-ndframe)
             numeric_data = self.data
             orig_dtype = numeric_data.dtype
 
