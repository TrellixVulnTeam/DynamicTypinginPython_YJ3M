commit f2ed595d0b77c2e4c68edf1eae9ddca8fba42651
Author: Jeff Reback <jeff@reback.net>
Date:   Thu Apr 13 11:41:03 2017 +0000

    TST: use checkstack level as per comments in groupby.agg with dicts depr testing (#15992)

diff --git a/pandas/core/groupby.py b/pandas/core/groupby.py
index 5e5519680..5591ce4b0 100644
--- a/pandas/core/groupby.py
+++ b/pandas/core/groupby.py
@@ -2843,7 +2843,7 @@ class SeriesGroupBy(GroupBy):
                     ("using a dict on a Series for aggregation\n"
                      "is deprecated and will be removed in a future "
                      "version"),
-                    FutureWarning, stacklevel=4)
+                    FutureWarning, stacklevel=3)
 
             columns = list(arg.keys())
             arg = list(arg.items())
diff --git a/pandas/tests/groupby/test_aggregate.py b/pandas/tests/groupby/test_aggregate.py
index c2d6422c5..22d1de99c 100644
--- a/pandas/tests/groupby/test_aggregate.py
+++ b/pandas/tests/groupby/test_aggregate.py
@@ -310,18 +310,15 @@ class TestGroupByAggregate(tm.TestCase):
                            'B': range(5),
                            'C': range(5)})
 
-        with tm.assert_produces_warning(FutureWarning,
-                                        check_stacklevel=False) as w:
+        with tm.assert_produces_warning(FutureWarning) as w:
             df.groupby('A').agg({'B': {'foo': ['sum', 'max']},
                                  'C': {'bar': ['count', 'min']}})
             assert "using a dict with renaming" in str(w[0].message)
 
-        with tm.assert_produces_warning(FutureWarning,
-                                        check_stacklevel=False):
+        with tm.assert_produces_warning(FutureWarning):
             df.groupby('A')[['B', 'C']].agg({'ma': 'max'})
 
-        with tm.assert_produces_warning(FutureWarning,
-                                        check_stacklevel=False) as w:
+        with tm.assert_produces_warning(FutureWarning) as w:
             df.groupby('A').B.agg({'foo': 'count'})
             assert "using a dict on a Series for aggregation" in str(
                 w[0].message)
