commit 3ac2bdf17b72bef30c4b7f25cf9c538fc95e983f
Author: Joris Van den Bossche <jorisvandenbossche@gmail.com>
Date:   Wed Mar 12 09:28:25 2014 +0100

    TST: enable MySQL tests

diff --git a/ci/requirements-2.7.txt b/ci/requirements-2.7.txt
index 8fc289b5e..030dae3c5 100644
--- a/ci/requirements-2.7.txt
+++ b/ci/requirements-2.7.txt
@@ -18,4 +18,5 @@ beautifulsoup4==4.2.1
 statsmodels==0.5.0
 bigquery==2.0.17
 sqlalchemy==0.8.1
+pymysql==0.6.1
 psycopg2==2.5.2
diff --git a/ci/requirements-3.3.txt b/ci/requirements-3.3.txt
index 8e85c1108..d37bc3590 100644
--- a/ci/requirements-3.3.txt
+++ b/ci/requirements-3.3.txt
@@ -16,4 +16,5 @@ scipy==0.12.0
 beautifulsoup4==4.2.1
 statsmodels==0.4.3
 sqlalchemy==0.9.1
+pymysql==0.6.1
 psycopg2==2.5.2
diff --git a/pandas/io/sql.py b/pandas/io/sql.py
index 4c0c18a0e..4c0c22da6 100644
--- a/pandas/io/sql.py
+++ b/pandas/io/sql.py
@@ -668,7 +668,7 @@ class PandasSQLAlchemy(PandasSQL):
                    parse_dates=None, columns=None):
 
         table = PandasSQLTable(table_name, self, index=index_col)
-        return table.read(coerce_float=parse_dates,
+        return table.read(coerce_float=coerce_float,
                           parse_dates=parse_dates, columns=columns)
 
     def drop_table(self, table_name):
diff --git a/pandas/io/tests/test_sql.py b/pandas/io/tests/test_sql.py
index 0e26a6692..46b575890 100644
--- a/pandas/io/tests/test_sql.py
+++ b/pandas/io/tests/test_sql.py
@@ -495,7 +495,7 @@ class _TestSQLAlchemy(PandasSQLTest):
         self.assertRaises(
             ValueError, sql.read_table, "this_doesnt_exist", con=self.conn)
 
-    def test_default_type_convertion(self):
+    def test_default_type_conversion(self):
         df = sql.read_table("types_test_data", self.conn)
 
         self.assertTrue(issubclass(df.FloatCol.dtype.type, np.floating),
@@ -589,7 +589,7 @@ class TestSQLAlchemy(_TestSQLAlchemy):
 
         self._load_test1_data()
 
-    def test_default_type_convertion(self):
+    def test_default_type_conversion(self):
         df = sql.read_table("types_test_data", self.conn)
 
         self.assertTrue(issubclass(df.FloatCol.dtype.type, np.floating),
@@ -755,6 +755,24 @@ class TestMySQLAlchemy(_TestSQLAlchemy):
             for table in c.fetchall():
                 self.conn.execute('DROP TABLE %s' % table[0])
 
+        def test_default_type_conversion(self):
+            df = sql.read_table("types_test_data", self.conn)
+    
+            self.assertTrue(issubclass(df.FloatCol.dtype.type, np.floating),
+                            "FloatCol loaded with incorrect type")
+            self.assertTrue(issubclass(df.IntCol.dtype.type, np.integer),
+                            "IntCol loaded with incorrect type")
+            # MySQL has no real BOOL type (it's an alias for TINYINT) 
+            self.assertTrue(issubclass(df.BoolCol.dtype.type, np.integer),
+                            "BoolCol loaded with incorrect type")
+    
+            # Int column with NA values stays as float
+            self.assertTrue(issubclass(df.IntColWithNull.dtype.type, np.floating),
+                            "IntColWithNull loaded with incorrect type")
+            # Bool column with NA = int column with NA values => becomes float
+            self.assertTrue(issubclass(df.BoolColWithNull.dtype.type, np.floating), 
+                            "BoolColWithNull loaded with incorrect type")
+
 
 class TestPostgreSQLAlchemy(_TestSQLAlchemy):
     flavor = 'postgresql'
