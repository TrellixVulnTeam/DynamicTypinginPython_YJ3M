commit 7dd8bc57d73a39daf263a877dceb234843a6de8a
Author: Chang She <changshe@gmail.com>
Date:   Wed Sep 26 15:29:45 2012 -0400

    Better error message for DataFrame.apply if axis is not 0 or 1

diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 87d016913..9f85c4acb 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -3760,6 +3760,8 @@ class DataFrame(NDFrame):
             series_gen = (Series.from_array(arr, index=res_columns, name=name)
                           for i, (arr, name) in
                           enumerate(izip(values, res_index)))
+        else:
+            raise ValueError('Axis must be 0 or 1, got %s' % str(axis))
 
         keys = []
         results = {}
@@ -3815,6 +3817,8 @@ class DataFrame(NDFrame):
             target = self
         elif axis == 1:
             target = self.T
+        else:
+            raise ValueError('Axis must be 0 or 1, got %s' % str(axis))
 
         result_values = np.empty_like(target.values)
         columns = target.columns
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index 81dd24a6c..7a69cf4b8 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -5239,6 +5239,10 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
         expected = Series(np.nan, index=self.frame.index)
         assert_series_equal(result, expected)
 
+        #invalid axis
+        df = DataFrame([[1,2,3], [4,5,6], [7,8,9]], index=['a','a','c'])
+        self.assertRaises(ValueError, df.apply, lambda x: x, 2)
+
     def test_apply_standard_nonunique(self):
         df = DataFrame([[1,2,3], [4,5,6], [7,8,9]], index=['a','a','c'])
         rs = df.apply(lambda s: s[0], axis=1)
