commit 098c21ab52c4e409a2df5a8acdab454a20f16499
Author: y-p <yoval@gmx.com>
Date:   Fri Apr 19 13:57:18 2013 +0300

    DOC: Add comments, tweak option descriptions.

diff --git a/pandas/core/config_init.py b/pandas/core/config_init.py
index 868e2fc6b..3b646a8ab 100644
--- a/pandas/core/config_init.py
+++ b/pandas/core/config_init.py
@@ -34,7 +34,7 @@ pc_max_rows_doc = """
 : int
     This sets the maximum number of rows pandas should output when printing
     out various output. For example, this value determines whether the repr()
-    for a dataframe prints out fully or just an summary repr.
+    for a dataframe prints out fully or just a summary repr.
 """
 
 pc_max_cols_doc = """
@@ -127,18 +127,19 @@ line_width has been deprecated, use display.width instead (currently both are id
 
 pc_width_doc = """
 : int
-    Width of the display. In case python/IPython is running in a terminal this
-    can be set to 0 and pandas will correctly auto-detect the width. Note that
-    the IPython notebook, IPython qtconsole, or IDLE do not run in a terminal
-    and hence it is not possible to correctly detect the width.
+    Width of the display in characters. In case python/IPython is running in
+    a terminal this can be set to 0 and pandas will correctly auto-detect the
+    width.
+    Note that the IPython notebook, IPython qtconsole, or IDLE do not run in a
+    terminal and hence it is not possible to correctly detect the width.
 """
 
 pc_height_doc = """
 : int
-    Height of the display. In case python/IPython is running in a terminal this
-    can be set to 0 and pandas will auto-detect the width. Note that the
-    IPython notebook, IPython qtconsole, or IDLE do not run in a terminal,
-    and hence it is not possible to correctly detect the height.
+    Height of the display in lines. In case python/IPython is running in a
+    terminal this can be set to 0 and pandas will auto-detect the width.
+    Note that the IPython notebook, IPython qtconsole, or IDLE do not run
+    in a terminal, and hence it is not possible to correctly detect the height.
 """
 
 pc_chop_threshold_doc = """
diff --git a/pandas/core/format.py b/pandas/core/format.py
index f6d19aef7..42dc328b2 100644
--- a/pandas/core/format.py
+++ b/pandas/core/format.py
@@ -1680,6 +1680,7 @@ def get_console_size():
     display_height = get_option('display.height')
 
     if com.in_interactive_session() and not com.in_ipnb_frontend():
+        # pure terminal
         terminal_width, terminal_height = get_terminal_size()
     else:
         terminal_width, terminal_height = 80, 100
diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index a457430d2..021460127 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -602,7 +602,7 @@ class DataFrame(NDFrame):
     def _repr_fits_vertical_(self):
         """
         Check if full repr fits in vertical boundaries imposed by the display
-        options height and max_columns.  In case off non-interactive session,
+        options height and max_rows.  In case off non-interactive session,
         no boundaries apply.
         """
         width, height = fmt.get_console_size()
@@ -664,6 +664,8 @@ class DataFrame(NDFrame):
         fits_vertical = self._repr_fits_vertical_()
         fits_horizontal = False
         if fits_vertical:
+            # This needs to compute the entire repr
+            # so don't do it unless rownum is bounded
             fits_horizontal = self._repr_fits_horizontal_()
 
         if fits_vertical and fits_horizontal:
@@ -671,9 +673,10 @@ class DataFrame(NDFrame):
         else:
             width, height = fmt.get_console_size()
             max_rows = get_option("display.max_rows") or height
-            # Expand or info? Decide based on option display.expand_frame_repr
-            # and keep it sane for the number of display rows used by the
-            # expanded repr.
+            # expand_repr basically takes the extrac columns that don't
+            # fit the width, and creates a new page, which increases
+            # the effective row count. check number of cols agaibst
+            # max rows to catch wrapping. that would exceed max_rows.
             if (get_option("display.expand_frame_repr") and fits_vertical and
                 len(self.columns) < max_rows):
                 self.to_string(buf=buf, line_width=width)
