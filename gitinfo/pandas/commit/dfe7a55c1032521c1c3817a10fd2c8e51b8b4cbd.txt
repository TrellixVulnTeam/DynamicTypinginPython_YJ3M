commit dfe7a55c1032521c1c3817a10fd2c8e51b8b4cbd
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Tue Sep 18 16:33:19 2012 -0400

    BUG: set index name/names in DataFrame.from_records. close #1744

diff --git a/RELEASE.rst b/RELEASE.rst
index 8e3c02141..a4d62f7e7 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -192,6 +192,8 @@ pandas 0.9.0
   - Various fixes by upcasting of date -> datetime (#1395)
   - Raise better exception when passing multiple functions with the same name,
     such as lambdas, to GroupBy.aggregate
+  - Fix DataFrame.apply with axis=1 on a non-unique index (#1878)
+  - Proper handling of Index subclasses in pandas.unique (#1759)
 
 pandas 0.8.1
 ============
diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 8d8884238..210fa98b5 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -856,6 +856,7 @@ class DataFrame(NDFrame):
             if (isinstance(index, basestring) or
                 not hasattr(index, "__iter__")):
                 result_index = sdict.pop(index)
+                result_index = Index(result_index, name=index)
                 columns.remove(index)
             else:
                 try:
@@ -865,7 +866,7 @@ class DataFrame(NDFrame):
                     for field in index:
                         del sdict[field]
                         columns.remove(field)
-                    result_index = MultiIndex.from_arrays(arrays)
+                    result_index = MultiIndex.from_arrays(arrays, names=index)
                 except Exception:
                     result_index = index
         elif isinstance(data, dict) and len(data) > 0:
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index 9f8179c5c..22c45ff05 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -2448,6 +2448,22 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
         self.assertRaises(ValueError, DataFrame.from_records,
                           [(1,2,3), (4,5,6)], columns=['a','b','a'])
 
+    def test_from_records_set_index_name(self):
+        def create_dict(order_id):
+            return {'order_id': order_id, 'quantity': np.random.randint(1, 10),
+                    'price': np.random.randint(1, 10)}
+        documents = [create_dict(i) for i in range(10)]
+        # demo missing data
+        documents.append({'order_id': 10, 'quantity': 5})
+
+        result = DataFrame.from_records(documents, index='order_id')
+        self.assert_(result.index.name == 'order_id')
+
+        # MultiIndex
+        result = DataFrame.from_records(documents,
+                                        index=['order_id', 'quantity'])
+        self.assert_(result.index.names == ['order_id', 'quantity'])
+
     def test_to_records_floats(self):
         df = DataFrame(np.random.rand(10,10))
         df.to_records()
