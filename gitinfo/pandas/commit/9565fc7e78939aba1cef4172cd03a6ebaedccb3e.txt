commit 9565fc7e78939aba1cef4172cd03a6ebaedccb3e
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Sun Oct 9 10:25:34 2011 -0400

    ENH: SparseSeries binary op speed enhancement in the block case, address GH #205

diff --git a/RELEASE.rst b/RELEASE.rst
index 4b9c4f34a..4c1218d2e 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -10,8 +10,12 @@ pandas 0.4.3
 
 **Release date:** not yet released
 
+This is largely a bugfix release from 0.4.2 but also includes a handful of new
+and enhanced features. Also, pandas can now be installed and used on Python 3!
+
 **New features / modules**
 
+  - Python 3 support using 2to3 (PR #200, Thomas Kluyver)
   - Add `name` attribute to standard Index so that stacking / unstacking does
     not discard names and so that indexed DataFrame objects can be reliably
     round-tripped to flat files, pickle, HDF5, etc.
@@ -22,6 +26,9 @@ pandas 0.4.3
   - Skip xlrd-related unit tests if not installed
   - `Index.append` and `MultiIndex.append` can accept a list of Index objects to
     concatenate together
+  - Altered binary operations on differently-indexed SparseSeries objects to use
+    the integer-based (dense) alignment logic which results in more than 10x
+    speedup over the block logic. Have not figured out why this is yet (GH #205)
 
 **Bug fixes**
 
diff --git a/pandas/src/sparse.pyx b/pandas/src/sparse.pyx
index 96ad5d5f1..1fe4cada6 100644
--- a/pandas/src/sparse.pyx
+++ b/pandas/src/sparse.pyx
@@ -747,12 +747,16 @@ cpdef sparse_nanpow(ndarray x, SparseIndex xindex,
 cdef inline tuple sparse_nancombine(ndarray x, SparseIndex xindex,
                                     ndarray y, SparseIndex yindex,
                                     double_func op):
-    if isinstance(xindex, BlockIndex):
-        return block_nanop(x, xindex.to_block_index(),
-                           y, yindex.to_block_index(), op)
-    elif isinstance(xindex, IntIndex):
-        return int_nanop(x, xindex.to_int_index(),
-                         y, yindex.to_int_index(), op)
+    # block_nanop is up to 40x slower and I don't know why yet
+    return int_nanop(x, xindex.to_int_index(),
+                     y, yindex.to_int_index(), op)
+
+    # if isinstance(xindex, BlockIndex):
+    #     return block_nanop(x, xindex.to_block_index(),
+    #                        y, yindex.to_block_index(), op)
+    # elif isinstance(xindex, IntIndex):
+    #     return int_nanop(x, xindex.to_int_index(),
+    #                      y, yindex.to_int_index(), op)
 
 cpdef sparse_add(ndarray x, SparseIndex xindex, float64_t xfill,
                  ndarray y, SparseIndex yindex, float64_t yfill):
