commit c1f4c5dbd5a9774ed3de2d026e2aa74e69588357
Author: Matthew Roeschke <emailformattr@gmail.com>
Date:   Mon Apr 20 14:35:28 2020 -0700

    TST: Remove some old xfails (#33680)

diff --git a/pandas/tests/arrays/sparse/test_arithmetics.py b/pandas/tests/arrays/sparse/test_arithmetics.py
index bf7d275e4..4ae1c1e6b 100644
--- a/pandas/tests/arrays/sparse/test_arithmetics.py
+++ b/pandas/tests/arrays/sparse/test_arithmetics.py
@@ -31,11 +31,6 @@ class TestSparseArrayArithmetics:
 
     def _check_numeric_ops(self, a, b, a_dense, b_dense, mix, op):
         with np.errstate(invalid="ignore", divide="ignore"):
-            if op in [operator.floordiv, ops.rfloordiv]:
-                # FIXME: GH#13843
-                if self._base == pd.Series and a.dtype.subtype == np.dtype("int64"):
-                    pytest.xfail("Not defined/working.  See GH#13843")
-
             if mix:
                 result = op(a, b_dense).to_dense()
             else:
diff --git a/pandas/tests/groupby/test_function.py b/pandas/tests/groupby/test_function.py
index 346de55f5..93dd1bf23 100644
--- a/pandas/tests/groupby/test_function.py
+++ b/pandas/tests/groupby/test_function.py
@@ -16,7 +16,6 @@ from pandas import (
     NaT,
     Series,
     Timestamp,
-    _is_numpy_dev,
     date_range,
     isna,
 )
@@ -698,11 +697,6 @@ def test_numpy_compat(func):
         getattr(g, func)(foo=1)
 
 
-@pytest.mark.xfail(
-    _is_numpy_dev,
-    reason="https://github.com/pandas-dev/pandas/issues/31992",
-    strict=False,
-)
 def test_cummin(numpy_dtypes_for_minmax):
     dtype = numpy_dtypes_for_minmax[0]
     min_val = numpy_dtypes_for_minmax[1]
@@ -751,11 +745,6 @@ def test_cummin(numpy_dtypes_for_minmax):
     tm.assert_series_equal(result, expected)
 
 
-@pytest.mark.xfail(
-    _is_numpy_dev,
-    reason="https://github.com/pandas-dev/pandas/issues/31992",
-    strict=False,
-)
 def test_cummin_all_nan_column():
     base_df = pd.DataFrame({"A": [1, 1, 1, 1, 2, 2, 2, 2], "B": [np.nan] * 8})
 
@@ -766,11 +755,6 @@ def test_cummin_all_nan_column():
     tm.assert_frame_equal(expected, result)
 
 
-@pytest.mark.xfail(
-    _is_numpy_dev,
-    reason="https://github.com/pandas-dev/pandas/issues/31992",
-    strict=False,
-)
 def test_cummax(numpy_dtypes_for_minmax):
     dtype = numpy_dtypes_for_minmax[0]
     max_val = numpy_dtypes_for_minmax[2]
@@ -819,11 +803,6 @@ def test_cummax(numpy_dtypes_for_minmax):
     tm.assert_series_equal(result, expected)
 
 
-@pytest.mark.xfail(
-    _is_numpy_dev,
-    reason="https://github.com/pandas-dev/pandas/issues/31992",
-    strict=False,
-)
 def test_cummax_all_nan_column():
     base_df = pd.DataFrame({"A": [1, 1, 1, 1, 2, 2, 2, 2], "B": [np.nan] * 8})
 
diff --git a/pandas/tests/groupby/transform/test_transform.py b/pandas/tests/groupby/transform/test_transform.py
index 2295eb229..e1042bf35 100644
--- a/pandas/tests/groupby/transform/test_transform.py
+++ b/pandas/tests/groupby/transform/test_transform.py
@@ -15,7 +15,6 @@ from pandas import (
     MultiIndex,
     Series,
     Timestamp,
-    _is_numpy_dev,
     concat,
     date_range,
 )
@@ -330,8 +329,6 @@ def test_transform_transformation_func(transformation_func):
     if transformation_func in ["pad", "backfill", "tshift", "cumcount"]:
         # These transformation functions are not yet covered in this test
         pytest.xfail("See GH 31269")
-    elif _is_numpy_dev and transformation_func in ["cummin"]:
-        pytest.xfail("https://github.com/pandas-dev/pandas/issues/31992")
     elif transformation_func == "fillna":
         test_op = lambda x: x.transform("fillna", value=0)
         mock_op = lambda x: x.fillna(value=0)
diff --git a/pandas/tests/io/test_pickle.py b/pandas/tests/io/test_pickle.py
index 584a54576..42b4ea5ad 100644
--- a/pandas/tests/io/test_pickle.py
+++ b/pandas/tests/io/test_pickle.py
@@ -196,7 +196,6 @@ def test_pickle_path_localpath():
     tm.assert_frame_equal(df, result)
 
 
-@pytest.mark.xfail(reason="GitHub issue #31310", strict=False)
 def test_legacy_sparse_warning(datapath):
     """
 
diff --git a/pandas/tests/scalar/period/test_period.py b/pandas/tests/scalar/period/test_period.py
index 304033f82..620fc1c00 100644
--- a/pandas/tests/scalar/period/test_period.py
+++ b/pandas/tests/scalar/period/test_period.py
@@ -1,7 +1,5 @@
 from datetime import date, datetime, timedelta
-from distutils.version import StrictVersion
 
-import dateutil
 import numpy as np
 import pytest
 import pytz
@@ -1437,11 +1435,6 @@ def test_period_immutable():
         per.freq = 2 * freq
 
 
-@pytest.mark.xfail(
-    StrictVersion(dateutil.__version__.split(".dev")[0]) < StrictVersion("2.7.0"),
-    reason="Bug in dateutil < 2.7.0 when parsing old dates: Period('0001-01-07', 'D')",
-    strict=False,
-)
 def test_small_year_parsing():
     per1 = Period("0001-01-07", "D")
     assert per1.year == 1
diff --git a/pandas/tests/scalar/timedelta/test_arithmetic.py b/pandas/tests/scalar/timedelta/test_arithmetic.py
index 7baeb8f56..eb22b715f 100644
--- a/pandas/tests/scalar/timedelta/test_arithmetic.py
+++ b/pandas/tests/scalar/timedelta/test_arithmetic.py
@@ -417,6 +417,7 @@ class TestTimedeltaMultiplicationDivision:
                 np.float64("NaN"),
                 marks=pytest.mark.xfail(
                     _is_numpy_dev,
+                    raises=RuntimeWarning,
                     reason="https://github.com/pandas-dev/pandas/issues/31992",
                     strict=False,
                 ),
