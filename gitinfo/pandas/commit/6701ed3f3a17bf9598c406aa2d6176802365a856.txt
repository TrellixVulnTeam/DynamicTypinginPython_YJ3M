commit 6701ed3f3a17bf9598c406aa2d6176802365a856
Author: Andy Hayden <andyhayden1@gmail.com>
Date:   Thu Jun 13 16:54:02 2013 +0100

    FIX PandasObjects unhashable

diff --git a/RELEASE.rst b/RELEASE.rst
index 9febddb85..072f40d92 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -220,7 +220,7 @@ pandas 0.11.1
   - Groupby transform with item-by-item not upcasting correctly (GH3740_)
   - Incorrectly read a HDFStore multi-index Frame witha column specification (GH3748_)
   - ``read_html`` now correctly skips tests (GH3741_)
-  - DataFrames/Panel raise Type error when trying to hash (GH3882_)
+  - PandasObjects raise TypeError when trying to hash (GH3882_)
   - Fix incorrect arguments passed to concat that are not list-like (e.g. concat(df1,df2)) (GH3481_)
   - Correctly parse when passed the ``dtype=str`` (or other variable-len string dtypes) in ``read_csv`` (GH3795_)
 
diff --git a/pandas/core/generic.py b/pandas/core/generic.py
index 6f1475e3f..3a3ce49d5 100644
--- a/pandas/core/generic.py
+++ b/pandas/core/generic.py
@@ -31,6 +31,11 @@ class PandasObject(object):
     def load(cls, path):
         return com.load(path)
 
+    def __hash__(self):
+        raise TypeError('{0!r} objects are mutable, thus they cannot be'
+                              ' hashed'.format(self.__class__.__name__))
+
+
     #----------------------------------------------------------------------
     # Axis name business
 
@@ -594,10 +599,6 @@ class NDFrame(PandasObject):
     def __repr__(self):
         return 'NDFrame'
 
-    def __hash__(self):
-        raise TypeError('{0!r} objects are mutable, thus they cannot be'
-                              ' hashed'.format(self.__class__.__name__))
-
     @property
     def values(self):
         return self._data.as_matrix()
diff --git a/pandas/core/series.py b/pandas/core/series.py
index 44398caa2..2621c64af 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -527,10 +527,6 @@ class Series(pa.Array, generic.PandasObject):
     def _can_hold_na(self):
         return not is_integer_dtype(self.dtype)
 
-    def __hash__(self):
-        raise TypeError('{0!r} objects are mutable, thus they cannot be'
-                              ' hashed'.format(self.__class__.__name__))
-
     _index = None
     index = lib.SeriesIndex()
 
