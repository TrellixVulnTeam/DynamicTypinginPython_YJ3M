commit 6e0f9a971bcd07a4a6283dc03190b4363d42e292
Author: Jeremy Schendel <jschendel@users.noreply.github.com>
Date:   Sat Mar 23 14:13:29 2019 -0600

    CLN: Remove redundant definitions in pandas.compat (filter, map, range, etc.) (#25845)

diff --git a/pandas/_libs/parsers.pyx b/pandas/_libs/parsers.pyx
index 88bb00cb5..cffeb44b5 100644
--- a/pandas/_libs/parsers.pyx
+++ b/pandas/_libs/parsers.pyx
@@ -698,7 +698,7 @@ cdef class TextReader:
 
             if ptr == NULL:
                 if not os.path.exists(source):
-                    raise compat.FileNotFoundError(
+                    raise FileNotFoundError(
                         ENOENT,
                         'File {source} does not exist'.format(source=source),
                         source)
diff --git a/pandas/compat/__init__.py b/pandas/compat/__init__.py
index 4036af85b..3a811ba77 100644
--- a/pandas/compat/__init__.py
+++ b/pandas/compat/__init__.py
@@ -5,7 +5,7 @@ compat
 Cross-compatible functions for Python 2 and 3.
 
 Key items to import for 2/3 compatible code:
-* iterators: range(), map(), zip(), filter(), reduce()
+* iterators: reduce()
 * lists: lrange(), lmap(), lzip(), lfilter()
 * unicode: u() [no unicode builtin in Python 3]
 * longs: long (int in Python 3)
@@ -107,19 +107,11 @@ if PY3:
         return data.start, data.stop, data.step
 
     # have to explicitly put builtins into the namespace
-    range = range
-    map = map
-    zip = zip
-    filter = filter
     intern = sys.intern
     reduce = functools.reduce
     long = int
     unichr = chr
 
-    # This was introduced in Python 3.3, but we don't support
-    # Python 3.x < 3.5, so checking PY3 is safe.
-    FileNotFoundError = FileNotFoundError
-
     # list-producing versions of the major Python iterating functions
     def lrange(*args, **kwargs):
         return list(range(*args, **kwargs))
@@ -148,8 +140,6 @@ else:
     # Python 2
     _name_re = re.compile(r"[a-zA-Z_][a-zA-Z0-9_]*$")
 
-    FileNotFoundError = IOError
-
     def isidentifier(s, dotted=False):
         return bool(_name_re.match(s))
 
@@ -181,11 +171,7 @@ else:
         return start, stop, step
 
     # import iterator versions of these functions
-    range = xrange
     intern = intern
-    zip = itertools.izip
-    filter = itertools.ifilter
-    map = itertools.imap
     reduce = reduce
     long = long
     unichr = unichr
@@ -217,7 +203,6 @@ if PY2:
     def itervalues(obj, **kw):
         return obj.itervalues(**kw)
 
-    next = lambda it: it.next()
 else:
     def iteritems(obj, **kw):
         return iter(obj.items(**kw))
@@ -228,8 +213,6 @@ else:
     def itervalues(obj, **kw):
         return iter(obj.values(**kw))
 
-    next = next
-
 
 def bind_method(cls, name, func):
     """Bind a method to class, python 2 and python 3 compatible.
@@ -315,9 +298,6 @@ if PY3:
             name=name)
         f.__module__ = cls.__module__
         return f
-
-    ResourceWarning = ResourceWarning
-
 else:
     string_types = basestring,
     integer_types = (int, long)
@@ -373,9 +353,6 @@ else:
         f.__name__ = name
         return f
 
-    class ResourceWarning(Warning):
-        pass
-
 string_and_binary_types = string_types + (binary_type,)
 
 
diff --git a/pandas/core/arrays/integer.py b/pandas/core/arrays/integer.py
index 0144d04c6..92505bd19 100644
--- a/pandas/core/arrays/integer.py
+++ b/pandas/core/arrays/integer.py
@@ -5,7 +5,7 @@ import warnings
 import numpy as np
 
 from pandas._libs import lib
-from pandas.compat import range, set_function_name, string_types
+from pandas.compat import set_function_name, string_types
 from pandas.util._decorators import cache_readonly
 
 from pandas.core.dtypes.base import ExtensionDtype
diff --git a/pandas/core/arrays/period.py b/pandas/core/arrays/period.py
index 55d12d444..400d4c9b9 100644
--- a/pandas/core/arrays/period.py
+++ b/pandas/core/arrays/period.py
@@ -934,14 +934,14 @@ def _range_from_fields(year=None, month=None, quarter=None, day=None,
                 raise AssertionError("base must equal FR_QTR")
 
         year, quarter = _make_field_arrays(year, quarter)
-        for y, q in compat.zip(year, quarter):
+        for y, q in zip(year, quarter):
             y, m = libperiod.quarter_to_myear(y, q, freq)
             val = libperiod.period_ordinal(y, m, 1, 1, 1, 1, 0, 0, base)
             ordinals.append(val)
     else:
         base, mult = libfrequencies.get_freq_code(freq)
         arrays = _make_field_arrays(year, month, day, hour, minute, second)
-        for y, mth, d, h, mn, s in compat.zip(*arrays):
+        for y, mth, d, h, mn, s in zip(*arrays):
             ordinals.append(libperiod.period_ordinal(
                 y, mth, d, h, mn, s, 0, 0, base))
 
diff --git a/pandas/core/base.py b/pandas/core/base.py
index ce91c232b..60ab13ac4 100644
--- a/pandas/core/base.py
+++ b/pandas/core/base.py
@@ -9,7 +9,7 @@ import numpy as np
 
 import pandas._libs.lib as lib
 import pandas.compat as compat
-from pandas.compat import PYPY, builtins, map, range
+from pandas.compat import PYPY, builtins
 from pandas.compat.numpy import function as nv
 from pandas.errors import AbstractMethodError
 from pandas.util._decorators import Appender, Substitution, cache_readonly
diff --git a/pandas/core/computation/align.py b/pandas/core/computation/align.py
index 951174648..71b57ec4e 100644
--- a/pandas/core/computation/align.py
+++ b/pandas/core/computation/align.py
@@ -6,7 +6,6 @@ import warnings
 
 import numpy as np
 
-from pandas.compat import range, zip
 from pandas.errors import PerformanceWarning
 
 import pandas as pd
diff --git a/pandas/core/computation/engines.py b/pandas/core/computation/engines.py
index bccd37131..cb03d16b0 100644
--- a/pandas/core/computation/engines.py
+++ b/pandas/core/computation/engines.py
@@ -4,8 +4,6 @@ Engine classes for :func:`~pandas.eval`
 
 import abc
 
-from pandas.compat import map
-
 from pandas import compat
 from pandas.core.computation.align import _align, _reconstruct_object
 from pandas.core.computation.ops import (
diff --git a/pandas/core/computation/expr.py b/pandas/core/computation/expr.py
index 4ab34b734..1d8fea951 100644
--- a/pandas/core/computation/expr.py
+++ b/pandas/core/computation/expr.py
@@ -9,7 +9,7 @@ import tokenize
 
 import numpy as np
 
-from pandas.compat import StringIO, lmap, map, reduce, string_types, zip
+from pandas.compat import StringIO, lmap, reduce, string_types
 
 import pandas as pd
 from pandas import compat
diff --git a/pandas/core/computation/scope.py b/pandas/core/computation/scope.py
index e158bc8c5..a2825fa97 100644
--- a/pandas/core/computation/scope.py
+++ b/pandas/core/computation/scope.py
@@ -12,7 +12,7 @@ import sys
 import numpy as np
 
 from pandas._libs.tslibs import Timestamp
-from pandas.compat import DeepChainMap, StringIO, map
+from pandas.compat import DeepChainMap, StringIO
 
 from pandas.core.base import StringMixin
 import pandas.core.computation as compu
diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index ec881c730..3862fa86d 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -33,9 +33,9 @@ from pandas.util._validators import (validate_bool_kwarg,
                                      validate_axis_style_args)
 
 from pandas import compat
-from pandas.compat import (range, map, zip, lmap, lzip, StringIO, u,
-                           PY36, raise_with_traceback, Iterator,
-                           string_and_binary_types)
+from pandas.compat import (
+    PY36, Iterator, StringIO, lmap, lzip, raise_with_traceback,
+    string_and_binary_types, u)
 from pandas.compat.numpy import function as nv
 from pandas.core.dtypes.cast import (
     maybe_upcast,
diff --git a/pandas/core/generic.py b/pandas/core/generic.py
index f69ba51e5..1717b0066 100644
--- a/pandas/core/generic.py
+++ b/pandas/core/generic.py
@@ -14,8 +14,8 @@ import numpy as np
 from pandas._libs import Timestamp, iNaT, properties
 import pandas.compat as compat
 from pandas.compat import (
-    cPickle as pkl, isidentifier, lrange, lzip, map, set_function_name,
-    string_types, to_str, zip)
+    cPickle as pkl, isidentifier, lrange, lzip, set_function_name,
+    string_types, to_str)
 from pandas.compat.numpy import function as nv
 from pandas.errors import AbstractMethodError
 from pandas.util._decorators import (
diff --git a/pandas/core/groupby/generic.py b/pandas/core/groupby/generic.py
index 3e7abbcb6..0604689c6 100644
--- a/pandas/core/groupby/generic.py
+++ b/pandas/core/groupby/generic.py
@@ -16,7 +16,7 @@ import numpy as np
 
 from pandas._libs import Timestamp, lib
 import pandas.compat as compat
-from pandas.compat import lzip, map
+from pandas.compat import lzip
 from pandas.compat.numpy import _np_version_under1p13
 from pandas.errors import AbstractMethodError
 from pandas.util._decorators import Appender, Substitution
diff --git a/pandas/core/groupby/groupby.py b/pandas/core/groupby/groupby.py
index 96eafbfae..a57b2cb96 100644
--- a/pandas/core/groupby/groupby.py
+++ b/pandas/core/groupby/groupby.py
@@ -19,7 +19,7 @@ import numpy as np
 
 from pandas._libs import Timestamp, groupby as libgroupby
 import pandas.compat as compat
-from pandas.compat import range, set_function_name, zip
+from pandas.compat import set_function_name
 from pandas.compat.numpy import function as nv
 from pandas.errors import AbstractMethodError
 from pandas.util._decorators import Appender, Substitution, cache_readonly
diff --git a/pandas/core/groupby/grouper.py b/pandas/core/groupby/grouper.py
index d1ebb9cbe..e470a32b8 100644
--- a/pandas/core/groupby/grouper.py
+++ b/pandas/core/groupby/grouper.py
@@ -8,7 +8,6 @@ import warnings
 import numpy as np
 
 import pandas.compat as compat
-from pandas.compat import zip
 from pandas.util._decorators import cache_readonly
 
 from pandas.core.dtypes.common import (
diff --git a/pandas/core/groupby/ops.py b/pandas/core/groupby/ops.py
index 78c9aa918..525af28c2 100644
--- a/pandas/core/groupby/ops.py
+++ b/pandas/core/groupby/ops.py
@@ -11,7 +11,7 @@ import collections
 import numpy as np
 
 from pandas._libs import NaT, groupby as libgroupby, iNaT, lib, reduction
-from pandas.compat import lzip, range, zip
+from pandas.compat import lzip
 from pandas.errors import AbstractMethodError
 from pandas.util._decorators import cache_readonly
 
diff --git a/pandas/core/indexes/base.py b/pandas/core/indexes/base.py
index a3eed90ab..cf85c10bf 100644
--- a/pandas/core/indexes/base.py
+++ b/pandas/core/indexes/base.py
@@ -12,7 +12,7 @@ from pandas._libs.lib import is_datetime_array
 from pandas._libs.tslibs import OutOfBoundsDatetime, Timedelta, Timestamp
 from pandas._libs.tslibs.timezones import tz_compare
 import pandas.compat as compat
-from pandas.compat import range, set_function_name, u
+from pandas.compat import set_function_name, u
 from pandas.compat.numpy import function as nv
 from pandas.util._decorators import Appender, Substitution, cache_readonly
 
diff --git a/pandas/core/indexes/multi.py b/pandas/core/indexes/multi.py
index 616c17cd1..79c39c72b 100644
--- a/pandas/core/indexes/multi.py
+++ b/pandas/core/indexes/multi.py
@@ -9,7 +9,7 @@ import numpy as np
 from pandas._libs import (
     Timestamp, algos as libalgos, index as libindex, lib, tslibs)
 import pandas.compat as compat
-from pandas.compat import lrange, lzip, map, range, zip
+from pandas.compat import lrange, lzip
 from pandas.compat.numpy import function as nv
 from pandas.errors import PerformanceWarning, UnsortedIndexError
 from pandas.util._decorators import Appender, cache_readonly, deprecate_kwarg
diff --git a/pandas/core/indexes/range.py b/pandas/core/indexes/range.py
index 886a48e2a..ac97e0994 100644
--- a/pandas/core/indexes/range.py
+++ b/pandas/core/indexes/range.py
@@ -7,7 +7,7 @@ import numpy as np
 
 from pandas._libs import index as libindex, lib
 import pandas.compat as compat
-from pandas.compat import get_range_parameters, lrange, range
+from pandas.compat import get_range_parameters, lrange
 from pandas.compat.numpy import function as nv
 from pandas.util._decorators import Appender, cache_readonly
 
diff --git a/pandas/core/indexing.py b/pandas/core/indexing.py
index 623a48acd..ebec8b91a 100755
--- a/pandas/core/indexing.py
+++ b/pandas/core/indexing.py
@@ -7,7 +7,6 @@ import numpy as np
 from pandas._libs.indexing import _NDFrameIndexerBase
 from pandas._libs.lib import item_from_zerodim
 import pandas.compat as compat
-from pandas.compat import range, zip
 from pandas.errors import AbstractMethodError
 from pandas.util._decorators import Appender
 
diff --git a/pandas/core/internals/blocks.py b/pandas/core/internals/blocks.py
index a61bc30a1..979c9fb8b 100644
--- a/pandas/core/internals/blocks.py
+++ b/pandas/core/internals/blocks.py
@@ -11,7 +11,6 @@ import numpy as np
 from pandas._libs import internals as libinternals, lib, tslib, tslibs
 from pandas._libs.tslibs import Timedelta, conversion, is_null_datetimelike
 import pandas.compat as compat
-from pandas.compat import range, zip
 from pandas.util._validators import validate_bool_kwarg
 
 from pandas.core.dtypes.cast import (
diff --git a/pandas/core/internals/construction.py b/pandas/core/internals/construction.py
index 7e9751268..d06be8b70 100644
--- a/pandas/core/internals/construction.py
+++ b/pandas/core/internals/construction.py
@@ -11,7 +11,7 @@ from pandas._libs import lib
 from pandas._libs.tslibs import IncompatibleFrequency
 import pandas.compat as compat
 from pandas.compat import (
-    get_range_parameters, lmap, lrange, raise_with_traceback, range)
+    get_range_parameters, lmap, lrange, raise_with_traceback)
 
 from pandas.core.dtypes.cast import (
     construct_1d_arraylike_from_scalar, construct_1d_ndarray_preserving_na,
diff --git a/pandas/core/internals/managers.py b/pandas/core/internals/managers.py
index b9d478f3f..3ea810f44 100644
--- a/pandas/core/internals/managers.py
+++ b/pandas/core/internals/managers.py
@@ -9,7 +9,6 @@ from typing import List, Optional, Union
 import numpy as np
 
 from pandas._libs import internals as libinternals, lib
-from pandas.compat import map, range, zip
 from pandas.util._validators import validate_bool_kwarg
 
 from pandas.core.dtypes.cast import (
diff --git a/pandas/core/missing.py b/pandas/core/missing.py
index 9acdb1a06..6a6ab78ae 100644
--- a/pandas/core/missing.py
+++ b/pandas/core/missing.py
@@ -7,7 +7,7 @@ import operator
 import numpy as np
 
 from pandas._libs import algos, lib
-from pandas.compat import range, string_types
+from pandas.compat import string_types
 
 from pandas.core.dtypes.cast import infer_dtype_from_array
 from pandas.core.dtypes.common import (
diff --git a/pandas/core/panel.py b/pandas/core/panel.py
index 155554207..c218e80da 100644
--- a/pandas/core/panel.py
+++ b/pandas/core/panel.py
@@ -10,7 +10,7 @@ import warnings
 import numpy as np
 
 import pandas.compat as compat
-from pandas.compat import map, range, u, zip
+from pandas.compat import u
 from pandas.compat.numpy import function as nv
 from pandas.util._decorators import Appender, Substitution, deprecate_kwarg
 from pandas.util._validators import validate_axis_style_args
diff --git a/pandas/core/reshape/merge.py b/pandas/core/reshape/merge.py
index fb50a3c60..cd5c853c6 100644
--- a/pandas/core/reshape/merge.py
+++ b/pandas/core/reshape/merge.py
@@ -10,7 +10,7 @@ import numpy as np
 
 from pandas._libs import hashtable as libhashtable, join as libjoin, lib
 import pandas.compat as compat
-from pandas.compat import filter, lzip, map, range, zip
+from pandas.compat import lzip
 from pandas.errors import MergeError
 from pandas.util._decorators import Appender, Substitution
 
diff --git a/pandas/core/reshape/pivot.py b/pandas/core/reshape/pivot.py
index 8d7616c4b..dbff2a069 100644
--- a/pandas/core/reshape/pivot.py
+++ b/pandas/core/reshape/pivot.py
@@ -1,7 +1,7 @@
 # pylint: disable=E1103
 import numpy as np
 
-from pandas.compat import lrange, range, zip
+from pandas.compat import lrange
 from pandas.util._decorators import Appender, Substitution
 
 from pandas.core.dtypes.cast import maybe_downcast_to_dtype
diff --git a/pandas/core/reshape/reshape.py b/pandas/core/reshape/reshape.py
index 6ba333017..68ea7932e 100644
--- a/pandas/core/reshape/reshape.py
+++ b/pandas/core/reshape/reshape.py
@@ -7,7 +7,7 @@ import numpy as np
 
 from pandas._libs import algos as _algos, reshape as _reshape
 from pandas._libs.sparse import IntIndex
-from pandas.compat import PY2, range, text_type, u, zip
+from pandas.compat import PY2, text_type, u
 
 from pandas.core.dtypes.cast import maybe_promote
 from pandas.core.dtypes.common import (
diff --git a/pandas/core/series.py b/pandas/core/series.py
index d4840eae8..272b621f6 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -11,7 +11,7 @@ import numpy as np
 
 from pandas._libs import iNaT, index as libindex, lib, tslibs
 import pandas.compat as compat
-from pandas.compat import PY36, StringIO, u, zip
+from pandas.compat import PY36, StringIO, u
 from pandas.compat.numpy import function as nv
 from pandas.util._decorators import Appender, Substitution, deprecate
 from pandas.util._validators import validate_bool_kwarg
diff --git a/pandas/core/strings.py b/pandas/core/strings.py
index 9577b0736..90623737d 100644
--- a/pandas/core/strings.py
+++ b/pandas/core/strings.py
@@ -9,7 +9,6 @@ import numpy as np
 import pandas._libs.lib as lib
 import pandas._libs.ops as libops
 import pandas.compat as compat
-from pandas.compat import zip
 from pandas.util._decorators import Appender, deprecate_kwarg
 
 from pandas.core.dtypes.common import (
diff --git a/pandas/core/tools/datetimes.py b/pandas/core/tools/datetimes.py
index 80a7deecd..0b7a0965c 100644
--- a/pandas/core/tools/datetimes.py
+++ b/pandas/core/tools/datetimes.py
@@ -8,7 +8,6 @@ from pandas._libs.tslibs import Timestamp, conversion, parsing
 from pandas._libs.tslibs.parsing import (  # noqa
     DateParseError, _format_is_iso, _guess_datetime_format, parse_time_string)
 from pandas._libs.tslibs.strptime import array_strptime
-from pandas.compat import zip
 from pandas.util._decorators import deprecate_kwarg
 
 from pandas.core.dtypes.common import (
diff --git a/pandas/io/date_converters.py b/pandas/io/date_converters.py
index 1a22ee724..75f353f28 100644
--- a/pandas/io/date_converters.py
+++ b/pandas/io/date_converters.py
@@ -2,7 +2,6 @@
 import numpy as np
 
 from pandas._libs.tslibs import parsing
-from pandas.compat import map, range
 
 
 def parse_date_time(date_col, time_col):
diff --git a/pandas/io/excel/_base.py b/pandas/io/excel/_base.py
index 781bb1f68..4d42b336b 100644
--- a/pandas/io/excel/_base.py
+++ b/pandas/io/excel/_base.py
@@ -6,7 +6,7 @@ from textwrap import fill
 import warnings
 
 import pandas.compat as compat
-from pandas.compat import add_metaclass, range, string_types, u
+from pandas.compat import add_metaclass, string_types, u
 from pandas.errors import EmptyDataError
 from pandas.util._decorators import Appender, deprecate_kwarg
 
diff --git a/pandas/io/excel/_util.py b/pandas/io/excel/_util.py
index 49255d83d..ebde1f954 100644
--- a/pandas/io/excel/_util.py
+++ b/pandas/io/excel/_util.py
@@ -1,7 +1,7 @@
 import warnings
 
 import pandas.compat as compat
-from pandas.compat import lrange, range
+from pandas.compat import lrange
 
 from pandas.core.dtypes.common import is_integer, is_list_like
 
diff --git a/pandas/io/excel/_xlrd.py b/pandas/io/excel/_xlrd.py
index 60f7d8f94..03495fa7f 100644
--- a/pandas/io/excel/_xlrd.py
+++ b/pandas/io/excel/_xlrd.py
@@ -5,7 +5,6 @@ from io import UnsupportedOperation
 import numpy as np
 
 import pandas.compat as compat
-from pandas.compat import range, zip
 
 from pandas.io.common import _is_url, _urlopen, get_filepath_or_buffer
 from pandas.io.excel._base import _BaseExcelReader
diff --git a/pandas/io/feather_format.py b/pandas/io/feather_format.py
index b2c6dff43..9d60349fa 100644
--- a/pandas/io/feather_format.py
+++ b/pandas/io/feather_format.py
@@ -2,7 +2,6 @@
 
 from distutils.version import LooseVersion
 
-from pandas.compat import range
 from pandas.util._decorators import deprecate_kwarg
 
 from pandas import DataFrame, Int64Index, RangeIndex
diff --git a/pandas/io/formats/csvs.py b/pandas/io/formats/csvs.py
index 46c843af0..71b7ef32b 100644
--- a/pandas/io/formats/csvs.py
+++ b/pandas/io/formats/csvs.py
@@ -13,7 +13,7 @@ from zipfile import ZipFile
 import numpy as np
 
 from pandas._libs import writers as libwriters
-from pandas.compat import StringIO, range, zip
+from pandas.compat import StringIO
 
 from pandas.core.dtypes.generic import (
     ABCDatetimeIndex, ABCIndexClass, ABCMultiIndex, ABCPeriodIndex)
diff --git a/pandas/io/formats/format.py b/pandas/io/formats/format.py
index 2bf0cd56d..016b052fd 100644
--- a/pandas/io/formats/format.py
+++ b/pandas/io/formats/format.py
@@ -13,7 +13,7 @@ import numpy as np
 from pandas._libs import lib
 from pandas._libs.tslib import format_array_from_datetime
 from pandas._libs.tslibs import NaT, Timedelta, Timestamp, iNaT
-from pandas.compat import StringIO, lzip, map, u, zip
+from pandas.compat import StringIO, lzip, u
 
 from pandas.core.dtypes.common import (
     is_categorical_dtype, is_datetime64_dtype, is_datetime64tz_dtype,
diff --git a/pandas/io/formats/html.py b/pandas/io/formats/html.py
index a543b21f2..388252cdb 100644
--- a/pandas/io/formats/html.py
+++ b/pandas/io/formats/html.py
@@ -8,7 +8,7 @@ from __future__ import print_function
 from collections import OrderedDict
 from textwrap import dedent
 
-from pandas.compat import lzip, map, range, u, unichr, zip
+from pandas.compat import lzip, u, unichr
 
 from pandas.core.dtypes.generic import ABCMultiIndex
 
diff --git a/pandas/io/formats/latex.py b/pandas/io/formats/latex.py
index 90be33649..79835c827 100644
--- a/pandas/io/formats/latex.py
+++ b/pandas/io/formats/latex.py
@@ -6,7 +6,7 @@ from __future__ import print_function
 
 import numpy as np
 
-from pandas.compat import map, range, u, zip
+from pandas.compat import u
 
 from pandas.core.dtypes.generic import ABCMultiIndex
 
diff --git a/pandas/io/formats/style.py b/pandas/io/formats/style.py
index b872f86eb..970d1b4b5 100644
--- a/pandas/io/formats/style.py
+++ b/pandas/io/formats/style.py
@@ -12,7 +12,6 @@ from uuid import uuid1
 
 import numpy as np
 
-from pandas.compat import range
 from pandas.util._decorators import Appender
 
 from pandas.core.dtypes.common import is_float, is_string_like
diff --git a/pandas/io/parsers.py b/pandas/io/parsers.py
index 2996e078a..616bbe104 100755
--- a/pandas/io/parsers.py
+++ b/pandas/io/parsers.py
@@ -19,8 +19,7 @@ import pandas._libs.ops as libops
 import pandas._libs.parsers as parsers
 from pandas._libs.tslibs import parsing
 import pandas.compat as compat
-from pandas.compat import (
-    PY3, StringIO, lrange, lzip, map, range, string_types, u, zip)
+from pandas.compat import PY3, StringIO, lrange, lzip, string_types, u
 from pandas.errors import (
     AbstractMethodError, EmptyDataError, ParserError, ParserWarning)
 from pandas.util._decorators import Appender
@@ -1147,7 +1146,7 @@ class TextFileReader(BaseIterator):
         if index is None:
             if col_dict:
                 # Any column is actually fine:
-                new_rows = len(compat.next(compat.itervalues(col_dict)))
+                new_rows = len(next(compat.itervalues(col_dict)))
                 index = RangeIndex(self._currow, self._currow + new_rows)
             else:
                 new_rows = 0
diff --git a/pandas/io/pytables.py b/pandas/io/pytables.py
index 2ee8759b9..1fc51a675 100644
--- a/pandas/io/pytables.py
+++ b/pandas/io/pytables.py
@@ -17,7 +17,7 @@ import numpy as np
 
 from pandas._libs import lib, writers as libwriters
 from pandas._libs.tslibs import timezones
-from pandas.compat import PY3, filter, lrange, range, string_types
+from pandas.compat import PY3, lrange, string_types
 from pandas.errors import PerformanceWarning
 
 from pandas.core.dtypes.common import (
@@ -351,7 +351,7 @@ def read_hdf(path_or_buf, key=None, mode='r', **kwargs):
             exists = False
 
         if not exists:
-            raise compat.FileNotFoundError(
+            raise FileNotFoundError(
                 'File {path} does not exist'.format(path=path_or_buf))
 
         store = HDFStore(path_or_buf, mode=mode, **kwargs)
diff --git a/pandas/io/s3.py b/pandas/io/s3.py
index 4998e4c04..bf86db279 100644
--- a/pandas/io/s3.py
+++ b/pandas/io/s3.py
@@ -28,7 +28,7 @@ def get_filepath_or_buffer(filepath_or_buffer, encoding=None,
     fs = s3fs.S3FileSystem(anon=False)
     try:
         filepath_or_buffer = fs.open(_strip_schema(filepath_or_buffer), mode)
-    except (compat.FileNotFoundError, NoCredentialsError):
+    except (FileNotFoundError, NoCredentialsError):
         # boto3 has troubles when trying to access a public file
         # when credentialed...
         # An OSError is raised if you have credentials, but they
diff --git a/pandas/io/sql.py b/pandas/io/sql.py
index 02fba52ea..3540daab1 100644
--- a/pandas/io/sql.py
+++ b/pandas/io/sql.py
@@ -15,8 +15,7 @@ import warnings
 import numpy as np
 
 import pandas._libs.lib as lib
-from pandas.compat import (
-    map, raise_with_traceback, string_types, text_type, zip)
+from pandas.compat import raise_with_traceback, string_types, text_type
 
 from pandas.core.dtypes.common import (
     is_datetime64tz_dtype, is_dict_like, is_list_like)
diff --git a/pandas/io/stata.py b/pandas/io/stata.py
index e5effcabb..9b65ceca5 100644
--- a/pandas/io/stata.py
+++ b/pandas/io/stata.py
@@ -23,9 +23,7 @@ import numpy as np
 from pandas._libs.lib import infer_dtype
 from pandas._libs.tslibs import NaT, Timestamp
 from pandas._libs.writers import max_len_string_array
-from pandas.compat import (
-    BytesIO, ResourceWarning, lmap, lrange, lzip, range, string_types,
-    text_type, zip)
+from pandas.compat import BytesIO, lmap, lrange, lzip, string_types, text_type
 from pandas.util._decorators import Appender, deprecate_kwarg
 
 from pandas.core.dtypes.common import (
diff --git a/pandas/plotting/_core.py b/pandas/plotting/_core.py
index c33f7900c..5ed6c2f4e 100644
--- a/pandas/plotting/_core.py
+++ b/pandas/plotting/_core.py
@@ -10,7 +10,7 @@ import warnings
 import numpy as np
 
 import pandas.compat as compat
-from pandas.compat import lrange, map, range, string_types, zip
+from pandas.compat import lrange, string_types
 from pandas.errors import AbstractMethodError
 from pandas.util._decorators import Appender, cache_readonly
 
diff --git a/pandas/plotting/_misc.py b/pandas/plotting/_misc.py
index b8073c898..e24ceb79d 100644
--- a/pandas/plotting/_misc.py
+++ b/pandas/plotting/_misc.py
@@ -4,7 +4,7 @@ from __future__ import division
 
 import numpy as np
 
-from pandas.compat import lmap, lrange, range, zip
+from pandas.compat import lmap, lrange
 from pandas.util._decorators import deprecate_kwarg
 
 from pandas.core.dtypes.missing import notna
diff --git a/pandas/plotting/_tools.py b/pandas/plotting/_tools.py
index 4d9e97f11..6a1658c76 100644
--- a/pandas/plotting/_tools.py
+++ b/pandas/plotting/_tools.py
@@ -7,8 +7,6 @@ import warnings
 
 import numpy as np
 
-from pandas.compat import range
-
 from pandas.core.dtypes.common import is_list_like
 from pandas.core.dtypes.generic import ABCDataFrame, ABCIndexClass, ABCSeries
 
diff --git a/pandas/tests/arrays/sparse/test_array.py b/pandas/tests/arrays/sparse/test_array.py
index 11b5bcf70..88758c5d5 100644
--- a/pandas/tests/arrays/sparse/test_array.py
+++ b/pandas/tests/arrays/sparse/test_array.py
@@ -6,7 +6,6 @@ import numpy as np
 import pytest
 
 from pandas._libs.sparse import IntIndex
-from pandas.compat import range
 import pandas.util._test_decorators as td
 
 import pandas as pd
diff --git a/pandas/tests/frame/test_api.py b/pandas/tests/frame/test_api.py
index 5a5335281..f31c6e42f 100644
--- a/pandas/tests/frame/test_api.py
+++ b/pandas/tests/frame/test_api.py
@@ -9,7 +9,7 @@ import pydoc
 import numpy as np
 import pytest
 
-from pandas.compat import long, lrange, range
+from pandas.compat import long, lrange
 
 import pandas as pd
 from pandas import (
diff --git a/pandas/tests/frame/test_arithmetic.py b/pandas/tests/frame/test_arithmetic.py
index f14ecae44..6503dba45 100644
--- a/pandas/tests/frame/test_arithmetic.py
+++ b/pandas/tests/frame/test_arithmetic.py
@@ -6,8 +6,6 @@ import operator
 import numpy as np
 import pytest
 
-from pandas.compat import range
-
 import pandas as pd
 from pandas.tests.frame.common import _check_mixed_float, _check_mixed_int
 import pandas.util.testing as tm
diff --git a/pandas/tests/frame/test_constructors.py b/pandas/tests/frame/test_constructors.py
index ab064ed98..1802e0571 100644
--- a/pandas/tests/frame/test_constructors.py
+++ b/pandas/tests/frame/test_constructors.py
@@ -12,7 +12,7 @@ import numpy.ma as ma
 import pytest
 
 from pandas.compat import (
-    PY36, is_platform_little_endian, lmap, long, lrange, lzip, range, zip)
+    PY36, is_platform_little_endian, lmap, long, lrange, lzip)
 
 from pandas.core.dtypes.cast import construct_1d_object_array_from_listlike
 from pandas.core.dtypes.common import is_integer_dtype
diff --git a/pandas/tests/frame/test_indexing.py b/pandas/tests/frame/test_indexing.py
index 07b6a28b9..81a6c6652 100644
--- a/pandas/tests/frame/test_indexing.py
+++ b/pandas/tests/frame/test_indexing.py
@@ -9,7 +9,7 @@ import numpy as np
 import pytest
 
 from pandas._libs.tslib import iNaT
-from pandas.compat import long, lrange, lzip, map, range, zip
+from pandas.compat import long, lrange, lzip
 
 from pandas.core.dtypes.common import is_float_dtype, is_integer, is_scalar
 from pandas.core.dtypes.dtypes import CategoricalDtype
diff --git a/pandas/tests/frame/test_mutate_columns.py b/pandas/tests/frame/test_mutate_columns.py
index 211173371..5f91363ba 100644
--- a/pandas/tests/frame/test_mutate_columns.py
+++ b/pandas/tests/frame/test_mutate_columns.py
@@ -5,7 +5,7 @@ from __future__ import print_function
 import numpy as np
 import pytest
 
-from pandas.compat import PY36, lrange, range
+from pandas.compat import PY36, lrange
 
 from pandas import DataFrame, Index, MultiIndex, Series
 import pandas.util.testing as tm
diff --git a/pandas/tests/frame/test_operators.py b/pandas/tests/frame/test_operators.py
index 4f671b9dc..5d3ac43d3 100644
--- a/pandas/tests/frame/test_operators.py
+++ b/pandas/tests/frame/test_operators.py
@@ -8,8 +8,6 @@ import operator
 import numpy as np
 import pytest
 
-from pandas.compat import range
-
 import pandas as pd
 from pandas import DataFrame, MultiIndex, Series, compat
 import pandas.core.common as com
diff --git a/pandas/tests/frame/test_query_eval.py b/pandas/tests/frame/test_query_eval.py
index a8a9a278a..a994e0919 100644
--- a/pandas/tests/frame/test_query_eval.py
+++ b/pandas/tests/frame/test_query_eval.py
@@ -7,7 +7,7 @@ import operator
 import numpy as np
 import pytest
 
-from pandas.compat import StringIO, lrange, range, zip
+from pandas.compat import StringIO, lrange
 import pandas.util._test_decorators as td
 
 import pandas as pd
diff --git a/pandas/tests/frame/test_replace.py b/pandas/tests/frame/test_replace.py
index 50c66d3f8..69fb829af 100644
--- a/pandas/tests/frame/test_replace.py
+++ b/pandas/tests/frame/test_replace.py
@@ -8,7 +8,7 @@ import re
 import numpy as np
 import pytest
 
-from pandas.compat import StringIO, lrange, range, zip
+from pandas.compat import StringIO, lrange
 
 import pandas as pd
 from pandas import DataFrame, Index, Series, Timestamp, compat, date_range
diff --git a/pandas/tests/frame/test_to_csv.py b/pandas/tests/frame/test_to_csv.py
index 59bf3d00f..719294db0 100644
--- a/pandas/tests/frame/test_to_csv.py
+++ b/pandas/tests/frame/test_to_csv.py
@@ -8,7 +8,7 @@ import os
 import numpy as np
 import pytest
 
-from pandas.compat import StringIO, lmap, lrange, range, u
+from pandas.compat import StringIO, lmap, lrange, u
 from pandas.errors import ParserError
 
 import pandas as pd
diff --git a/pandas/tests/generic/test_frame.py b/pandas/tests/generic/test_frame.py
index 25440702a..9ae725210 100644
--- a/pandas/tests/generic/test_frame.py
+++ b/pandas/tests/generic/test_frame.py
@@ -8,7 +8,6 @@ from operator import methodcaller
 import numpy as np
 import pytest
 
-from pandas.compat import range
 import pandas.util._test_decorators as td
 
 import pandas as pd
diff --git a/pandas/tests/generic/test_generic.py b/pandas/tests/generic/test_generic.py
index 65608d95b..d3b63e428 100644
--- a/pandas/tests/generic/test_generic.py
+++ b/pandas/tests/generic/test_generic.py
@@ -6,8 +6,6 @@ from copy import copy, deepcopy
 import numpy as np
 import pytest
 
-from pandas.compat import range, zip
-
 from pandas.core.dtypes.common import is_scalar
 
 import pandas as pd
diff --git a/pandas/tests/generic/test_series.py b/pandas/tests/generic/test_series.py
index b7d42e452..dd311dc21 100644
--- a/pandas/tests/generic/test_series.py
+++ b/pandas/tests/generic/test_series.py
@@ -7,7 +7,6 @@ from operator import methodcaller
 import numpy as np
 import pytest
 
-from pandas.compat import range
 import pandas.util._test_decorators as td
 
 import pandas as pd
diff --git a/pandas/tests/groupby/test_counting.py b/pandas/tests/groupby/test_counting.py
index 1438de5b7..9055b8ae7 100644
--- a/pandas/tests/groupby/test_counting.py
+++ b/pandas/tests/groupby/test_counting.py
@@ -4,7 +4,7 @@ from __future__ import print_function
 import numpy as np
 import pytest
 
-from pandas.compat import product as cart_product, range
+from pandas.compat import product as cart_product
 
 from pandas import DataFrame, MultiIndex, Period, Series, Timedelta, Timestamp
 from pandas.util.testing import assert_frame_equal, assert_series_equal
diff --git a/pandas/tests/groupby/test_groupby.py b/pandas/tests/groupby/test_groupby.py
index f80a73003..a2bcecb6b 100644
--- a/pandas/tests/groupby/test_groupby.py
+++ b/pandas/tests/groupby/test_groupby.py
@@ -8,7 +8,7 @@ from decimal import Decimal
 import numpy as np
 import pytest
 
-from pandas.compat import StringIO, lmap, lrange, lzip, map, range, zip
+from pandas.compat import StringIO, lmap, lrange, lzip
 from pandas.errors import PerformanceWarning
 
 import pandas as pd
diff --git a/pandas/tests/indexes/datetimes/test_timezones.py b/pandas/tests/indexes/datetimes/test_timezones.py
index 3dd836cf5..760c4cd01 100644
--- a/pandas/tests/indexes/datetimes/test_timezones.py
+++ b/pandas/tests/indexes/datetimes/test_timezones.py
@@ -12,7 +12,7 @@ import pytest
 import pytz
 
 from pandas._libs.tslibs import conversion, timezones
-from pandas.compat import lrange, zip
+from pandas.compat import lrange
 import pandas.util._test_decorators as td
 
 import pandas as pd
diff --git a/pandas/tests/indexes/multi/test_constructor.py b/pandas/tests/indexes/multi/test_constructor.py
index fe90e85cf..dfbf46b85 100644
--- a/pandas/tests/indexes/multi/test_constructor.py
+++ b/pandas/tests/indexes/multi/test_constructor.py
@@ -6,7 +6,7 @@ import numpy as np
 import pytest
 
 from pandas._libs.tslib import Timestamp
-from pandas.compat import lrange, range
+from pandas.compat import lrange
 
 from pandas.core.dtypes.cast import construct_1d_object_array_from_listlike
 
diff --git a/pandas/tests/indexes/multi/test_conversion.py b/pandas/tests/indexes/multi/test_conversion.py
index 00b935521..e1aedf77c 100644
--- a/pandas/tests/indexes/multi/test_conversion.py
+++ b/pandas/tests/indexes/multi/test_conversion.py
@@ -5,8 +5,6 @@ from collections import OrderedDict
 import numpy as np
 import pytest
 
-from pandas.compat import range
-
 import pandas as pd
 from pandas import DataFrame, MultiIndex, date_range
 import pandas.util.testing as tm
diff --git a/pandas/tests/indexes/multi/test_duplicates.py b/pandas/tests/indexes/multi/test_duplicates.py
index 35034dc57..3ba41190a 100644
--- a/pandas/tests/indexes/multi/test_duplicates.py
+++ b/pandas/tests/indexes/multi/test_duplicates.py
@@ -6,7 +6,7 @@ import numpy as np
 import pytest
 
 from pandas._libs import hashtable
-from pandas.compat import range, u
+from pandas.compat import u
 
 from pandas import DatetimeIndex, MultiIndex
 import pandas.util.testing as tm
diff --git a/pandas/tests/indexes/multi/test_equivalence.py b/pandas/tests/indexes/multi/test_equivalence.py
index 6a9eb662d..58ceefc17 100644
--- a/pandas/tests/indexes/multi/test_equivalence.py
+++ b/pandas/tests/indexes/multi/test_equivalence.py
@@ -3,7 +3,7 @@
 import numpy as np
 import pytest
 
-from pandas.compat import lrange, lzip, range
+from pandas.compat import lrange, lzip
 
 import pandas as pd
 from pandas import Index, MultiIndex, Series
diff --git a/pandas/tests/indexes/multi/test_format.py b/pandas/tests/indexes/multi/test_format.py
index 273822de1..bb431a1a6 100644
--- a/pandas/tests/indexes/multi/test_format.py
+++ b/pandas/tests/indexes/multi/test_format.py
@@ -5,7 +5,7 @@ import warnings
 
 import pytest
 
-from pandas.compat import range, u
+from pandas.compat import u
 
 import pandas as pd
 from pandas import MultiIndex, compat
diff --git a/pandas/tests/indexes/multi/test_get_set.py b/pandas/tests/indexes/multi/test_get_set.py
index 62911c703..de4f4320f 100644
--- a/pandas/tests/indexes/multi/test_get_set.py
+++ b/pandas/tests/indexes/multi/test_get_set.py
@@ -4,8 +4,6 @@
 import numpy as np
 import pytest
 
-from pandas.compat import range
-
 import pandas as pd
 from pandas import CategoricalIndex, Index, MultiIndex
 import pandas.util.testing as tm
diff --git a/pandas/tests/indexes/multi/test_integrity.py b/pandas/tests/indexes/multi/test_integrity.py
index a7dc09314..6eccc9200 100644
--- a/pandas/tests/indexes/multi/test_integrity.py
+++ b/pandas/tests/indexes/multi/test_integrity.py
@@ -5,7 +5,7 @@ import re
 import numpy as np
 import pytest
 
-from pandas.compat import lrange, range
+from pandas.compat import lrange
 
 from pandas.core.dtypes.cast import construct_1d_object_array_from_listlike
 
diff --git a/pandas/tests/indexes/test_base.py b/pandas/tests/indexes/test_base.py
index 490a41f02..8a92d9b42 100644
--- a/pandas/tests/indexes/test_base.py
+++ b/pandas/tests/indexes/test_base.py
@@ -11,7 +11,7 @@ import numpy as np
 import pytest
 
 from pandas._libs.tslib import Timestamp
-from pandas.compat import PY36, StringIO, lrange, lzip, range, u, zip
+from pandas.compat import PY36, StringIO, lrange, lzip, u
 from pandas.compat.numpy import np_datetime64_compat
 
 from pandas.core.dtypes.common import is_unsigned_integer_dtype
diff --git a/pandas/tests/indexes/test_category.py b/pandas/tests/indexes/test_category.py
index 42c4df297..871a9c197 100644
--- a/pandas/tests/indexes/test_category.py
+++ b/pandas/tests/indexes/test_category.py
@@ -4,7 +4,6 @@ import numpy as np
 import pytest
 
 from pandas._libs import index as libindex
-from pandas.compat import range
 
 from pandas.core.dtypes.dtypes import CategoricalDtype
 
diff --git a/pandas/tests/indexes/test_numeric.py b/pandas/tests/indexes/test_numeric.py
index 0a8c54f81..1011539b1 100644
--- a/pandas/tests/indexes/test_numeric.py
+++ b/pandas/tests/indexes/test_numeric.py
@@ -7,7 +7,6 @@ import numpy as np
 import pytest
 
 from pandas._libs.tslibs import Timestamp
-from pandas.compat import range
 
 import pandas as pd
 from pandas import Float64Index, Index, Int64Index, Series, UInt64Index
diff --git a/pandas/tests/indexes/test_range.py b/pandas/tests/indexes/test_range.py
index 717a63d8c..158327b07 100644
--- a/pandas/tests/indexes/test_range.py
+++ b/pandas/tests/indexes/test_range.py
@@ -5,7 +5,7 @@ from datetime import datetime
 import numpy as np
 import pytest
 
-from pandas.compat import range, u
+from pandas.compat import u
 
 import pandas as pd
 from pandas import Float64Index, Index, Int64Index, RangeIndex, Series
diff --git a/pandas/tests/indexing/multiindex/test_chaining_and_caching.py b/pandas/tests/indexing/multiindex/test_chaining_and_caching.py
index 0ff499155..3f3a9d497 100644
--- a/pandas/tests/indexing/multiindex/test_chaining_and_caching.py
+++ b/pandas/tests/indexing/multiindex/test_chaining_and_caching.py
@@ -1,7 +1,7 @@
 import numpy as np
 import pytest
 
-from pandas.compat import lrange, lzip, range
+from pandas.compat import lrange, lzip
 
 from pandas import DataFrame, MultiIndex, Series
 from pandas.core import common as com
diff --git a/pandas/tests/indexing/multiindex/test_getitem.py b/pandas/tests/indexing/multiindex/test_getitem.py
index b7fdbee0b..490a9bf08 100644
--- a/pandas/tests/indexing/multiindex/test_getitem.py
+++ b/pandas/tests/indexing/multiindex/test_getitem.py
@@ -1,7 +1,7 @@
 import numpy as np
 import pytest
 
-from pandas.compat import u, zip
+from pandas.compat import u
 
 from pandas import DataFrame, Index, MultiIndex, Series
 from pandas.core.indexing import IndexingError
diff --git a/pandas/tests/indexing/test_indexing.py b/pandas/tests/indexing/test_indexing.py
index e6ee35572..3cdae198c 100644
--- a/pandas/tests/indexing/test_indexing.py
+++ b/pandas/tests/indexing/test_indexing.py
@@ -10,7 +10,7 @@ import weakref
 import numpy as np
 import pytest
 
-from pandas.compat import lrange, range
+from pandas.compat import lrange
 
 from pandas.core.dtypes.common import is_float_dtype, is_integer_dtype
 
diff --git a/pandas/tests/indexing/test_indexing_engines.py b/pandas/tests/indexing/test_indexing_engines.py
index 57b85fd46..5d01196f7 100644
--- a/pandas/tests/indexing/test_indexing_engines.py
+++ b/pandas/tests/indexing/test_indexing_engines.py
@@ -2,7 +2,6 @@ import numpy as np
 
 from pandas._libs import algos as libalgos, index as libindex
 
-from pandas import compat
 import pandas.util.testing as tm
 
 
@@ -69,7 +68,7 @@ class TestNumericEngine(object):
         arr = np.array([1, 5, 10], dtype=dtype)
         engine = engine_type(lambda: arr, len(arr))
 
-        new = np.array(compat.range(12), dtype=dtype)
+        new = np.arange(12, dtype=dtype)
         result = engine.get_backfill_indexer(new)
 
         expected = libalgos.backfill(arr, new)
@@ -82,7 +81,7 @@ class TestNumericEngine(object):
         arr = np.array([1, 5, 10], dtype=dtype)
         engine = engine_type(lambda: arr, len(arr))
 
-        new = np.array(compat.range(12), dtype=dtype)
+        new = np.arange(12, dtype=dtype)
         result = engine.get_pad_indexer(new)
 
         expected = libalgos.pad(arr, new)
diff --git a/pandas/tests/internals/test_internals.py b/pandas/tests/internals/test_internals.py
index 412918437..058afdc4c 100644
--- a/pandas/tests/internals/test_internals.py
+++ b/pandas/tests/internals/test_internals.py
@@ -12,7 +12,7 @@ import numpy as np
 import pytest
 
 from pandas._libs.internals import BlockPlacement
-from pandas.compat import lrange, u, zip
+from pandas.compat import lrange, u
 
 import pandas as pd
 from pandas import (
diff --git a/pandas/tests/io/formats/test_format.py b/pandas/tests/io/formats/test_format.py
index e42ba834c..c39cc2443 100644
--- a/pandas/tests/io/formats/test_format.py
+++ b/pandas/tests/io/formats/test_format.py
@@ -22,8 +22,7 @@ import pytz
 
 import pandas.compat as compat
 from pandas.compat import (
-    StringIO, is_platform_32bit, is_platform_windows, lrange, lzip, range, u,
-    zip)
+    StringIO, is_platform_32bit, is_platform_windows, lrange, lzip, u)
 
 import pandas as pd
 from pandas import (
diff --git a/pandas/tests/io/generate_legacy_storage_files.py b/pandas/tests/io/generate_legacy_storage_files.py
index 6c6e28cb1..815b8d4de 100755
--- a/pandas/tests/io/generate_legacy_storage_files.py
+++ b/pandas/tests/io/generate_legacy_storage_files.py
@@ -290,7 +290,7 @@ def write_legacy_pickles(output_dir):
 
     # make sure we are < 0.13 compat (in py3)
     try:
-        from pandas.compat import zip, cPickle as pickle  # noqa
+        from pandas.compat import cPickle as pickle  # noqa
     except ImportError:
         import pickle
 
diff --git a/pandas/tests/io/json/test_pandas.py b/pandas/tests/io/json/test_pandas.py
index c1861ae15..a804c1a79 100644
--- a/pandas/tests/io/json/test_pandas.py
+++ b/pandas/tests/io/json/test_pandas.py
@@ -8,7 +8,7 @@ import os
 import numpy as np
 import pytest
 
-from pandas.compat import StringIO, is_platform_32bit, lrange, range
+from pandas.compat import StringIO, is_platform_32bit, lrange
 import pandas.util._test_decorators as td
 
 import pandas as pd
diff --git a/pandas/tests/io/json/test_ujson.py b/pandas/tests/io/json/test_ujson.py
index 5595a959c..928295f8c 100644
--- a/pandas/tests/io/json/test_ujson.py
+++ b/pandas/tests/io/json/test_ujson.py
@@ -20,7 +20,7 @@ import pytz
 import pandas._libs.json as ujson
 from pandas._libs.tslib import Timestamp
 import pandas.compat as compat
-from pandas.compat import StringIO, range, u
+from pandas.compat import StringIO, u
 
 from pandas import DataFrame, DatetimeIndex, Index, NaT, Series, date_range
 import pandas.util.testing as tm
diff --git a/pandas/tests/io/parser/test_c_parser_only.py b/pandas/tests/io/parser/test_c_parser_only.py
index 5d1d1ad59..0e10c3f3f 100644
--- a/pandas/tests/io/parser/test_c_parser_only.py
+++ b/pandas/tests/io/parser/test_c_parser_only.py
@@ -15,7 +15,7 @@ import tarfile
 import numpy as np
 import pytest
 
-from pandas.compat import BytesIO, StringIO, lrange, range
+from pandas.compat import BytesIO, StringIO, lrange
 from pandas.errors import ParserError
 import pandas.util._test_decorators as td
 
diff --git a/pandas/tests/io/parser/test_common.py b/pandas/tests/io/parser/test_common.py
index 671659c5e..30923bb7f 100644
--- a/pandas/tests/io/parser/test_common.py
+++ b/pandas/tests/io/parser/test_common.py
@@ -17,7 +17,7 @@ import numpy as np
 import pytest
 
 from pandas._libs.tslib import Timestamp
-from pandas.compat import BytesIO, StringIO, lrange, range, u
+from pandas.compat import BytesIO, StringIO, lrange, u
 from pandas.errors import DtypeWarning, EmptyDataError, ParserError
 
 from pandas import DataFrame, Index, MultiIndex, Series, compat, concat
@@ -892,7 +892,7 @@ def test_nonexistent_path(all_parsers):
 
     msg = ("does not exist" if parser.engine == "c"
            else r"\[Errno 2\]")
-    with pytest.raises(compat.FileNotFoundError, match=msg) as e:
+    with pytest.raises(FileNotFoundError, match=msg) as e:
         parser.read_csv(path)
 
         filename = e.value.filename
diff --git a/pandas/tests/io/parser/test_multi_thread.py b/pandas/tests/io/parser/test_multi_thread.py
index fbf23f769..e8976e12f 100644
--- a/pandas/tests/io/parser/test_multi_thread.py
+++ b/pandas/tests/io/parser/test_multi_thread.py
@@ -11,7 +11,7 @@ from multiprocessing.pool import ThreadPool
 
 import numpy as np
 
-from pandas.compat import BytesIO, range
+from pandas.compat import BytesIO
 
 import pandas as pd
 from pandas import DataFrame
diff --git a/pandas/tests/io/parser/test_na_values.py b/pandas/tests/io/parser/test_na_values.py
index 1b6d2ee8a..e6f44eccb 100644
--- a/pandas/tests/io/parser/test_na_values.py
+++ b/pandas/tests/io/parser/test_na_values.py
@@ -8,7 +8,7 @@ parsing for all of the parsers defined in parsers.py
 import numpy as np
 import pytest
 
-from pandas.compat import StringIO, range
+from pandas.compat import StringIO
 
 from pandas import DataFrame, Index, MultiIndex
 import pandas.util.testing as tm
diff --git a/pandas/tests/io/parser/test_skiprows.py b/pandas/tests/io/parser/test_skiprows.py
index 1df2ca4fa..c469813f1 100644
--- a/pandas/tests/io/parser/test_skiprows.py
+++ b/pandas/tests/io/parser/test_skiprows.py
@@ -10,7 +10,7 @@ from datetime import datetime
 import numpy as np
 import pytest
 
-from pandas.compat import StringIO, lrange, range
+from pandas.compat import StringIO, lrange
 from pandas.errors import EmptyDataError
 
 from pandas import DataFrame, Index
diff --git a/pandas/tests/io/parser/test_textreader.py b/pandas/tests/io/parser/test_textreader.py
index 8119de678..9195b577a 100644
--- a/pandas/tests/io/parser/test_textreader.py
+++ b/pandas/tests/io/parser/test_textreader.py
@@ -14,7 +14,7 @@ import pytest
 import pandas._libs.parsers as parser
 from pandas._libs.parsers import TextReader
 import pandas.compat as compat
-from pandas.compat import BytesIO, StringIO, map
+from pandas.compat import BytesIO, StringIO
 
 from pandas import DataFrame
 import pandas.util.testing as tm
diff --git a/pandas/tests/io/test_common.py b/pandas/tests/io/test_common.py
index 4051adc7e..f89586068 100644
--- a/pandas/tests/io/test_common.py
+++ b/pandas/tests/io/test_common.py
@@ -6,7 +6,7 @@ import os
 
 import pytest
 
-from pandas.compat import FileNotFoundError, StringIO, is_platform_windows
+from pandas.compat import StringIO, is_platform_windows
 import pandas.util._test_decorators as td
 
 import pandas as pd
diff --git a/pandas/tests/io/test_excel.py b/pandas/tests/io/test_excel.py
index 04c9c58a3..d508049ed 100644
--- a/pandas/tests/io/test_excel.py
+++ b/pandas/tests/io/test_excel.py
@@ -10,7 +10,7 @@ import numpy as np
 from numpy import nan
 import pytest
 
-from pandas.compat import PY36, BytesIO, iteritems, map, range, u
+from pandas.compat import PY36, BytesIO, iteritems, u
 import pandas.util._test_decorators as td
 
 import pandas as pd
diff --git a/pandas/tests/io/test_gbq.py b/pandas/tests/io/test_gbq.py
index 8150a058e..605108f87 100644
--- a/pandas/tests/io/test_gbq.py
+++ b/pandas/tests/io/test_gbq.py
@@ -6,8 +6,6 @@ import numpy as np
 import pytest
 import pytz
 
-from pandas.compat import range
-
 import pandas as pd
 from pandas import DataFrame
 import pandas.util.testing as tm
diff --git a/pandas/tests/io/test_html.py b/pandas/tests/io/test_html.py
index 591eea720..3bdb7d2d4 100644
--- a/pandas/tests/io/test_html.py
+++ b/pandas/tests/io/test_html.py
@@ -9,8 +9,7 @@ import numpy as np
 from numpy.random import rand
 import pytest
 
-from pandas.compat import (
-    BytesIO, StringIO, is_platform_windows, map, reload, zip)
+from pandas.compat import BytesIO, StringIO, is_platform_windows, reload
 from pandas.errors import ParserError
 import pandas.util._test_decorators as td
 
diff --git a/pandas/tests/io/test_pytables.py b/pandas/tests/io/test_pytables.py
index 41d247798..2483763c2 100644
--- a/pandas/tests/io/test_pytables.py
+++ b/pandas/tests/io/test_pytables.py
@@ -11,7 +11,7 @@ import pytest
 
 from pandas.compat import (
     PY35, PY36, BytesIO, is_platform_little_endian, is_platform_windows,
-    lrange, range, text_type, u)
+    lrange, text_type, u)
 import pandas.util._test_decorators as td
 
 from pandas.core.dtypes.common import is_categorical_dtype
@@ -19,8 +19,8 @@ from pandas.core.dtypes.common import is_categorical_dtype
 import pandas as pd
 from pandas import (
     Categorical, DataFrame, DatetimeIndex, Index, Int64Index, MultiIndex,
-    RangeIndex, Series, Timestamp, bdate_range, compat, concat, date_range,
-    isna, timedelta_range)
+    RangeIndex, Series, Timestamp, bdate_range, concat, date_range, isna,
+    timedelta_range)
 import pandas.util.testing as tm
 from pandas.util.testing import (
     assert_frame_equal, assert_series_equal, set_timezone)
@@ -301,8 +301,7 @@ class TestHDFStore(Base):
 
         # File path doesn't exist
         path = ""
-        pytest.raises(compat.FileNotFoundError,
-                      read_hdf, path, 'df')
+        pytest.raises(FileNotFoundError, read_hdf, path, 'df')
 
     def test_api_default_format(self):
 
diff --git a/pandas/tests/io/test_sql.py b/pandas/tests/io/test_sql.py
index daf622af8..0adef349e 100644
--- a/pandas/tests/io/test_sql.py
+++ b/pandas/tests/io/test_sql.py
@@ -28,7 +28,7 @@ import numpy as np
 import pytest
 
 import pandas.compat as compat
-from pandas.compat import PY36, lrange, range, string_types
+from pandas.compat import PY36, lrange, string_types
 
 from pandas.core.dtypes.common import (
     is_datetime64_dtype, is_datetime64tz_dtype)
diff --git a/pandas/tests/io/test_stata.py b/pandas/tests/io/test_stata.py
index 118ad716c..3f23f34b3 100644
--- a/pandas/tests/io/test_stata.py
+++ b/pandas/tests/io/test_stata.py
@@ -14,7 +14,7 @@ import numpy as np
 import pytest
 
 import pandas.compat as compat
-from pandas.compat import ResourceWarning, iterkeys
+from pandas.compat import iterkeys
 
 from pandas.core.dtypes.common import is_categorical_dtype
 
diff --git a/pandas/tests/plotting/common.py b/pandas/tests/plotting/common.py
index 4ca916a0a..9067a7242 100644
--- a/pandas/tests/plotting/common.py
+++ b/pandas/tests/plotting/common.py
@@ -8,7 +8,7 @@ import numpy as np
 from numpy import random
 import pytest
 
-from pandas.compat import iteritems, zip
+from pandas.compat import iteritems
 from pandas.util._decorators import cache_readonly
 import pandas.util._test_decorators as td
 
diff --git a/pandas/tests/plotting/test_boxplot_method.py b/pandas/tests/plotting/test_boxplot_method.py
index e6b9795ae..84d6e92b5 100644
--- a/pandas/tests/plotting/test_boxplot_method.py
+++ b/pandas/tests/plotting/test_boxplot_method.py
@@ -7,7 +7,7 @@ import numpy as np
 from numpy import random
 import pytest
 
-from pandas.compat import lzip, range
+from pandas.compat import lzip
 import pandas.util._test_decorators as td
 
 from pandas import DataFrame, MultiIndex, Series
diff --git a/pandas/tests/plotting/test_datetimelike.py b/pandas/tests/plotting/test_datetimelike.py
index 3a3618e25..b8bcf83d8 100644
--- a/pandas/tests/plotting/test_datetimelike.py
+++ b/pandas/tests/plotting/test_datetimelike.py
@@ -6,7 +6,7 @@ import sys
 import numpy as np
 import pytest
 
-from pandas.compat import lrange, zip
+from pandas.compat import lrange
 import pandas.util._test_decorators as td
 
 from pandas import DataFrame, Index, NaT, Series, isna
diff --git a/pandas/tests/plotting/test_frame.py b/pandas/tests/plotting/test_frame.py
index f6ec3f99a..2b17377c7 100644
--- a/pandas/tests/plotting/test_frame.py
+++ b/pandas/tests/plotting/test_frame.py
@@ -10,7 +10,7 @@ import numpy as np
 from numpy.random import rand, randn
 import pytest
 
-from pandas.compat import lmap, lrange, lzip, range, u, zip
+from pandas.compat import lmap, lrange, lzip, u
 import pandas.util._test_decorators as td
 
 from pandas.core.dtypes.api import is_list_like
diff --git a/pandas/tests/plotting/test_series.py b/pandas/tests/plotting/test_series.py
index aa78f38b7..e384c578a 100644
--- a/pandas/tests/plotting/test_series.py
+++ b/pandas/tests/plotting/test_series.py
@@ -10,7 +10,7 @@ import numpy as np
 from numpy.random import randn
 import pytest
 
-from pandas.compat import lrange, range
+from pandas.compat import lrange
 import pandas.util._test_decorators as td
 
 import pandas as pd
diff --git a/pandas/tests/resample/test_base.py b/pandas/tests/resample/test_base.py
index 8f912ea5c..c3c908f4b 100644
--- a/pandas/tests/resample/test_base.py
+++ b/pandas/tests/resample/test_base.py
@@ -3,8 +3,6 @@ from datetime import datetime, timedelta
 import numpy as np
 import pytest
 
-from pandas.compat import range, zip
-
 import pandas as pd
 from pandas import DataFrame, Series
 from pandas.core.groupby.groupby import DataError
diff --git a/pandas/tests/resample/test_datetime_index.py b/pandas/tests/resample/test_datetime_index.py
index ec0559553..0c6ef9ebc 100644
--- a/pandas/tests/resample/test_datetime_index.py
+++ b/pandas/tests/resample/test_datetime_index.py
@@ -5,7 +5,7 @@ import numpy as np
 import pytest
 import pytz
 
-from pandas.compat import StringIO, range
+from pandas.compat import StringIO
 from pandas.errors import UnsupportedFunctionCall
 
 import pandas as pd
diff --git a/pandas/tests/resample/test_period_index.py b/pandas/tests/resample/test_period_index.py
index 8abdf9034..2bc85cc4e 100644
--- a/pandas/tests/resample/test_period_index.py
+++ b/pandas/tests/resample/test_period_index.py
@@ -7,7 +7,7 @@ import pytz
 
 from pandas._libs.tslibs.ccalendar import DAYS, MONTHS
 from pandas._libs.tslibs.period import IncompatibleFrequency
-from pandas.compat import lrange, range, zip
+from pandas.compat import lrange
 
 import pandas as pd
 from pandas import DataFrame, Series, Timestamp
diff --git a/pandas/tests/resample/test_resample_api.py b/pandas/tests/resample/test_resample_api.py
index 97f1e0738..ff4088f5c 100644
--- a/pandas/tests/resample/test_resample_api.py
+++ b/pandas/tests/resample/test_resample_api.py
@@ -6,8 +6,6 @@ from datetime import datetime
 import numpy as np
 import pytest
 
-from pandas.compat import range
-
 import pandas as pd
 from pandas import DataFrame, Series
 from pandas.core.indexes.datetimes import date_range
diff --git a/pandas/tests/resample/test_resampler_grouper.py b/pandas/tests/resample/test_resampler_grouper.py
index b61acfc3d..6aa844dc1 100644
--- a/pandas/tests/resample/test_resampler_grouper.py
+++ b/pandas/tests/resample/test_resampler_grouper.py
@@ -4,8 +4,6 @@ from textwrap import dedent
 
 import numpy as np
 
-from pandas.compat import range
-
 import pandas as pd
 from pandas import DataFrame, Series, Timestamp
 from pandas.core.indexes.datetimes import date_range
diff --git a/pandas/tests/reshape/test_melt.py b/pandas/tests/reshape/test_melt.py
index 6bd195863..203e56581 100644
--- a/pandas/tests/reshape/test_melt.py
+++ b/pandas/tests/reshape/test_melt.py
@@ -5,8 +5,6 @@ import numpy as np
 from numpy import nan
 import pytest
 
-from pandas.compat import range
-
 import pandas as pd
 from pandas import DataFrame, lreshape, melt, wide_to_long
 import pandas.util.testing as tm
diff --git a/pandas/tests/reshape/test_pivot.py b/pandas/tests/reshape/test_pivot.py
index e4fbb204a..dd5e53927 100644
--- a/pandas/tests/reshape/test_pivot.py
+++ b/pandas/tests/reshape/test_pivot.py
@@ -6,7 +6,7 @@ from datetime import date, datetime, timedelta
 import numpy as np
 import pytest
 
-from pandas.compat import product, range
+from pandas.compat import product
 
 import pandas as pd
 from pandas import (
diff --git a/pandas/tests/reshape/test_qcut.py b/pandas/tests/reshape/test_qcut.py
index 997df7fd7..e66484822 100644
--- a/pandas/tests/reshape/test_qcut.py
+++ b/pandas/tests/reshape/test_qcut.py
@@ -3,8 +3,6 @@ import os
 import numpy as np
 import pytest
 
-from pandas.compat import zip
-
 from pandas import (
     Categorical, DatetimeIndex, Interval, IntervalIndex, NaT, Series,
     TimedeltaIndex, Timestamp, cut, date_range, isna, qcut, timedelta_range)
diff --git a/pandas/tests/series/indexing/test_alter_index.py b/pandas/tests/series/indexing/test_alter_index.py
index a826a0644..edc21282c 100644
--- a/pandas/tests/series/indexing/test_alter_index.py
+++ b/pandas/tests/series/indexing/test_alter_index.py
@@ -8,7 +8,7 @@ from numpy import nan
 import pytest
 
 import pandas.compat as compat
-from pandas.compat import lrange, range
+from pandas.compat import lrange
 
 import pandas as pd
 from pandas import Categorical, Series, date_range, isna
diff --git a/pandas/tests/series/indexing/test_boolean.py b/pandas/tests/series/indexing/test_boolean.py
index 9017d1305..a94b0c863 100644
--- a/pandas/tests/series/indexing/test_boolean.py
+++ b/pandas/tests/series/indexing/test_boolean.py
@@ -4,7 +4,7 @@
 import numpy as np
 import pytest
 
-from pandas.compat import lrange, range
+from pandas.compat import lrange
 
 from pandas.core.dtypes.common import is_integer
 
diff --git a/pandas/tests/series/indexing/test_datetime.py b/pandas/tests/series/indexing/test_datetime.py
index 8e4c7d9b1..2d2eb6db7 100644
--- a/pandas/tests/series/indexing/test_datetime.py
+++ b/pandas/tests/series/indexing/test_datetime.py
@@ -8,7 +8,7 @@ import pytest
 
 from pandas._libs import iNaT
 import pandas._libs.index as _index
-from pandas.compat import lrange, range
+from pandas.compat import lrange
 
 import pandas as pd
 from pandas import DataFrame, DatetimeIndex, NaT, Series, Timestamp, date_range
diff --git a/pandas/tests/series/indexing/test_iloc.py b/pandas/tests/series/indexing/test_iloc.py
index fa85da6a7..95c940b75 100644
--- a/pandas/tests/series/indexing/test_iloc.py
+++ b/pandas/tests/series/indexing/test_iloc.py
@@ -3,7 +3,7 @@
 
 import numpy as np
 
-from pandas.compat import lrange, range
+from pandas.compat import lrange
 
 from pandas import Series
 from pandas.util.testing import assert_almost_equal, assert_series_equal
diff --git a/pandas/tests/series/indexing/test_indexing.py b/pandas/tests/series/indexing/test_indexing.py
index dbe667a16..98a83400e 100644
--- a/pandas/tests/series/indexing/test_indexing.py
+++ b/pandas/tests/series/indexing/test_indexing.py
@@ -8,7 +8,7 @@ from datetime import timedelta
 import numpy as np
 import pytest
 
-from pandas.compat import lrange, range
+from pandas.compat import lrange
 
 from pandas.core.dtypes.common import is_scalar
 
diff --git a/pandas/tests/series/indexing/test_numeric.py b/pandas/tests/series/indexing/test_numeric.py
index e4afb0e45..2f1e89b11 100644
--- a/pandas/tests/series/indexing/test_numeric.py
+++ b/pandas/tests/series/indexing/test_numeric.py
@@ -4,7 +4,7 @@
 import numpy as np
 import pytest
 
-from pandas.compat import lrange, range
+from pandas.compat import lrange
 
 import pandas as pd
 from pandas import DataFrame, Index, Series
diff --git a/pandas/tests/series/test_alter_axes.py b/pandas/tests/series/test_alter_axes.py
index 73adc7d4b..bdd551c98 100644
--- a/pandas/tests/series/test_alter_axes.py
+++ b/pandas/tests/series/test_alter_axes.py
@@ -6,7 +6,7 @@ from datetime import datetime
 import numpy as np
 import pytest
 
-from pandas.compat import lrange, range, zip
+from pandas.compat import lrange
 
 from pandas import DataFrame, Index, MultiIndex, RangeIndex, Series
 import pandas.util.testing as tm
diff --git a/pandas/tests/series/test_analytics.py b/pandas/tests/series/test_analytics.py
index 04256c084..919f942bf 100644
--- a/pandas/tests/series/test_analytics.py
+++ b/pandas/tests/series/test_analytics.py
@@ -9,7 +9,7 @@ import numpy as np
 from numpy import nan
 import pytest
 
-from pandas.compat import lrange, range
+from pandas.compat import lrange
 import pandas.util._test_decorators as td
 
 import pandas as pd
diff --git a/pandas/tests/series/test_api.py b/pandas/tests/series/test_api.py
index 3ad9d5417..b8f6482e9 100644
--- a/pandas/tests/series/test_api.py
+++ b/pandas/tests/series/test_api.py
@@ -8,7 +8,7 @@ import numpy as np
 import pytest
 
 import pandas.compat as compat
-from pandas.compat import isidentifier, lzip, range, string_types
+from pandas.compat import isidentifier, lzip, string_types
 
 import pandas as pd
 from pandas import (
diff --git a/pandas/tests/series/test_constructors.py b/pandas/tests/series/test_constructors.py
index 96e18c6a6..54d9359e5 100644
--- a/pandas/tests/series/test_constructors.py
+++ b/pandas/tests/series/test_constructors.py
@@ -11,7 +11,7 @@ import pytest
 
 from pandas._libs import lib
 from pandas._libs.tslib import iNaT
-from pandas.compat import PY36, long, lrange, range, zip
+from pandas.compat import PY36, long, lrange
 
 from pandas.core.dtypes.common import (
     is_categorical_dtype, is_datetime64tz_dtype)
diff --git a/pandas/tests/series/test_dtypes.py b/pandas/tests/series/test_dtypes.py
index 718fe8ad2..cb457b7c1 100644
--- a/pandas/tests/series/test_dtypes.py
+++ b/pandas/tests/series/test_dtypes.py
@@ -10,7 +10,7 @@ import pytest
 
 from pandas._libs.tslibs import iNaT
 import pandas.compat as compat
-from pandas.compat import lrange, range, u
+from pandas.compat import lrange, u
 
 import pandas as pd
 from pandas import (
diff --git a/pandas/tests/series/test_missing.py b/pandas/tests/series/test_missing.py
index 6b8acdc6e..2163914f9 100644
--- a/pandas/tests/series/test_missing.py
+++ b/pandas/tests/series/test_missing.py
@@ -10,7 +10,6 @@ import pytest
 import pytz
 
 from pandas._libs.tslib import iNaT
-from pandas.compat import range
 from pandas.errors import PerformanceWarning
 import pandas.util._test_decorators as td
 
diff --git a/pandas/tests/series/test_operators.py b/pandas/tests/series/test_operators.py
index b7618d247..cb8d5239a 100644
--- a/pandas/tests/series/test_operators.py
+++ b/pandas/tests/series/test_operators.py
@@ -7,8 +7,6 @@ import operator
 import numpy as np
 import pytest
 
-from pandas.compat import range
-
 import pandas as pd
 from pandas import (
     Categorical, DataFrame, Index, Series, bdate_range, date_range, isna)
diff --git a/pandas/tests/series/test_repr.py b/pandas/tests/series/test_repr.py
index b8a204011..108785e2b 100644
--- a/pandas/tests/series/test_repr.py
+++ b/pandas/tests/series/test_repr.py
@@ -5,7 +5,7 @@ from datetime import datetime, timedelta
 
 import numpy as np
 
-from pandas.compat import lrange, range, u
+from pandas.compat import lrange, u
 
 import pandas as pd
 from pandas import (
diff --git a/pandas/tests/sparse/series/test_series.py b/pandas/tests/sparse/series/test_series.py
index 93cf629f2..703ae3bde 100644
--- a/pandas/tests/sparse/series/test_series.py
+++ b/pandas/tests/sparse/series/test_series.py
@@ -8,7 +8,7 @@ from numpy import nan
 import pytest
 
 from pandas._libs.sparse import BlockIndex, IntIndex
-from pandas.compat import PY36, range
+from pandas.compat import PY36
 from pandas.errors import PerformanceWarning
 import pandas.util._test_decorators as td
 
diff --git a/pandas/tests/test_algos.py b/pandas/tests/test_algos.py
index 232771750..b8226bc2f 100644
--- a/pandas/tests/test_algos.py
+++ b/pandas/tests/test_algos.py
@@ -11,7 +11,7 @@ import pytest
 
 from pandas._libs import (
     algos as libalgos, groupby as libgroupby, hashtable as ht)
-from pandas.compat import lrange, range
+from pandas.compat import lrange
 from pandas.compat.numpy import np_array_datetime64_compat
 import pandas.util._test_decorators as td
 
diff --git a/pandas/tests/test_compat.py b/pandas/tests/test_compat.py
index 3cf7ec380..d5f112e3c 100644
--- a/pandas/tests/test_compat.py
+++ b/pandas/tests/test_compat.py
@@ -8,66 +8,51 @@ import re
 import pytest
 
 from pandas.compat import (
-    builtins, filter, get_range_parameters, iteritems, iterkeys, itervalues,
-    lfilter, lmap, lrange, lzip, map, next, range, re_type, zip)
+    builtins, get_range_parameters, iteritems, iterkeys, itervalues, lfilter,
+    lmap, lrange, lzip, re_type)
 
 
 class TestBuiltinIterators(object):
 
     @classmethod
-    def check_result(cls, actual, expected, lengths):
-        for (iter_res, list_res), exp, length in zip(actual, expected,
-                                                     lengths):
-            assert not isinstance(iter_res, list)
-            assert isinstance(list_res, list)
-
-            iter_res = list(iter_res)
-
-            assert len(list_res) == length
-            assert len(iter_res) == length
-            assert iter_res == exp
-            assert list_res == exp
-
-    def test_range(self):
-        actual1 = range(10)
-        actual2 = lrange(10)
-        actual = [actual1, actual2],
-        expected = list(builtins.range(10)),
+    def check_results(cls, results, expecteds, lengths):
+        for result, expected, length in zip(results, expecteds, lengths):
+            assert isinstance(result, list)
+            assert len(result) == length
+            assert result == expected
+
+    def test_lrange(self):
+        results = lrange(10),
+        expecteds = list(builtins.range(10)),
         lengths = 10,
 
-        actual1 = range(1, 10, 2)
-        actual2 = lrange(1, 10, 2)
-        actual += [actual1, actual2],
+        results += lrange(1, 10, 2),
         lengths += 5,
-        expected += list(builtins.range(1, 10, 2)),
-        self.check_result(actual, expected, lengths)
+        expecteds += list(builtins.range(1, 10, 2)),
+        self.check_results(results, expecteds, lengths)
 
-    def test_map(self):
+    def test_lmap(self):
         func = lambda x, y, z: x + y + z
         lst = [builtins.range(10), builtins.range(10), builtins.range(10)]
-        actual1 = map(func, *lst)
-        actual2 = lmap(func, *lst)
-        actual = [actual1, actual2],
-        expected = list(builtins.map(func, *lst)),
+        results = lmap(func, *lst),
+        expecteds = list(builtins.map(func, *lst)),
         lengths = 10,
-        self.check_result(actual, expected, lengths)
+        self.check_results(results, expecteds, lengths)
 
-    def test_filter(self):
+    def test_lfilter(self):
         func = lambda x: x
         lst = list(builtins.range(10))
-        actual1 = filter(func, lst)
-        actual2 = lfilter(func, lst)
-        actual = [actual1, actual2],
+        results = lfilter(lambda x: x, lst),
         lengths = 9,
-        expected = list(builtins.filter(func, lst)),
-        self.check_result(actual, expected, lengths)
+        expecteds = list(builtins.filter(func, lst)),
+        self.check_results(results, expecteds, lengths)
 
-    def test_zip(self):
+    def test_lzip(self):
         lst = [builtins.range(10), builtins.range(10), builtins.range(10)]
-        actual = [zip(*lst), lzip(*lst)],
-        expected = list(builtins.zip(*lst)),
+        results = lzip(*lst),
+        expecteds = list(builtins.zip(*lst)),
         lengths = 10,
-        self.check_result(actual, expected, lengths)
+        self.check_results(results, expecteds, lengths)
 
     def test_dict_iterators(self):
         assert next(itervalues({1: 2})) == 2
diff --git a/pandas/tests/test_multilevel.py b/pandas/tests/test_multilevel.py
index a9a59c6d9..9f4fbbaaa 100644
--- a/pandas/tests/test_multilevel.py
+++ b/pandas/tests/test_multilevel.py
@@ -9,8 +9,7 @@ from numpy.random import randn
 import pytest
 import pytz
 
-from pandas.compat import (
-    StringIO, lrange, lzip, product as cart_product, range, u, zip)
+from pandas.compat import StringIO, lrange, lzip, product as cart_product, u
 
 from pandas.core.dtypes.common import is_float_dtype, is_integer_dtype
 
diff --git a/pandas/tests/test_strings.py b/pandas/tests/test_strings.py
index a2242fbea..cf322dc33 100644
--- a/pandas/tests/test_strings.py
+++ b/pandas/tests/test_strings.py
@@ -10,7 +10,7 @@ from numpy.random import randint
 import pytest
 
 import pandas.compat as compat
-from pandas.compat import range, u
+from pandas.compat import u
 
 from pandas import DataFrame, Index, MultiIndex, Series, concat, isna, notna
 import pandas.core.strings as strings
diff --git a/pandas/tests/test_window.py b/pandas/tests/test_window.py
index ce9d1888b..8e2925f52 100644
--- a/pandas/tests/test_window.py
+++ b/pandas/tests/test_window.py
@@ -8,7 +8,6 @@ import numpy as np
 from numpy.random import randn
 import pytest
 
-from pandas.compat import range, zip
 from pandas.errors import UnsupportedFunctionCall
 import pandas.util._test_decorators as td
 
diff --git a/pandas/tests/tseries/frequencies/test_inference.py b/pandas/tests/tseries/frequencies/test_inference.py
index 9e7ddbc45..c2ef939d1 100644
--- a/pandas/tests/tseries/frequencies/test_inference.py
+++ b/pandas/tests/tseries/frequencies/test_inference.py
@@ -6,7 +6,7 @@ import pytest
 from pandas._libs.tslibs.ccalendar import DAYS, MONTHS
 from pandas._libs.tslibs.frequencies import INVALID_FREQ_ERR_MSG
 import pandas.compat as compat
-from pandas.compat import is_platform_windows, range
+from pandas.compat import is_platform_windows
 
 from pandas import (
     DatetimeIndex, Index, Series, Timestamp, date_range, period_range)
diff --git a/pandas/tests/tseries/offsets/test_offsets.py b/pandas/tests/tseries/offsets/test_offsets.py
index e6f21a7b4..0c58e5159 100644
--- a/pandas/tests/tseries/offsets/test_offsets.py
+++ b/pandas/tests/tseries/offsets/test_offsets.py
@@ -11,7 +11,6 @@ from pandas._libs.tslibs.frequencies import (
 import pandas._libs.tslibs.offsets as liboffsets
 from pandas._libs.tslibs.offsets import ApplyTypeError
 import pandas.compat as compat
-from pandas.compat import range
 from pandas.compat.numpy import np_datetime64_compat
 
 from pandas.core.indexes.datetimes import DatetimeIndex, _to_M8, date_range
diff --git a/pandas/tseries/frequencies.py b/pandas/tseries/frequencies.py
index 1b782b430..bda150e5e 100644
--- a/pandas/tseries/frequencies.py
+++ b/pandas/tseries/frequencies.py
@@ -16,7 +16,6 @@ import pandas._libs.tslibs.resolution as libresolution
 from pandas._libs.tslibs.resolution import Resolution
 from pandas._libs.tslibs.timezones import UTC
 import pandas.compat as compat
-from pandas.compat import zip
 from pandas.util._decorators import cache_readonly
 
 from pandas.core.dtypes.common import (
diff --git a/pandas/tseries/offsets.py b/pandas/tseries/offsets.py
index f208ce37a..573350434 100644
--- a/pandas/tseries/offsets.py
+++ b/pandas/tseries/offsets.py
@@ -14,7 +14,6 @@ from pandas._libs.tslibs.offsets import (
     ApplyTypeError, BaseOffset, _get_calendar, _is_normalized, _to_dt64,
     apply_index_wraps, as_datetime, roll_yearday, shift_month)
 import pandas.compat as compat
-from pandas.compat import range
 from pandas.errors import AbstractMethodError
 from pandas.util._decorators import cache_readonly
 
diff --git a/pandas/util/testing.py b/pandas/util/testing.py
index dc120856b..3e4470ee3 100644
--- a/pandas/util/testing.py
+++ b/pandas/util/testing.py
@@ -23,8 +23,8 @@ from pandas._config.localization import (  # noqa:F401
 from pandas._libs import testing as _testing
 import pandas.compat as compat
 from pandas.compat import (
-    PY2, PY3, httplib, lmap, lrange, lzip, map, raise_with_traceback, range,
-    string_types, u, unichr, zip)
+    PY2, PY3, httplib, lmap, lrange, lzip, raise_with_traceback, string_types,
+    u, unichr)
 
 from pandas.core.dtypes.common import (
     is_bool, is_categorical_dtype, is_datetime64_dtype, is_datetime64tz_dtype,
@@ -50,7 +50,7 @@ K = 4
 _RAISE_NETWORK_ERROR_DEFAULT = False
 
 # set testing_mode
-_testing_mode_warnings = (DeprecationWarning, compat.ResourceWarning)
+_testing_mode_warnings = (DeprecationWarning, ResourceWarning)
 
 
 def set_testing_mode():
diff --git a/scripts/find_commits_touching_func.py b/scripts/find_commits_touching_func.py
index a4583155b..dbd85f0ca 100755
--- a/scripts/find_commits_touching_func.py
+++ b/scripts/find_commits_touching_func.py
@@ -17,7 +17,7 @@ import re
 import os
 import argparse
 from collections import namedtuple
-from pandas.compat import lrange, map, string_types, text_type, parse_date
+from pandas.compat import lrange, string_types, text_type, parse_date
 try:
     import sh
 except ImportError:
