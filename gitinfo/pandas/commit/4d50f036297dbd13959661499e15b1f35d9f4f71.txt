commit 4d50f036297dbd13959661499e15b1f35d9f4f71
Author: Adam Klein <adamklein@gmail.com>
Date:   Tue Feb 28 20:10:15 2012 -0500

    BUG: close #839, exception on assigning NA to bool or int64 series

diff --git a/RELEASE.rst b/RELEASE.rst
index 517c29a46..3021baf90 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -63,6 +63,7 @@ pandas 0.7.1
   - Fix groupby case resulting in malformed dataframe (#814)
   - Fix behavior of reindex of Series dropping name (#812)
   - Improve on redudant groupby computation (#775)
+  - Catch possible NA assignment to int/bool series with exception (#839)
 
 pandas 0.7.0
 ============
diff --git a/pandas/core/series.py b/pandas/core/series.py
index 95155547c..d8f2d14a9 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -520,6 +520,10 @@ copy : boolean, default False
         self._set_values(indexer, value)
 
     def _set_values(self, key, value):
+        if (isnull(value) and 
+            issubclass(self.dtype.type, (np.integer, np.bool_))):
+            raise ValueError('Cannot assign nan to integer series')
+
         self.values[key] = value
 
     # help out SparseSeries
diff --git a/pandas/tests/test_series.py b/pandas/tests/test_series.py
index a7bb9b959..3603b6295 100644
--- a/pandas/tests/test_series.py
+++ b/pandas/tests/test_series.py
@@ -1149,9 +1149,20 @@ class TestSeries(unittest.TestCase, CheckNameIntegration):
         expected = s[5:16].dropna()
         assert_series_equal(result, expected)
 
+    def test_setitem_na_exception(self):
+        def testme1():
+            s = Series([2,3,4,5,6,7,8,9,10])
+            s[::2] = np.nan
+
+        def testme2():
+            s = Series([True, True, False, False])
+            s[::2] = np.nan
+
+        self.assertRaises(Exception, testme1)
+        self.assertRaises(Exception, testme2)
+
     def test_scalar_na_cmp_corners(self):
         s = Series([2,3,4,5,6,7,8,9,10])
-        s[::2] = np.nan
 
         def tester(a, b):
             return a & b
