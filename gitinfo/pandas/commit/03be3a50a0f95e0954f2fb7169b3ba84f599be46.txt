commit 03be3a50a0f95e0954f2fb7169b3ba84f599be46
Author: jreback <jeff@reback.net>
Date:   Thu Oct 10 16:57:07 2013 -0400

    PERF: calling get_indexer twice when a specialized indexer (e.g. pad) could be called instead

diff --git a/doc/source/v0.13.0.txt b/doc/source/v0.13.0.txt
index 611da0e53..afc5a7039 100644
--- a/doc/source/v0.13.0.txt
+++ b/doc/source/v0.13.0.txt
@@ -490,7 +490,7 @@ Enhancements
      mask
      dfi[mask.any(1)]
 
-    :ref:`See the docs<indexing.basics.indexing_isin>` for more.
+  :ref:`See the docs<indexing.basics.indexing_isin>` for more.
 
 - ``Series`` now supports a ``to_frame`` method to convert it to a single-column DataFrame (:issue:`5164`)
 
diff --git a/pandas/core/generic.py b/pandas/core/generic.py
index 3409fdf00..335f772bb 100644
--- a/pandas/core/generic.py
+++ b/pandas/core/generic.py
@@ -1241,8 +1241,19 @@ class NDFrame(PandasObject):
                 labels = _ensure_index(labels)
 
             axis = self._get_axis_number(a)
-            new_index, indexer = self._get_axis(a).reindex(
-                labels, level=level, limit=limit, takeable=takeable)
+            ax = self._get_axis(a)
+            try:
+                new_index, indexer = ax.reindex(labels, level=level,
+                                                limit=limit, method=method, takeable=takeable)
+            except (ValueError):
+
+                # catch trying to reindex a non-monotonic index with a specialized indexer
+                # e.g. pad, so fallback to the regular indexer
+                # this will show up on reindexing a not-naturally ordering series, e.g.
+                # Series([1,2,3,4],index=['a','b','c','d']).reindex(['c','b','g'],method='pad')
+                new_index, indexer = ax.reindex(labels, level=level,
+                                                limit=limit, method=None, takeable=takeable)
+
             obj = obj._reindex_with_indexers(
                 {axis: [new_index, indexer]}, method=method, fill_value=fill_value,
                 limit=limit, copy=copy)
diff --git a/pandas/core/internals.py b/pandas/core/internals.py
index df62edf2f..697f99fcc 100644
--- a/pandas/core/internals.py
+++ b/pandas/core/internals.py
@@ -224,6 +224,7 @@ class Block(PandasObject):
         if indexer is None:
             new_ref_items, indexer = self.items.reindex(new_ref_items, limit=limit)
 
+        needs_fill = method is not None and limit is None
         if fill_value is None:
             fill_value = self.fill_value
 
@@ -245,14 +246,13 @@ class Block(PandasObject):
                 new_items = self.items.take(masked_idx)
 
         # fill if needed
-        fill_method = method is not None or limit is not None
-        if fill_method:
+        if needs_fill:
             new_values = com.interpolate_2d(new_values, method=method, limit=limit, fill_value=fill_value)
 
         block = make_block(new_values, new_items, new_ref_items, ndim=self.ndim, fastpath=True)
 
         # down cast if needed
-        if not self.is_float and (fill_method or notnull(fill_value)):
+        if not self.is_float and (needs_fill or notnull(fill_value)):
             block = block.downcast()
 
         return block
