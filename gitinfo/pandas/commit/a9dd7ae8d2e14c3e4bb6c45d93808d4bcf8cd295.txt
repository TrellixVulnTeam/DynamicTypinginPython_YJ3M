commit a9dd7ae8d2e14c3e4bb6c45d93808d4bcf8cd295
Author: jreback <jeff@reback.net>
Date:   Tue Apr 2 17:20:45 2013 -0400

    BUG: setitem with list elements in the indexer broken
         e.g. df.iloc[[0,1],[1,2]] += 100

diff --git a/pandas/core/indexing.py b/pandas/core/indexing.py
index 5230bf20e..b6a903459 100644
--- a/pandas/core/indexing.py
+++ b/pandas/core/indexing.py
@@ -215,9 +215,9 @@ class _NDFrameIndexer(object):
                 ax = self.obj.axes[i]
                 if com._is_sequence(ix) or isinstance(ix, slice):
                     if idx is None:
-                        idx = ax[ix]
+                        idx = ax[ix].ravel()
                     elif cols is None:
-                        cols = ax[ix]
+                        cols = ax[ix].ravel()
                     else:
                         break
 
diff --git a/pandas/tests/test_indexing.py b/pandas/tests/test_indexing.py
index 297c744b9..c3d6faf6e 100644
--- a/pandas/tests/test_indexing.py
+++ b/pandas/tests/test_indexing.py
@@ -735,6 +735,17 @@ class TestIndexing(unittest.TestCase):
         expected = DataFrame([{"a": 1, "c" : 'foo'}, {"a": 3, "b": 2, "c" : np.nan}])
         assert_frame_equal(df,expected)
 
+    def test_setitem_iloc(self):
+
+        
+        # setitem with an iloc list
+        df = DataFrame(np.arange(9).reshape((3, 3)), index=["A", "B", "C"], columns=["A", "B", "C"])
+        df.iloc[[0,1],[1,2]]
+        df.iloc[[0,1],[1,2]] += 100
+
+        expected = DataFrame(np.array([0,101,102,3,104,105,6,7,8]).reshape((3, 3)), index=["A", "B", "C"], columns=["A", "B", "C"])
+        assert_frame_equal(df,expected)
+
 
 if __name__ == '__main__':
     import nose
