commit 77518d83fcf2c15eb4efc85a1ba34fe9ed805d45
Author: Jeff Reback <jeff@reback.net>
Date:   Thu Jan 19 11:21:41 2017 -0500

    CLN: remove ci/ironcache, speedpack

diff --git a/ci/ironcache/get.py b/ci/ironcache/get.py
deleted file mode 100644
index a4663472b..000000000
--- a/ci/ironcache/get.py
+++ /dev/null
@@ -1,41 +0,0 @@
-#!/usr/bin/env python
-# -*- coding: utf-8 -*-
-
-import sys
-import re
-import os
-import time
-import json
-import base64
-from hashlib import sha1
-from iron_cache import *
-import traceback as tb
-
-key='KEY.%s.%s' %(os.environ.get('TRAVIS_REPO_SLUG','unk'),
-                   os.environ.get('JOB_NAME','unk'))
-print(key)
-
-if sys.version_info[0] > 2:
-    key = bytes(key,encoding='utf8')
-
-key = sha1(key).hexdigest()[:8]+'.'
-
-b = b''
-cache = IronCache()
-for i in range(20):
-    print("getting %s" % key+str(i))
-    try:
-        item = cache.get(cache="travis", key=key+str(i))
-        v = item.value
-        if sys.version_info[0] > 2:
-            v = bytes(v,encoding='utf8')
-        b += bytes(base64.b64decode(v))
-    except Exception as e:
-        try:
-            print(tb.format_exc(e))
-        except:
-            print("exception during exception, oh my")
-        break
-
-with open(os.path.join(os.environ.get('HOME',''),"ccache.7z"),'wb') as f:
-    f.write(b)
diff --git a/ci/ironcache/put.py b/ci/ironcache/put.py
deleted file mode 100644
index f6aef3a32..000000000
--- a/ci/ironcache/put.py
+++ /dev/null
@@ -1,48 +0,0 @@
-#!/usr/bin/env python
-# -*- coding: utf-8 -*-
-
-import sys
-import re
-import os
-import time
-import json
-import base64
-from hashlib import sha1
-from iron_cache import *
-
-key='KEY.%s.%s' %(os.environ.get('TRAVIS_REPO_SLUG','unk'),
-                   os.environ.get('JOB_NAME','unk'))
-
-key='KEY.%s.%s' %(os.environ.get('TRAVIS_REPO_SLUG','unk'),
-                   os.environ.get('JOB_NAME','unk'))
-print(key)
-
-if sys.version_info[0] > 2:
-    key = bytes(key,encoding='utf8')
-
-key = sha1(key).hexdigest()[:8]+'.'
-
-os.chdir(os.environ.get('HOME'))
-
-cache = IronCache()
-
-i=0
-
-for i, fname in enumerate(sorted([x for x in os.listdir('.') if re.match("ccache.\d+$",x)])):
-    print("Putting %s" % key+str(i))
-    with open(fname,"rb") as f:
-        s= f.read()
-        value=base64.b64encode(s)
-        if isinstance(value, bytes):
-            value = value.decode('ascii')
-    item = cache.put(cache="travis", key=key+str(i), value=value,options=dict(expires_in=24*60*60))
-
-# print("foo")
-for i in range(i+1,20):
-
-    try:
-        item = cache.delete(key+str(i),cache='travis')
-        print("Deleted %s" % key+str(i))
-    except:
-        break
-        pass
diff --git a/ci/speedpack/Vagrantfile b/ci/speedpack/Vagrantfile
deleted file mode 100644
index ec939b7c0..000000000
--- a/ci/speedpack/Vagrantfile
+++ /dev/null
@@ -1,22 +0,0 @@
-# -*- mode: ruby -*-
-# vi: set ft=ruby :
-Vagrant.configure("2") do |config|
-  config.vm.box = "precise64"
-  config.vm.box_url = "http://files.vagrantup.com/precise64.box"
-
-#  config.vbguest.auto_update = true
-#  config.vbguest.no_remote = true
-
-  config.vm.synced_folder File.expand_path("..", Dir.pwd), "/reqf"
-  config.vm.synced_folder "wheelhouse", "/wheelhouse"
-
-  config.vm.provider :virtualbox do |vb|
-    vb.customize ["modifyvm", :id, "--cpus", "4"]
-    vb.customize ["modifyvm", :id, "--memory", "2048"]
-    vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
-    vb.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
-  end
-
-  config.vm.provision :shell, :path => "build.sh"
-
-end
diff --git a/ci/speedpack/build.sh b/ci/speedpack/build.sh
deleted file mode 100755
index 330d8984e..000000000
--- a/ci/speedpack/build.sh
+++ /dev/null
@@ -1,117 +0,0 @@
-#!/bin/bash
-
-# This script is meant to run on a mint precise64 VM.
-# The generated wheel files should be compatible
-# with travis-ci as of 07/2013.
-#
-# Runtime can be up to an hour or more.
-
-echo "Building wheels..."
-
-# print a trace for everything; RTFM
-set -x
-
-# install and update some basics
-apt-get update
-apt-get install python-software-properties git -y
-apt-add-repository ppa:fkrull/deadsnakes -y
-apt-get update
-
-# install some deps and virtualenv
-apt-get install python-pip libfreetype6-dev libpng12-dev libhdf5-serial-dev \
-    g++ libatlas-base-dev gfortran libreadline-dev zlib1g-dev flex bison \
-    libxml2-dev libxslt-dev libssl-dev -y
-pip install virtualenv
-apt-get build-dep python-lxml -y
-
-# install sql servers
-apt-get install postgresql-client libpq-dev -y
-
-export PYTHONIOENCODING='utf-8'
-export VIRTUALENV_DISTRIBUTE=0
-
-function create_fake_pandas() {
-    local site_pkg_dir="$1"
-    rm -rf $site_pkg_dir/pandas
-    mkdir $site_pkg_dir/pandas
-    touch $site_pkg_dir/pandas/__init__.py
-    echo "version = '0.10.0-phony'" > $site_pkg_dir/pandas/version.py
-}
-
-
-function get_site_pkgs_dir() {
-    python$1 -c 'import distutils; print(distutils.sysconfig.get_python_lib())'
-}
-
-
-function create_wheel() {
-    local pip_args="$1"
-    local wheelhouse="$2"
-    local n="$3"
-    local pyver="$4"
-
-    local site_pkgs_dir="$(get_site_pkgs_dir $pyver)"
-
-
-    if [[ "$n" == *statsmodels* ]]; then
-        create_fake_pandas $site_pkgs_dir && \
-        pip wheel $pip_args --wheel-dir=$wheelhouse $n && \
-        pip install $pip_args --no-index $n && \
-        rm -Rf $site_pkgs_dir
-    else
-        pip wheel $pip_args --wheel-dir=$wheelhouse $n
-        pip install $pip_args --no-index $n
-    fi
-}
-
-
-function generate_wheels() {
-    # get the requirements file
-    local reqfile="$1"
-
-    # get the python version
-    local TAG=$(echo $reqfile |  grep -Po "(\d\.?[\d\-](_\w+)?)")
-
-    # base dir for wheel dirs
-    local WHEELSTREET=/wheelhouse
-    local WHEELHOUSE="$WHEELSTREET/$TAG"
-
-    local PY_VER="${TAG:0:3}"
-    local PY_MAJOR="${PY_VER:0:1}"
-    local PIP_ARGS="--use-wheel --find-links=$WHEELHOUSE --download-cache /tmp"
-
-    # install the python version if not installed
-    apt-get install python$PY_VER python$PY_VER-dev -y
-
-    # create a new virtualenv
-    rm -Rf /tmp/venv
-    virtualenv -p python$PY_VER /tmp/venv
-    source /tmp/venv/bin/activate
-
-    # install pip setuptools
-    pip install -I --download-cache /tmp 'git+https://github.com/pypa/pip@42102e9d#egg=pip'
-    pip install -I -U --download-cache /tmp setuptools
-    pip install -I --download-cache /tmp wheel
-
-    # make the dir if it doesn't exist
-    mkdir -p $WHEELHOUSE
-
-    # put the requirements file in the wheelhouse
-    cp $reqfile $WHEELHOUSE
-
-    # install and build the wheels
-    cat $reqfile | while read N; do
-        create_wheel "$PIP_ARGS" "$WHEELHOUSE" "$N" "$PY_VER"
-    done
-}
-
-
-# generate a single wheel version
-# generate_wheels "/reqf/requirements-2.7.txt"
-# 
-# if vagrant is already up
-# run as vagrant provision
-
-for reqfile in $(ls -1 /reqf/requirements-*.*); do
-    generate_wheels "$reqfile"
-done
diff --git a/ci/speedpack/nginx/nginx.conf.template b/ci/speedpack/nginx/nginx.conf.template
deleted file mode 100644
index e2cfeaf05..000000000
--- a/ci/speedpack/nginx/nginx.conf.template
+++ /dev/null
@@ -1,48 +0,0 @@
-#user  nobody;
-worker_processes  1;
-
-#error_log  logs/error.log;
-#error_log  logs/error.log  notice;
-#error_log  logs/error.log  info;
-
-#pid        logs/nginx.pid;
-
-
-events {
-    worker_connections  1024;
-}
-
-
-http {
-    include       mime.types;
-    default_type  application/octet-stream;
-
-    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
-    #                  '$status $body_bytes_sent "$http_referer" '
-    #                  '"$http_user_agent" "$http_x_forwarded_for"';
-
-    #access_log  logs/access.log  on;
-
-    sendfile        on;
-    #tcp_nopush     on;
-
-    #keepalive_timeout  0;
-    keepalive_timeout  65;
-
-    #gzip  on;
-
-    server {
-        listen $OPENSHIFT_IP:$OPENSHIFT_PORT;
-
-        access_log  access.log ;
-        sendfile        on;
-
-        location / {
-                root ../../app-root/data/store/;
-                autoindex on;
-        }
-
-
-    }
-
-}
