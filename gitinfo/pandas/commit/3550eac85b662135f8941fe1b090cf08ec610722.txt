commit 3550eac85b662135f8941fe1b090cf08ec610722
Author: Adam Klein <adamklein@gmail.com>
Date:   Tue Mar 20 13:12:56 2012 -0400

    ENH: added guards against bad interval data

diff --git a/pandas/core/datetools.py b/pandas/core/datetools.py
index 56dde69b8..63bddaedf 100644
--- a/pandas/core/datetools.py
+++ b/pandas/core/datetools.py
@@ -287,6 +287,8 @@ class Interval:
         elif isinstance(value, datetime):
             dt = value
         elif isinstance(value, (int, long)):
+            if value <= 0:
+                raise ValueError("Value must be positive")
             self.ordinal = value
         else:
             raise ValueError("Value must be string or datetime")
diff --git a/pandas/core/index.py b/pandas/core/index.py
index 713030e0a..5dcab33c7 100644
--- a/pandas/core/index.py
+++ b/pandas/core/index.py
@@ -1951,6 +1951,9 @@ class IntervalIndex(Int64Index):
                 else:
                     data = data.astype('i8')
 
+        if (data <= 0).any():
+            raise ValueError("Found illegal (<= 0) values in data")
+
         subarr = data.view(cls)
         subarr.name = name
         subarr.freq = freq
diff --git a/pandas/tests/test_interval.py b/pandas/tests/test_interval.py
index e20fc5227..f8ca75b49 100644
--- a/pandas/tests/test_interval.py
+++ b/pandas/tests/test_interval.py
@@ -12,6 +12,8 @@ from datetime import datetime
 from numpy.ma.testutils import assert_equal
 from pandas.core.datetools import Interval
 from pandas.core.index import IntervalIndex
+import pandas.core.datetools as datetools
+import numpy as np
 
 class TestIntervalProperties(TestCase):
     "Test properties such as year, month, weekday, etc...."
@@ -899,6 +901,13 @@ class TestIntervalIndex(TestCase):
         self.assertEquals(ii7.resample('H', 'S'), ii5)
         self.assertEquals(ii7.resample('Min', 'S'), ii6)
 
+    def test_badinput(self):
+        self.assertRaises(datetools.DateParseError, Interval, '1/1/-2000', 'A')
+        self.assertRaises(ValueError, Interval, -2000, 'A')
+        self.assertRaises(ValueError, Interval, 0, 'A')
+        self.assertRaises(ValueError, IntervalIndex, [-1, 0, 1], 'A')
+        self.assertRaises(ValueError, IntervalIndex, np.array([-1, 0, 1]), 'A')
+
 class TestMethods(TestCase):
     "Base test class for MaskedArrays."
 
