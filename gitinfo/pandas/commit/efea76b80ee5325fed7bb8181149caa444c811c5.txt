commit efea76b80ee5325fed7bb8181149caa444c811c5
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Mon Jun 11 14:54:18 2012 -0400

    BUG: reset index mapping after each function call in SeriesGrouper, close #1423

diff --git a/pandas/src/reduce.pyx b/pandas/src/reduce.pyx
index 49cdddb4b..9d9a3ba49 100644
--- a/pandas/src/reduce.pyx
+++ b/pandas/src/reduce.pyx
@@ -150,6 +150,7 @@ cdef class SeriesBinGrouper:
             object res, chunk
             bint initialized = 0
             Slider vslider, islider
+            IndexEngine gin
 
         counts = np.zeros(self.ngroups, dtype=np.int64)
 
@@ -168,6 +169,8 @@ cdef class SeriesBinGrouper:
         vslider = Slider(self.arr, self.dummy)
         islider = Slider(self.index, self.dummy.index)
 
+        gin = <IndexEngine> self.dummy.index._engine
+
         try:
             for i in range(self.ngroups):
                 group_size = counts[i]
@@ -185,6 +188,8 @@ cdef class SeriesBinGrouper:
 
                 islider.advance(group_size)
                 vslider.advance(group_size)
+
+                gin.clear_mapping()
         except:
             raise
         finally:
@@ -253,6 +258,7 @@ cdef class SeriesGrouper:
             object res, chunk
             bint initialized = 0
             Slider vslider, islider
+            IndexEngine gin
 
         labels = self.labels
         counts = np.zeros(self.ngroups, dtype=np.int64)
@@ -263,6 +269,7 @@ cdef class SeriesGrouper:
         vslider = Slider(self.arr, self.dummy)
         islider = Slider(self.index, self.dummy.index)
 
+        gin = <IndexEngine> self.dummy.index._engine
         try:
             for i in range(n):
                 group_size += 1
@@ -291,6 +298,9 @@ cdef class SeriesGrouper:
                     vslider.advance(group_size)
 
                     group_size = 0
+
+                    gin.clear_mapping()
+
         except:
             raise
         finally:
diff --git a/pandas/tests/test_groupby.py b/pandas/tests/test_groupby.py
index ee7dcd09d..587c48997 100644
--- a/pandas/tests/test_groupby.py
+++ b/pandas/tests/test_groupby.py
@@ -1933,6 +1933,35 @@ class TestGroupBy(unittest.TestCase):
         groups = grouped.groups
         self.assert_(isinstance(groups.keys()[0], datetime))
 
+    def test_groupby_reindex_inside_function(self):
+        from pandas.tseries.api import DatetimeIndex
+
+        periods = 1000
+        ind = DatetimeIndex(start='2012/1/1', freq='5min', periods=periods)
+        df = DataFrame({'high': np.arange(periods), 'low': np.arange(periods)}, index=ind)
+
+        def agg_before(hour, func, fix=False):
+            """
+                Run an aggregate func on the subset of data.
+            """
+            def _func(data):
+                d = data.select(lambda x: x.hour < 11).dropna()
+                if fix:
+                    data[data.index[0]]
+                if len(d) == 0:
+                    return None
+                return func(d)
+            return _func
+
+        def afunc(data):
+            d = data.select(lambda x: x.hour < 11).dropna()
+            return np.max(d)
+
+        grouped = df.groupby(lambda x: datetime(x.year, x.month, x.day))
+        closure_bad = grouped.agg({'high': agg_before(11, np.max)})
+        closure_good = grouped.agg({'high': agg_before(11, np.max, True)})
+
+        assert_frame_equal(closure_bad, closure_good)
 
 def _check_groupby(df, result, keys, field, f=lambda x: x.sum()):
     tups = map(tuple, df[keys].values)
