commit c1d8c09cca935d4e286ccdc7ca960a55dee2f476
Author: yui-knk <spiketeika@gmail.com>
Date:   Sun Jul 24 11:57:19 2016 -0400

    BUG: Fix pd.Timedelta(None) to return NaT.
    
    Author: yui-knk <spiketeika@gmail.com>
    
    Closes #13723 from yui-knk/timedelta_none and squashes the following commits:
    
    46a0f38 [yui-knk] BUG: Fix pd.Timedelta(None) to return NaT.

diff --git a/doc/source/whatsnew/v0.19.0.txt b/doc/source/whatsnew/v0.19.0.txt
index d7966e338..81906ba04 100644
--- a/doc/source/whatsnew/v0.19.0.txt
+++ b/doc/source/whatsnew/v0.19.0.txt
@@ -764,3 +764,4 @@ Bug Fixes
 - Bug where ``pd.read_gbq()`` could throw ``ImportError: No module named discovery`` as a result of a naming conflict with another python package called apiclient  (:issue:`13454`)
 - Bug in ``Index.union`` returns an incorrect result with a named empty index (:issue:`13432`)
 - Bugs in ``Index.difference`` and ``DataFrame.join`` raise in Python3 when using mixed-integer indexes (:issue:`13432`, :issue:`12814`)
+- Bug in ``pd.Timedelta(None)`` raises ``ValueError``. This is different from ``pd.Timestamp(None)`` (:issue:`13687`)
diff --git a/pandas/tseries/tests/test_timedeltas.py b/pandas/tseries/tests/test_timedeltas.py
index 659101cb4..0bdf8590e 100644
--- a/pandas/tseries/tests/test_timedeltas.py
+++ b/pandas/tseries/tests/test_timedeltas.py
@@ -188,6 +188,8 @@ class TestTimedeltas(tm.TestCase):
         self.assertEqual(Timedelta('').value, iNaT)
         self.assertEqual(Timedelta('nat').value, iNaT)
         self.assertEqual(Timedelta('NAT').value, iNaT)
+        self.assertEqual(Timedelta(None).value, iNaT)
+        self.assertEqual(Timedelta(np.nan).value, iNaT)
         self.assertTrue(isnull(Timedelta('nat')))
 
         # offset
diff --git a/pandas/tslib.pyx b/pandas/tslib.pyx
index 5f487eedd..bc42adbab 100644
--- a/pandas/tslib.pyx
+++ b/pandas/tslib.pyx
@@ -2592,10 +2592,10 @@ class Timedelta(_Timedelta):
 
     """
 
-    def __new__(cls, object value=None, unit=None, **kwargs):
+    def __new__(cls, object value=_no_input, unit=None, **kwargs):
         cdef _Timedelta td_base
 
-        if value is None:
+        if value is _no_input:
             if not len(kwargs):
                 raise ValueError("cannot construct a Timedelta without a value/unit or descriptive keywords (days,seconds....)")
 
