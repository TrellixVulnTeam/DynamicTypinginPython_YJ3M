commit aa361e5bc61ef8d53bb6a4dcd7d556d99a387a59
Author: Jeff Reback <jeff@reback.net>
Date:   Sat Jan 21 10:05:47 2017 -0500

    DOC: make sure foo.csv is properly created in io.rst
    DOC: remove some experimental tags

diff --git a/doc/source/io.rst b/doc/source/io.rst
index f637bf71b..d4bbb3d11 100644
--- a/doc/source/io.rst
+++ b/doc/source/io.rst
@@ -37,9 +37,9 @@ object.
     * :ref:`read_feather<io.feather>`
     * :ref:`read_sql<io.sql>`
     * :ref:`read_json<io.json_reader>`
-    * :ref:`read_msgpack<io.msgpack>` (experimental)
+    * :ref:`read_msgpack<io.msgpack>`
     * :ref:`read_html<io.read_html>`
-    * :ref:`read_gbq<io.bigquery_reader>` (experimental)
+    * :ref:`read_gbq<io.bigquery_reader>`
     * :ref:`read_stata<io.stata_reader>`
     * :ref:`read_sas<io.sas_reader>`
     * :ref:`read_clipboard<io.clipboard>`
@@ -53,9 +53,9 @@ The corresponding ``writer`` functions are object methods that are accessed like
     * :ref:`to_feather<io.feather>`
     * :ref:`to_sql<io.sql>`
     * :ref:`to_json<io.json_writer>`
-    * :ref:`to_msgpack<io.msgpack>` (experimental)
+    * :ref:`to_msgpack<io.msgpack>`
     * :ref:`to_html<io.html>`
-    * :ref:`to_gbq<io.bigquery_writer>` (experimental)
+    * :ref:`to_gbq<io.bigquery_writer>`
     * :ref:`to_stata<io.stata_writer>`
     * :ref:`to_clipboard<io.clipboard>`
     * :ref:`to_pickle<io.pickle>`
@@ -428,8 +428,8 @@ worth trying.
         :okwarning:
 
         df = pd.DataFrame({'col_1': list(range(500000)) + ['a', 'b'] + list(range(500000))})
-        df.to_csv('foo')
-        mixed_df = pd.read_csv('foo')
+        df.to_csv('foo.csv')
+        mixed_df = pd.read_csv('foo.csv')
         mixed_df['col_1'].apply(type).value_counts()
         mixed_df['col_1'].dtype
 
@@ -438,6 +438,11 @@ worth trying.
    data that was read in. It is important to note that the overall column will be
    marked with a ``dtype`` of ``object``, which is used for columns with mixed dtypes.
 
+.. ipython:: python
+   :suppress:
+
+   os.remove('foo.csv')
+
 .. _io.categorical:
 
 Specifying Categorical dtype
@@ -570,6 +575,7 @@ The ``usecols`` argument can also be used to specify which columns not to
 use in the final result:
 
 .. ipython:: python
+
    pd.read_csv(StringIO(data), usecols=lambda x: x not in ['a', 'c'])
 
 In this case, the callable is specifying that we exclude the "a" and "c"
@@ -730,6 +736,13 @@ input text data into ``datetime`` objects.
 
 The simplest case is to just pass in ``parse_dates=True``:
 
+.. ipython:: python
+   :suppress:
+
+   f = open('foo.csv','w')
+   f.write('date,A,B,C\n20090101,a,1,2\n20090102,b,3,4\n20090103,c,4,5')
+   f.close()
+
 .. ipython:: python
 
    # Use a column as an index, and parse it as dates.
@@ -2826,8 +2839,8 @@ any pickled pandas object (or any other pickled object) from file:
 
 .. _io.msgpack:
 
-msgpack (experimental)
-----------------------
+msgpack
+-------
 
 .. versionadded:: 0.13.0
 
@@ -4547,8 +4560,8 @@ And then issue the following queries:
 
 .. _io.bigquery:
 
-Google BigQuery (Experimental)
-------------------------------
+Google BigQuery
+---------------
 
 .. versionadded:: 0.13.0
 
diff --git a/pandas/io/json.py b/pandas/io/json.py
index 74a1ac43f..767a2212d 100644
--- a/pandas/io/json.py
+++ b/pandas/io/json.py
@@ -745,6 +745,7 @@ def json_normalize(data, record_path=None, meta=None,
         path to records is ['foo', 'bar']
     meta_prefix : string, default None
     errors : {'raise', 'ignore'}, default 'raise'
+
         * ignore : will ignore KeyError if keys listed in meta are not
         always present
         * raise : will raise KeyError if keys listed in meta are not
