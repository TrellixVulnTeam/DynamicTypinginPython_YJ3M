commit 148200f8721f302024658c4f959471ae88133f9d
Author: jbrockmendel <jbrockmendel@gmail.com>
Date:   Sat Sep 23 12:42:54 2017 -0700

    Dont check for NaTType, just NaT (#17564)

diff --git a/pandas/core/indexes/timedeltas.py b/pandas/core/indexes/timedeltas.py
index d7b7d56d7..12b793650 100644
--- a/pandas/core/indexes/timedeltas.py
+++ b/pandas/core/indexes/timedeltas.py
@@ -847,7 +847,7 @@ class TimedeltaIndex(DatetimeIndexOpsMixin, TimelikeOps, Int64Index):
                 pass
 
         freq = None
-        if isinstance(item, (Timedelta, libts.NaTType)):
+        if isinstance(item, Timedelta) or item is NaT:
 
             # check freq can be preserved on edge cases
             if self.freq is not None:
diff --git a/pandas/io/packers.py b/pandas/io/packers.py
index a2fc4db23..92270b39f 100644
--- a/pandas/io/packers.py
+++ b/pandas/io/packers.py
@@ -56,7 +56,6 @@ from pandas import (Timestamp, Period, Series, DataFrame,  # noqa
                     Index, MultiIndex, Float64Index, Int64Index,
                     Panel, RangeIndex, PeriodIndex, DatetimeIndex, NaT,
                     Categorical, CategoricalIndex)
-from pandas._libs.tslib import NaTType
 from pandas.core.sparse.api import SparseSeries, SparseDataFrame
 from pandas.core.sparse.array import BlockIndex, IntIndex
 from pandas.core.generic import NDFrame
@@ -470,7 +469,7 @@ def encode(obj):
                     }
 
     elif isinstance(obj, (datetime, date, np.datetime64, timedelta,
-                          np.timedelta64, NaTType)):
+                          np.timedelta64)) or obj is NaT:
         if isinstance(obj, Timestamp):
             tz = obj.tzinfo
             if tz is not None:
@@ -482,7 +481,7 @@ def encode(obj):
                     u'value': obj.value,
                     u'freq': freq,
                     u'tz': tz}
-        if isinstance(obj, NaTType):
+        if obj is NaT:
             return {u'typ': u'nat'}
         elif isinstance(obj, np.timedelta64):
             return {u'typ': u'timedelta64',
diff --git a/pandas/tests/scalar/test_timedelta.py b/pandas/tests/scalar/test_timedelta.py
index 2cabbfacf..b5a8ce24f 100644
--- a/pandas/tests/scalar/test_timedelta.py
+++ b/pandas/tests/scalar/test_timedelta.py
@@ -9,7 +9,7 @@ import pandas.util.testing as tm
 from pandas.core.tools.timedeltas import _coerce_scalar_to_timedelta_type as ct
 from pandas import (Timedelta, TimedeltaIndex, timedelta_range, Series,
                     to_timedelta, compat)
-from pandas._libs.tslib import iNaT, NaTType
+from pandas._libs.tslib import iNaT, NaT
 
 
 class TestTimedeltas(object):
@@ -579,7 +579,7 @@ class TestTimedeltas(object):
         assert max_td.value == np.iinfo(np.int64).max
 
         # Beyond lower limit, a NAT before the Overflow
-        assert isinstance(min_td - Timedelta(1, 'ns'), NaTType)
+        assert (min_td - Timedelta(1, 'ns')) is NaT
 
         with pytest.raises(OverflowError):
             min_td - Timedelta(2, 'ns')
@@ -589,7 +589,7 @@ class TestTimedeltas(object):
 
         # Same tests using the internal nanosecond values
         td = Timedelta(min_td.value - 1, 'ns')
-        assert isinstance(td, NaTType)
+        assert td is NaT
 
         with pytest.raises(OverflowError):
             Timedelta(min_td.value - 2, 'ns')
