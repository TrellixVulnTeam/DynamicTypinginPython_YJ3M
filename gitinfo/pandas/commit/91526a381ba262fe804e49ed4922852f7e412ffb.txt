commit 91526a381ba262fe804e49ed4922852f7e412ffb
Author: jreback <jeff@reback.net>
Date:   Thu Dec 20 10:36:01 2012 -0500

    DOC: RELEASE notes updates

diff --git a/RELEASE.rst b/RELEASE.rst
index d3c70e736..cb3f840fe 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -32,7 +32,7 @@ pandas 0.10.1
 **Improvements to existing features**
 
   - ``HDFStore``
-    - enables storing of multi-index dataframes
+    - enables storing of multi-index dataframes (closes GH1277_)
     - support data column indexing and selection, via ``columns`` keyword in append
     - support write chunking to reduce memory footprint, via ``chunksize`` keywork to append
     - support automagic indexing via ``index`` keyworkd to append
@@ -45,8 +45,10 @@ pandas 0.10.1
   - ``HDFStore``
     - correctly handle ``nan`` elements in string columns; serialize via the ``nan_rep`` keyword to append
     - raise correctly on non-implemented column types (unicode/datetime64/date)
-    - handle correctly ``Term`` passed types (e.g. ``index<1000``, when index is ``Int64``)
+    - handle correctly ``Term`` passed types (e.g. ``index<1000``, when index is ``Int64``), closes (GH512_)
 
+.. _GH512: https://github.com/pydata/pandas/issues/512
+.. _GH1277: https://github.com/pydata/pandas/issues/1277
 
 pandas 0.10.0
 =============
diff --git a/doc/source/v0.10.1.txt b/doc/source/v0.10.1.txt
index b60228323..5b8db8963 100644
--- a/doc/source/v0.10.1.txt
+++ b/doc/source/v0.10.1.txt
@@ -79,7 +79,7 @@ You can designate (and index) certain columns that you want to be able to perfor
 - You can pass ``index`` to ``append``. This defaults to ``True``. This will automagically create indicies on the *indexables* and *data columns* of the table
 - You can pass ``chunksize=an integer`` to ``append``, to change the writing chunksize (default is 50000). This will signficantly lower your memory usage on writing.
 - You can pass ``expectedrows=an integer`` to the first ``append``, to set the TOTAL number of expectedrows that ``PyTables`` will expected. This will optimize read/write performance.
-- ``Select`` now supports passing ``start`` and ``stop`` to provide selection space liminting in selection.
+- ``Select`` now supports passing ``start`` and ``stop`` to provide selection space limiting in selection.
 
 
 See the `full release notes
