commit 590136499047bfcd4902512a6579247bff94f40d
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Tue Apr 10 14:29:28 2012 -0400

    BUG: fix indexing error when selecting section of a hierarchically-indexed DataFrame row, close #1013

diff --git a/RELEASE.rst b/RELEASE.rst
index 7ca861a5c..939fc60fe 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -43,6 +43,8 @@ pandas 0.7.3
 **Bug fixes**
 
   - Don't attach nonsense 'result' name to groupby results (GH #995)
+  - Fix logic error when selecting part of a row in a DataFrame with a
+    MultiIndex index (GH #1013)
 
 pandas 0.7.2
 ============
diff --git a/pandas/core/indexing.py b/pandas/core/indexing.py
index 12c25bd11..d768a1bc4 100644
--- a/pandas/core/indexing.py
+++ b/pandas/core/indexing.py
@@ -137,7 +137,7 @@ class _NDFrameIndexer(object):
         # df.ix[d1:d2, 0] -> columns first (True)
         # df.ix[0, ['C', 'B', A']] -> rows first (False)
         for i, key in enumerate(tup):
-            if _is_label_like(key):
+            if _is_label_like(key) or isinstance(key, tuple):
                 section = self._getitem_axis(key, axis=i)
 
                 # might have been a MultiIndex
diff --git a/pandas/tests/test_multilevel.py b/pandas/tests/test_multilevel.py
index 07d0b980b..c611b3705 100644
--- a/pandas/tests/test_multilevel.py
+++ b/pandas/tests/test_multilevel.py
@@ -255,6 +255,15 @@ class TestMultiLevel(unittest.TestCase):
         assert_series_equal(result, expected)
         assert_series_equal(result, expected2)
 
+    def test_getitem_setitem_tuple_plus_columns(self):
+        # GH #1013
+
+        df = self.ymd[:5]
+
+        result = df.ix[(2000, 1, 6), ['A', 'B', 'C']]
+        expected = df.ix[2000, 1, 6][['A', 'B', 'C']]
+        assert_series_equal(result, expected)
+
     def test_xs(self):
         xs = self.frame.xs(('bar', 'two'))
         xs2 = self.frame.ix[('bar', 'two')]
@@ -1252,6 +1261,7 @@ x   q   30      3    -0.6662 -0.5243 -0.3580  0.89145  2.5838"""
         # NumPy bug
         # repr(index.get_level_values(1))
 
+
 if __name__ == '__main__':
 
     # unittest.main()
