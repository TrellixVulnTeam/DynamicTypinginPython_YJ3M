commit de6318e9fbe1b63740e8db235cd73e43f79196a6
Author: Adam Klein <adamklein@gmail.com>
Date:   Mon Feb 13 10:03:44 2012 -0500

    ENH, closes #773 PR, deprecating column for columns

diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 4b73585d0..f3d313fe8 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -2159,7 +2159,7 @@ class DataFrame(NDFrame):
     #----------------------------------------------------------------------
     # Sorting
 
-    def sort(self, columns=None, axis=0, ascending=True):
+    def sort(self, columns=None, column=None, axis=0, ascending=True):
         """
         Sort DataFrame either by labels (along either axis) or by the values in
         column(s)
@@ -2178,6 +2178,10 @@ class DataFrame(NDFrame):
         -------
         sorted : DataFrame
         """
+        if column is not None:
+            import warnings
+            warnings.warn("column is deprecated, use columns", FutureWarning)
+            columns = column
         return self.sort_index(by=columns, axis=axis, ascending=ascending)
 
     def sort_index(self, axis=0, by=None, ascending=True):
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index 176d408f5..4f3cfc8b1 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -3553,14 +3553,18 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
         assert_frame_equal(sorted_df, expected)
 
         # check for now
-        sorted_df = frame.sort(column='A')
+        sorted_df = frame.sort(columns='A')
         expected = frame.sort_index(by='A')
         assert_frame_equal(sorted_df, expected)
 
-        sorted_df = frame.sort(column='A', ascending=False)
+        sorted_df = frame.sort(columns='A', ascending=False)
         expected = frame.sort_index(by='A', ascending=False)
         assert_frame_equal(sorted_df, expected)
 
+        sorted_df = frame.sort(columns=['A', 'B'], ascending=False)
+        expected = frame.sort_index(by=['A', 'B'], ascending=False)
+        assert_frame_equal(sorted_df, expected)
+
     def test_sort_index_multicolumn(self):
         import random
         A = np.arange(5).repeat(20)
