commit 5f85f4b916616b9e8881cb386be10ab184d768be
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Mon Jan 16 12:48:12 2012 -0500

    ENH: add margins to crosstab

diff --git a/RELEASE.rst b/RELEASE.rst
index 389ed01ff..f397c2c6c 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -208,6 +208,7 @@ pandas 0.7.0
   - Fix TypeError with tuple subclasses (e.g. namedtuple) in
     DataFrame.from_records (GH #611)
   - Catch misreported console size when running IPython within Emacs
+  - Fix minor bug in pivot table margins
 
 Thanks
 ------
diff --git a/pandas/tools/pivot.py b/pandas/tools/pivot.py
index 2905a6c5f..76d4a10c5 100644
--- a/pandas/tools/pivot.py
+++ b/pandas/tools/pivot.py
@@ -142,7 +142,7 @@ def _add_margins(table, data, values, rows=None, cols=None, aggfunc=np.mean):
     else:
         row_margin = Series(np.nan, index=result.columns)
 
-    key = ('All',) + ('',) * (len(rows) - 1)
+    key = ('All',) + ('',) * (len(rows) - 1) if len(rows) > 1 else 'All'
 
     row_margin = row_margin.reindex(result.columns)
     # populate grand margin
@@ -166,7 +166,7 @@ def _convert_by(by):
         by = list(by)
     return by
 
-def crosstab(rows, cols, rownames=None, colnames=None):
+def crosstab(rows, cols, rownames=None, colnames=None, margins=False):
     """
     Compute a simple cross-tabulation of two (or more) factors
 
@@ -180,6 +180,8 @@ def crosstab(rows, cols, rownames=None, colnames=None):
         If passed, must match number of row arrays passed
     colnames : sequence, default None
         If passed, must match number of column arrays passed
+    margins : boolean, default False
+        Add row/column margins (subtotals)
 
     Notes
     -----
@@ -218,15 +220,12 @@ def crosstab(rows, cols, rownames=None, colnames=None):
     data = {}
     data.update(zip(rownames, rows))
     data.update(zip(colnames, cols))
-
     df = DataFrame(data)
-    table = df.groupby(rownames + colnames).size()
+    df['__dummy__'] = 0
 
-    for cname in colnames:
-        table = table.unstack(cname)
+    table = df.pivot_table('__dummy__', rows=rownames, cols=colnames,
+                           aggfunc=len, margins=margins)
 
-    table.columns.names = colnames
-    table.index.names = rownames
     return table.fillna(0).astype(np.int64)
 
 def _get_names(arrs, names, prefix='row'):
diff --git a/pandas/tools/tests/test_pivot.py b/pandas/tools/tests/test_pivot.py
index 23c70276f..2e00f3e34 100644
--- a/pandas/tools/tests/test_pivot.py
+++ b/pandas/tools/tests/test_pivot.py
@@ -2,7 +2,8 @@ import unittest
 
 import numpy as np
 
-from pandas import DataFrame, concat
+from pandas import DataFrame, Series
+from pandas.tools.merge import concat
 from pandas.tools.pivot import pivot_table, crosstab
 import pandas.util.testing as tm
 
@@ -177,6 +178,30 @@ class TestCrosstab(unittest.TestCase):
         expected = crosstab([df['b'], df['c']], df['a'])
         tm.assert_frame_equal(result, expected)
 
+    def test_crosstab_margins(self):
+        a = np.random.randint(0, 7, size=100)
+        b = np.random.randint(0, 3, size=100)
+        c = np.random.randint(0, 5, size=100)
+
+        df = DataFrame({'a': a, 'b': b, 'c': c})
+
+        result = crosstab(a, [b, c], rownames=['a'], colnames=('b', 'c'),
+                          margins=True)
+
+        all_cols = result['All', '']
+        exp_cols = df.groupby(['a']).size()
+        exp_cols = exp_cols.append(Series([len(df)], index=['All']))
+
+        tm.assert_series_equal(all_cols, exp_cols)
+
+        all_rows = result.ix['All']
+        exp_rows = df.groupby(['b', 'c']).size()
+        exp_rows = exp_rows.append(Series([len(df)], index=[('All', '')]))
+
+        exp_rows = exp_rows.reindex(all_rows.index)
+        exp_rows = exp_rows.fillna(0).astype(np.int64)
+        tm.assert_series_equal(all_rows, exp_rows)
+
 if __name__ == '__main__':
     import nose
     nose.runmodule(argv=[__file__,'-vvs','-x','--pdb', '--pdb-failure'],
