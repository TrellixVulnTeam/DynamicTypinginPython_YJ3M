commit 36ef22710c2660532eca8f55f385c652b022a26e
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Sun Dec 9 17:28:13 2012 -0500

    ENH: convert to TimeSeries when setting a DatetimeIndex. close #2139

diff --git a/pandas/core/series.py b/pandas/core/series.py
index 9bffca696..20c9e3962 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -368,6 +368,10 @@ class Series(np.ndarray, generic.PandasObject):
 
         return subarr
 
+    def _make_time_series(self):
+        # oh boy #2139
+        self.__class__ = TimeSeries
+
     @classmethod
     def from_array(cls, arr, index=None, name=None, copy=False):
         """
diff --git a/pandas/sparse/series.py b/pandas/sparse/series.py
index 7b377d430..5a6124989 100644
--- a/pandas/sparse/series.py
+++ b/pandas/sparse/series.py
@@ -155,6 +155,10 @@ class SparseSeries(SparseArray, Series):
         output.name = name
         return output
 
+    def _make_time_series(self):
+        # oh boy #2139
+        self.__class__ = SparseTimeSeries
+
     @classmethod
     def from_array(cls, arr, index=None, name=None, copy=False,fill_value=None):
         """
diff --git a/pandas/src/properties.pyx b/pandas/src/properties.pyx
index 67a480d3b..53bb561ef 100644
--- a/pandas/src/properties.pyx
+++ b/pandas/src/properties.pyx
@@ -57,7 +57,11 @@ cdef class SeriesIndex(object):
     def __set__(self, obj, value):
         if len(obj) != len(value):
             raise AssertionError('Index length did not match values')
-        obj._index = self._check_type(value)
+        obj._index = val = self._check_type(value)
+        if hasattr(val, 'tz'):
+            # hack for #2139
+            obj._make_time_series()
+
 
 cdef class ValuesProperty(object):
 
diff --git a/pandas/tests/test_series.py b/pandas/tests/test_series.py
index 88c78044d..a8bc82860 100644
--- a/pandas/tests/test_series.py
+++ b/pandas/tests/test_series.py
@@ -3345,6 +3345,14 @@ class TestSeriesNonUnique(unittest.TestCase):
         self.assert_(rs.index.equals(Index(index.get_level_values(1))))
         self.assert_(isinstance(rs, Series))
 
+    def test_set_index_makes_timeseries(self):
+        idx = tm.makeDateIndex(10)
+
+        s = Series(range(10))
+        s.index = idx
+
+        self.assertTrue(isinstance(s, TimeSeries))
+
     def test_timeseries_coercion(self):
         idx = tm.makeDateIndex(10000)
         ser = Series(np.random.randn(len(idx)), idx.astype(object))
