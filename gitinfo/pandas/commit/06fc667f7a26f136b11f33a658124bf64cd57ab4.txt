commit 06fc667f7a26f136b11f33a658124bf64cd57ab4
Author: Florian Wilhelm <FlorianWilhelm@users.noreply.github.com>
Date:   Fri Jun 30 22:25:15 2017 +0200

    FIX: Allow aggregate to return dictionaries again #16741 (#16752)

diff --git a/doc/source/whatsnew/v0.21.0.txt b/doc/source/whatsnew/v0.21.0.txt
index de2516d75..5515d093f 100644
--- a/doc/source/whatsnew/v0.21.0.txt
+++ b/doc/source/whatsnew/v0.21.0.txt
@@ -92,6 +92,8 @@ Performance Improvements
 Bug Fixes
 ~~~~~~~~~
 
+- Fixes regression in 0.20, :func:`Series.aggregate` and :func:`DataFrame.aggregate` allow dictionaries as return values again (:issue:`16741`)
+
 Conversion
 ^^^^^^^^^^
 
diff --git a/pandas/_libs/src/reduce.pyx b/pandas/_libs/src/reduce.pyx
index 2bba07256..3ce94022e 100644
--- a/pandas/_libs/src/reduce.pyx
+++ b/pandas/_libs/src/reduce.pyx
@@ -419,7 +419,7 @@ cdef class SeriesGrouper:
 cdef inline _extract_result(object res):
     """ extract the result object, it might be a 0-dim ndarray
         or a len-1 0-dim, or a scalar """
-    if hasattr(res, 'values'):
+    if hasattr(res, 'values') and isinstance(res.values, np.ndarray):
         res = res.values
     if not np.isscalar(res):
         if isinstance(res, np.ndarray):
diff --git a/pandas/tests/groupby/test_aggregate.py b/pandas/tests/groupby/test_aggregate.py
index b578a6efb..efc833575 100644
--- a/pandas/tests/groupby/test_aggregate.py
+++ b/pandas/tests/groupby/test_aggregate.py
@@ -611,6 +611,16 @@ class TestGroupByAggregate(object):
         df.groupby(level=0, axis='columns').mean()
         df.groupby(level=0, axis='columns').mean()
 
+    def test_cython_agg_return_dict(self):
+        # GH 16741
+        ts = self.df.groupby('A')['B'].agg(
+            lambda x: x.value_counts().to_dict())
+        expected = Series([{'two': 1, 'one': 1, 'three': 1},
+                           {'two': 2, 'one': 2, 'three': 1}],
+                          index=Index(['bar', 'foo'], name='A'),
+                          name='B')
+        assert_series_equal(ts, expected)
+
     def test_cython_fail_agg(self):
         dr = bdate_range('1/1/2000', periods=50)
         ts = Series(['A', 'B', 'C', 'D', 'E'] * 10, index=dr)
