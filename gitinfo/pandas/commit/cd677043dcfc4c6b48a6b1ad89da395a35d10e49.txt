commit cd677043dcfc4c6b48a6b1ad89da395a35d10e49
Author: Jeff Reback <jeff@reback.net>
Date:   Thu Mar 2 09:23:58 2017 -0500

    TST: remove deprecated usages of FrozenList.__add__ from test code
    
    xref #15506

diff --git a/pandas/core/panel.py b/pandas/core/panel.py
index 4a6c6cf29..c5ea51322 100644
--- a/pandas/core/panel.py
+++ b/pandas/core/panel.py
@@ -940,9 +940,9 @@ class Panel(NDFrame):
             minor_labels, minor_levels, minor_names = construct_index_parts(
                 self.minor_axis, major=False)
 
-        levels = major_levels + minor_levels
-        labels = major_labels + minor_labels
-        names = major_names + minor_names
+        levels = list(major_levels) + list(minor_levels)
+        labels = list(major_labels) + list(minor_labels)
+        names = list(major_names) + list(minor_names)
 
         index = MultiIndex(levels=levels, labels=labels, names=names,
                            verify_integrity=False)
diff --git a/pandas/core/reshape.py b/pandas/core/reshape.py
index 87cb088c2..faad6c500 100644
--- a/pandas/core/reshape.py
+++ b/pandas/core/reshape.py
@@ -216,8 +216,8 @@ class _Unstacker(object):
         width = len(self.value_columns)
         propagator = np.repeat(np.arange(width), stride)
         if isinstance(self.value_columns, MultiIndex):
-            new_levels = self.value_columns.levels + (self.removed_level,)
-            new_names = self.value_columns.names + (self.removed_name,)
+            new_levels = self.value_columns.levels.union((self.removed_level,))
+            new_names = self.value_columns.names.union((self.removed_name,))
 
             new_labels = [lab.take(propagator)
                           for lab in self.value_columns.labels]
@@ -806,7 +806,7 @@ def melt(frame, id_vars=None, value_vars=None, var_name=None,
     for col in id_vars:
         mdata[col] = np.tile(frame.pop(col).values, K)
 
-    mcolumns = id_vars + var_name + [value_name]
+    mcolumns = list(id_vars) + list(var_name) + list([value_name])
 
     mdata[value_name] = frame.values.ravel('F')
     for i, col in enumerate(var_name):
diff --git a/pandas/core/strings.py b/pandas/core/strings.py
index ac8d1db6a..51016926d 100644
--- a/pandas/core/strings.py
+++ b/pandas/core/strings.py
@@ -787,7 +787,7 @@ def str_extractall(arr, pat, flags=0):
     if 0 < len(index_list):
         from pandas import MultiIndex
         index = MultiIndex.from_tuples(
-            index_list, names=arr.index.names + ["match"])
+            index_list, names=arr.index.names.union(["match"]))
     else:
         index = None
     result = arr._constructor_expanddim(match_list, index=index,
diff --git a/pandas/tests/groupby/test_value_counts.py b/pandas/tests/groupby/test_value_counts.py
index 801d0da07..ff01df269 100644
--- a/pandas/tests/groupby/test_value_counts.py
+++ b/pandas/tests/groupby/test_value_counts.py
@@ -28,7 +28,7 @@ def test_series_groupby_value_counts(n, m):
 
             gr = df.groupby(keys, sort=isort)
             right = gr['3rd'].apply(Series.value_counts, **kwargs)
-            right.index.names = right.index.names[:-1] + ['3rd']
+            right.index.names = right.index.names[:-1].union(['3rd'])
 
             # have to sort on index because of unstable sort on values
             left, right = map(rebuild_index, (left, right))  # xref GH9212
diff --git a/pandas/tools/concat.py b/pandas/tools/concat.py
index 640510611..ae9d7af9d 100644
--- a/pandas/tools/concat.py
+++ b/pandas/tools/concat.py
@@ -574,7 +574,7 @@ def _make_concat_multiindex(indexes, keys, levels=None, names=None):
                                      " not have the same number of levels")
 
             # also copies
-            names = names + _get_consensus_names(indexes)
+            names = list(names) + list(_get_consensus_names(indexes))
 
         return MultiIndex(levels=levels, labels=label_list, names=names,
                           verify_integrity=False)
diff --git a/test_fast.sh b/test_fast.sh
index 30ac7f84c..f22ab7327 100755
--- a/test_fast.sh
+++ b/test_fast.sh
@@ -5,4 +5,4 @@
 # https://github.com/pytest-dev/pytest/issues/1075
 export PYTHONHASHSEED=$(python -c 'import random; print(random.randint(1, 4294967295))')
 
-pytest pandas --skip-slow --skip-network -m "not single" -n 4
+pytest pandas --skip-slow --skip-network -m "not single" -n 4 $@
