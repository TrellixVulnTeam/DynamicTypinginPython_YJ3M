commit 1dc93b521f54b0259c77e8079b03c6fae791dd24
Author: chris-b1 <cbartak@gmail.com>
Date:   Wed Jul 19 04:51:47 2017 -0500

    DOC: infer_objects doc fixup (#17018)

diff --git a/doc/source/basics.rst b/doc/source/basics.rst
index 4211b1520..aae1fffb7 100644
--- a/doc/source/basics.rst
+++ b/doc/source/basics.rst
@@ -2025,11 +2025,12 @@ object conversion
 
 pandas offers various functions to try to force conversion of types from the ``object`` dtype to other types.
 In cases where the data is already of the correct type, but stored in an ``object`` array, the
-:meth:`~DataFrame.infer_objects` and :meth:`~Series.infer_objects` can be used to soft convert
+:meth:`DataFrame.infer_objects` and :meth:`Series.infer_objects` methods can be used to soft convert
 to the correct type.
 
   .. ipython:: python
 
+     import datetime
      df = pd.DataFrame([[1, 2],
                         ['a', 'b'],
                         [datetime.datetime(2016, 3, 2), datetime.datetime(2016, 3, 2)]])
@@ -2037,7 +2038,7 @@ to the correct type.
      df
      df.dtypes
 
-Because the data transposed the original inference stored all columns as object, which
+Because the data was transposed the original inference stored all columns as object, which
 ``infer_objects`` will correct.
 
   .. ipython:: python
diff --git a/doc/source/whatsnew/v0.21.0.txt b/doc/source/whatsnew/v0.21.0.txt
index 9a6016c82..e43a5f985 100644
--- a/doc/source/whatsnew/v0.21.0.txt
+++ b/doc/source/whatsnew/v0.21.0.txt
@@ -31,13 +31,13 @@ New features
 ``infer_objects`` type conversion
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 
-The `:meth:`~DataFrame.infer_objects` and :meth:`~Series.infer_objects`
+The :meth:`DataFrame.infer_objects` and :meth:`Series.infer_objects`
 methods have been added to perform dtype inference on object columns, replacing
 some of the functionality of the deprecated ``convert_objects``
 method. See the documentation :ref:`here <basics.object_conversion>`
 for more details. (:issue:`11221`)
 
-This function only performs soft conversions on object columns, converting Python objects
+This method only performs soft conversions on object columns, converting Python objects
 to native types, but not any coercive conversions.  For example:
 
 .. ipython:: python
@@ -46,11 +46,12 @@ to native types, but not any coercive conversions.  For example:
                       'B': np.array([1, 2, 3], dtype='object'),
                       'C': ['1', '2', '3']})
    df.dtypes
-   df.infer_objects().dtype
+   df.infer_objects().dtypes
 
 Note that column ``'C'`` was not converted - only scalar numeric types
 will be inferred to a new type.  Other types of conversion should be accomplished
-using :func:`to_numeric` function (or :func:`to_datetime`, :func:`to_timedelta`).
+using the :func:`to_numeric` function (or :func:`to_datetime`, :func:`to_timedelta`).
+
 .. ipython:: python
 
    df = df.infer_objects()
diff --git a/pandas/core/generic.py b/pandas/core/generic.py
index c95129bda..48006b119 100644
--- a/pandas/core/generic.py
+++ b/pandas/core/generic.py
@@ -3693,7 +3693,7 @@ it is assumed to be aliases for the column names.')
         columns unchanged. The inference rules are the
         same as during normal Series/DataFrame construction.
 
-        .. versionadded:: 0.20.0
+        .. versionadded:: 0.21.0
 
         See Also
         --------
