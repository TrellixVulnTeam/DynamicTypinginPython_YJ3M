commit e2cb8a212bd85eec651c430ee66c01198c29805c
Author: jreback <jeff@reback.net>
Date:   Thu Feb 28 14:42:27 2013 -0500

    CLN: argument order and dtype formatting to be consistent with standard

diff --git a/pandas/core/format.py b/pandas/core/format.py
index c564bb37a..1db0e0b41 100644
--- a/pandas/core/format.py
+++ b/pandas/core/format.py
@@ -65,19 +65,19 @@ docstring_to_string = """
 
 class SeriesFormatter(object):
 
-    def __init__(self, series, buf=None, header=True, length=True, dtype=True,
-                 na_rep='NaN', name=False, float_format=None):
+    def __init__(self, series, buf=None, header=True, length=True,
+                 na_rep='NaN', name=False, float_format=None, dtype=True):
         self.series = series
         self.buf = buf if buf is not None else StringIO(u"")
         self.name = name
         self.na_rep = na_rep
         self.length = length
-        self.dtype  = dtype
         self.header = header
 
         if float_format is None:
             float_format = get_option("display.float_format")
         self.float_format = float_format
+        self.dtype  = dtype
 
     def _get_footer(self):
         footer = u''
diff --git a/pandas/core/series.py b/pandas/core/series.py
index f34028482..bcdacf9ad 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -1050,7 +1050,7 @@ class Series(pa.Array, generic.PandasObject):
                                     name=True,
                                     dtype=True)
         else:
-            result = u'Series([], Dtype: %s)' % self.dtype
+            result = u'Series([], dtype: %s)' % self.dtype
 
         assert type(result) == unicode
         return result
@@ -1073,8 +1073,8 @@ class Series(pa.Array, generic.PandasObject):
                                     dtype=False, name=False)
         tail = self[-(max_vals - num):]._get_repr(print_header=False,
                                                   length=False,
-                                                  dtype=False,
-                                                  name=False)
+                                                  name=False,
+                                                  dtype=False)
         result = head + '\n...\n' + tail
         result = '%s\n%s' % (result, self._repr_footer())
 
@@ -1083,8 +1083,8 @@ class Series(pa.Array, generic.PandasObject):
     def _repr_footer(self):
         namestr = u"Name: %s, " % com.pprint_thing(
             self.name) if self.name is not None else ""
-        return u'%sLength: %d, Dtype: %s' % (namestr, len(self),
-                                             com.pprint_thing(self.dtype.name))
+        return u'%sLength: %d, dtype: %s' % (namestr, len(self),
+                                             str(self.dtype.name))
 
     def to_string(self, buf=None, na_rep='NaN', float_format=None,
                   nanRep=None, length=False, dtype=False, name=False):
diff --git a/pandas/tests/test_format.py b/pandas/tests/test_format.py
index 739bea412..f110bbbc9 100644
--- a/pandas/tests/test_format.py
+++ b/pandas/tests/test_format.py
@@ -591,7 +591,7 @@ class TestDataFrameFormatting(unittest.TestCase):
 
         import re
         str_rep = str(s)
-        nmatches = len(re.findall('Dtype',str_rep))
+        nmatches = len(re.findall('dtype',str_rep))
         self.assert_(nmatches == 1)
 
     def test_to_string(self):
