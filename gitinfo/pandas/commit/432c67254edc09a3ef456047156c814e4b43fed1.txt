commit 432c67254edc09a3ef456047156c814e4b43fed1
Author: jreback <jeff@reback.net>
Date:   Mon Apr 29 12:04:14 2013 -0400

    BUG: GH3468 Fix assigning a new index to a duplicate index in a DataFrame would fail

diff --git a/RELEASE.rst b/RELEASE.rst
index f3fb98535..e368b70b7 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -61,6 +61,7 @@ pandas 0.11.1
   - Fix regression in a DataFrame apply with axis=1, objects were not being converted back
     to base dtypes correctly (GH3480_)
   - Fix issue when storing uint dtypes in an HDFStore. (GH3493_)
+  - Fix assigning a new index to a duplicate index in a DataFrame would fail (GH3468_)
 
 .. _GH3164: https://github.com/pydata/pandas/issues/3164
 .. _GH3251: https://github.com/pydata/pandas/issues/3251
@@ -75,6 +76,7 @@ pandas 0.11.1
 .. _GH3455: https://github.com/pydata/pandas/issues/3455
 .. _GH3457: https://github.com/pydata/pandas/issues/3457
 .. _GH3461: https://github.com/pydata/pandas/issues/3461
+.. _GH3468: https://github.com/pydata/pandas/issues/3468
 .. _GH3448: https://github.com/pydata/pandas/issues/3448
 .. _GH3449: https://github.com/pydata/pandas/issues/3449
 .. _GH3493: https://github.com/pydata/pandas/issues/3493
diff --git a/pandas/core/internals.py b/pandas/core/internals.py
index 03cfd18f5..2052b269a 100644
--- a/pandas/core/internals.py
+++ b/pandas/core/internals.py
@@ -56,11 +56,16 @@ class Block(object):
     @property
     def ref_locs(self):
         if self._ref_locs is None:
-            indexer = self.ref_items.get_indexer(self.items)
-            indexer = com._ensure_platform_int(indexer)
-            if (indexer == -1).any():
-                raise AssertionError('Some block items were not in block '
-                                     'ref_items')
+            ri = self.ref_items
+            if ri.is_unique:
+                indexer = ri.get_indexer(self.items)
+                indexer = com._ensure_platform_int(indexer)
+                if (indexer == -1).any():
+                    raise AssertionError('Some block items were not in block '
+                                         'ref_items')
+            else:
+                indexer = np.arange(len(ri))
+
             self._ref_locs = indexer
         return self._ref_locs
 
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index 7bafed216..6b69de604 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -9201,6 +9201,21 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
         assert_series_equal(self.frame['C'], frame['baz'])
         assert_series_equal(self.frame['hi'], frame['foo2'])
 
+    def test_assign_columns_with_dups(self):
+
+        # GH 3468 related
+        df = DataFrame([[1,2]], columns=['a','a'])
+        df.columns = ['a','a.1']
+
+        expected = DataFrame([[1,2]], columns=['a','a.1'])
+        assert_frame_equal(df, expected)
+
+        df = DataFrame([[1,2]], columns=['a','a'])
+        df.columns = ['b','b']
+
+        expected = DataFrame([[1,2]], columns=['b','b'])
+        assert_frame_equal(df, expected)
+
     def test_cast_internals(self):
         casted = DataFrame(self.frame._data, dtype=int)
         expected = DataFrame(self.frame._series, dtype=int)
