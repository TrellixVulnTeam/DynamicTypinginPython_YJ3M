commit 3b0f6985cf32147aefa93369c953a5d943d4735c
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Wed Jul 11 17:12:28 2012 -0400

    BUG: Fix resampling of tz-aware time series with anchored freq close #1591

diff --git a/RELEASE.rst b/RELEASE.rst
index 649a92eba..c85c6a9be 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -53,6 +53,7 @@ pandas 0.8.1
   - Fix MultiIndex console formatting issue (#1606)
   - Unordered index with duplicates doesn't yield scalar location for single
     entry (#1586)
+  - Fix resampling of tz-aware time series with "anchored" freq (#1591)
 
 pandas 0.8.0
 ============
diff --git a/pandas/tseries/resample.py b/pandas/tseries/resample.py
index 762c19d23..20700ac89 100644
--- a/pandas/tseries/resample.py
+++ b/pandas/tseries/resample.py
@@ -90,8 +90,7 @@ class TimeGrouper(CustomGrouper):
             binner = labels = DatetimeIndex(data=[], freq=self.freq)
             return binner, [], labels
 
-        first, last = _get_range_edges(axis, self.freq, closed=self.closed,
-                                       base=self.base)
+        first, last = _get_range_edges(axis, self.freq, closed=self.closed, base=self.base)
         binner = labels = DatetimeIndex(freq=self.freq, start=first, end=last)
 
         # a little hack
@@ -304,7 +303,8 @@ def _adjust_dates_anchored(first, last, offset, closed='right', base=0):
         else:
             lresult = last.value + offset.nanos
 
-    return Timestamp(fresult), Timestamp(lresult)
+    return (Timestamp(fresult, tz=first.tz),
+            Timestamp(lresult, tz=last.tz))
 
 
 def asfreq(obj, freq, method=None, how=None):
diff --git a/pandas/tseries/tests/test_resample.py b/pandas/tseries/tests/test_resample.py
index 57e875f63..ddf101072 100644
--- a/pandas/tseries/tests/test_resample.py
+++ b/pandas/tseries/tests/test_resample.py
@@ -731,6 +731,9 @@ class TestResamplePeriodIndex(unittest.TestCase):
 
         assert_series_equal(result, exp)
 
+        # it works
+        result = ts_local.resample('D')
+
     def test_closed_left_corner(self):
         # #1465
         s = Series(np.random.randn(21),
