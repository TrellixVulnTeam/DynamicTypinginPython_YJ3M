commit d5d31f19fa3831cce263ad804c4718f0052900d2
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Fri Nov 9 12:00:25 2012 -0500

    BUG: don't coerce False/True to 0/1 in engines. close #2199

diff --git a/RELEASE.rst b/RELEASE.rst
index 2bc47c5d0..28f8e7ea0 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -92,7 +92,8 @@ pandas 0.9.1
   - Fix Series and DataFrame.diff for integer dtypes (#2087, #2174)
   - Fix bug when taking intersection of DatetimeIndex with empty index (#2129)
   - Pass through timezone information when calling DataFrame.align (#2127)
-
+  - Properly sort when joining on datetime64 values (#2196)
+  - Fix indexing bug in which False/True were being coerced to 0/1 (#2199)
 
 pandas 0.9.0
 ============
diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 5a000485d..7ca84e3ba 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -2099,12 +2099,10 @@ class DataFrame(NDFrame):
             new_values = self._data.fast_2d_xs(loc, copy=copy)
             return Series(new_values, index=self.columns,
                           name=self.index[loc])
-        else:  # isinstance(loc, slice) or loc.dtype == np.bool_:
+        else:
             result = self[loc]
             result.index = new_index
             return result
-        # else:
-        #     return self.take(loc)
 
     def lookup(self, row_labels, col_labels):
         """
diff --git a/pandas/src/engines.pyx b/pandas/src/engines.pyx
index a564cbafa..9f2ec4edb 100644
--- a/pandas/src/engines.pyx
+++ b/pandas/src/engines.pyx
@@ -127,10 +127,11 @@ cdef class IndexEngine:
         if not self.unique:
             return self._get_loc_duplicates(val)
 
+        self._check_type(val)
+
         try:
             return self.mapping.get_item(val)
         except TypeError:
-            self._check_type(val)
             raise KeyError(val)
 
     cdef inline _get_loc_duplicates(self, object val):
@@ -222,7 +223,7 @@ cdef class IndexEngine:
     cdef _make_hash_table(self, n):
         raise NotImplementedError
 
-    cdef inline _check_type(self, object val):
+    cdef _check_type(self, object val):
         hash(val)
 
     cdef inline _ensure_mapping_populated(self):
@@ -280,6 +281,11 @@ cdef class Int64Engine(IndexEngine):
         return _algos.backfill_int64(self._get_index_values(), other,
                                        limit=limit)
 
+    cdef _check_type(self, object val):
+        hash(val)
+        if util.is_bool_object(val):
+            raise KeyError(val)
+
     cdef _maybe_get_bool_indexer(self, object val):
         cdef:
             ndarray[uint8_t, cast=True] indexer
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index 5c5fd1902..43bd71c9c 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -1108,6 +1108,16 @@ class CheckIndexing(object):
         exp = df[df[0] > 0]
         assert_frame_equal(result, exp)
 
+    def test_getitem_setitem_ix_bool_keyerror(self):
+        # #2199
+        df = DataFrame({'a': [1, 2, 3]})
+
+        self.assertRaises(KeyError, df.ix.__getitem__, False)
+        self.assertRaises(KeyError, df.ix.__getitem__, True)
+
+        self.assertRaises(KeyError, df.ix.__setitem__, False, 0)
+        self.assertRaises(KeyError, df.ix.__setitem__, True, 0)
+
     def test_getitem_list_duplicates(self):
         # #1943
         df = DataFrame(np.random.randn(4,4), columns=list('AABC'))
