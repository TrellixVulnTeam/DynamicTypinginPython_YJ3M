commit 002b2c37f37479532e5186fdb9c97f31630ba5d7
Author: Tom Augspurger <TomAugspurger@users.noreply.github.com>
Date:   Wed Jul 3 08:16:47 2019 -0500

    REGR: Group empty Series (#27194)

diff --git a/pandas/core/groupby/grouper.py b/pandas/core/groupby/grouper.py
index d0f28bed4..9e1033be2 100644
--- a/pandas/core/groupby/grouper.py
+++ b/pandas/core/groupby/grouper.py
@@ -606,8 +606,11 @@ def _get_grouper(obj, key=None, axis=0, level=None, sort=True,
 
         groupings.append(ping)
 
-    if len(groupings) == 0:
+    if len(groupings) == 0 and len(obj):
         raise ValueError('No group keys passed!')
+    elif len(groupings) == 0:
+        groupings.append(Grouping(Index([], dtype='int'),
+                                  np.array([], dtype=np.intp)))
 
     # create the internals grouper
     grouper = BaseGrouper(group_axis, groupings, sort=sort, mutated=mutated)
diff --git a/pandas/tests/groupby/test_grouping.py b/pandas/tests/groupby/test_grouping.py
index 4c84c29ff..5508c290b 100644
--- a/pandas/tests/groupby/test_grouping.py
+++ b/pandas/tests/groupby/test_grouping.py
@@ -569,6 +569,27 @@ class TestGrouping:
         result = getattr(g[2], func)(lambda x: x)
         assert_series_equal(result, expected)
 
+    def test_groupby_empty(self):
+        # https://github.com/pandas-dev/pandas/issues/27190
+        s = pd.Series([], name='name')
+        gr = s.groupby([])
+
+        result = gr.mean()
+        tm.assert_series_equal(result, s)
+
+        # check group properties
+        assert len(gr.grouper.groupings) == 1
+        tm.assert_numpy_array_equal(gr.grouper.group_info[0],
+                                    np.array([], dtype=np.dtype("intp")))
+
+        tm.assert_numpy_array_equal(gr.grouper.group_info[1],
+                                    np.array([], dtype=np.dtype('int')))
+
+        assert gr.grouper.group_info[2] == 0
+
+        # check name
+        assert s.groupby(s).grouper.names == ['name']
+
 
 # get_group
 # --------------------------------
