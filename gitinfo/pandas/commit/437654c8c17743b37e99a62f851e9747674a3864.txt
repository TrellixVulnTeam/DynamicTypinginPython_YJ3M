commit 437654c8c17743b37e99a62f851e9747674a3864
Author: sinhrks <sinhrks@gmail.com>
Date:   Fri May 6 07:41:50 2016 -0400

    TST: Fix assertNotIsInstance msg
    
    Author: sinhrks <sinhrks@gmail.com>
    
    Closes #13091 from sinhrks/test_notisinstance and squashes the following commits:
    
    51044b5 [sinhrks] TST: Fix assertNotIsInstance msg

diff --git a/pandas/tests/test_testing.py b/pandas/tests/test_testing.py
index 19598a54c..caacfc411 100644
--- a/pandas/tests/test_testing.py
+++ b/pandas/tests/test_testing.py
@@ -627,6 +627,21 @@ DataFrame\\.iloc\\[:, 1\\] values are different \\(33\\.33333 %\\)
                                by_blocks=True)
 
 
+class TestIsInstance(tm.TestCase):
+
+    def test_isinstance(self):
+
+        expected = "Expected type "
+        with assertRaisesRegexp(AssertionError, expected):
+            tm.assertIsInstance(1, pd.Series)
+
+    def test_notisinstance(self):
+
+        expected = "Input must not be type "
+        with assertRaisesRegexp(AssertionError, expected):
+            tm.assertNotIsInstance(pd.Series([1]), pd.Series)
+
+
 class TestRNGContext(unittest.TestCase):
 
     def test_RNGContext(self):
diff --git a/pandas/util/testing.py b/pandas/util/testing.py
index f0406690a..eb1d5c6c2 100644
--- a/pandas/util/testing.py
+++ b/pandas/util/testing.py
@@ -868,9 +868,9 @@ def assertIsInstance(obj, cls, msg=''):
     """Test that obj is an instance of cls
     (which can be a class or a tuple of classes,
     as supported by isinstance())."""
-    assert isinstance(obj, cls), (
-        "%sExpected object to be of type %r, found %r instead" % (
-            msg, cls, type(obj)))
+    if not isinstance(obj, cls):
+        err_msg = "{0}Expected type {1}, found {2} instead"
+        raise AssertionError(err_msg.format(msg, cls, type(obj)))
 
 
 def assert_isinstance(obj, class_type_or_tuple, msg=''):
@@ -882,9 +882,9 @@ def assertNotIsInstance(obj, cls, msg=''):
     """Test that obj is not an instance of cls
     (which can be a class or a tuple of classes,
     as supported by isinstance())."""
-    assert not isinstance(obj, cls), (
-        "%sExpected object to be of type %r, found %r instead" % (
-            msg, cls, type(obj)))
+    if isinstance(obj, cls):
+        err_msg = "{0}Input must not be type {1}"
+        raise AssertionError(err_msg.format(msg, cls))
 
 
 def assert_categorical_equal(res, exp):
