commit 4074957c0933893afcb2ec785fcba6520789c1df
Author: RenzoBertocchi <RenzoBertocchi@users.noreply.github.com>
Date:   Mon Sep 22 17:17:50 2014 +0200

    BUG: Bug on pivot_table with margins and dict aggfunc (GH8349)

diff --git a/doc/source/v0.15.0.txt b/doc/source/v0.15.0.txt
index 3969a0b95..225c77907 100644
--- a/doc/source/v0.15.0.txt
+++ b/doc/source/v0.15.0.txt
@@ -856,7 +856,7 @@ Performance
 
 Bug Fixes
 ~~~~~~~~~
-
+- Bug in pivot_table, when using margins and a dict aggfunc (:issue:`8349`)
 - Bug in ``read_csv`` where ``squeeze=True`` would return a view (:issue:`8217`)
 - Bug in checking of table name in ``read_sql`` in certain cases (:issue:`7826`).
 - Bug in ``DataFrame.groupby`` where ``Grouper`` does not recognize level when frequency is specified (:issue:`7885`)
diff --git a/pandas/tools/pivot.py b/pandas/tools/pivot.py
index 61150f0ae..ef477582b 100644
--- a/pandas/tools/pivot.py
+++ b/pandas/tools/pivot.py
@@ -207,6 +207,11 @@ def _compute_grand_margin(data, values, aggfunc):
             try:
                 if isinstance(aggfunc, compat.string_types):
                     grand_margin[k] = getattr(v, aggfunc)()
+                elif isinstance(aggfunc, dict):
+                    if isinstance(aggfunc[k], compat.string_types):
+                        grand_margin[k] = getattr(v, aggfunc[k])()
+                    else:
+                        grand_margin[k] = aggfunc[k](v)
                 else:
                     grand_margin[k] = aggfunc(v)
             except TypeError:
diff --git a/pandas/tools/tests/test_pivot.py b/pandas/tools/tests/test_pivot.py
index cf28c2400..23350b203 100644
--- a/pandas/tools/tests/test_pivot.py
+++ b/pandas/tools/tests/test_pivot.py
@@ -266,6 +266,34 @@ class TestPivotTable(tm.TestCase):
             gmarg = table[item]['All', '']
             self.assertEqual(gmarg, self.data[item].mean())
 
+        # issue number #8349: pivot_table with margins and dictionary aggfunc
+
+        df=DataFrame([  {'JOB':'Worker','NAME':'Bob' ,'YEAR':2013,'MONTH':12,'DAYS': 3,'SALARY': 17}, 
+                        {'JOB':'Employ','NAME':'Mary','YEAR':2013,'MONTH':12,'DAYS': 5,'SALARY': 23}, 
+                        {'JOB':'Worker','NAME':'Bob' ,'YEAR':2014,'MONTH': 1,'DAYS':10,'SALARY':100}, 
+                        {'JOB':'Worker','NAME':'Bob' ,'YEAR':2014,'MONTH': 1,'DAYS':11,'SALARY':110}, 
+                        {'JOB':'Employ','NAME':'Mary','YEAR':2014,'MONTH': 1,'DAYS':15,'SALARY':200}, 
+                        {'JOB':'Worker','NAME':'Bob' ,'YEAR':2014,'MONTH': 2,'DAYS': 8,'SALARY': 80}, 
+                        {'JOB':'Employ','NAME':'Mary','YEAR':2014,'MONTH': 2,'DAYS': 5,'SALARY':190} ])
+
+        df=df.set_index(['JOB','NAME','YEAR','MONTH'],drop=False,append=False)
+
+        rs=df.pivot_table(  index=['JOB','NAME'],
+                            columns=['YEAR','MONTH'],
+                            values=['DAYS','SALARY'],
+                            aggfunc={'DAYS':'mean','SALARY':'sum'},
+                            margins=True)
+
+        ex=df.pivot_table(index=['JOB','NAME'],columns=['YEAR','MONTH'],values=['DAYS'],aggfunc='mean',margins=True)
+
+        tm.assert_frame_equal(rs['DAYS'], ex['DAYS'])
+
+        ex=df.pivot_table(index=['JOB','NAME'],columns=['YEAR','MONTH'],values=['SALARY'],aggfunc='sum',margins=True)
+
+        tm.assert_frame_equal(rs['SALARY'], ex['SALARY'])
+
+
+
     def test_pivot_integer_columns(self):
         # caused by upstream bug in unstack
 
