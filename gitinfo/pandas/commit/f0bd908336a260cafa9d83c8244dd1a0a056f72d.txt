commit f0bd908336a260cafa9d83c8244dd1a0a056f72d
Author: Jeff Reback <jeff@reback.net>
Date:   Fri Apr 21 21:28:27 2017 -0400

    BUG: groupby-rolling with a timedelta (#16091)
    
    closes #13966
    xref to #15130, closed by #15175

diff --git a/doc/source/whatsnew/v0.20.0.txt b/doc/source/whatsnew/v0.20.0.txt
index 99df7426a..781e90a39 100644
--- a/doc/source/whatsnew/v0.20.0.txt
+++ b/doc/source/whatsnew/v0.20.0.txt
@@ -1677,7 +1677,7 @@ Groupby/Resample/Rolling
 - Bug in ``.groupby(..).resample()`` when passed the ``on=`` kwarg. (:issue:`15021`)
 - Properly set ``__name__`` and ``__qualname__`` for ``Groupby.*`` functions (:issue:`14620`)
 - Bug in ``GroupBy.get_group()`` failing with a categorical grouper (:issue:`15155`)
-- Bug in ``.groupby(...).rolling(...)`` when ``on`` is specified and using a ``DatetimeIndex`` (:issue:`15130`)
+- Bug in ``.groupby(...).rolling(...)`` when ``on`` is specified and using a ``DatetimeIndex`` (:issue:`15130`, :issue:`13966`)
 - Bug in groupby operations with ``timedelta64`` when passing ``numeric_only=False`` (:issue:`5724`)
 - Bug in ``groupby.apply()`` coercing ``object`` dtypes to numeric types, when not all values were numeric (:issue:`14423`, :issue:`15421`, :issue:`15670`)
 - Bug in ``resample``, where a non-string ``loffset`` argument would not be applied when resampling a timeseries (:issue:`13218`)
diff --git a/pandas/tests/test_window.py b/pandas/tests/test_window.py
index 101ecec78..aea2525a3 100644
--- a/pandas/tests/test_window.py
+++ b/pandas/tests/test_window.py
@@ -3782,3 +3782,21 @@ class TestRollingTS(tm.TestCase):
             lambda x: x.rolling('180D')['amount'].sum())
         result = df.groupby('name').rolling('180D', on='date')['amount'].sum()
         tm.assert_series_equal(result, expected)
+
+    def test_non_monotonic(self):
+        # GH 13966 (similar to #15130, closed by #15175)
+
+        dates = pd.date_range(start='2016-01-01 09:30:00',
+                              periods=20, freq='s')
+        df = pd.DataFrame({'A': [1] * 20 + [2] * 12 + [3] * 8,
+                           'B': np.concatenate((dates, dates)),
+                           'C': np.arange(40)})
+
+        result = df.groupby('A').rolling('4s', on='B').C.mean()
+        expected = df.set_index('B').groupby('A').apply(
+            lambda x: x.rolling('4s')['C'].mean())
+        tm.assert_series_equal(result, expected)
+
+        df2 = df.sort_values('B')
+        result = df2.groupby('A').rolling('4s', on='B').C.mean()
+        tm.assert_series_equal(result, expected)
