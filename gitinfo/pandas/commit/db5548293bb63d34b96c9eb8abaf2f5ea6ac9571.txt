commit db5548293bb63d34b96c9eb8abaf2f5ea6ac9571
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Mon Apr 9 09:45:07 2012 -0400

    BUG: fix broken SparsePanel-Panel arithmetic interactions, SparsePanel pickling bug, close #1015

diff --git a/pandas/sparse/panel.py b/pandas/sparse/panel.py
index 701c3d904..3a267ca24 100644
--- a/pandas/sparse/panel.py
+++ b/pandas/sparse/panel.py
@@ -218,9 +218,9 @@ class SparsePanel(Panel):
 
         self.default_fill_value = fv
         self.default_kind = kind
-        self._items = _unpickle_array(items)
-        self._major_axis = _unpickle_array(major)
-        self._minor_axis = _unpickle_array(minor)
+        self._items = _ensure_index(_unpickle_array(items))
+        self._major_axis = _ensure_index(_unpickle_array(major))
+        self._minor_axis = _ensure_index(_unpickle_array(minor))
         self._frames = frames
 
     def copy(self):
@@ -395,9 +395,12 @@ class SparsePanel(Panel):
         for item in items:
             new_frames[item] = func(this[item], other[item])
 
-        # maybe unnecessary
-        new_default_fill = func(self.default_fill_value,
-                                other.default_fill_value)
+        if not isinstance(other, SparsePanel):
+            new_default_fill = self.default_fill_value
+        else:
+            # maybe unnecessary
+            new_default_fill = func(self.default_fill_value,
+                                    other.default_fill_value)
 
         return SparsePanel(new_frames, items, major, minor,
                            default_fill_value=new_default_fill,
diff --git a/pandas/sparse/tests/test_sparse.py b/pandas/sparse/tests/test_sparse.py
index 32c6ec4ef..8b911a78b 100644
--- a/pandas/sparse/tests/test_sparse.py
+++ b/pandas/sparse/tests/test_sparse.py
@@ -14,7 +14,7 @@ from pandas.util.testing import (assert_almost_equal, assert_series_equal,
                                  assert_frame_equal, assert_panel_equal)
 from numpy.testing import assert_equal
 
-from pandas import Series, DataFrame, DateRange, Panel
+from pandas import Series, DataFrame, DateRange, Panel, Index
 from pandas.core.datetools import BDay
 import pandas.core.datetools as datetools
 import pandas.util.testing as tm
@@ -1340,6 +1340,9 @@ class TestSparsePanel(TestCase,
         def _test_roundtrip(panel):
             pickled = pickle.dumps(panel, protocol=pickle.HIGHEST_PROTOCOL)
             unpickled = pickle.loads(pickled)
+            self.assert_(isinstance(unpickled.items, Index))
+            self.assert_(isinstance(unpickled.major_axis, Index))
+            self.assert_(isinstance(unpickled.minor_axis, Index))
             assert_sp_panel_equal(panel, unpickled)
 
         _test_roundtrip(self.panel)
@@ -1447,6 +1450,11 @@ class TestSparsePanel(TestCase,
                 dense_result = op(dense)
                 assert_panel_equal(sparse_result.to_dense(), dense_result)
 
+            def _mixed_comp(op):
+                result = op(panel, panel.to_dense())
+                expected = op(panel.to_dense(), panel.to_dense())
+                assert_panel_equal(result, expected)
+
             op1 = lambda x: x + 2
 
             _dense_comp(op1)
@@ -1459,6 +1467,9 @@ class TestSparsePanel(TestCase,
             op5 = lambda x: x.subtract(x.mean(2), axis=2)
             _dense_comp(op5)
 
+            _mixed_comp(Panel.multiply)
+            _mixed_comp(Panel.subtract)
+
             # TODO: this case not yet supported!
             # op6 = lambda x: x.add(x.to_frame())
             # _dense_comp(op6)
