commit b261dfe38f114b57e358ad09051501684d88587f
Author: Jeff Reback <jeff@reback.net>
Date:   Wed Feb 15 10:23:36 2017 -0500

    TST: print skipped tests files
    
    xref #15341
    
    Author: Jeff Reback <jeff@reback.net>
    
    Closes #15408 from jreback/skip and squashes the following commits:
    
    547bee6 [Jeff Reback] TST: print skipped tests files

diff --git a/.travis.yml b/.travis.yml
index 6b90e49b3..6245213ce 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -332,5 +332,6 @@ after_script:
   - echo "after_script start"
   - ci/install_test.sh
   - source activate pandas && python -c "import pandas; pandas.show_versions();"
-  - ci/print_skipped.py /tmp/pytest.xml
+  - ci/print_skipped.py /tmp/single.xml
+  - ci/print_skipped.py /tmp/multiple.xml
   - echo "after_script done"
diff --git a/ci/install_travis.sh b/ci/install_travis.sh
index ad804b96a..802d8c9f6 100755
--- a/ci/install_travis.sh
+++ b/ci/install_travis.sh
@@ -112,6 +112,7 @@ fi
 source activate pandas
 
 pip install pytest-xdist
+
 if [ "$LINT" ]; then
    conda install flake8
    pip install cpplint
diff --git a/ci/print_skipped.py b/ci/print_skipped.py
index 9fb05df64..dd2180f6e 100755
--- a/ci/print_skipped.py
+++ b/ci/print_skipped.py
@@ -30,20 +30,21 @@ def parse_results(filename):
             i += 1
             assert i - 1 == len(skipped)
     assert i - 1 == len(skipped)
-    assert len(skipped) == int(root.attrib['skip'])
+    # assert len(skipped) == int(root.attrib['skip'])
     return '\n'.join(skipped)
 
 
 def main(args):
     print('SKIPPED TESTS:')
-    print(parse_results(args.filename))
+    for fn in args.filename:
+        print(parse_results(fn))
     return 0
 
 
 def parse_args():
     import argparse
     parser = argparse.ArgumentParser()
-    parser.add_argument('filename', help='XUnit file to parse')
+    parser.add_argument('filename', nargs='+', help='XUnit file to parse')
     return parser.parse_args()
 
 
diff --git a/ci/script_multi.sh b/ci/script_multi.sh
index 83f8427cc..f5fbcbbc1 100755
--- a/ci/script_multi.sh
+++ b/ci/script_multi.sh
@@ -20,11 +20,11 @@ fi
 if [ "$BUILD_TEST" ]; then
     echo "We are not running pytest as this is simply a build test."
 elif [ "$COVERAGE" ]; then
-    echo pytest -s -n 2 -m "not single" --cov=pandas --cov-append --cov-report xml:/tmp/pytest.xml $TEST_ARGS pandas
-    pytest -s -n 2 -m "not single" --cov=pandas --cov-append --cov-report xml:/tmp/pytest.xml $TEST_ARGS pandas
+    echo pytest -s -n 2 -m "not single" --cov=pandas --cov-append --cov-report xml:/tmp/cov.xml --junitxml=/tmp/multiple.xml $TEST_ARGS pandas
+    pytest -s -n 2 -m "not single" --cov=pandas --cov-append --cov-report xml:/tmp/cov.xml --junitxml=/tmp/multiple.xml $TEST_ARGS pandas
 else
-    echo pytest -n 2 -m "not single" $TEST_ARGS pandas
-    pytest -n 2 -m "not single" $TEST_ARGS pandas # TODO: doctest
+    echo pytest -n 2 -m "not single" --junitxml=/tmp/multiple.xml $TEST_ARGS pandas
+    pytest -n 2 -m "not single" --junitxml=/tmp/multiple.xml $TEST_ARGS pandas # TODO: doctest
 fi
 
 RET="$?"
diff --git a/ci/script_single.sh b/ci/script_single.sh
index 38021fcac..2d7962352 100755
--- a/ci/script_single.sh
+++ b/ci/script_single.sh
@@ -20,11 +20,11 @@ fi
 if [ "$BUILD_TEST" ]; then
     echo "We are not running pytest as this is simply a build test."
 elif [ "$COVERAGE" ]; then
-    echo pytest -s -m "single" --cov=pandas --cov-report xml:/tmp/pytest.xml $TEST_ARGS pandas
-    pytest -s -m "single" --cov=pandas --cov-report xml:/tmp/pytest.xml $TEST_ARGS pandas
+    echo pytest -s -m "single" --cov=pandas --cov-report xml:/tmp/cov.xml --junitxml=/tmp/single.xml $TEST_ARGS pandas
+    pytest -s -m "single" --cov=pandas --cov-report xml:/tmp/cov.xml --junitxml=/tmp/single.xml $TEST_ARGS pandas
 else
-    echo pytest -m "single" $TEST_ARGS pandas
-    pytest -m "single" $TEST_ARGS pandas # TODO: doctest
+    echo pytest -m "single" --junitxml=/tmp/single.xml $TEST_ARGS pandas
+    pytest -m "single" --junitxml=/tmp/single.xml $TEST_ARGS pandas # TODO: doctest
 fi
 
 RET="$?"
