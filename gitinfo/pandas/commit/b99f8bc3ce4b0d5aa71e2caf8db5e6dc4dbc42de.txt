commit b99f8bc3ce4b0d5aa71e2caf8db5e6dc4dbc42de
Author: Rajib Mitra <rajib.jolite@gmail.com>
Date:   Wed Jan 16 20:48:54 2019 +0530

    TST: Updated with match  (#24707)

diff --git a/pandas/tests/io/test_excel.py b/pandas/tests/io/test_excel.py
index 84383afed..717e9bc23 100644
--- a/pandas/tests/io/test_excel.py
+++ b/pandas/tests/io/test_excel.py
@@ -698,7 +698,7 @@ class ReadingTestsBase(SharedItems):
 
     def test_bad_engine_raises(self, ext):
         bad_engine = 'foo'
-        with pytest.raises(ValueError, message="Unknown engine: foo"):
+        with pytest.raises(ValueError, match="Unknown engine: foo"):
             read_excel('', engine=bad_engine)
 
     @tm.network
diff --git a/pandas/tests/io/test_pytables.py b/pandas/tests/io/test_pytables.py
index 55b738a56..517a3e059 100644
--- a/pandas/tests/io/test_pytables.py
+++ b/pandas/tests/io/test_pytables.py
@@ -3923,7 +3923,7 @@ class TestHDFStore(Base):
             # HDFStore.select_column should raise a KeyError
             # exception if the key is not a valid store
             with pytest.raises(KeyError,
-                               message='No object named index in the file'):
+                               match='No object named df in the file'):
                 store.select_column('df', 'index')
 
             store.append('df', df)
diff --git a/pandas/tests/scalar/timestamp/test_unary_ops.py b/pandas/tests/scalar/timestamp/test_unary_ops.py
index 6fc6aa98f..3f9a30d25 100644
--- a/pandas/tests/scalar/timestamp/test_unary_ops.py
+++ b/pandas/tests/scalar/timestamp/test_unary_ops.py
@@ -171,7 +171,7 @@ class TestTimestampUnaryOps(object):
         assert result is NaT
 
         with pytest.raises(pytz.NonExistentTimeError,
-                           message='2018-03-11 02:00:00'):
+                           match='2018-03-11 02:00:00'):
             getattr(ts, method)(freq, nonexistent='raise')
 
     @pytest.mark.parametrize('timestamp', [
diff --git a/pandas/tests/series/test_datetime_values.py b/pandas/tests/series/test_datetime_values.py
index 52b72bcaf..a916cf300 100644
--- a/pandas/tests/series/test_datetime_values.py
+++ b/pandas/tests/series/test_datetime_values.py
@@ -300,7 +300,7 @@ class TestSeriesDatetimeValues():
         tm.assert_series_equal(result, expected)
 
         with pytest.raises(pytz.NonExistentTimeError,
-                           message='2018-03-11 02:00:00'):
+                           match='2018-03-11 02:00:00'):
             getattr(s.dt, method)(freq, nonexistent='raise')
 
     def test_dt_namespace_accessor_categorical(self):
diff --git a/pandas/tests/sparse/frame/test_frame.py b/pandas/tests/sparse/frame/test_frame.py
index f908c7b26..bfb5103c9 100644
--- a/pandas/tests/sparse/frame/test_frame.py
+++ b/pandas/tests/sparse/frame/test_frame.py
@@ -216,8 +216,8 @@ class TestSparseDataFrame(SharedWithSparse):
         class Unknown(object):
             pass
         with pytest.raises(TypeError,
-                           message='SparseDataFrame called with unknown type '
-                                   '"Unknown" for data argument'):
+                           match=('SparseDataFrame called with unknown type '
+                                  '"Unknown" for data argument')):
             SparseDataFrame(Unknown())
 
     def test_constructor_preserve_attr(self):
diff --git a/pandas/tests/test_config.py b/pandas/tests/test_config.py
index 6e47f5543..54db38878 100644
--- a/pandas/tests/test_config.py
+++ b/pandas/tests/test_config.py
@@ -249,7 +249,7 @@ class TestConfig(object):
             warnings.simplefilter('always')
             with pytest.raises(
                     KeyError,
-                    message="Nonexistent option didn't raise KeyError"):
+                    match="No such keys.s.: 'foo'"):
                 self.cf.get_option('foo')
             assert len(w) == 1  # should have raised one warning
             assert 'deprecated' in str(w[-1])  # we get the default message
