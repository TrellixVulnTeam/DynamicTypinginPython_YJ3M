commit 96fc51341ea4cdb14c777c5f9fc739e9c934c3a4
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Sat Feb 19 18:13:05 2011 -0500

    fixed NumPy 1.4.0 NaN-handling issue in DataFrame.combine

diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 30dff695b..3b31d933d 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -1632,10 +1632,14 @@ class DataFrame(Picklable, Groupable):
                     series[this_mask] = fill_value
                     otherSeries[other_mask] = fill_value
 
-                result[col] = func(series, otherSeries)
+                arr = func(series, otherSeries)
 
                 if do_fill:
-                    result[col][this_mask & other_mask] = np.NaN
+                    if issubclass(arr.dtype.type, np.integer):
+                        arr = arr.astype(float)
+                    arr[this_mask & other_mask] = np.NaN
+
+                result[col] = arr
 
             elif col in this:
                 result[col] = this[col]
diff --git a/pandas/core/tests/test_frame.py b/pandas/core/tests/test_frame.py
index 8763e5bff..d96a7f9c7 100644
--- a/pandas/core/tests/test_frame.py
+++ b/pandas/core/tests/test_frame.py
@@ -1359,6 +1359,13 @@ class TestDataFrame(unittest.TestCase):
         comb = self.empty.combineAdd(self.frame)
         assert_frame_equal(comb, self.frame)
 
+        # integer corner case
+        df1 = DataFrame({'x':[5]})
+        df2 = DataFrame({'x':[1]})
+        df3 = DataFrame({'x':[6.]})
+        comb = df1.combineAdd(df2)
+        assert_frame_equal(comb, df3)
+
     def test_combineMult(self):
         # trivial
         comb = self.frame.combineMult(self.frame)
