commit 8091deded02e0ca72211b0928a8c944b46f3a79d
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Sun Jul 3 16:48:33 2011 -0400

    generic slice with BlockManager for panel

diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 77e280bef..c2633e2f3 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -872,8 +872,7 @@ class DataFrame(PandasGeneric):
             raise Exception('No cross-section for %s' % key)
 
         self._consolidate_inplace()
-        loc = self.index.get_loc(key)
-        values = self._data.xs(loc, axis=1, copy=copy)
+        values = self._data.xs(key, axis=1, copy=copy)
         return Series(values, index=self.columns)
 
     #----------------------------------------------------------------------
diff --git a/pandas/core/internals.py b/pandas/core/internals.py
index d51929102..46ec9224a 100644
--- a/pandas/core/internals.py
+++ b/pandas/core/internals.py
@@ -414,9 +414,10 @@ class BlockManager(object):
         assert(itemmask.all())
         return result
 
-    def xs(self, i, axis=1, copy=True):
+    def xs(self, key, axis=1, copy=True):
         from pandas.core.series import Series
 
+        i = self.axes[axis].get_loc(key)
         slicer = [slice(None, None) for _ in range(self.ndim)]
         slicer[axis] = i
         slicer = tuple(slicer)
diff --git a/pandas/core/panel.py b/pandas/core/panel.py
index 75dbcad0a..49b8d313d 100644
--- a/pandas/core/panel.py
+++ b/pandas/core/panel.py
@@ -588,7 +588,7 @@ class WidePanel(Panel, PandasGeneric):
     divide = _wide_arith_method(operator.div, 'divide')
     multiply = _wide_arith_method(operator.mul, 'multiply')
 
-    def major_xs(self, key):
+    def major_xs(self, key, copy=True):
         """
         Return slice of panel along major axis
 
@@ -602,11 +602,10 @@ class WidePanel(Panel, PandasGeneric):
         y : DataFrame
             index -> minor axis, columns -> items
         """
-        loc = self.major_axis.get_loc(key)
-        mat = np.array(self.values[:, loc, :].T)
-        return DataFrame(mat, index=self.minor_axis, columns=self.items)
+        values = self._data.xs(key, axis=1, copy=copy).T
+        return DataFrame(values, index=self.minor_axis, columns=self.items)
 
-    def minor_xs(self, key):
+    def minor_xs(self, key, copy=False):
         """
         Return slice of panel along minor axis
 
@@ -620,9 +619,8 @@ class WidePanel(Panel, PandasGeneric):
         y : DataFrame
             index -> major axis, columns -> items
         """
-        loc = self.minor_axis.get_loc(key)
-        mat = np.array(self.values[:, :, loc].T)
-        return DataFrame(mat, index=self.major_axis, columns=self.items)
+        values = self._data.xs(key, axis=2, copy=copy).T
+        return DataFrame(values, index=self.major_axis, columns=self.items)
 
     def getMinorXS(self, key): # pragma: no cover
         warnings.warn("getMinorXS has been replaced by the minor_xs function "
