commit e7dbb76bdbd0c4def5ac3e1c86a583aedfa7566c
Author: Simon Hawkins <simonjayhawkins@gmail.com>
Date:   Wed Jan 2 12:21:09 2019 +0000

    move test_non_reducing_slice_on_multiindex (#24545)

diff --git a/pandas/tests/indexing/multiindex/test_slice.py b/pandas/tests/indexing/multiindex/test_slice.py
index 596fe5d56..fcecb2b45 100644
--- a/pandas/tests/indexing/multiindex/test_slice.py
+++ b/pandas/tests/indexing/multiindex/test_slice.py
@@ -7,6 +7,7 @@ from pandas.errors import UnsortedIndexError
 
 import pandas as pd
 from pandas import DataFrame, Index, MultiIndex, Series, Timestamp
+from pandas.core.indexing import _non_reducing_slice
 from pandas.tests.indexing.common import _mklbl
 from pandas.util import testing as tm
 
@@ -556,3 +557,20 @@ class TestMultiIndexSlicers(object):
         result = ymd[5:]
         expected = ymd.reindex(s.index[5:])
         tm.assert_frame_equal(result, expected)
+
+    def test_non_reducing_slice_on_multiindex(self):
+        # GH 19861
+        dic = {
+            ('a', 'd'): [1, 4],
+            ('a', 'c'): [2, 3],
+            ('b', 'c'): [3, 2],
+            ('b', 'd'): [4, 1]
+        }
+        df = pd.DataFrame(dic, index=[0, 1])
+        idx = pd.IndexSlice
+        slice_ = idx[:, idx['b', 'd']]
+        tslice_ = _non_reducing_slice(slice_)
+
+        result = df.loc[tslice_]
+        expected = pd.DataFrame({('b', 'd'): [4, 1]})
+        tm.assert_frame_equal(result, expected)
diff --git a/pandas/tests/indexing/test_indexing.py b/pandas/tests/indexing/test_indexing.py
index 2224c3ab9..03f1975c5 100644
--- a/pandas/tests/indexing/test_indexing.py
+++ b/pandas/tests/indexing/test_indexing.py
@@ -812,23 +812,6 @@ class TestMisc(Base):
             tslice_ = _non_reducing_slice(slice_)
             assert isinstance(df.loc[tslice_], DataFrame)
 
-    def test_non_reducing_slice_on_multiindex(self):
-        # GH 19861
-        dic = {
-            ('a', 'd'): [1, 4],
-            ('a', 'c'): [2, 3],
-            ('b', 'c'): [3, 2],
-            ('b', 'd'): [4, 1]
-        }
-        df = pd.DataFrame(dic, index=[0, 1])
-        idx = pd.IndexSlice
-        slice_ = idx[:, idx['b', 'd']]
-        tslice_ = _non_reducing_slice(slice_)
-
-        result = df.loc[tslice_]
-        expected = pd.DataFrame({('b', 'd'): [4, 1]})
-        tm.assert_frame_equal(result, expected)
-
     def test_list_slice(self):
         # like dataframe getitem
         slices = [['A'], Series(['A']), np.array(['A'])]
