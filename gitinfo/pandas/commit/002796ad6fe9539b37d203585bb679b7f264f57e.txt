commit 002796ad6fe9539b37d203585bb679b7f264f57e
Author: Anil Kumar Pallekonda <apallekonda84@gmail.com>
Date:   Wed Mar 14 12:30:04 2018 -0700

    DOC: Update the pandas.core.window.x.sum docstring (#20272)

diff --git a/pandas/core/window.py b/pandas/core/window.py
index e70a3cb5e..358ef98e1 100644
--- a/pandas/core/window.py
+++ b/pandas/core/window.py
@@ -320,7 +320,79 @@ class _Window(PandasObject, SelectionMixin):
     agg = aggregate
 
     _shared_docs['sum'] = dedent("""
-    %(name)s sum""")
+    Calculate %(name)s sum of given DataFrame or Series.
+
+    Parameters
+    ----------
+    *args, **kwargs
+        For compatibility with other %(name)s methods. Has no effect
+        on the computed value.
+
+    Returns
+    -------
+    Series or DataFrame
+        Same type as the input, with the same index, containing the
+        %(name)s sum.
+
+    See Also
+    --------
+    Series.sum : Reducing sum for Series.
+    DataFrame.sum : Reducing sum for DataFrame.
+
+    Examples
+    --------
+    >>> s = pd.Series([1, 2, 3, 4, 5])
+    >>> s
+    0    1
+    1    2
+    2    3
+    3    4
+    4    5
+    dtype: int64
+
+    >>> s.rolling(3).sum()
+    0     NaN
+    1     NaN
+    2     6.0
+    3     9.0
+    4    12.0
+    dtype: float64
+
+    >>> s.expanding(3).sum()
+    0     NaN
+    1     NaN
+    2     6.0
+    3    10.0
+    4    15.0
+    dtype: float64
+
+    >>> s.rolling(3, center=True).sum()
+    0     NaN
+    1     6.0
+    2     9.0
+    3    12.0
+    4     NaN
+    dtype: float64
+
+    For DataFrame, each %(name)s sum is computed column-wise.
+
+    >>> df = pd.DataFrame({"A": s, "B": s ** 2})
+    >>> df
+       A   B
+    0  1   1
+    1  2   4
+    2  3   9
+    3  4  16
+    4  5  25
+
+    >>> df.rolling(3).sum()
+          A     B
+    0   NaN   NaN
+    1   NaN   NaN
+    2   6.0  14.0
+    3   9.0  29.0
+    4  12.0  50.0
+    """)
 
     _shared_docs['mean'] = dedent("""
     %(name)s mean""")
@@ -640,7 +712,6 @@ class Window(_Window):
     agg = aggregate
 
     @Substitution(name='window')
-    @Appender(_doc_template)
     @Appender(_shared_docs['sum'])
     def sum(self, *args, **kwargs):
         nv.validate_window_func('sum', args, kwargs)
@@ -1326,7 +1397,6 @@ class Rolling(_Rolling_and_Expanding):
         return super(Rolling, self).apply(func, args=args, kwargs=kwargs)
 
     @Substitution(name='rolling')
-    @Appender(_doc_template)
     @Appender(_shared_docs['sum'])
     def sum(self, *args, **kwargs):
         nv.validate_rolling_func('sum', args, kwargs)
@@ -1588,7 +1658,6 @@ class Expanding(_Rolling_and_Expanding):
         return super(Expanding, self).apply(func, args=args, kwargs=kwargs)
 
     @Substitution(name='expanding')
-    @Appender(_doc_template)
     @Appender(_shared_docs['sum'])
     def sum(self, *args, **kwargs):
         nv.validate_expanding_func('sum', args, kwargs)
