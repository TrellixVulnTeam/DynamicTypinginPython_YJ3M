commit 2e2bfd33bad0d914b655927a60a2c53278865a5e
Author: Chang She <chang@lambdafoundry.com>
Date:   Fri Jun 8 00:05:01 2012 -0400

    ENH: DataFrame any all #1416

diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 35ddba9b2..0adbf2f05 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -528,6 +528,18 @@ class DataFrame(NDFrame):
     def empty(self):
         return not (len(self.columns) > 0 and len(self.index) > 0)
 
+    def any(self):
+        if not self._is_mixed_type:
+            if self.dtypes[0] == np.bool_:
+                return self.values.any()
+        raise ValueError('Cannot call any() on mixed or non-boolean DataFrame')
+
+    def all(self):
+        if not self._is_mixed_type:
+            if self.dtypes[0] == np.bool_:
+                return self.values.all()
+        raise ValueError('Cannot call all() on mixed or non-boolean DataFrame')
+
     def __nonzero__(self):
         raise ValueError("Cannot call bool() on DataFrame.")
 
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index 109805ed4..edc329abd 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -6245,6 +6245,23 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
         df = DataFrame([1, 2, 3])
         self.failUnlessRaises(ValueError, lambda: bool(df))
 
+    def test_any_all(self):
+        df = DataFrame([[True, True, False]])
+        self.assert_(df.any())
+        self.assert_(not df.all())
+
+        df = DataFrame([[True, True, True]])
+        self.assert_(df.any())
+        self.assert_(df.all())
+
+        df = -df
+        self.assert_(not df.any())
+        self.assert_(not df.all())
+
+        df = DataFrame([[1, 2, 3]])
+        self.assertRaises(ValueError, df.any)
+        self.assertRaises(ValueError, df.all)
+
 if __name__ == '__main__':
     # unittest.main()
     import nose
