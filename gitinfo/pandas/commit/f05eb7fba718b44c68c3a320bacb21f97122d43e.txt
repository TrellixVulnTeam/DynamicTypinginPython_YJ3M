commit f05eb7fba718b44c68c3a320bacb21f97122d43e
Author: Kaiqi Dong <kaiqi@kth.se>
Date:   Mon May 11 23:43:37 2020 +0200

    TST/REF: Deprivate check_pairwise_moment and remove ConsistencyBase (#34119)

diff --git a/pandas/tests/window/common.py b/pandas/tests/window/common.py
index 25989191a..5dca26df4 100644
--- a/pandas/tests/window/common.py
+++ b/pandas/tests/window/common.py
@@ -24,20 +24,16 @@ class Base:
         self.frame = DataFrame(randn(N, K), index=self.rng, columns=np.arange(K))
 
 
-class ConsistencyBase(Base):
-    def _create_data(self):
-        super()._create_data()
-
-    def _check_pairwise_moment(self, dispatch, name, **kwargs):
-        def get_result(obj, obj2=None):
-            return getattr(getattr(obj, dispatch)(**kwargs), name)(obj2)
-
-        result = get_result(self.frame)
-        result = result.loc[(slice(None), 1), 5]
-        result.index = result.index.droplevel(1)
-        expected = get_result(self.frame[1], self.frame[5])
-        expected.index = expected.index._with_freq(None)
-        tm.assert_series_equal(result, expected, check_names=False)
+def check_pairwise_moment(frame, dispatch, name, **kwargs):
+    def get_result(obj, obj2=None):
+        return getattr(getattr(obj, dispatch)(**kwargs), name)(obj2)
+
+    result = get_result(frame)
+    result = result.loc[(slice(None), 1), 5]
+    result.index = result.index.droplevel(1)
+    expected = get_result(frame[1], frame[5])
+    expected.index = expected.index._with_freq(None)
+    tm.assert_series_equal(result, expected, check_names=False)
 
 
 def ew_func(A, B, com, name, **kwargs):
diff --git a/pandas/tests/window/moments/test_moments_ewm.py b/pandas/tests/window/moments/test_moments_ewm.py
index 99f1842ba..17d497e6e 100644
--- a/pandas/tests/window/moments/test_moments_ewm.py
+++ b/pandas/tests/window/moments/test_moments_ewm.py
@@ -7,9 +7,9 @@ from pandas import DataFrame, Series, concat
 import pandas._testing as tm
 from pandas.tests.window.common import (
     Base,
-    ConsistencyBase,
     check_binary_ew,
     check_binary_ew_min_periods,
+    check_pairwise_moment,
     ew_func,
     moments_consistency_cov_data,
     moments_consistency_is_constant,
@@ -274,15 +274,13 @@ class TestMoments(Base):
         assert result2.dtype == np.float_
 
 
-class TestEwmMomentsConsistency(ConsistencyBase):
+class TestEwmMomentsConsistency(Base):
     def setup_method(self, method):
         self._create_data()
 
-    def test_ewmcov_pairwise(self):
-        self._check_pairwise_moment("ewm", "cov", span=10, min_periods=5)
-
-    def test_ewmcorr_pairwise(self):
-        self._check_pairwise_moment("ewm", "corr", span=10, min_periods=5)
+    @pytest.mark.parametrize("func", ["cov", "corr"])
+    def test_ewm_pairwise_cov_corr(self, func):
+        check_pairwise_moment(self.frame, "ewm", func, span=10, min_periods=5)
 
 
 @pytest.mark.parametrize("name", ["cov", "corr"])
diff --git a/pandas/tests/window/moments/test_moments_expanding.py b/pandas/tests/window/moments/test_moments_expanding.py
index 6aff5b78b..09cd2ff21 100644
--- a/pandas/tests/window/moments/test_moments_expanding.py
+++ b/pandas/tests/window/moments/test_moments_expanding.py
@@ -7,7 +7,7 @@ import pytest
 from pandas import DataFrame, Index, MultiIndex, Series, isna, notna
 import pandas._testing as tm
 from pandas.tests.window.common import (
-    ConsistencyBase,
+    Base,
     moments_consistency_cov_data,
     moments_consistency_is_constant,
     moments_consistency_mock_mean,
@@ -18,7 +18,7 @@ from pandas.tests.window.common import (
 )
 
 
-class TestExpandingMomentsConsistency(ConsistencyBase):
+class TestExpandingMomentsConsistency(Base):
     def setup_method(self, method):
         self._create_data()
 
diff --git a/pandas/tests/window/moments/test_moments_rolling.py b/pandas/tests/window/moments/test_moments_rolling.py
index 28ad2b866..43618d767 100644
--- a/pandas/tests/window/moments/test_moments_rolling.py
+++ b/pandas/tests/window/moments/test_moments_rolling.py
@@ -14,7 +14,7 @@ import pandas._testing as tm
 from pandas.core.window.common import _flex_binary_moment
 from pandas.tests.window.common import (
     Base,
-    ConsistencyBase,
+    check_pairwise_moment,
     moments_consistency_cov_data,
     moments_consistency_is_constant,
     moments_consistency_mock_mean,
@@ -942,7 +942,7 @@ def _rolling_consistency_cases():
                 yield window, min_periods, center
 
 
-class TestRollingMomentsConsistency(ConsistencyBase):
+class TestRollingMomentsConsistency(Base):
     def setup_method(self, method):
         self._create_data()
 
@@ -954,9 +954,6 @@ class TestRollingMomentsConsistency(ConsistencyBase):
         result = A.rolling(window=50, min_periods=25).cov(B)
         tm.assert_almost_equal(result[-1], np.cov(A[-50:], B[-50:])[0, 1])
 
-    def test_rolling_cov_pairwise(self):
-        self._check_pairwise_moment("rolling", "cov", window=10, min_periods=5)
-
     def test_rolling_corr(self):
         A = self.series
         B = A + randn(len(A))
@@ -973,8 +970,9 @@ class TestRollingMomentsConsistency(ConsistencyBase):
         result = a.rolling(window=len(a), min_periods=1).corr(b)
         tm.assert_almost_equal(result[-1], a.corr(b))
 
-    def test_rolling_corr_pairwise(self):
-        self._check_pairwise_moment("rolling", "corr", window=10, min_periods=5)
+    @pytest.mark.parametrize("func", ["cov", "corr"])
+    def test_rolling_pairwise_cov_corr(self, func):
+        check_pairwise_moment(self.frame, "rolling", func, window=10, min_periods=5)
 
     @pytest.mark.parametrize("method", ["corr", "cov"])
     def test_flex_binary_frame(self, method):
