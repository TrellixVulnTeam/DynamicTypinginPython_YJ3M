commit 6141754e3ef0574fda35a49925aa629655fd16a0
Author: Jeff Reback <jeff@reback.net>
Date:   Sun Jan 1 13:51:23 2017 -0500

    COMPAT: py2.7 compat for Timestamp.replace (#15030)
    
    xref https://github.com/statsmodels/statsmodels/issues/3349

diff --git a/doc/source/whatsnew/v0.20.0.txt b/doc/source/whatsnew/v0.20.0.txt
index a947b4f3c..bbf528a50 100644
--- a/doc/source/whatsnew/v0.20.0.txt
+++ b/doc/source/whatsnew/v0.20.0.txt
@@ -305,7 +305,7 @@ Bug Fixes
 
 - Bug in ``Series`` construction with a datetimetz (:issue:`14928`)
 
-
+- Bug in compat for passing long integers to ``Timestamp.replace`` (:issue:`15030`)
 
 
 
diff --git a/pandas/tseries/tests/test_timeseries.py b/pandas/tseries/tests/test_timeseries.py
index 3f4a10619..1834c56e5 100644
--- a/pandas/tseries/tests/test_timeseries.py
+++ b/pandas/tseries/tests/test_timeseries.py
@@ -1883,6 +1883,17 @@ class TestTimeSeries(tm.TestCase):
         self.assertRaises(ValueError, DatetimeIndex, ['1400-01-01'])
         self.assertRaises(ValueError, DatetimeIndex, [datetime(1400, 1, 1)])
 
+    def test_compat_replace(self):
+        # https://github.com/statsmodels/statsmodels/issues/3349
+        # replace should take ints/longs for compat
+
+        for f in [compat.long, int]:
+            result = date_range(Timestamp('1960-04-01 00:00:00',
+                                          freq='QS-JAN'),
+                                periods=f(76),
+                                freq='QS-JAN')
+            self.assertEqual(len(result), 76)
+
     def test_timestamp_repr(self):
         # pre-1900
         stamp = Timestamp('1850-01-01', tz='US/Eastern')
diff --git a/pandas/tslib.pyx b/pandas/tslib.pyx
index 649aa22e5..9a20c3663 100644
--- a/pandas/tslib.pyx
+++ b/pandas/tslib.pyx
@@ -687,7 +687,7 @@ class Timestamp(_Timestamp):
         # replace
         def validate(k, v):
             """ validate integers """
-            if not isinstance(v, int):
+            if not is_integer_object(v):
                 raise ValueError("value must be an integer, received "
                                  "{v} for {k}".format(v=type(v), k=k))
             return v
