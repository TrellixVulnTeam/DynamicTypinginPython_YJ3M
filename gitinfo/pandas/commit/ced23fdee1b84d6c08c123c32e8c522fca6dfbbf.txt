commit ced23fdee1b84d6c08c123c32e8c522fca6dfbbf
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Fri Jan 20 14:58:28 2012 -0500

    ENH: implement Series.unique, disable comparison-alignment with Series, GH #658

diff --git a/RELEASE.rst b/RELEASE.rst
index cb24948a9..5f4c1f647 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -78,8 +78,7 @@ pandas 0.7.0
     yielding an aggregated result with hierarchical columns (GH #166)
   - Add integer-indexing functions ``iget`` in Series and ``irow`` / ``iget``
     in DataFrame (GH #628)
-  - Add automatic realignment functionality (when possible) to comparisons and
-    logical operators for Series
+  - Add new ``Series.unique`` function (GH #658)
 
 **API Changes**
 
diff --git a/pandas/core/series.py b/pandas/core/series.py
index 7bd04053f..892aca8ce 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -774,6 +774,21 @@ copy : boolean, default False
             counter[value] += 1
         return Series(counter).order(ascending=False)
 
+    def unique(self):
+        """
+        Return array of unique values in the Series. Significantly faster than
+        numpy.unique
+
+        Returns
+        -------
+        uniques : ndarray
+        """
+        values = self.values
+        if not values.dtype == np.object_:
+            values = values.astype('O')
+        uniques = lib.list_to_object_array(lib.fast_unique(values))
+        return lib.maybe_convert_objects(uniques)
+
     def nunique(self):
         """
         Return count of unique elements in the Series
diff --git a/pandas/tests/test_series.py b/pandas/tests/test_series.py
index 6ae8fd792..cfdd46fca 100644
--- a/pandas/tests/test_series.py
+++ b/pandas/tests/test_series.py
@@ -999,8 +999,7 @@ class TestSeries(unittest.TestCase, CheckNameIntegration):
             tm.assert_almost_equal(cython_or_numpy, python)
 
         def check(other):
-            simple_ops = ['add', 'sub', 'mul', 'truediv', 'floordiv',
-                          'gt', 'ge', 'lt', 'le']
+            simple_ops = ['add', 'sub', 'mul', 'truediv', 'floordiv']
 
             for opname in simple_ops:
                 _check_op(other, getattr(operator, opname))
@@ -1980,6 +1979,10 @@ class TestSeries(unittest.TestCase, CheckNameIntegration):
         result = self.ts.dropna()
         self.assertEquals(result.name, self.ts.name)
 
+    def test_numpy_unique(self):
+        # it works!
+        result = np.unique(self.ts)
+
 if __name__ == '__main__':
     nose.runmodule(argv=[__file__,'-vvs','-x','--pdb', '--pdb-failure'],
                    exit=False)
