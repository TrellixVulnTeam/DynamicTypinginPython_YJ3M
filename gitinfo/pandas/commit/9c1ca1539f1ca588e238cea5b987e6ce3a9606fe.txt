commit 9c1ca1539f1ca588e238cea5b987e6ce3a9606fe
Author: Chang She <chang@lambdafoundry.com>
Date:   Thu May 24 13:52:49 2012 -0400

    BUG: fixed take_2d_multi bug if dtype not in func dict

diff --git a/pandas/core/common.py b/pandas/core/common.py
index e16d1471c..d75b0ee91 100644
--- a/pandas/core/common.py
+++ b/pandas/core/common.py
@@ -266,8 +266,6 @@ def take_2d_multi(arr, row_idx, col_idx, fill_value=np.nan):
 
     dtype_str = arr.dtype.name
 
-    take_f = _get_take2d_function(dtype_str, axis='multi')
-
     out_shape = len(row_idx), len(col_idx)
 
     if dtype_str in ('int32', 'int64', 'bool'):
@@ -280,12 +278,14 @@ def take_2d_multi(arr, row_idx, col_idx, fill_value=np.nan):
                                  fill_value=fill_value)
         else:
             out = np.empty(out_shape, dtype=arr.dtype)
+            take_f = _get_take2d_function(dtype_str, axis='multi')
             take_f(arr, _ensure_int64(row_idx),
                    _ensure_int64(col_idx), out=out,
                    fill_value=fill_value)
             return out
     elif dtype_str in ('float64', 'object', 'datetime64[ns]'):
         out = np.empty(out_shape, dtype=arr.dtype)
+        take_f = _get_take2d_function(dtype_str, axis='multi')
         take_f(arr, _ensure_int64(row_idx), _ensure_int64(col_idx), out=out,
                fill_value=fill_value)
         return out
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index ffc4db4f4..405814098 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -5656,10 +5656,10 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
 
         assert_frame_equal(result, expected)
 
-        df = df + 1j
+        df = DataFrame(np.random.randn(5, 3) + 1j, columns=['a','b','c'])
 
-        result = df.reindex(range(3), range(3))
-        expected = df.reindex(range(3)).reindex(columns=range(3))
+        result = df.reindex(index=[0,1], columns=['a', 'b'])
+        expected = df.reindex([0, 1]).reindex(columns=['a', 'b'])
 
         assert_frame_equal(result, expected)
 
