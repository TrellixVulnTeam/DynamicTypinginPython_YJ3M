commit 3ff7b41451562fd28e09bad4f71e245e1b70212e
Author: Chang She <changshe@gmail.com>
Date:   Sun Nov 4 15:19:13 2012 -0500

    BUG: stop overridding matplotlib unit registrations for datetime.datetime/date/time but keep registration for pandas specific classes Period and Timestamp

diff --git a/pandas/tools/plotting.py b/pandas/tools/plotting.py
index 97cae5e35..bae624c2f 100644
--- a/pandas/tools/plotting.py
+++ b/pandas/tools/plotting.py
@@ -16,12 +16,13 @@ from pandas.tseries.period import PeriodIndex
 from pandas.tseries.frequencies import get_period_alias, get_base_alias
 from pandas.tseries.offsets import DateOffset
 
+"""
 try:  # mpl optional
     import pandas.tseries.converter as conv
     conv.register()
 except ImportError:
     pass
-
+"""
 
 def _get_standard_kind(kind):
     return {'density': 'kde'}.get(kind, kind)
@@ -742,6 +743,12 @@ class MPLPlot(object):
 
         return x
 
+    def _is_datetype(self):
+        index = self.data.index
+        return (isinstance(index, (PeriodIndex, DatetimeIndex)) or
+                index.inferred_type in ('datetime', 'date', 'datetime64',
+                                        'time'))
+
     def _get_plot_function(self):
         if self.logy:
             plotf = self.plt.Axes.semilogy
@@ -906,7 +913,22 @@ class LinePlot(MPLPlot):
         if style is None or re.match('[a-z]+', style) is None:
             kwds['color'] = colors[i % len(colors)]
 
+    def _make_formatter_locator(self):
+        import pandas.tseries.converter as conv
+        index = self.data.index
+        if (isinstance(index, DatetimeIndex) or
+            index.inferred_type in ('datetime', 'datetime64', 'date')):
+            tz = getattr(index, 'tz', None)
+            loc = conv.PandasAutoDateLocator(tz=tz)
+            fmt = conv.PandasAutoDateFormatter(loc, tz=tz)
+            return fmt, loc
+        if index.inferred_type == 'time':
+            loc = conv.AutoLocator()
+            fmt = conv.TimeFormatter(loc)
+            return fmt, loc
+
     def _make_plot(self):
+        import pandas.tseries.plotting as tsplot
         # this is slightly deceptive
         if self.use_index and self._use_dynamic_x():
             data = self._maybe_convert_index(self.data)
@@ -946,6 +968,12 @@ class LinePlot(MPLPlot):
                 labels.append(leg_label)
                 ax.grid(self.grid)
 
+                if self._is_datetype():
+                    _maybe_format_dateaxis(ax, *self._make_formatter_locator())
+                    left, right = _get_xlim(lines)
+                    print 'xlim: ', left, right
+                    ax.set_xlim(left, right)
+
             self._make_legend(lines, labels)
 
     def _make_ts_plot(self, data, **kwargs):
@@ -1909,6 +1937,23 @@ def _subplots(nrows=1, ncols=1, sharex=False, sharey=False, squeeze=True,
 
     return fig, axes
 
+def _maybe_format_dateaxis(ax, formatter, locator):
+    from matplotlib import pylab
+    ax.xaxis.set_major_locator(locator)
+    ax.xaxis.set_major_formatter(formatter)
+    pylab.draw_if_interactive()
+
+
+def _get_xlim(lines):
+    import pandas.tseries.converter as conv
+    left, right = np.inf, -np.inf
+    for l in lines:
+        x = l.get_xdata()
+        left = min(conv._dt_to_float_ordinal(x[0]), left)
+        right = max(conv._dt_to_float_ordinal(x[-1]), right)
+    return left, right
+
+
 if __name__ == '__main__':
     # import pandas.rpy.common as com
     # sales = com.load_data('sanfrancisco.home.sales', package='nutshell')
diff --git a/pandas/tseries/converter.py b/pandas/tseries/converter.py
index 78455a5e4..485d776b9 100644
--- a/pandas/tseries/converter.py
+++ b/pandas/tseries/converter.py
@@ -22,13 +22,9 @@ from pandas.tseries.period import Period, PeriodIndex
 
 
 def register():
-    units.registry[pydt.time] = TimeConverter()
     units.registry[lib.Timestamp] = DatetimeConverter()
-    units.registry[pydt.date] = DatetimeConverter()
-    units.registry[pydt.datetime] = DatetimeConverter()
     units.registry[Period] = PeriodConverter()
 
-
 def _to_ordinalf(tm):
     tot_sec = (tm.hour * 3600 + tm.minute * 60 + tm.second +
                float(tm.microsecond / 1e6))
diff --git a/pandas/tseries/plotting.py b/pandas/tseries/plotting.py
index 70b36ff7e..20f0393be 100644
--- a/pandas/tseries/plotting.py
+++ b/pandas/tseries/plotting.py
@@ -22,11 +22,9 @@ import pandas.core.common as com
 from pandas.tseries.converter import (PeriodConverter, TimeSeries_DateLocator,
                                       TimeSeries_DateFormatter)
 
-units.registry[Period] = PeriodConverter()
 #----------------------------------------------------------------------
 # Plotting functions and monkey patches
 
-
 def tsplot(series, plotf, **kwargs):
     """
     Plots a Series on the given Matplotlib axes or the current axes
