commit f2941c23166e03759986833ae1d3722b61328ce1
Author: Chang She <chang@lambdafoundry.com>
Date:   Mon Nov 19 15:49:51 2012 -0500

    CLN: put new kwd at the end

diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 07bf38eb5..614ff48b0 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -402,7 +402,7 @@ class DataFrame(NDFrame):
                     index = _get_names_from_index(data)
 
                 if isinstance(data[0], (list, tuple, dict, Series)):
-                    arrays, columns = _to_arrays(data, columns, dtype)
+                    arrays, columns = _to_arrays(data, columns, dtype=dtype)
 
                     columns = _ensure_index(columns)
 
@@ -5159,7 +5159,7 @@ def _rec_to_dict(arr):
     return columns, sdict
 
 
-def _to_arrays(data, columns, dtype=None, coerce_float=False):
+def _to_arrays(data, columns, coerce_float=False, dtype=None):
     """
     Return list of arrays, columns
     """
@@ -5167,21 +5167,25 @@ def _to_arrays(data, columns, dtype=None, coerce_float=False):
     if len(data) == 0:
         return [], columns if columns is not None else []
     if isinstance(data[0], (list, tuple)):
-        return _list_to_arrays(data, columns, dtype=dtype, coerce_float=coerce_float)
+        return _list_to_arrays(data, columns, coerce_float=coerce_float,
+                               dtype=dtype)
     elif isinstance(data[0], dict):
-        return _list_of_dict_to_arrays(data, columns, dtype=dtype,
-                                       coerce_float=coerce_float)
+        return _list_of_dict_to_arrays(data, columns,
+                                       coerce_float=coerce_float,
+                                       dtype=dtype)
     elif isinstance(data[0], Series):
-        return _list_of_series_to_arrays(data, columns, dtype=dtype,
-                                        coerce_float=coerce_float)
+        return _list_of_series_to_arrays(data, columns,
+                                         coerce_float=coerce_float,
+                                         dtype=dtype)
     else:
         # last ditch effort
         data = map(tuple, data)
-        return _list_to_arrays(data, columns, dtype=dtype,
-                               coerce_float=coerce_float)
+        return _list_to_arrays(data, columns,
+                               coerce_float=coerce_float,
+                               dtype=dtype)
 
 
-def _list_to_arrays(data, columns, dtype=None, coerce_float=False):
+def _list_to_arrays(data, columns, coerce_float=False, dtype=None):
     if len(data) > 0 and isinstance(data[0], tuple):
         content = list(lib.to_object_array_tuples(data).T)
     else:
@@ -5191,7 +5195,7 @@ def _list_to_arrays(data, columns, dtype=None, coerce_float=False):
                                  coerce_float=coerce_float)
 
 
-def _list_of_series_to_arrays(data, columns, dtype=None, coerce_float=False):
+def _list_of_series_to_arrays(data, columns, coerce_float=False, dtype=None):
     from pandas.core.index import _get_combined_index
 
     if columns is None:
@@ -5218,7 +5222,7 @@ def _list_of_series_to_arrays(data, columns, dtype=None, coerce_float=False):
         return values.T, columns
 
 
-def _list_of_dict_to_arrays(data, columns, dtype=None, coerce_float=False):
+def _list_of_dict_to_arrays(data, columns, coerce_float=False, dtype=None):
     if columns is None:
         gen = (x.keys() for x in data)
         columns = lib.fast_unique_multiple_list_gen(gen)
@@ -5233,7 +5237,7 @@ def _list_of_dict_to_arrays(data, columns, dtype=None, coerce_float=False):
                                  coerce_float=coerce_float)
 
 
-def _convert_object_array(content, columns, dtype=None, coerce_float=False):
+def _convert_object_array(content, columns, coerce_float=False, dtype=None):
     if columns is None:
         columns = _default_index(len(content))
     else:
