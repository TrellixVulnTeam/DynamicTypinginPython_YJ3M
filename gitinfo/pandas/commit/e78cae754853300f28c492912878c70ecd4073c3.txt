commit e78cae754853300f28c492912878c70ecd4073c3
Author: Phillip Cloud <cpcloud@gmail.com>
Date:   Wed Aug 7 11:07:48 2013 -0400

    CLN: do not allow frozenset

diff --git a/doc/source/release.rst b/doc/source/release.rst
index 00309b7a3..95ce03a85 100644
--- a/doc/source/release.rst
+++ b/doc/source/release.rst
@@ -133,6 +133,8 @@ pandas 0.13
     (:issue:`4016`)
   - Fixed Panel assignment with a transposed frame (:issue:`3830`)
   - Raise on set indexing with a Panel and a Panel as a value which needs alignment (:issue:`3777`)
+  - frozenset objects now raise in the ``Series`` constructor (:issue:`4482`,
+    :issue:`4480`)
 
 pandas 0.12
 ===========
diff --git a/pandas/core/series.py b/pandas/core/series.py
index 69a4cadcc..58fd0a055 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -467,8 +467,9 @@ class Series(generic.PandasContainer, pa.Array):
                 data = [data.get(i, nan) for i in index]
         elif isinstance(data, types.GeneratorType):
             data = list(data)
-        elif isinstance(data, set):
-            raise TypeError('Set value is unordered')
+        elif isinstance(data, (set, frozenset)):
+            raise TypeError("{0!r} type is unordered"
+                            "".format(data.__class__.__name__))
 
         if dtype is not None:
             dtype = np.dtype(dtype)
diff --git a/pandas/io/tests/test_pytables.py b/pandas/io/tests/test_pytables.py
index 43b77ec7b..9575d9922 100644
--- a/pandas/io/tests/test_pytables.py
+++ b/pandas/io/tests/test_pytables.py
@@ -2418,9 +2418,14 @@ class TestHDFStore(unittest.TestCase):
             expected = df[df.x == 'none']
             assert_frame_equal(result,expected)
 
-            result = store.select('df',Term('x!=none'))
-            expected = df[df.x != 'none']
-            assert_frame_equal(result,expected)
+            try:
+                result = store.select('df',Term('x!=none'))
+                expected = df[df.x != 'none']
+                assert_frame_equal(result,expected)
+            except Exception as detail:
+                print("[{0}]".format(detail))
+                print(store)
+                print(expected)
 
             df2 = df.copy()
             df2.loc[df2.x=='','x'] = np.nan
diff --git a/pandas/tests/test_series.py b/pandas/tests/test_series.py
index ef90ec62f..b192aded4 100644
--- a/pandas/tests/test_series.py
+++ b/pandas/tests/test_series.py
@@ -544,7 +544,8 @@ class TestSeries(unittest.TestCase, CheckNameIntegration):
 
     def test_constructor_set(self):
         values = set([1, 2, 3, 4, 5])
-
+        self.assertRaises(TypeError, Series, values)
+        values = frozenset(values)
         self.assertRaises(TypeError, Series, values)
 
     def test_fromDict(self):
