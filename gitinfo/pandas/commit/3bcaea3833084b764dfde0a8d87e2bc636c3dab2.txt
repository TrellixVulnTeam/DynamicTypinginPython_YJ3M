commit 3bcaea3833084b764dfde0a8d87e2bc636c3dab2
Author: jbrockmendel <jbrockmendel@gmail.com>
Date:   Fri Jul 10 05:16:27 2020 -0700

    REF: remove libresolution (#35198)

diff --git a/pandas/_libs/tslibs/__init__.py b/pandas/_libs/tslibs/__init__.py
index 6fe6fa0a1..0ae4cc97d 100644
--- a/pandas/_libs/tslibs/__init__.py
+++ b/pandas/_libs/tslibs/__init__.py
@@ -27,11 +27,11 @@ __all__ = [
 
 from . import dtypes
 from .conversion import localize_pydatetime
+from .dtypes import Resolution
 from .nattype import NaT, NaTType, iNaT, is_null_datetimelike, nat_strings
 from .np_datetime import OutOfBoundsDatetime
 from .offsets import BaseOffset, Tick, to_offset
 from .period import IncompatibleFrequency, Period
-from .resolution import Resolution
 from .timedeltas import Timedelta, delta_to_nanoseconds, ints_to_pytimedelta
 from .timestamps import Timestamp
 from .tzconversion import tz_convert_from_utc_single
diff --git a/pandas/_libs/tslibs/fields.pyx b/pandas/_libs/tslibs/fields.pyx
index 03e4188fd..1d1f900bc 100644
--- a/pandas/_libs/tslibs/fields.pyx
+++ b/pandas/_libs/tslibs/fields.pyx
@@ -73,6 +73,46 @@ def build_field_sarray(const int64_t[:] dtindex):
     return out
 
 
+def month_position_check(fields, weekdays):
+    cdef:
+        int32_t daysinmonth, y, m, d
+        bint calendar_end = True
+        bint business_end = True
+        bint calendar_start = True
+        bint business_start = True
+        bint cal
+        int32_t[:] years = fields["Y"]
+        int32_t[:] months = fields["M"]
+        int32_t[:] days = fields["D"]
+
+    for y, m, d, wd in zip(years, months, days, weekdays):
+        if calendar_start:
+            calendar_start &= d == 1
+        if business_start:
+            business_start &= d == 1 or (d <= 3 and wd == 0)
+
+        if calendar_end or business_end:
+            daysinmonth = get_days_in_month(y, m)
+            cal = d == daysinmonth
+            if calendar_end:
+                calendar_end &= cal
+            if business_end:
+                business_end &= cal or (daysinmonth - d < 3 and wd == 4)
+        elif not calendar_start and not business_start:
+            break
+
+    if calendar_end:
+        return "ce"
+    elif business_end:
+        return "be"
+    elif calendar_start:
+        return "cs"
+    elif business_start:
+        return "bs"
+    else:
+        return None
+
+
 @cython.wraparound(False)
 @cython.boundscheck(False)
 def get_date_name_field(const int64_t[:] dtindex, str field, object locale=None):
diff --git a/pandas/_libs/tslibs/resolution.pyx b/pandas/_libs/tslibs/resolution.pyx
deleted file mode 100644
index d2861d8e9..000000000
--- a/pandas/_libs/tslibs/resolution.pyx
+++ /dev/null
@@ -1,53 +0,0 @@
-
-import numpy as np
-from numpy cimport int32_t
-
-from pandas._libs.tslibs.dtypes import Resolution
-from pandas._libs.tslibs.ccalendar cimport get_days_in_month
-
-
-# ----------------------------------------------------------------------
-# Frequency Inference
-
-def month_position_check(fields, weekdays):
-    cdef:
-        int32_t daysinmonth, y, m, d
-        bint calendar_end = True
-        bint business_end = True
-        bint calendar_start = True
-        bint business_start = True
-        bint cal
-        int32_t[:] years
-        int32_t[:] months
-        int32_t[:] days
-
-    years = fields['Y']
-    months = fields['M']
-    days = fields['D']
-
-    for y, m, d, wd in zip(years, months, days, weekdays):
-        if calendar_start:
-            calendar_start &= d == 1
-        if business_start:
-            business_start &= d == 1 or (d <= 3 and wd == 0)
-
-        if calendar_end or business_end:
-            daysinmonth = get_days_in_month(y, m)
-            cal = d == daysinmonth
-            if calendar_end:
-                calendar_end &= cal
-            if business_end:
-                business_end &= cal or (daysinmonth - d < 3 and wd == 4)
-        elif not calendar_start and not business_start:
-            break
-
-    if calendar_end:
-        return 'ce'
-    elif business_end:
-        return 'be'
-    elif calendar_start:
-        return 'cs'
-    elif business_start:
-        return 'bs'
-    else:
-        return None
diff --git a/pandas/core/arrays/datetimes.py b/pandas/core/arrays/datetimes.py
index 5038df85c..7058ed368 100644
--- a/pandas/core/arrays/datetimes.py
+++ b/pandas/core/arrays/datetimes.py
@@ -7,6 +7,7 @@ import numpy as np
 from pandas._libs import lib, tslib
 from pandas._libs.tslibs import (
     NaT,
+    Resolution,
     Timestamp,
     conversion,
     fields,
@@ -15,7 +16,6 @@ from pandas._libs.tslibs import (
     ints_to_pydatetime,
     is_date_array_normalized,
     normalize_i8_timestamps,
-    resolution as libresolution,
     timezones,
     to_offset,
     tzconversion,
@@ -533,7 +533,7 @@ class DatetimeArray(dtl.DatetimeLikeArrayMixin, dtl.TimelikeOps, dtl.DatelikeOps
         return is_date_array_normalized(self.asi8, self.tz)
 
     @property  # NB: override with cache_readonly in immutable subclasses
-    def _resolution_obj(self) -> libresolution.Resolution:
+    def _resolution_obj(self) -> Resolution:
         return get_resolution(self.asi8, self.tz)
 
     # ----------------------------------------------------------------
diff --git a/pandas/tests/tslibs/test_api.py b/pandas/tests/tslibs/test_api.py
index ccaceb7e6..036037032 100644
--- a/pandas/tests/tslibs/test_api.py
+++ b/pandas/tests/tslibs/test_api.py
@@ -16,7 +16,6 @@ def test_namespace():
         "offsets",
         "parsing",
         "period",
-        "resolution",
         "strptime",
         "vectorized",
         "timedeltas",
diff --git a/pandas/tseries/frequencies.py b/pandas/tseries/frequencies.py
index 23e08c755..f80ff1a53 100644
--- a/pandas/tseries/frequencies.py
+++ b/pandas/tseries/frequencies.py
@@ -12,7 +12,7 @@ from pandas._libs.tslibs.ccalendar import (
     MONTHS,
     int_to_weekday,
 )
-from pandas._libs.tslibs.fields import build_field_sarray
+from pandas._libs.tslibs.fields import build_field_sarray, month_position_check
 from pandas._libs.tslibs.offsets import (  # noqa:F401
     DateOffset,
     Day,
@@ -20,7 +20,6 @@ from pandas._libs.tslibs.offsets import (  # noqa:F401
     to_offset,
 )
 from pandas._libs.tslibs.parsing import get_rule_month
-from pandas._libs.tslibs.resolution import month_position_check
 from pandas.util._decorators import cache_readonly
 
 from pandas.core.dtypes.common import (
diff --git a/setup.py b/setup.py
index 1885546e0..aebbdbf4d 100755
--- a/setup.py
+++ b/setup.py
@@ -319,7 +319,6 @@ class CheckSDist(sdist_class):
         "pandas/_libs/tslibs/conversion.pyx",
         "pandas/_libs/tslibs/fields.pyx",
         "pandas/_libs/tslibs/offsets.pyx",
-        "pandas/_libs/tslibs/resolution.pyx",
         "pandas/_libs/tslibs/parsing.pyx",
         "pandas/_libs/tslibs/tzconversion.pyx",
         "pandas/_libs/tslibs/vectorized.pyx",
@@ -639,10 +638,6 @@ ext_data = {
         "depends": tseries_depends,
         "sources": ["pandas/_libs/tslibs/src/datetime/np_datetime.c"],
     },
-    "_libs.tslibs.resolution": {
-        "pyxfile": "_libs/tslibs/resolution",
-        "depends": tseries_depends,
-    },
     "_libs.tslibs.strptime": {
         "pyxfile": "_libs/tslibs/strptime",
         "depends": tseries_depends,
