commit ea6d7218767da55ee6529307052f8656c8e7c1a8
Author: jreback <jeff@reback.net>
Date:   Wed Apr 10 07:59:55 2013 -0400

    CLN: moved all data for tests to /data sub-dir of the tests

diff --git a/pandas/io/tests/legacy.h5 b/pandas/io/tests/data/legacy_hdf/legacy.h5
similarity index 100%
rename from pandas/io/tests/legacy.h5
rename to pandas/io/tests/data/legacy_hdf/legacy.h5
diff --git a/pandas/io/tests/legacy_0.10.h5 b/pandas/io/tests/data/legacy_hdf/legacy_0.10.h5
similarity index 100%
rename from pandas/io/tests/legacy_0.10.h5
rename to pandas/io/tests/data/legacy_hdf/legacy_0.10.h5
diff --git a/pandas/io/tests/legacy_table.h5 b/pandas/io/tests/data/legacy_hdf/legacy_table.h5
similarity index 100%
rename from pandas/io/tests/legacy_table.h5
rename to pandas/io/tests/data/legacy_hdf/legacy_table.h5
diff --git a/pandas/io/tests/pytables_native.h5 b/pandas/io/tests/data/legacy_hdf/pytables_native.h5
similarity index 100%
rename from pandas/io/tests/pytables_native.h5
rename to pandas/io/tests/data/legacy_hdf/pytables_native.h5
diff --git a/pandas/io/tests/pytables_native2.h5 b/pandas/io/tests/data/legacy_hdf/pytables_native2.h5
similarity index 100%
rename from pandas/io/tests/pytables_native2.h5
rename to pandas/io/tests/data/legacy_hdf/pytables_native2.h5
diff --git a/pandas/io/tests/salary.table b/pandas/io/tests/data/salary.table
similarity index 100%
rename from pandas/io/tests/salary.table
rename to pandas/io/tests/data/salary.table
diff --git a/pandas/io/tests/test.xls b/pandas/io/tests/data/test.xls
similarity index 100%
rename from pandas/io/tests/test.xls
rename to pandas/io/tests/data/test.xls
diff --git a/pandas/io/tests/test.xlsx b/pandas/io/tests/data/test.xlsx
similarity index 100%
rename from pandas/io/tests/test.xlsx
rename to pandas/io/tests/data/test.xlsx
diff --git a/pandas/io/tests/test1.csv b/pandas/io/tests/data/test1.csv
similarity index 100%
rename from pandas/io/tests/test1.csv
rename to pandas/io/tests/data/test1.csv
diff --git a/pandas/io/tests/test2.csv b/pandas/io/tests/data/test2.csv
similarity index 100%
rename from pandas/io/tests/test2.csv
rename to pandas/io/tests/data/test2.csv
diff --git a/pandas/io/tests/test2.xls b/pandas/io/tests/data/test2.xls
similarity index 100%
rename from pandas/io/tests/test2.xls
rename to pandas/io/tests/data/test2.xls
diff --git a/pandas/io/tests/test3.xls b/pandas/io/tests/data/test3.xls
similarity index 100%
rename from pandas/io/tests/test3.xls
rename to pandas/io/tests/data/test3.xls
diff --git a/pandas/io/tests/data/unicode_series.csv b/pandas/io/tests/data/unicode_series.csv
new file mode 100644
index 000000000..2485e149e
--- /dev/null
+++ b/pandas/io/tests/data/unicode_series.csv
@@ -0,0 +1,18 @@
+1617,King of New York (1990)
+1618,All Things Fair (1996)
+1619,"Sixth Man, The (1997)"
+1620,Butterfly Kiss (1995)
+1621,"Paris, France (1993)"
+1622,"Cérémonie, La (1995)"
+1623,Hush (1998)
+1624,Nightwatch (1997)
+1625,Nobody Loves Me (Keiner liebt mich) (1994)
+1626,"Wife, The (1995)"
+1627,Lamerica (1994)
+1628,Nico Icon (1995)
+1629,"Silence of the Palace, The (Saimt el Qusur) (1994)"
+1630,"Slingshot, The (1993)"
+1631,Land and Freedom (Tierra y libertad) (1995)
+1632,Á köldum klaka (Cold Fever) (1994)
+1633,Etz Hadomim Tafus (Under the Domin Tree) (1994)
+1634,Two Friends (1986)
diff --git a/pandas/io/tests/utf16_ex.txt b/pandas/io/tests/data/utf16_ex.txt
similarity index 100%
rename from pandas/io/tests/utf16_ex.txt
rename to pandas/io/tests/data/utf16_ex.txt
diff --git a/pandas/io/tests/test_cparser.py b/pandas/io/tests/test_cparser.py
index 5a7e646ec..b352b189a 100644
--- a/pandas/io/tests/test_cparser.py
+++ b/pandas/io/tests/test_cparser.py
@@ -31,15 +31,10 @@ from pandas._parser import TextReader
 import pandas._parser as parser
 
 
-def curpath():
-    pth, _ = os.path.split(os.path.abspath(__file__))
-    return pth
-
-
 class TestCParser(unittest.TestCase):
 
     def setUp(self):
-        self.dirpath = curpath()
+        self.dirpath = tm.get_data_path('/')
         self.csv1 = os.path.join(self.dirpath, 'test1.csv')
         self.csv2 = os.path.join(self.dirpath, 'test2.csv')
         self.xls1 = os.path.join(self.dirpath, 'test.xls')
diff --git a/pandas/io/tests/test_excel.py b/pandas/io/tests/test_excel.py
index 00005c757..ccd9cbc56 100644
--- a/pandas/io/tests/test_excel.py
+++ b/pandas/io/tests/test_excel.py
@@ -65,10 +65,6 @@ def _skip_if_no_excelsuite():
     _skip_if_no_openpyxl()
 
 
-def curpath():
-    pth, _ = os.path.split(os.path.abspath(__file__))
-    return pth
-
 _seriesd = tm.getSeriesData()
 _tsd = tm.getTimeSeriesData()
 _frame = DataFrame(_seriesd)[:10]
@@ -81,7 +77,7 @@ _mixed_frame['foo'] = 'bar'
 class ExcelTests(unittest.TestCase):
 
     def setUp(self):
-        self.dirpath = curpath()
+        self.dirpath = tm.get_data_path()
         self.csv1 = os.path.join(self.dirpath, 'test1.csv')
         self.csv2 = os.path.join(self.dirpath, 'test2.csv')
         self.xls1 = os.path.join(self.dirpath, 'test.xls')
diff --git a/pandas/io/tests/test_parsers.py b/pandas/io/tests/test_parsers.py
index 358f64df6..0e6421116 100644
--- a/pandas/io/tests/test_parsers.py
+++ b/pandas/io/tests/test_parsers.py
@@ -59,7 +59,7 @@ bar2,12,13,14,15
         import warnings
         warnings.filterwarnings(action='ignore', category=FutureWarning)
 
-        self.dirpath = curpath()
+        self.dirpath = tm.get_data_path()
         self.csv1 = os.path.join(self.dirpath, 'test1.csv')
         self.csv2 = os.path.join(self.dirpath, 'test2.csv')
         self.xls1 = os.path.join(self.dirpath, 'test.xls')
@@ -1208,7 +1208,7 @@ a,b,c,d
             url = ('https://raw.github.com/pydata/pandas/master/'
                    'pandas/io/tests/salary.table')
             url_table = self.read_table(url)
-            dirpath = curpath()
+            dirpath = tm.get_data_path()
             localtable = os.path.join(dirpath, 'salary.table')
             local_table = self.read_table(localtable)
             tm.assert_frame_equal(url_table, local_table)
@@ -1229,7 +1229,7 @@ a,b,c,d
         # FILE
         if sys.version_info[:2] < (2, 6):
             raise nose.SkipTest("file:// not supported with Python < 2.6")
-        dirpath = curpath()
+        dirpath = tm.get_data_path()
         localtable = os.path.join(dirpath, 'salary.table')
         local_table = self.read_table(localtable)
 
@@ -1404,7 +1404,7 @@ A,B,C
                     tm.assert_frame_equal(result, expected)
 
     def test_utf16_example(self):
-        path = os.path.join(self.dirpath, 'utf16_ex.txt')
+        path = tm.get_data_path('utf16_ex.txt')
 
         # it works! and is the right length
         result = self.read_table(path, encoding='utf-16')
@@ -1476,8 +1476,7 @@ A,B,C
         tm.assert_frame_equal(result, result2)
 
     def test_unicode_encoding(self):
-        pth = psplit(psplit(curpath())[0])[0]
-        pth = os.path.join(pth, 'tests/data/unicode_series.csv')
+        pth = tm.get_data_path('unicode_series.csv')
 
         result = self.read_csv(pth, header=None, encoding='latin-1')
         result = result.set_index(0)
@@ -2185,11 +2184,6 @@ def assert_same_values_and_dtype(res, exp):
     assert_almost_equal(res, exp)
 
 
-def curpath():
-    pth, _ = os.path.split(os.path.abspath(__file__))
-    return pth
-
-
 if __name__ == '__main__':
     nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
                    exit=False)
diff --git a/pandas/io/tests/test_pickle.py b/pandas/io/tests/test_pickle.py
new file mode 100644
index 000000000..fc04f2c85
--- /dev/null
+++ b/pandas/io/tests/test_pickle.py
@@ -0,0 +1,32 @@
+# pylint: disable=E1101,E1103,W0232
+
+from datetime import datetime, timedelta
+import operator
+import pickle
+import unittest
+import nose
+import os
+
+import numpy as np
+from numpy.testing import assert_array_equal
+from pandas.util.testing import assert_almost_equal
+from pandas.util import py3compat
+import pandas.core.common as com
+
+import pandas.util.testing as tm
+import pandas as pd
+
+class TestPickle(unittest.TestCase):
+    _multiprocess_can_split_ = True
+
+    def setUp(self):
+        pass
+
+    #def test_hash_error(self):
+    #    self.assertRaises(TypeError, hash, self.strIndex)
+
+if __name__ == '__main__':
+    import nose
+    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
+                   # '--with-coverage', '--cover-package=pandas.core'],
+                   exit=False)
diff --git a/pandas/io/tests/test_pytables.py b/pandas/io/tests/test_pytables.py
index 1973c578c..6acf17b12 100644
--- a/pandas/io/tests/test_pytables.py
+++ b/pandas/io/tests/test_pytables.py
@@ -2324,25 +2324,23 @@ class TestHDFStore(unittest.TestCase):
             comparator(retrieved, obj)
 
     def test_pytables_native_read(self):
-        pth = curpath()
 
         try:
-            store = HDFStore(os.path.join(pth, 'pytables_native.h5'), 'r')
+            store = HDFStore(tm.get_data_path('legacy_hdf/pytables_native.h5'), 'r')
             d2 = store['detector/readout']
         finally:
             safe_close(store)
 
         try:
-            store = HDFStore(os.path.join(pth, 'pytables_native2.h5'), 'r')
+            store = HDFStore(tm.get_data_path('legacy_hdf/pytables_native2.h5'), 'r')
             str(store)
             d1 = store['detector']
         finally:
             safe_close(store)
 
     def test_legacy_read(self):
-        pth = curpath()
         try:
-            store = HDFStore(os.path.join(pth, 'legacy.h5'), 'r')
+            store = HDFStore(tm.get_data_path('legacy_hdf/legacy.h5'), 'r')
             store['a']
             store['b']
             store['c']
@@ -2352,9 +2350,8 @@ class TestHDFStore(unittest.TestCase):
 
     def test_legacy_table_read(self):
         # legacy table types
-        pth = curpath()
         try:
-            store = HDFStore(os.path.join(pth, 'legacy_table.h5'), 'r')
+            store = HDFStore(tm.get_data_path('legacy_hdf/legacy_table.h5'), 'r')
             store.select('df1')
             store.select('df2')
             store.select('wp1')
@@ -2376,23 +2373,21 @@ class TestHDFStore(unittest.TestCase):
 
     def test_legacy_0_10_read(self):
         # legacy from 0.10
-        pth = curpath()
         try:
-            store = HDFStore(os.path.join(pth, 'legacy_0.10.h5'), 'r')
+            store = HDFStore(tm.get_data_path('legacy_hdf/legacy_0.10.h5'), 'r')
             for k in store.keys():
                 store.select(k)
         finally:
             safe_close(store)
 
     def test_copy(self):
-        pth = curpath()
 
         def do_copy(f = None, new_f = None, keys = None, propindexes = True, **kwargs):
             try:
                 import os
 
                 if f is None:
-                    f = os.path.join(pth, 'legacy_0.10.h5')
+                    f = tm.get_data_path('legacy_hdf/legacy_0.10.h5')
 
                     
                 store = HDFStore(f, 'r')
@@ -2446,11 +2441,10 @@ class TestHDFStore(unittest.TestCase):
         raise nose.SkipTest
 
         # legacy table types
-        pth = curpath()
         df = tm.makeDataFrame()
         wp = tm.makePanel()
 
-        store = HDFStore(os.path.join(pth, 'legacy_table.h5'), 'a')
+        store = HDFStore(tm.get_data_path('legacy_hdf/legacy_table.h5'), 'a')
 
         self.assertRaises(Exception, store.append, 'df1', df)
         self.assertRaises(Exception, store.append, 'wp1', wp)
@@ -2532,11 +2526,6 @@ class TestHDFStore(unittest.TestCase):
     #    self.assertRaises(Exception, store.put, 'foo', df, table=True)
 
 
-def curpath():
-    pth, _ = os.path.split(os.path.abspath(__file__))
-    return pth
-
-
 def _test_sort(obj):
     if isinstance(obj, DataFrame):
         return obj.reindex(sorted(obj.index))
diff --git a/pandas/tests/test_format.py b/pandas/tests/test_format.py
index cb55061ae..1cfcb465c 100644
--- a/pandas/tests/test_format.py
+++ b/pandas/tests/test_format.py
@@ -27,11 +27,6 @@ from pandas.core.config import (set_option, get_option,
 _frame = DataFrame(tm.getSeriesData())
 
 
-def curpath():
-    pth, _ = os.path.split(os.path.abspath(__file__))
-    return pth
-
-
 class TestDataFrameFormatting(unittest.TestCase):
     _multiprocess_can_split_ = True
 
@@ -491,8 +486,7 @@ class TestDataFrameFormatting(unittest.TestCase):
         unicode(dm.to_string())
 
     def test_string_repr_encoding(self):
-        pth = curpath()
-        filepath = os.path.join(pth, 'data', 'unicode_series.csv')
+        filepath = tm.get_data_path('unicode_series.csv')
         df = pandas.read_csv(filepath, header=None, encoding='latin1')
         repr(df)
         repr(df[1])
diff --git a/pandas/util/testing.py b/pandas/util/testing.py
index bc2aa7628..a3205f383 100644
--- a/pandas/util/testing.py
+++ b/pandas/util/testing.py
@@ -93,6 +93,20 @@ def ensure_clean(filename = None):
         except:
             pass
 
+def get_data_path(f = None):
+    """  return the path of a data file, these are relative to the current test dir """
+
+    if f is None:
+        f = ''
+    import inspect, os
+
+    # get our callers file
+    frame,filename,line_number,function_name,lines,index = \
+        inspect.getouterframes(inspect.currentframe())[1]
+
+    base_dir = os.path.abspath(os.path.dirname(filename))
+    return os.path.join(base_dir, 'data/%s' % f)
+
 #------------------------------------------------------------------------------
 # Comparators
 
