commit 0b31dfb3f549f35db16c7e78d5c7605d995fd053
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Tue Nov 22 00:12:54 2011 -0500

    BUG: ensure return DateRange index from asfreq, GH #390

diff --git a/bench/zoo_bench.R b/bench/zoo_bench.R
index 3cac36067..294d55f51 100644
--- a/bench/zoo_bench.R
+++ b/bench/zoo_bench.R
@@ -37,7 +37,7 @@ xts.bench <- function(){
 
 fts.bench <- function(){
     x <- fts(rnorm(sz), sort(sample(indices, sz)))
-    y <- fts(rnorm(sz), sort(sample(indices, sz)))
+    y <- fts(rnorm(sz), sort(sample(indices, sz))
     timeit(function() {x + y})
 }
 
diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index f2c888d53..55dbabd37 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -1247,7 +1247,9 @@ class DataFrame(NDFrame):
     def _reindex_index(self, new_index, method, copy):
         if new_index.equals(self.index):
             if copy:
-                return self.copy()
+                result = self.copy()
+                result.index = new_index
+                return result
             else:
                 return self
         new_data = self._data.reindex_axis(new_index, method, axis=1)
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index e89a3315e..fd2579ff4 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -1935,10 +1935,20 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
         result = zero_length.asfreq('EOM')
         self.assert_(result is not zero_length)
 
+    def test_asfreq_DateRange(self):
+        from pandas.core.daterange import DateRange
+        df = DataFrame({'A': [1,2,3]},
+                       index=[datetime(2011,11,01), datetime(2011,11,2),
+                              datetime(2011,11,3)])
+        df = df.asfreq('WEEKDAY')
+        self.assert_(isinstance(df.index, DateRange))
+
+        ts = df['A'].asfreq('WEEKDAY')
+        self.assert_(isinstance(ts.index, DateRange))
+
     def test_as_matrix(self):
         frame = self.frame
         mat = frame.as_matrix()
-        smallerCols = ['C', 'A']
 
         frameCols = frame.columns
         for i, row in enumerate(mat):
