commit 9f68a9639d9b7323e830350ecefc133a6197c6e5
Author: jonaslb <drixi.b@gmail.com>
Date:   Sun Apr 3 16:15:22 2016 +0200

    BUG: DataFrame.drop() does nothing for non-unique MultiIndex
    
    closes #12701
    closes #12783

diff --git a/doc/source/whatsnew/v0.18.1.txt b/doc/source/whatsnew/v0.18.1.txt
index b4f8dab37..a4e87d785 100644
--- a/doc/source/whatsnew/v0.18.1.txt
+++ b/doc/source/whatsnew/v0.18.1.txt
@@ -188,6 +188,9 @@ Bug Fixes
 - Bug in ``GroupBy.filter`` when ``dropna=False`` and no groups fulfilled the criteria (:issue:`12768`)
 
 
+- Bug in ``.drop()`` with a non-unique ``MultiIndex``. (:issue:`12701`)
+
+
 
 - Bug in ``Timestamp.__repr__`` that caused ``pprint`` to fail in nested structures (:issue:`12622`)
 - Bug in ``Timedelta.min`` and ``Timedelta.max``, the properties now report the true minimum/maximum ``timedeltas`` as recognized by Pandas. See :ref:`documentation <timedeltas.limitations>`. (:issue:`12727`)
diff --git a/pandas/core/generic.py b/pandas/core/generic.py
index 4f9fa2601..737387e76 100644
--- a/pandas/core/generic.py
+++ b/pandas/core/generic.py
@@ -1881,8 +1881,7 @@ class NDFrame(PandasObject):
             if level is not None:
                 if not isinstance(axis, MultiIndex):
                     raise AssertionError('axis must be a MultiIndex')
-                indexer = ~lib.ismember(
-                    axis.get_level_values(level).values, set(labels))
+                indexer = ~axis.get_level_values(level).isin(labels)
             else:
                 indexer = ~axis.isin(labels)
 
diff --git a/pandas/tests/test_multilevel.py b/pandas/tests/test_multilevel.py
index 51363abd1..2195192f7 100644
--- a/pandas/tests/test_multilevel.py
+++ b/pandas/tests/test_multilevel.py
@@ -1948,6 +1948,25 @@ Thur,Lunch,Yes,51.51,17"""
         expected = self.frame.ix[[0, 2, 3, 6, 7, 9]].T
         assert_frame_equal(result, expected)
 
+    def test_drop_level_nonunique_datetime(self):
+        # GH 12701
+        idx = pd.Index([2, 3, 4, 4, 5], name='id')
+        idxdt = pd.to_datetime(['201603231400',
+                                '201603231500',
+                                '201603231600',
+                                '201603231600',
+                                '201603231700'])
+        df = DataFrame(np.arange(10).reshape(5, 2),
+                       columns=list('ab'), index=idx)
+        df['tstamp'] = idxdt
+        df = df.set_index('tstamp', append=True)
+        ts = pd.Timestamp('201603231600')
+        self.assertFalse(df.index.is_unique)
+
+        result = df.drop(ts, level='tstamp')
+        expected = df.loc[idx != 4]
+        assert_frame_equal(result, expected)
+
     def test_drop_preserve_names(self):
         index = MultiIndex.from_arrays([[0, 0, 0, 1, 1, 1],
                                         [1, 2, 3, 1, 2, 3]],
