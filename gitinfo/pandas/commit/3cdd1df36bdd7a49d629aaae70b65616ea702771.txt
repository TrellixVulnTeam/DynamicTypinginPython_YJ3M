commit 3cdd1df36bdd7a49d629aaae70b65616ea702771
Author: Kevin Sheppard <kevin.sheppard@treasury.gov>
Date:   Fri Jun 12 15:08:51 2015 -0400

    BUG: Check complib values, #4582 and #8874

diff --git a/doc/source/whatsnew/v0.16.2.txt b/doc/source/whatsnew/v0.16.2.txt
index a7f523505..293a9ad2d 100644
--- a/doc/source/whatsnew/v0.16.2.txt
+++ b/doc/source/whatsnew/v0.16.2.txt
@@ -164,4 +164,8 @@ Bug Fixes
 - Bug in ``Panel.apply`` when the result has ndim = 0 (:issue:`10332`)
 - Bug in ``read_hdf`` where ``auto_close`` could not be passed (:issue:`9327`).
 - Bug in ``read_hdf`` where open stores could not be used (:issue:`10330`).
+
 - Bug in adding empty ``DataFrame``s, now results in a ``DataFrame`` that ``.equals`` an empty ``DataFrame`` (:issue:`10181`).
+
+
+- Bug in ``to_hdf`` and ``HDFStore`` which did not check that complib choices were valid (:issue:`4582`, :issue:`8874`).
diff --git a/pandas/io/pytables.py b/pandas/io/pytables.py
index eca855a38..31f649c49 100644
--- a/pandas/io/pytables.py
+++ b/pandas/io/pytables.py
@@ -389,6 +389,10 @@ class HDFStore(StringMixin):
         except ImportError as ex:  # pragma: no cover
             raise ImportError('HDFStore requires PyTables, "{ex}" problem importing'.format(ex=str(ex)))
 
+        if complib not in (None, 'blosc', 'bzip2', 'lzo', 'zlib'):
+            raise ValueError("complib only supports 'blosc', 'bzip2', lzo' "
+                             "or 'zlib' compression.")
+
         self._path = path
         if mode is None:
             mode = 'a'
diff --git a/pandas/io/tests/test_pytables.py b/pandas/io/tests/test_pytables.py
index 4fc24c4cd..6aaeb6652 100644
--- a/pandas/io/tests/test_pytables.py
+++ b/pandas/io/tests/test_pytables.py
@@ -4718,6 +4718,13 @@ class TestHDFStore(tm.TestCase):
             with open(path, mode='r') as store:
                 self.assertRaises(NotImplementedError, read_hdf, store, 'df')
 
+    def test_invalid_complib(self):
+        df = DataFrame(np.random.rand(4, 5),
+                       index=list('abcd'),
+                       columns=list('ABCDE'))
+        with ensure_clean_path(self.path) as path:
+            self.assertRaises(ValueError, df.to_hdf, path, 'df', complib='blosc:zlib')
+
 def _test_sort(obj):
     if isinstance(obj, DataFrame):
         return obj.reindex(sorted(obj.index))
