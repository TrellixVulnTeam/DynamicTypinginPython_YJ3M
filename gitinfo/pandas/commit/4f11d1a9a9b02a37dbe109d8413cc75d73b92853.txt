commit 4f11d1a9a9b02a37dbe109d8413cc75d73b92853
Author: Tom Augspurger <TomAugspurger@users.noreply.github.com>
Date:   Mon Aug 20 13:20:28 2018 -0500

    CI: Pin blosc to 1.14.3 for travis-27 build (#22429)

diff --git a/ci/travis-27.yaml b/ci/travis-27.yaml
index 3e94f3341..9c0347de9 100644
--- a/ci/travis-27.yaml
+++ b/ci/travis-27.yaml
@@ -29,6 +29,7 @@ dependencies:
   - PyCrypto
   - pymysql=0.6.3
   - pytables
+  - blosc=1.14.3
   - python-blosc
   - python-dateutil=2.5.0
   - python=2.7*
diff --git a/pandas/tests/extension/integer/test_integer.py b/pandas/tests/extension/integer/test_integer.py
index f1c833a68..e2248285f 100644
--- a/pandas/tests/extension/integer/test_integer.py
+++ b/pandas/tests/extension/integer/test_integer.py
@@ -770,7 +770,7 @@ def test_groupby_mean_included():
     df = pd.DataFrame({
         "A": ['a', 'b', 'b'],
         "B": [1, None, 3],
-        "C": IntegerArray([1, None, 3], dtype='Int64'),
+        "C": integer_array([1, None, 3], dtype='Int64'),
     })
 
     result = df.groupby("A").sum()
@@ -784,7 +784,7 @@ def test_groupby_mean_included():
 
 def test_astype_nansafe():
     # https://github.com/pandas-dev/pandas/pull/22343
-    arr = IntegerArray([np.nan, 1, 2], dtype="Int8")
+    arr = integer_array([np.nan, 1, 2], dtype="Int8")
 
     with tm.assert_raises_regex(
             ValueError, 'cannot convert float NaN to integer'):
diff --git a/pandas/tests/frame/test_block_internals.py b/pandas/tests/frame/test_block_internals.py
index d096daaa0..3fe1c8417 100644
--- a/pandas/tests/frame/test_block_internals.py
+++ b/pandas/tests/frame/test_block_internals.py
@@ -12,7 +12,7 @@ import numpy as np
 
 from pandas import (DataFrame, Series, Timestamp, date_range, compat,
                     option_context, Categorical)
-from pandas.core.arrays import IntegerArray, IntervalArray
+from pandas.core.arrays import IntervalArray, integer_array
 from pandas.compat import StringIO
 import pandas as pd
 
@@ -440,9 +440,9 @@ starting,ending,measure
     def test_get_numeric_data_extension_dtype(self):
         # GH 22290
         df = DataFrame({
-            'A': IntegerArray([-10, np.nan, 0, 10, 20, 30], dtype='Int64'),
+            'A': integer_array([-10, np.nan, 0, 10, 20, 30], dtype='Int64'),
             'B': Categorical(list('abcabc')),
-            'C': IntegerArray([0, 1, 2, 3, np.nan, 5], dtype='UInt8'),
+            'C': integer_array([0, 1, 2, 3, np.nan, 5], dtype='UInt8'),
             'D': IntervalArray.from_breaks(range(7))})
         result = df._get_numeric_data()
         expected = df.loc[:, ['A', 'C']]
