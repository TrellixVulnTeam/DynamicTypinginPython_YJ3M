commit 8ec8487a4a8362ac94630388f217f273b3ad1525
Author: Varun <k.varun@outlook.com>
Date:   Fri Nov 27 16:11:23 2015 -0500

    Fixes GH11698. added default value of mask and a test case. #11698

diff --git a/doc/source/whatsnew/v0.18.0.txt b/doc/source/whatsnew/v0.18.0.txt
index 6da7947d6..aa43ebd70 100644
--- a/doc/source/whatsnew/v0.18.0.txt
+++ b/doc/source/whatsnew/v0.18.0.txt
@@ -161,14 +161,13 @@ Bug Fixes
 
 
 
-- Bug in ``Timedelta.round`` with negative values (:issue:`11690`)
-
 
 
 
 
 
 
+- Bug in ``Timedelta.round`` with negative values (:issue:`11690`)
 - Bug in ``.loc`` against ``CategoricalIndex`` may result in normal ``Index`` (:issue:`11586`)
 
 
@@ -194,3 +193,5 @@ Bug Fixes
 
 - Bug in ``.loc`` result with duplicated key may have ``Index`` with incorrect dtype (:issue:`11497`)
 - Bug in ``pd.rolling_median`` where memory allocation failed even with sufficient memory (:issue:`11696`)
+
+- Bug in ``df.replace`` while replacing value in mixed dtype ``Dataframe`` (:issue:`11698`)
diff --git a/pandas/core/internals.py b/pandas/core/internals.py
index 1b08140eb..28c845f63 100644
--- a/pandas/core/internals.py
+++ b/pandas/core/internals.py
@@ -588,6 +588,7 @@ class Block(PandasObject):
         compatibility."""
 
         original_to_replace = to_replace
+        mask = isnull(self.values)
 
         # try to replace, if we raise an error, convert to ObjectBlock and retry
         try:
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index 5c4fa5a2e..d60c5a4bd 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -9666,6 +9666,13 @@ class TestDataFrame(tm.TestCase, CheckIndexing,
         df = DataFrame(index=['a', 'b'])
         assert_frame_equal(df, df.replace(5, 7))
 
+        # GH 11698
+        # test for mixed data types.
+        df = pd.DataFrame([('-', pd.to_datetime('20150101')), ('a', pd.to_datetime('20150102'))])
+        df1 = df.replace('-', np.nan)
+        expected_df = pd.DataFrame([(np.nan, pd.to_datetime('20150101')), ('a', pd.to_datetime('20150102'))])
+        assert_frame_equal(df1, expected_df)
+
     def test_replace_list(self):
         obj = {'a': list('ab..'), 'b': list('efgh'), 'c': list('helo')}
         dfobj = DataFrame(obj)
