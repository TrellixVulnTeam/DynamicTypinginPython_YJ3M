commit 282746ae3c05edf7eac5c9583a17aa53ea12b7da
Author: Ka Wo Chen <kawoc@tepper.cmu.edu>
Date:   Tue Jun 2 01:47:31 2015 -0400

    BUG: fix bug where date_format in to_csv is sometimes ignored #10209

diff --git a/doc/source/whatsnew/v0.16.2.txt b/doc/source/whatsnew/v0.16.2.txt
index fbdbac734..4ded52f9b 100644
--- a/doc/source/whatsnew/v0.16.2.txt
+++ b/doc/source/whatsnew/v0.16.2.txt
@@ -59,6 +59,7 @@ Bug Fixes
 - Bug in ``Categorical`` repr with ``display.width`` of ``None`` in Python 3 (:issue:`10087`)
 - Bug where some of the nan funcs do not have consistent return dtypes (:issue:`10251`)
 - Bug in groupby.apply aggregation for Categorical not preserving categories (:issue:`10138`)
+- Bug in ``to_csv`` where ``date_format`` is ignored if the ``datetime`` is fractional (:issue:`10209`)
 
 - Bug in cache updating when consolidating (:issue:`10264`)
 
@@ -92,4 +93,3 @@ Bug Fixes
 
 - Bug to handle masking empty ``DataFrame``(:issue:`10126`)
 - Bug where MySQL interface could not handle numeric table/column names (:issue:`10255`)
-
diff --git a/pandas/core/format.py b/pandas/core/format.py
index 3ab41ded1..429051b58 100644
--- a/pandas/core/format.py
+++ b/pandas/core/format.py
@@ -2114,7 +2114,7 @@ def _get_format_datetime64_from_values(values, date_format):
     is_dates_only = _is_dates_only(values)
     if is_dates_only:
         return date_format or "%Y-%m-%d"
-    return None
+    return date_format
 
 
 class Timedelta64Formatter(GenericArrayFormatter):
diff --git a/pandas/tests/test_format.py b/pandas/tests/test_format.py
index a7129bca5..4d21190e7 100644
--- a/pandas/tests/test_format.py
+++ b/pandas/tests/test_format.py
@@ -2449,6 +2449,27 @@ $1$,$2$
         expected_float_format = ';col1;col2;col3\n0;1;a;10,10\n'
         self.assertEqual(df.to_csv(decimal=',',sep=';', float_format = '%.2f'), expected_float_format)
 
+    def test_to_csv_date_format(self):
+        # GH 10209
+        df_sec = DataFrame({'A': pd.date_range('20130101',periods=5,freq='s')})
+        df_day = DataFrame({'A': pd.date_range('20130101',periods=5,freq='d')})
+
+        expected_default_sec = ',A\n0,2013-01-01 00:00:00\n1,2013-01-01 00:00:01\n2,2013-01-01 00:00:02' + \
+                               '\n3,2013-01-01 00:00:03\n4,2013-01-01 00:00:04\n'
+        self.assertEqual(df_sec.to_csv(), expected_default_sec)
+
+        expected_ymdhms_day = ',A\n0,2013-01-01 00:00:00\n1,2013-01-02 00:00:00\n2,2013-01-03 00:00:00' + \
+                              '\n3,2013-01-04 00:00:00\n4,2013-01-05 00:00:00\n'
+        self.assertEqual(df_day.to_csv(date_format='%Y-%m-%d %H:%M:%S'), expected_ymdhms_day)
+
+        expected_ymd_sec = ',A\n0,2013-01-01\n1,2013-01-01\n2,2013-01-01\n3,2013-01-01\n4,2013-01-01\n'
+        self.assertEqual(df_sec.to_csv(date_format='%Y-%m-%d'), expected_ymd_sec)
+
+        expected_default_day = ',A\n0,2013-01-01\n1,2013-01-02\n2,2013-01-03\n3,2013-01-04\n4,2013-01-05\n'
+        self.assertEqual(df_day.to_csv(), expected_default_day)
+        self.assertEqual(df_day.to_csv(date_format='%Y-%m-%d'), expected_default_day)
+
+
 class TestSeriesFormatting(tm.TestCase):
     _multiprocess_can_split_ = True
 
