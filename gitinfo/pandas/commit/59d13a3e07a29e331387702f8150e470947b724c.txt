commit 59d13a3e07a29e331387702f8150e470947b724c
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Tue Aug 9 23:07:54 2011 -0400

    BUG: unstacking with more than 2 levels was not correct

diff --git a/pandas/core/series.py b/pandas/core/series.py
index 5fcef5615..db78e7486 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -1539,10 +1539,11 @@ def unstack(values, index, level=-1):
 
     # make the mask
     group_index = sorted_labels[0]
-    prev_levsize = len(new_levels[0])
-    for ilev, ilab in zip(new_levels[1:], sorted_labels[1:-1]):
-        group_index = prev_levsize * ilab
-        prev_levsize = len(ilev)
+    prev_stride = np.prod(map(len, new_levels[1:]))
+
+    for lev, lab in zip(new_levels[1:], sorted_labels[1:-1]):
+        group_index = group_index * prev_stride + lab
+        prev_stride /= len(lev)
 
     group_mask = np.zeros(full_shape[0], dtype=bool)
     group_mask.put(group_index, True)
@@ -1557,12 +1558,6 @@ def unstack(values, index, level=-1):
 
     result_labels = []
     for cur in sorted_labels[:-1]:
-        # bit of a kludgy way to get at the label
-        # labels = np.empty(full_shape, dtype=np.int32)
-        # labels.fill(-1)
-        # np.putmask(labels.ravel(), mask, cur)
-        # result_labels.append(labels.max(1).take(compressor))
-
         result_labels.append(cur.take(compressor))
 
     # place the values
diff --git a/pandas/tests/test_series.py b/pandas/tests/test_series.py
index 4d5c4c2a3..ae4179c45 100644
--- a/pandas/tests/test_series.py
+++ b/pandas/tests/test_series.py
@@ -961,6 +961,18 @@ class TestSeries(unittest.TestCase):
         unstacked = s.unstack(level=0)
         assert_frame_equal(unstacked, expected.T)
 
+        index = MultiIndex(levels=[['bar'], ['one', 'two', 'three'], [0, 1]],
+                           labels=[[0, 0, 0, 0, 0, 0],
+                                   [0, 1, 2, 0, 1, 2],
+                                   [0, 1, 0, 1, 0, 1]])
+        s = Series(np.random.randn(6), index=index)
+        exp_index = MultiIndex(levels=[['one', 'two', 'three'], [0, 1]],
+                               labels=[[0, 1, 2, 0, 1, 2],
+                                       [0, 1, 0, 1, 0, 1]])
+        expected = DataFrame({'bar' : s.values}, index=exp_index).sortlevel(0)
+        unstacked = s.unstack(0)
+        assert_frame_equal(unstacked, expected)
+
 #-------------------------------------------------------------------------------
 # TimeSeries-specific
 
