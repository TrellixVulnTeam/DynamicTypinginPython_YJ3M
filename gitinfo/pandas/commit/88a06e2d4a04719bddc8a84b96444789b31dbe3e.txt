commit 88a06e2d4a04719bddc8a84b96444789b31dbe3e
Author: jreback <jeff@reback.net>
Date:   Thu Dec 20 10:25:49 2012 -0500

    DOC: docstring updates

diff --git a/RELEASE.rst b/RELEASE.rst
index 6a9fd92a4..d3c70e736 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -33,7 +33,7 @@ pandas 0.10.1
 
   - ``HDFStore``
     - enables storing of multi-index dataframes
-    - support data column indexing and selection
+    - support data column indexing and selection, via ``columns`` keyword in append
     - support write chunking to reduce memory footprint, via ``chunksize`` keywork to append
     - support automagic indexing via ``index`` keyworkd to append
     - support ``expectedrows`` keyword in append to inform ``PyTables`` about the expected tablesize
diff --git a/doc/source/io.rst b/doc/source/io.rst
index 036600024..ef611780d 100644
--- a/doc/source/io.rst
+++ b/doc/source/io.rst
@@ -1241,6 +1241,13 @@ Advanced Queries
 
    concat([ store.select('df_dc',c) for c in [ crit1, crit2 ] ])
 
+If you want to inspect the table object, retrieve via ``get_table``. You could use this progamatically to say get the number of rows in the table.
+
+.. ipython:: python
+
+   store.get_table('df_dc').nrows
+
+
 Delete from a Table
 ~~~~~~~~~~~~~~~~~~~
 You can delete from a table selectively by specifying a ``where``. In deleting rows, it is important to understand the ``PyTables`` deletes rows by erasing the rows, then **moving** the following data. Thus deleting can potentially be a very expensive operation depending on the orientation of your data. This is especially true in higher dimensional objects (``Panel`` and ``Panel4D``). To get optimal deletion speed, it pays to have the dimension you are deleting be the first of the ``indexables``.
diff --git a/doc/source/v0.10.1.txt b/doc/source/v0.10.1.txt
index 6e6b2f236..b60228323 100644
--- a/doc/source/v0.10.1.txt
+++ b/doc/source/v0.10.1.txt
@@ -23,7 +23,7 @@ HDFStore
 
    os.remove('store.h5')
 
-You can designate (and index) certain columns that you want to be able to perform queries on a table.
+You can designate (and index) certain columns that you want to be able to perform queries on a table, by passing a list to ``columns``
 
 .. ipython:: python
 
diff --git a/pandas/io/pytables.py b/pandas/io/pytables.py
index 10a7227b5..8147c9d5e 100644
--- a/pandas/io/pytables.py
+++ b/pandas/io/pytables.py
@@ -344,7 +344,12 @@ class HDFStore(object):
         Parameters
         ----------
         key : object
+
+        Optional Parameters
+        -------------------
         where : list of Term (or convertable) objects, optional
+        start : integer (defaults to None), row number to start selection
+        stop  : integer (defaults to None), row number to stop selection
 
         """
         group = self.get_node(key)
@@ -384,9 +389,12 @@ class HDFStore(object):
         ----------
         key : string
             Node to remove or delete rows from
-        where : list
-            For Table node, delete specified rows. See HDFStore.select for more
-            information
+
+        Optional Parameters
+        -------------------
+        where : list of Term (or convertable) objects, optional
+        start : integer (defaults to None), row number to start selection
+        stop  : integer (defaults to None), row number to stop selection
 
         Returns
         -------
@@ -418,14 +426,14 @@ class HDFStore(object):
         Parameters
         ----------
         key : object
-        value : {Series, DataFrame, Panel}
+        value : {Series, DataFrame, Panel, Panel4D}
 
         Optional Parameters
         -------------------
-        columns : list of columns to create as data columns
+        columns      : list of columns to create as data columns
         min_itemsize : dict of columns that specify minimum string sizes
-        nan_rep : string to use as string nan represenation
-        chunksize : size to chunk the writing
+        nan_rep      : string to use as string nan represenation
+        chunksize    : size to chunk the writing
         expectedrows : expected TOTAL row size of this table
 
         Notes
