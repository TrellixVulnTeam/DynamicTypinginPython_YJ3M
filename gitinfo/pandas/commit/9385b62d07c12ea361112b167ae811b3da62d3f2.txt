commit 9385b62d07c12ea361112b167ae811b3da62d3f2
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Sat Apr 14 16:21:20 2012 -0400

    ENH: more legacy time rule support, close #1041

diff --git a/pandas/core/datetools.py b/pandas/core/datetools.py
index 8b020dabb..4bac15f98 100644
--- a/pandas/core/datetools.py
+++ b/pandas/core/datetools.py
@@ -726,7 +726,7 @@ def _interval_group(freqstr):
 
 def _get_freq_code(freqstr):
     if isinstance(freqstr, DateOffset):
-        freqstr = (getOffsetName(freqstr), freqstr.n)
+        freqstr = (get_offset_name(freqstr), freqstr.n)
 
     if isinstance(freqstr, tuple):
         if (isinstance(freqstr[0], (int, long)) and
@@ -1943,10 +1943,11 @@ _offset_map = {
     'BAS-NOV' : BYearBegin(month=11),
     'BAS-DEC' : BYearBegin(month=12),
     # Quarterly - Calendar
+    # 'Q'     : QuarterEnd(startingMonth=3),
+
     'Q-JAN' : QuarterEnd(startingMonth=1),
     'Q-FEB' : QuarterEnd(startingMonth=2),
     'Q-MAR' : QuarterEnd(startingMonth=3),
-    'Q'     : QuarterEnd(startingMonth=3),
     'Q-APR' : QuarterEnd(startingMonth=4),
     'Q-MAY' : QuarterEnd(startingMonth=5),
     'Q-JUN' : QuarterEnd(startingMonth=6),
@@ -1957,8 +1958,9 @@ _offset_map = {
     'Q-NOV' : QuarterEnd(startingMonth=11),
     'Q-DEC' : QuarterEnd(startingMonth=12),
     # Quarterly - Calendar (Start)
+    # 'QS'     : QuarterBegin(startingMonth=1),
+
     'QS-JAN' : QuarterBegin(startingMonth=1),
-    'QS'     : QuarterBegin(startingMonth=1),
     'QS-FEB' : QuarterBegin(startingMonth=2),
     'QS-MAR' : QuarterBegin(startingMonth=3),
     'QS-APR' : QuarterBegin(startingMonth=4),
@@ -1974,7 +1976,9 @@ _offset_map = {
     'BQ-JAN' : BQuarterEnd(startingMonth=1),
     'BQ-FEB' : BQuarterEnd(startingMonth=2),
     'BQ-MAR' : BQuarterEnd(startingMonth=3),
-    'BQ'     : BQuarterEnd(startingMonth=3),
+
+    # 'BQ'     : BQuarterEnd(startingMonth=3),
+
     'BQ-APR' : BQuarterEnd(startingMonth=4),
     'BQ-MAY' : BQuarterEnd(startingMonth=5),
     'BQ-JUN' : BQuarterEnd(startingMonth=6),
@@ -2056,6 +2060,8 @@ _rule_aliases = {
 }
 
 
+_legacy_reverse_map = dict((v, k) for k, v in _rule_aliases.iteritems())
+
 for i, weekday in enumerate(['MON', 'TUE', 'WED', 'THU', 'FRI']):
     for iweek in xrange(4):
         _offset_map['WOM@%d%s' % (iweek + 1, weekday)] = \
@@ -2174,13 +2180,13 @@ getOffset = get_offset
 def hasOffsetName(offset):
     return offset in _offset_names
 
-def getOffsetName(offset):
+def get_offset_name(offset):
     """
     Return rule name associated with a DateOffset object
 
     Example
     -------
-    getOffsetName(BMonthEnd(1)) --> 'EOM'
+    get_offset_name(BMonthEnd(1)) --> 'EOM'
     """
     name = _offset_names.get(offset)
 
@@ -2189,6 +2195,15 @@ def getOffsetName(offset):
     else:
         raise Exception('Bad rule given: %s!' % offset)
 
+def get_legacy_offset_name(offset):
+    """
+    Return the pre pandas 0.8.0 name for the date offset
+    """
+    name = _offset_names.get(offset)
+    return _legacy_reverse_map.get(name, name)
+
+get_offset_name = get_offset_name
+
 def get_standard_freq(freq):
     """
     Return the standardized frequency string
@@ -2197,7 +2212,7 @@ def get_standard_freq(freq):
         return None
 
     if isinstance(freq, DateOffset):
-        return getOffsetName(freq)
+        return get_offset_name(freq)
 
     code, stride = _get_freq_code(freq)
     return _get_freq_str(code, stride)
diff --git a/pandas/tests/test_datetools.py b/pandas/tests/test_datetools.py
index f9f8ec4bf..3d3663dd3 100644
--- a/pandas/tests/test_datetools.py
+++ b/pandas/tests/test_datetools.py
@@ -7,7 +7,7 @@ from pandas.core.datetools import (
     BYearBegin, QuarterBegin, BQuarterBegin, BMonthBegin,
     DateOffset, Week, YearBegin, YearEnd, Hour, Minute, Second,
     WeekOfMonth, format, ole2datetime, QuarterEnd, to_datetime, normalize_date,
-    get_offset, getOffsetName, inferTimeRule, hasOffsetName,
+    get_offset, get_offset_name, inferTimeRule, hasOffsetName,
     _dt_box, _dt_unbox, parse_time_string, get_standard_freq,
     _offset_map)
 
@@ -1266,16 +1266,16 @@ def test_hasOffsetName():
     assert hasOffsetName(BDay())
     assert not hasOffsetName(BDay(2))
 
-def test_getOffsetName():
-    assert_raises(Exception, getOffsetName, BDay(2))
+def test_get_offset_name():
+    assert_raises(Exception, get_offset_name, BDay(2))
 
-    assert getOffsetName(BDay()) == 'B'
-    assert getOffsetName(BMonthEnd()) == 'BM'
-    assert getOffsetName(Week(weekday=0)) == 'W-MON'
-    assert getOffsetName(Week(weekday=1)) =='W-TUE'
-    assert getOffsetName(Week(weekday=2)) == 'W-WED'
-    assert getOffsetName(Week(weekday=3)) == 'W-THU'
-    assert getOffsetName(Week(weekday=4)) == 'W-FRI'
+    assert get_offset_name(BDay()) == 'B'
+    assert get_offset_name(BMonthEnd()) == 'BM'
+    assert get_offset_name(Week(weekday=0)) == 'W-MON'
+    assert get_offset_name(Week(weekday=1)) =='W-TUE'
+    assert get_offset_name(Week(weekday=2)) == 'W-WED'
+    assert get_offset_name(Week(weekday=3)) == 'W-THU'
+    assert get_offset_name(Week(weekday=4)) == 'W-FRI'
 
 
 def test_get_offset():
diff --git a/pandas/tests/test_timeseries.py b/pandas/tests/test_timeseries.py
index fc689ca21..ac0479614 100644
--- a/pandas/tests/test_timeseries.py
+++ b/pandas/tests/test_timeseries.py
@@ -529,6 +529,11 @@ class TestLegacySupport(unittest.TestCase):
             new_rng = date_range(start, end, freq=new_freq)
             self.assert_(old_rng.equals(new_rng))
 
+            # test get_legacy_offset_name
+            offset = datetools.get_offset(new_freq)
+            old_name = datetools.get_legacy_offset_name(offset)
+            self.assertEquals(old_name, old_freq)
+
     def test_ms_vs_MS(self):
         left = datetools.get_offset('ms')
         right = datetools.get_offset('MS')
