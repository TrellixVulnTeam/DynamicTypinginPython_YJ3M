commit 94c73ec95223d3dbd4c47a905bf67c04fba285ac
Author: David Bew <david.bew@gmail.com>
Date:   Mon Jun 16 17:10:40 2014 +0100

    Fix cache key collision and add test for cache key distinctness.

diff --git a/pandas/tseries/tests/test_timezones.py b/pandas/tseries/tests/test_timezones.py
index e6da490e1..b1d8bdd9f 100644
--- a/pandas/tseries/tests/test_timezones.py
+++ b/pandas/tseries/tests/test_timezones.py
@@ -805,6 +805,21 @@ class TestTimeZoneSupportDateutil(TestTimeZoneSupportPytz):
         self.assertEqual(ts, ts.tz_convert(dateutil.tz.tzutc()))
 
 
+class TestTimeZoneCacheKey(tm.TestCase):
+    def test_cache_keys_are_distinct_for_pytz_vs_dateutil(self):
+        tzs = pytz.common_timezones
+        for tz_name in tzs:
+            if tz_name == 'UTC':
+                # skip utc as it's a special case in dateutil
+                continue
+            tz_p = tslib.maybe_get_tz(tz_name)
+            tz_d = tslib.maybe_get_tz('dateutil/' + tz_name)
+            if tz_d is None:
+                # skip timezones that dateutil doesn't know about.
+                continue
+            self.assertNotEqual(tslib._p_tz_cache_key(tz_p), tslib._p_tz_cache_key(tz_d))
+
+
 class TestTimeZones(tm.TestCase):
     _multiprocess_can_split_ = True
 
diff --git a/pandas/tslib.pyx b/pandas/tslib.pyx
index c36d34b21..2e0e8af3f 100644
--- a/pandas/tslib.pyx
+++ b/pandas/tslib.pyx
@@ -1962,6 +1962,11 @@ cdef inline bint _treat_tz_as_dateutil(object tz):
     return hasattr(tz, '_trans_list') and hasattr(tz, '_trans_idx')
 
 
+def _p_tz_cache_key(tz):
+    ''' Python interface for cache function to facilitate testing.'''
+    return _tz_cache_key(tz)
+
+
 cdef inline object _tz_cache_key(object tz):
     """
     Return the key in the cache for the timezone info object or None if unknown.
@@ -1982,7 +1987,7 @@ cdef inline object _tz_cache_key(object tz):
             raise ValueError('Bad tz filename. Dateutil on python 3 on windows has a bug which causes tzfile._filename to be the same for all '
                              'timezone files. Please construct dateutil timezones implicitly by passing a string like "dateutil/Europe/London" '
                              'when you construct your pandas objects instead of passing a timezone object. See https://github.com/pydata/pandas/pull/7362')
-        return tz._filename
+        return 'dateutil' + tz._filename
     else:
         return None
 
