commit 606178a91c4003f589ec64b08f853164fd45ada2
Author: Mak Sze Chun <makszechun@gmail.com>
Date:   Tue Jun 25 20:34:25 2019 +0800

    Remove pandas.core.index.datetimelike from MyPy Blacklist  (#26280)

diff --git a/mypy.ini b/mypy.ini
index eea6a3b55..f8b37ee5b 100644
--- a/mypy.ini
+++ b/mypy.ini
@@ -3,7 +3,4 @@ ignore_missing_imports=True
 follow_imports=silent
 
 [mypy-pandas.conftest,pandas.tests.*]
-ignore_errors=True
-
-[mypy-pandas.core.indexes.datetimelike]
-ignore_errors=True
+ignore_errors=True
\ No newline at end of file
diff --git a/pandas/core/algorithms.py b/pandas/core/algorithms.py
index 932ac71a2..ff1313c21 100644
--- a/pandas/core/algorithms.py
+++ b/pandas/core/algorithms.py
@@ -3,6 +3,7 @@ Generic data algorithms. This module is experimental at the moment and not
 intended for public consumption
 """
 from textwrap import dedent
+from typing import Dict
 from warnings import catch_warnings, simplefilter, warn
 
 import numpy as np
@@ -27,7 +28,7 @@ from pandas.core.dtypes.missing import isna, na_value_for_dtype
 
 from pandas.core import common as com
 
-_shared_docs = {}
+_shared_docs = {}  # type: Dict[str, str]
 
 
 # --------------- #
diff --git a/pandas/core/arrays/base.py b/pandas/core/arrays/base.py
index 51ad01dd6..d1dfb6b5e 100644
--- a/pandas/core/arrays/base.py
+++ b/pandas/core/arrays/base.py
@@ -6,7 +6,7 @@
    without warning.
 """
 import operator
-from typing import Any, Callable, Optional, Sequence, Tuple, Union
+from typing import Any, Callable, Dict, Optional, Sequence, Tuple, Union
 
 import numpy as np
 
@@ -26,7 +26,7 @@ from pandas.core import ops
 
 _not_implemented_message = "{} does not implement {}."
 
-_extension_array_shared_docs = dict()
+_extension_array_shared_docs = dict()  # type: Dict[str, str]
 
 
 class ExtensionArray:
diff --git a/pandas/core/indexes/datetimelike.py b/pandas/core/indexes/datetimelike.py
index abe2853c7..7c90fb11a 100644
--- a/pandas/core/indexes/datetimelike.py
+++ b/pandas/core/indexes/datetimelike.py
@@ -2,6 +2,7 @@
 Base and utility classes for tseries type pandas objects.
 """
 import operator
+from typing import Set
 import warnings
 
 import numpy as np
@@ -62,14 +63,17 @@ class DatetimeIndexOpsMixin(ExtensionOpsMixin):
     # DatetimeLikeArrayMixin assumes subclasses are mutable, so these are
     # properties there.  They can be made into cache_readonly for Index
     # subclasses bc they are immutable
-    inferred_freq = cache_readonly(DatetimeLikeArrayMixin.inferred_freq.fget)
-    _isnan = cache_readonly(DatetimeLikeArrayMixin._isnan.fget)
-    hasnans = cache_readonly(DatetimeLikeArrayMixin._hasnans.fget)
+    inferred_freq = cache_readonly(
+        DatetimeLikeArrayMixin.inferred_freq.fget)  # type: ignore
+    _isnan = cache_readonly(DatetimeLikeArrayMixin._isnan.fget)  # type: ignore
+    hasnans = cache_readonly(
+        DatetimeLikeArrayMixin._hasnans.fget)  # type: ignore
     _hasnans = hasnans  # for index / array -agnostic code
-    _resolution = cache_readonly(DatetimeLikeArrayMixin._resolution.fget)
-    resolution = cache_readonly(DatetimeLikeArrayMixin.resolution.fget)
+    _resolution = cache_readonly(
+        DatetimeLikeArrayMixin._resolution.fget)  # type: ignore
+    resolution = cache_readonly(
+        DatetimeLikeArrayMixin.resolution.fget)  # type: ignore
 
-    _box_values = ea_passthrough(DatetimeLikeArrayMixin._box_values)
     _maybe_mask_results = ea_passthrough(
         DatetimeLikeArrayMixin._maybe_mask_results)
     __iter__ = ea_passthrough(DatetimeLikeArrayMixin.__iter__)
@@ -131,11 +135,11 @@ class DatetimeIndexOpsMixin(ExtensionOpsMixin):
     # Abstract data attributes
 
     @property
-    def values(self) -> np.ndarray:
+    def values(self):
         # Note: PeriodArray overrides this to return an ndarray of objects.
         return self._data._data
 
-    @property
+    @property  # type: ignore # https://github.com/python/mypy/issues/1362
     @Appender(DatetimeLikeArrayMixin.asi8.__doc__)
     def asi8(self):
         return self._data.asi8
@@ -762,9 +766,9 @@ class DatetimelikeDelegateMixin(PandasDelegate):
         boxed in an index, after being returned from the array
     """
     # raw_methods : dispatch methods that shouldn't be boxed in an Index
-    _raw_methods = set()
+    _raw_methods = set()  # type: Set[str]
     # raw_properties : dispatch properties that shouldn't be boxed in an Index
-    _raw_properties = set()
+    _raw_properties = set()  # type: Set[str]
     name = None
     _data = None
 
