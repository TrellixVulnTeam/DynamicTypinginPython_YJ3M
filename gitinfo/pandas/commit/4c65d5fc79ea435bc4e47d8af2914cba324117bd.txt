commit 4c65d5fc79ea435bc4e47d8af2914cba324117bd
Author: watercrossing <ingolf.becker@googlemail.com>
Date:   Thu Jan 19 15:13:45 2017 -0500

    Bug in groupby.get_group on categoricalindex
    
    closes #15155
    
    Author: watercrossing <ingolf.becker@googlemail.com>
    
    Closes #15163 from watercrossing/indexgroup and squashes the following commits:
    
    742d4a5 [watercrossing] BUG: GroupBy.get_group failing with a categorical grouper (#15155)

diff --git a/doc/source/whatsnew/v0.20.0.txt b/doc/source/whatsnew/v0.20.0.txt
index c5510d4b8..0c065937c 100644
--- a/doc/source/whatsnew/v0.20.0.txt
+++ b/doc/source/whatsnew/v0.20.0.txt
@@ -388,6 +388,7 @@ Bug Fixes
 
 - Bug in compat for passing long integers to ``Timestamp.replace`` (:issue:`15030`)
 - Bug in ``.loc`` that would not return the correct dtype for scalar access for a DataFrame (:issue:`11617`)
+- Bug in ``GroupBy.get_group()`` failing with a categorical grouper (:issue:`15155`)
 
 
 
diff --git a/pandas/indexes/category.py b/pandas/indexes/category.py
index 2c89f7297..e3ffa40f5 100644
--- a/pandas/indexes/category.py
+++ b/pandas/indexes/category.py
@@ -255,6 +255,9 @@ class CategoricalIndex(Index, base.PandasDelegate):
     def ordered(self):
         return self._data.ordered
 
+    def _reverse_indexer(self):
+        return self._data._reverse_indexer()
+
     def __contains__(self, key):
         hash(key)
         return key in self.values
diff --git a/pandas/tests/groupby/test_categorical.py b/pandas/tests/groupby/test_categorical.py
index 99bea3a10..81aa18342 100644
--- a/pandas/tests/groupby/test_categorical.py
+++ b/pandas/tests/groupby/test_categorical.py
@@ -67,6 +67,26 @@ class TestGroupByCategorical(tm.TestCase):
              'E': np.random.randn(11),
              'F': np.random.randn(11)})
 
+    def test_level_groupby_get_group(self):
+        # GH15155
+        df = DataFrame(data=np.arange(2, 22, 2),
+                       index=MultiIndex(
+                           levels=[pd.CategoricalIndex(["a", "b"]), range(10)],
+                           labels=[[0] * 5 + [1] * 5, range(10)],
+                           names=["Index1", "Index2"]))
+        g = df.groupby(level=["Index1"])
+
+        # expected should equal test.loc[["a"]]
+        # GH15166
+        expected = DataFrame(data=np.arange(2, 12, 2),
+                             index=pd.MultiIndex(levels=[pd.CategoricalIndex(
+                                 ["a", "b"]), range(5)],
+            labels=[[0] * 5, range(5)],
+            names=["Index1", "Index2"]))
+        result = g.get_group('a')
+
+        assert_frame_equal(result, expected)
+
     def test_apply_use_categorical_name(self):
         from pandas import qcut
         cats = qcut(self.df.C, 4)
