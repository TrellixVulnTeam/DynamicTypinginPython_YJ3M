commit 7a168fef67faaf2d54ec6c7f0d4a5bb7e356c361
Author: Vytautas Jancauskas <unaudio@gmail.com>
Date:   Thu Jul 19 22:56:11 2012 +0300

    Small improvements

diff --git a/pandas/tools/rplot.py b/pandas/tools/rplot.py
index 50f1d1422..93c40dadb 100644
--- a/pandas/tools/rplot.py
+++ b/pandas/tools/rplot.py
@@ -3,16 +3,21 @@ import scipy.stats as stats
 import matplotlib.pyplot as plt
 
 class RPlot:
-	def __init__(self, data):
+	def __init__(self, data, x=None, y=None):
 		self.data = data
 		self.ax = plt.gca()
 		self.aes = {}
+		if x is not None and y is None:
+			self.aes['x'] = x
+		elif x is not None and y is not None:
+			self.aes['x'] = x
+			self.aes['y'] = y
 
 	def __add__(self, other):
-		other.plot(self.ax, self.data)
+		other.plot(self)
 
 class GeomPoint:
-	def __init__(self, x, y, marker='o', colour='grey', size=20, alpha=1.0):
+	def __init__(self, x=None, y=None, marker='o', colour='grey', size=20, alpha=1.0):
 		self.x = x
 		self.y = y
 		self.marker = marker
@@ -20,12 +25,16 @@ class GeomPoint:
 		self.size = size
 		self.alpha = alpha
 
-	def plot(self, ax, data):
-		ax.scatter(data[self.x], data[self.y], c=self.colour, marker=self.marker, s=self.size, alpha=self.alpha)
-
+	def plot(self, rplot):
+		aes = rplot.aes
+		if self.x is not None:
+			aes['x'] = self.x
+		if self.y is not None:
+			aes['y'] = self.y
+		rplot.ax.scatter(rplot.data[aes['x']], rplot.data[aes['y']], c=self.colour, marker=self.marker, s=self.size, alpha=self.alpha)
 
 class GeomDensity2d:
-	def __init__(self, x, y, weight=1.0, colour='grey', size=0.5, linetype=1.0, alpha=1.0):
+	def __init__(self, x=None, y=None, weight=1.0, colour='grey', size=0.5, linetype=1.0, alpha=1.0):
 		self.x = x
 		self.y = y
 		self.weight = weight
@@ -34,9 +43,14 @@ class GeomDensity2d:
 		self.linetype = linetype
 		self.alpha = alpha
 
-	def plot(self, ax, data):
-		x = data[self.x]
-		y = data[self.y]
+	def plot(self, rplot):
+		aes = rplot.aes
+		if self.x is not None:
+			aes['x'] = self.x
+		if self.y is not None:
+			aes['y'] = self.y
+		x = rplot.data[aes['x']]
+		y = rplot.data[aes['y']]
 		rvs = np.array([x, y])
 		x_min = x.min()
 		x_max = x.max()
@@ -47,4 +61,4 @@ class GeomDensity2d:
 		values = np.vstack([x, y])
 		kernel = stats.gaussian_kde(values)
 		Z = np.reshape(kernel(positions).T, X.shape)
-		ax.contour(Z, alpha=alpha, extent=[x_min, x_max, y_min, y_max])
\ No newline at end of file
+		rplot.ax.contour(Z, alpha=self.alpha, extent=[x_min, x_max, y_min, y_max])
