commit 7f02a46b973c1cfd2f6042e2d5a89922e38af5ef
Author: Sinhrks <sinhrks@gmail.com>
Date:   Sun Jul 24 22:52:46 2016 +0900

    TST: add timedelta describe (#13769)

diff --git a/pandas/tests/frame/test_analytics.py b/pandas/tests/frame/test_analytics.py
index b71235a8f..370f3b5ee 100644
--- a/pandas/tests/frame/test_analytics.py
+++ b/pandas/tests/frame/test_analytics.py
@@ -295,6 +295,43 @@ class TestDataFrameAnalytics(tm.TestCase, TestData):
         self.assertEqual(result.columns.freq, 'MS')
         self.assertEqual(result.columns.tz, expected.columns.tz)
 
+    def test_describe_timedelta_values(self):
+        # GH 6145
+        t1 = pd.timedelta_range('1 days', freq='D', periods=5)
+        t2 = pd.timedelta_range('1 hours', freq='H', periods=5)
+        df = pd.DataFrame({'t1': t1, 't2': t2})
+
+        expected = DataFrame({'t1': [5, pd.Timedelta('3 days'),
+                                     df.iloc[:, 0].std(),
+                                     pd.Timedelta('1 days'),
+                                     pd.Timedelta('2 days'),
+                                     pd.Timedelta('3 days'),
+                                     pd.Timedelta('4 days'),
+                                     pd.Timedelta('5 days')],
+                              't2': [5, pd.Timedelta('3 hours'),
+                                     df.iloc[:, 1].std(),
+                                     pd.Timedelta('1 hours'),
+                                     pd.Timedelta('2 hours'),
+                                     pd.Timedelta('3 hours'),
+                                     pd.Timedelta('4 hours'),
+                                     pd.Timedelta('5 hours')]},
+                             index=['count', 'mean', 'std', 'min', '25%',
+                                    '50%', '75%', 'max'])
+
+        res = df.describe()
+        tm.assert_frame_equal(res, expected)
+
+        exp_repr = ("                           t1                      t2\n"
+                    "count                       5                       5\n"
+                    "mean          3 days 00:00:00         0 days 03:00:00\n"
+                    "std    1 days 13:56:50.394919  0 days 01:34:52.099788\n"
+                    "min           1 days 00:00:00         0 days 01:00:00\n"
+                    "25%           2 days 00:00:00         0 days 02:00:00\n"
+                    "50%           3 days 00:00:00         0 days 03:00:00\n"
+                    "75%           4 days 00:00:00         0 days 04:00:00\n"
+                    "max           5 days 00:00:00         0 days 05:00:00")
+        self.assertEqual(repr(res), exp_repr)
+
     def test_reduce_mixed_frame(self):
         # GH 6806
         df = DataFrame({
