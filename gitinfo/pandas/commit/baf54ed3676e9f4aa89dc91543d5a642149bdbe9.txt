commit baf54ed3676e9f4aa89dc91543d5a642149bdbe9
Author: Chang She <changshe@gmail.com>
Date:   Thu Dec 13 11:43:39 2012 -0500

    BUG: Series.str.split bug if split on more than 1 char #2513

diff --git a/pandas/core/strings.py b/pandas/core/strings.py
index 6d96dba73..7dc59d358 100644
--- a/pandas/core/strings.py
+++ b/pandas/core/strings.py
@@ -392,7 +392,7 @@ def str_center(arr, width):
     return str_pad(arr, width, side='both')
 
 
-def str_split(arr, pat=None, n=-1):
+def str_split(arr, pat=None, n=None):
     """
     Split each string (a la re.split) in array by given pattern, propagating NA
     values
@@ -401,18 +401,28 @@ def str_split(arr, pat=None, n=-1):
     ----------
     pat : string, default None
         String or regular expression to split on. If None, splits on whitespace
-    n : int, default -1 (all)
+    n : int, default None (all)
+
+    Notes
+    -----
+    Both 0 and -1 will be interpreted as return all splits
 
     Returns
     -------
     split : array
     """
     if pat is None:
+        if n is None or n == 0:
+            n = -1
         f = lambda x: x.split()
     else:
         if len(pat) == 1:
+            if n is None or n == 0:
+                n = -1
             f = lambda x: x.split(pat, n)
         else:
+            if n is None or n == -1:
+                n = 0
             regex = re.compile(pat)
             f = lambda x: regex.split(x, maxsplit=n)
 
diff --git a/pandas/tests/test_strings.py b/pandas/tests/test_strings.py
index a9b5b908d..3d24bc36a 100644
--- a/pandas/tests/test_strings.py
+++ b/pandas/tests/test_strings.py
@@ -456,6 +456,11 @@ class TestStringMethods(unittest.TestCase):
         exp = Series([['a', 'b', 'c'], ['c', 'd', 'e'], NA, ['f', 'g', 'h']])
         tm.assert_series_equal(result, exp)
 
+        #more than one char
+        values = Series(['a__b__c', 'c__d__e', NA, 'f__g__h'])
+        result = values.str.split('__')
+        tm.assert_series_equal(result, exp)
+
         #mixed
         mixed = Series(['a_b_c', NA, 'd_e_f', True, datetime.today(),
                         None, 1, 2.])
@@ -482,6 +487,24 @@ class TestStringMethods(unittest.TestCase):
         result = s.str.split()
         self.assertEquals(result[1], ['Travis', 'Oliphant'])
 
+    def test_split_maxsplit(self):
+        #re.split 0, str.split -1
+        s = Series(['bd asdf jfg', 'kjasdflqw asdfnfk'])
+
+        result = s.str.split(n=-1)
+        xp = s.str.split()
+        tm.assert_series_equal(result, xp)
+
+        result = s.str.split(n=0)
+        tm.assert_series_equal(result, xp)
+
+        xp = s.str.split('asdf')
+        result = s.str.split('asdf', n=0)
+        tm.assert_series_equal(result, xp)
+
+        result = s.str.split('asdf', n=-1)
+        tm.assert_series_equal(result, xp)
+
     def test_pipe_failures(self):
         # #2119
         s = Series(['A|B|C'])
