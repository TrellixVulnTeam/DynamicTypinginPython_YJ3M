commit bd7c7e816d276f1b22370502c8c5914500d0fb61
Author: jreback <jeff@reback.net>
Date:   Mon Aug 26 10:49:38 2013 -0400

    BUG: GH 4667 setitem error/dtype wrong with Series/Frame when setting with None

diff --git a/doc/source/release.rst b/doc/source/release.rst
index 721276dd3..16179cdec 100644
--- a/doc/source/release.rst
+++ b/doc/source/release.rst
@@ -285,6 +285,7 @@ See :ref:`Internal Refactoring<whatsnew_0130.refactoring>`
   - Fix an issue with CacheableOffset not properly being used by many DateOffset; this prevented
     the DateOffset from being cached (:issue:`4609`)
   - Fix boolean comparison with a DataFrame on the lhs, and a list/tuple on the rhs (:issue:`4576`)
+  - Fix error/dtype conversion with setitem of ``None`` on ``Series/DataFrame`` (:issue:`4667`)
 
 pandas 0.12
 ===========
diff --git a/pandas/core/internals.py b/pandas/core/internals.py
index cec80b679..fde9421e4 100644
--- a/pandas/core/internals.py
+++ b/pandas/core/internals.py
@@ -564,6 +564,10 @@ class Block(PandasObject):
             mask = mask.reindex_axis(
                 self.items, axis=axis, copy=False).values.T
 
+        # if we are passed a scalar None, convert it here
+        if not is_list_like(new) and isnull(new):
+            new = np.nan
+
         if self._can_hold_element(new):
             new = self._try_cast(new)
             np.putmask(new_values, mask, new)
@@ -578,7 +582,7 @@ class Block(PandasObject):
                 """ return a new block, try to preserve dtype if possible """
 
                 # n should the length of the mask or a scalar here
-                if np.isscalar(n):
+                if not is_list_like(n):
                     n = np.array([n] * len(m))
 
                 # see if we are only masking values that if putted
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index c1d5f07bd..8e44cd481 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -7867,6 +7867,14 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
         expected.loc[[0,1],'A'] = np.nan
         assert_frame_equal(result,expected)
 
+    def test_where_none(self):
+        # GH 4667
+        # setting with None changes dtype
+        df = DataFrame({'series': Series(range(10))}).astype(float)
+        df[df > 7] = None
+        expected = DataFrame({'series': Series([0,1,2,3,4,5,6,7,np.nan,np.nan]) })
+        assert_frame_equal(df, expected)
+
     def test_mask(self):
         df = DataFrame(np.random.randn(5, 3))
         cond = df > 0
diff --git a/pandas/tests/test_series.py b/pandas/tests/test_series.py
index e0780e867..174092cc1 100644
--- a/pandas/tests/test_series.py
+++ b/pandas/tests/test_series.py
@@ -1249,6 +1249,19 @@ class TestSeries(unittest.TestCase, CheckNameIntegration):
         expected = Series([np.nan,np.nan,3,4])
         assert_series_equal(result, expected)
 
+        # GH 4667
+        # setting with None changes dtype
+        s = Series(range(10)).astype(float)
+        s[8] = None
+        result = s[8]
+        self.assert_(isnull(result))
+
+        s = Series(range(10)).astype(float)
+        s[s > 8] = None
+        result = s[isnull(s)]
+        expected = Series(np.nan,index=[9])
+        assert_series_equal(result, expected)
+
     def test_where_broadcast(self):
         # Test a variety of differently sized series
         for size in range(2, 6):
