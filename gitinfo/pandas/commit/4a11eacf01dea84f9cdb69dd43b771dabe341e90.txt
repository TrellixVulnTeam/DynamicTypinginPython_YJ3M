commit 4a11eacf01dea84f9cdb69dd43b771dabe341e90
Author: Kristian Holsheimer <kristian.holsheimer@gmail.com>
Date:   Wed Oct 24 23:33:13 2018 +1100

    BUG: Fixed nlargest/smallest functionality for dataframes with MultiIndex columns (#23034)

diff --git a/doc/source/whatsnew/v0.24.0.txt b/doc/source/whatsnew/v0.24.0.txt
index 38ef3e3c8..7dd7a92b0 100644
--- a/doc/source/whatsnew/v0.24.0.txt
+++ b/doc/source/whatsnew/v0.24.0.txt
@@ -1195,6 +1195,7 @@ Reshaping
 - Bug in :func:`merge_asof` when merging on float values within defined tolerance (:issue:`22981`)
 - Bug in :func:`pandas.concat` when concatenating a multicolumn DataFrame with tz-aware data against a DataFrame with a different number of columns (:issue`22796`)
 - Bug in :func:`merge_asof` where confusing error message raised when attempting to merge with missing values (:issue:`23189`)
+- Bug in :meth:`DataFrame.nsmallest` and :meth:`DataFrame.nlargest` for dataframes that have :class:`MultiIndex`ed columns (:issue:`23033`).
 
 .. _whatsnew_0240.bug_fixes.sparse:
 
diff --git a/pandas/core/algorithms.py b/pandas/core/algorithms.py
index 0f1eb1288..df2da2668 100644
--- a/pandas/core/algorithms.py
+++ b/pandas/core/algorithms.py
@@ -1161,7 +1161,7 @@ class SelectNFrame(SelectN):
 
     def __init__(self, obj, n, keep, columns):
         super(SelectNFrame, self).__init__(obj, n, keep)
-        if not is_list_like(columns):
+        if not is_list_like(columns) or isinstance(columns, tuple):
             columns = [columns]
         columns = list(columns)
         self.columns = columns
diff --git a/pandas/tests/frame/test_analytics.py b/pandas/tests/frame/test_analytics.py
index b83fba7e7..ab4eaf02f 100644
--- a/pandas/tests/frame/test_analytics.py
+++ b/pandas/tests/frame/test_analytics.py
@@ -2153,7 +2153,7 @@ class TestNLargestNSmallest(object):
             tm.assert_frame_equal(result, expected)
 
     @pytest.mark.parametrize('columns', [
-        ('group', 'category_string'), ('group', 'string')])
+        ['group', 'category_string'], ['group', 'string']])
     def test_n_error(self, df_main_dtypes, nselect_method, columns):
         df = df_main_dtypes
         col = columns[1]
@@ -2259,3 +2259,20 @@ class TestNLargestNSmallest(object):
         df.rank()
         result = df
         tm.assert_frame_equal(result, expected)
+
+    def test_multiindex_column_lookup(self):
+        # Check whether tuples are correctly treated as multi-level lookups.
+        # GH 23033
+        df = pd.DataFrame(
+            columns=pd.MultiIndex.from_product([['x'], ['a', 'b']]),
+            data=[[0.33, 0.13], [0.86, 0.25], [0.25, 0.70], [0.85, 0.91]])
+
+        # nsmallest
+        result = df.nsmallest(3, ('x', 'a'))
+        expected = df.iloc[[2, 0, 3]]
+        tm.assert_frame_equal(result, expected)
+
+        # nlargest
+        result = df.nlargest(3, ('x', 'b'))
+        expected = df.iloc[[3, 2, 1]]
+        tm.assert_frame_equal(result, expected)
