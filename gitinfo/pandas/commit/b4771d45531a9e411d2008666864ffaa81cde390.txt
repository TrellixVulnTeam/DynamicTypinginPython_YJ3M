commit b4771d45531a9e411d2008666864ffaa81cde390
Author: jreback <jeff@reback.net>
Date:   Tue Sep 10 15:25:37 2013 -0400

    BUG: Fixed an issue with a duplicate index and assignment with a dtype change (GH4686)

diff --git a/doc/source/release.rst b/doc/source/release.rst
index a23aa2fce..121ff505a 100644
--- a/doc/source/release.rst
+++ b/doc/source/release.rst
@@ -376,6 +376,7 @@ Bug Fixes
   - Fix bugs in indexing in a Series with a duplicate index (:issue:`4548`, :issue:`4550`)
   - Fixed bug with reading compressed files with ``read_fwf`` in Python 3.
     (:issue:`3963`)
+  - Fixed an issue with a duplicate index and assignment with a dtype change (:issue:`4686`)
 
 pandas 0.12.0
 -------------
diff --git a/pandas/core/internals.py b/pandas/core/internals.py
index 91be4f42c..e22202c65 100644
--- a/pandas/core/internals.py
+++ b/pandas/core/internals.py
@@ -1797,11 +1797,13 @@ class BlockManager(PandasObject):
     def _rebuild_ref_locs(self):
         """ take _ref_locs and set the individual block ref_locs, skipping Nones
             no effect on a unique index """
-        if self._ref_locs is not None:
+        if getattr(self,'_ref_locs',None) is not None:
             item_count = 0
             for v in self._ref_locs:
                 if v is not None:
                     block, item_loc = v
+                    if block._ref_locs is None:
+                        block.reset_ref_locs()
                     block._ref_locs[item_loc] = item_count
                     item_count += 1
 
@@ -2595,11 +2597,11 @@ class BlockManager(PandasObject):
                     self.delete(item)
 
                     loc = _possibly_convert_to_indexer(loc)
-                    for i, (l, arr) in enumerate(zip(loc, value)):
+                    for i, (l, k, arr) in enumerate(zip(loc, subset, value)):
 
                         # insert the item
                         self.insert(
-                            l, item, arr[None, :], allow_duplicates=True)
+                            l, k, arr[None, :], allow_duplicates=True)
 
                         # reset the _ref_locs on indiviual blocks
                         # rebuild ref_locs
diff --git a/pandas/tests/test_indexing.py b/pandas/tests/test_indexing.py
index 18ee89fbc..4b17dd5ff 100644
--- a/pandas/tests/test_indexing.py
+++ b/pandas/tests/test_indexing.py
@@ -1292,6 +1292,24 @@ class TestIndexing(unittest.TestCase):
         result = df.get_dtype_counts().sort_index()
         expected = Series({ 'int64' : 4, 'float64' : 1, 'object' : 2 }).sort_index()
 
+    def test_astype_assignment_with_dups(self):
+
+        # GH 4686
+        # assignment with dups that has a dtype change
+        df = DataFrame(
+            np.arange(3).reshape((1,3)),
+            columns=pd.MultiIndex.from_tuples(
+                [('A', '1'), ('B', '1'), ('A', '2')]
+                ),
+            dtype=object
+            )
+        index = df.index.copy()
+
+        df['A'] = df['A'].astype(np.float64)
+        result = df.get_dtype_counts().sort_index()
+        expected = Series({ 'float64' : 2, 'object' : 1 }).sort_index()
+        self.assert_(df.index.equals(index))
+
     def test_dups_loc(self):
 
         # GH4726
