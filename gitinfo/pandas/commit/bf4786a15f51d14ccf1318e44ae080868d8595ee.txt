commit bf4786a15f51d14ccf1318e44ae080868d8595ee
Author: Joris Van den Bossche <jorisvandenbossche@gmail.com>
Date:   Fri Jun 24 14:04:12 2016 +0200

    DOC: various doc build fixes (#13502)
    
    * DOC: fix indentation error in nth docstring
    
    * DOC: suppress warning for deprecated matplotlib style
    
    * DOC: fix code block directive
    
    * DOC: fix duplicate explicit target name
    
    * DOC: fix malformed hyperlink target
    
    * DOC: use valid header symbols
    
    * DOC: fix interlinking to scipy
    
    * DOC: fix link to python docs on range

diff --git a/doc/source/advanced.rst b/doc/source/advanced.rst
index e50e79220..0c843dd39 100644
--- a/doc/source/advanced.rst
+++ b/doc/source/advanced.rst
@@ -729,7 +729,7 @@ Int64Index and RangeIndex
 Prior to 0.18.0, the ``Int64Index`` would provide the default index for all ``NDFrame`` objects.
 
 ``RangeIndex`` is a sub-class of ``Int64Index`` added in version 0.18.0, now providing the default index for all ``NDFrame`` objects.
-``RangeIndex`` is an optimized version of ``Int64Index`` that can represent a monotonic ordered set. These are analagous to python :ref:`range types <https://docs.python.org/3/library/stdtypes.html#typesseq-range>`.
+``RangeIndex`` is an optimized version of ``Int64Index`` that can represent a monotonic ordered set. These are analagous to python `range types <https://docs.python.org/3/library/stdtypes.html#typesseq-range>`__.
 
 .. _indexing.float64index:
 
diff --git a/doc/source/conf.py b/doc/source/conf.py
index 6ceeee4ad..991265277 100644
--- a/doc/source/conf.py
+++ b/doc/source/conf.py
@@ -292,7 +292,7 @@ intersphinx_mapping = {
     'matplotlib': ('http://matplotlib.org/', None),
     'python': ('http://docs.python.org/3', None),
     'numpy': ('http://docs.scipy.org/doc/numpy', None),
-    'scipy': ('http://docs.scipy.org/doc/scipy', None),
+    'scipy': ('http://docs.scipy.org/doc/scipy/reference', None),
     'py': ('http://pylib.readthedocs.org/en/latest/', None)
 }
 import glob
diff --git a/doc/source/io.rst b/doc/source/io.rst
index b011072d8..e9bd029b3 100644
--- a/doc/source/io.rst
+++ b/doc/source/io.rst
@@ -4789,7 +4789,7 @@ Reading
 
 Space on disk (in bytes)
 
-.. code-block::
+.. code-block:: none
 
     25843712 Apr  8 14:11 test.sql
     24007368 Apr  8 14:11 test_fixed.hdf
diff --git a/doc/source/options.rst b/doc/source/options.rst
index d761d8270..25f03df40 100644
--- a/doc/source/options.rst
+++ b/doc/source/options.rst
@@ -71,6 +71,7 @@ with no argument ``describe_option`` will print out the descriptions for all ava
 
 .. ipython:: python
    :suppress:
+   :okwarning:
 
    pd.reset_option("all")
 
diff --git a/doc/source/r_interface.rst b/doc/source/r_interface.rst
index efe403c85..7e72231c2 100644
--- a/doc/source/r_interface.rst
+++ b/doc/source/r_interface.rst
@@ -17,7 +17,7 @@ rpy2 / R interface
 
    In v0.16.0, the ``pandas.rpy`` interface has been **deprecated and will be
    removed in a future version**. Similar functionality can be accessed
-   through the `rpy2 <http://rpy2.readthedocs.io/>`_ project.
+   through the `rpy2 <http://rpy2.readthedocs.io/>`__ project.
    See the :ref:`updating <rpy.updating>` section for a guide to port your
    code from the ``pandas.rpy`` to ``rpy2`` functions.
 
@@ -73,7 +73,7 @@ The ``convert_to_r_matrix`` function can be replaced by the normal
     comparison to the ones in pandas, please report this at the
     `issue tracker <https://github.com/pydata/pandas/issues>`_.
 
-See also the documentation of the `rpy2 <http://rpy.sourceforge.net/>`_ project.
+See also the documentation of the `rpy2 <http://rpy.sourceforge.net/>`__ project.
 
 
 R interface with rpy2
diff --git a/doc/source/whatsnew/v0.18.0.txt b/doc/source/whatsnew/v0.18.0.txt
index 93c76bc80..7418cd0e6 100644
--- a/doc/source/whatsnew/v0.18.0.txt
+++ b/doc/source/whatsnew/v0.18.0.txt
@@ -764,7 +764,7 @@ yields a ``Resampler``.
    r
 
 Downsampling
-''''''''''''
+""""""""""""
 
 You can then use this object to perform operations.
 These are downsampling operations (going from a higher frequency to a lower one).
@@ -796,7 +796,7 @@ These accessors can of course, be combined
    r[['A','B']].agg(['mean','sum'])
 
 Upsampling
-''''''''''
+""""""""""
 
 .. currentmodule:: pandas.tseries.resample
 
@@ -842,7 +842,7 @@ New API
    In the new API, you can either downsample OR upsample. The prior implementation would allow you to pass an aggregator function (like ``mean``) even though you were upsampling, providing a bit of confusion.
 
 Previous API will work but with deprecations
-''''''''''''''''''''''''''''''''''''''''''''
+""""""""""""""""""""""""""""""""""""""""""""
 
 .. warning::
 
diff --git a/doc/source/whatsnew/v0.18.1.txt b/doc/source/whatsnew/v0.18.1.txt
index 51982c424..ba14ac510 100644
--- a/doc/source/whatsnew/v0.18.1.txt
+++ b/doc/source/whatsnew/v0.18.1.txt
@@ -374,7 +374,7 @@ New Behavior:
    df.groupby('c', sort=False).nth(1)
 
 
-.. _whatsnew_0181.numpy_compatibility
+.. _whatsnew_0181.numpy_compatibility:
 
 numpy function compatibility
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
diff --git a/pandas/core/groupby.py b/pandas/core/groupby.py
index cc639b562..f6915e962 100644
--- a/pandas/core/groupby.py
+++ b/pandas/core/groupby.py
@@ -1197,7 +1197,8 @@ class GroupBy(_GroupBy):
         1  4
         5  6
 
-        # NaNs denote group exhausted when using dropna
+        NaNs denote group exhausted when using dropna
+
         >>> g.nth(1, dropna='any')
             B
             A
