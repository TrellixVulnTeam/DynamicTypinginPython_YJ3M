commit 0e219d79dcc6815ed651c2fc6d1b85e1e0d71bd6
Author: Rouz Azari <rouz.azari@gmail.com>
Date:   Sun Jan 15 11:10:23 2017 -0500

    BUG: Fix Series constructor when copy=True
    
    Updates Series constructor to include copy argument when dtype
    argument is also provided.
    
    closes #15125
    
    Author: Rouz Azari <rouz.azari@gmail.com>
    
    Closes #15128 from rouzazari/series_dtype_param_no_side_effects_when_copy_true and squashes the following commits:
    
    7b0c959 [Rouz Azari] BUG: Fix Series constructor when copy=True

diff --git a/doc/source/whatsnew/v0.20.0.txt b/doc/source/whatsnew/v0.20.0.txt
index 5c26bb298..2a825edd0 100644
--- a/doc/source/whatsnew/v0.20.0.txt
+++ b/doc/source/whatsnew/v0.20.0.txt
@@ -366,7 +366,7 @@ Bug Fixes
 
 
 
-
+- Bug in ``Series`` constructor when both ``copy=True`` and ``dtype`` arguments are provided (:issue:`15125`)
 - Bug in ``pd.read_csv()`` for the C engine where ``usecols`` were being indexed incorrectly with ``parse_dates`` (:issue:`14792`)
 
 - Bug in ``Series.dt.round`` inconsistent behaviour on NAT's with different arguments (:issue:`14940`)
\ No newline at end of file
diff --git a/pandas/core/series.py b/pandas/core/series.py
index ab1498c61..d967e2d02 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -237,7 +237,8 @@ class Series(base.IndexOpsMixin, strings.StringAccessorMixin,
             # create/copy the manager
             if isinstance(data, SingleBlockManager):
                 if dtype is not None:
-                    data = data.astype(dtype=dtype, raise_on_error=False)
+                    data = data.astype(dtype=dtype, raise_on_error=False,
+                                       copy=copy)
                 elif copy:
                     data = data.copy()
             else:
diff --git a/pandas/tests/series/test_constructors.py b/pandas/tests/series/test_constructors.py
index a7e3ebdfc..ee4940384 100644
--- a/pandas/tests/series/test_constructors.py
+++ b/pandas/tests/series/test_constructors.py
@@ -251,6 +251,22 @@ class TestSeriesConstructors(TestData, tm.TestCase):
         s = Series(np.array([1., 1., np.nan]), copy=True, dtype='i8')
         self.assertEqual(s.dtype, np.dtype('f8'))
 
+    def test_constructor_copy(self):
+        # GH15125
+        # test dtype parameter has no side effects on copy=True
+        for data in [[1.], np.array([1.])]:
+            x = Series(data)
+            y = pd.Series(x, copy=True, dtype=float)
+
+            # copy=True maintains original data in Series
+            tm.assert_series_equal(x, y)
+
+            # changes to origin of copy does not affect the copy
+            x[0] = 2.
+            self.assertFalse(x.equals(y))
+            self.assertEqual(x[0], 2.)
+            self.assertEqual(y[0], 1.)
+
     def test_constructor_pass_none(self):
         s = Series(None, index=lrange(5))
         self.assertEqual(s.dtype, np.float64)
