commit 192b1cd510948cefff6d8b6c34655ca4828bc95b
Author: Chris <cbartak@gmail.com>
Date:   Sat Oct 22 06:37:05 2016 -0500

    BLD: don't require cython on sdist install
    
    closes #14475
    closes #14204

diff --git a/doc/source/whatsnew/v0.19.1.txt b/doc/source/whatsnew/v0.19.1.txt
index d5fa2af5b..66868e47a 100644
--- a/doc/source/whatsnew/v0.19.1.txt
+++ b/doc/source/whatsnew/v0.19.1.txt
@@ -45,6 +45,9 @@ Bug Fixes
 
 - Bug in ``RangeIndex.intersection`` when result is a empty set (:issue:`14364`).
 
+
+- Source installs from PyPI will now work without ``cython`` installed, as in previous versions (:issue:`14204`)
+
 - ``pd.merge()`` will raise ``ValueError`` with non-boolean parameters in passed boolean type arguments (:issue:`14434`)
 
 
diff --git a/setup.py b/setup.py
index 846e2b7fa..fdf245855 100755
--- a/setup.py
+++ b/setup.py
@@ -125,25 +125,25 @@ for module, files in _pxi_dep_template.items():
 class build_ext(_build_ext):
     def build_extensions(self):
 
-        if not cython:
-            raise ImportError('Building pandas requires cython')
-
-        for pxifile in _pxifiles:
-            # build pxifiles first, template extention must be .pxi.in
-            assert pxifile.endswith('.pxi.in')
-            outfile = pxifile[:-3]
-
-            if (os.path.exists(outfile) and
-               os.stat(pxifile).st_mtime < os.stat(outfile).st_mtime):
-                # if .pxi.in is not updated, no need to output .pxi
-                continue
+        # if builing from c files, don't need to
+        # generate template output
+        if cython:
+            for pxifile in _pxifiles:
+                # build pxifiles first, template extention must be .pxi.in
+                assert pxifile.endswith('.pxi.in')
+                outfile = pxifile[:-3]
+
+                if (os.path.exists(outfile) and
+                    os.stat(pxifile).st_mtime < os.stat(outfile).st_mtime):
+                    # if .pxi.in is not updated, no need to output .pxi
+                    continue
 
-            with open(pxifile, "r") as f:
-                tmpl = f.read()
-            pyxcontent = tempita.sub(tmpl)
+                with open(pxifile, "r") as f:
+                    tmpl = f.read()
+                pyxcontent = tempita.sub(tmpl)
 
-            with open(outfile, "w") as f:
-                f.write(pyxcontent)
+                with open(outfile, "w") as f:
+                    f.write(pyxcontent)
 
         numpy_incl = pkg_resources.resource_filename('numpy', 'core/include')
 
