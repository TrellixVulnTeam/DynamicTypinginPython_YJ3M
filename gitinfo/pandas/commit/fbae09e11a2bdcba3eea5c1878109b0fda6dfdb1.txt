commit fbae09e11a2bdcba3eea5c1878109b0fda6dfdb1
Author: Simon Hawkins <simonjayhawkins@gmail.com>
Date:   Fri Apr 10 16:38:41 2020 +0100

    CLN/TYP: redundant casts and unused ignores (#33453)

diff --git a/pandas/core/indexes/base.py b/pandas/core/indexes/base.py
index df58593bc..54e49eaf6 100644
--- a/pandas/core/indexes/base.py
+++ b/pandas/core/indexes/base.py
@@ -3838,7 +3838,7 @@ class Index(IndexOpsMixin, PandasObject):
         return self._data.view(np.ndarray)
 
     @cache_readonly
-    @doc(IndexOpsMixin.array)  # type: ignore
+    @doc(IndexOpsMixin.array)
     def array(self) -> ExtensionArray:
         array = self._data
         if isinstance(array, np.ndarray):
diff --git a/pandas/io/json/_normalize.py b/pandas/io/json/_normalize.py
index 6e68c1cf5..69e9b111a 100644
--- a/pandas/io/json/_normalize.py
+++ b/pandas/io/json/_normalize.py
@@ -231,7 +231,7 @@ def _json_normalize(
         js: Dict[str, Any], spec: Union[List, str]
     ) -> Union[Scalar, Iterable]:
         """Internal function to pull field"""
-        result = js  # type: ignore
+        result = js
         if isinstance(spec, list):
             for field in spec:
                 result = result[field]
@@ -251,7 +251,7 @@ def _json_normalize(
         # null, otherwise return an empty list
         if not isinstance(result, Iterable):
             if pd.isnull(result):
-                result = []  # type: ignore
+                result = []
             else:
                 raise TypeError(
                     f"{js} has non iterable value {result} for path {spec}. "
diff --git a/pandas/io/pytables.py b/pandas/io/pytables.py
index a22251b29..3dd87ae6e 100644
--- a/pandas/io/pytables.py
+++ b/pandas/io/pytables.py
@@ -1916,9 +1916,7 @@ class IndexCol:
         if not hasattr(self.table, "cols"):
             # e.g. if infer hasn't been called yet, self.table will be None.
             return False
-        # GH#29692 mypy doesn't recognize self.table as having a "cols" attribute
-        #  'error: "None" has no attribute "cols"'
-        return getattr(self.table.cols, self.cname).is_indexed  # type: ignore
+        return getattr(self.table.cols, self.cname).is_indexed
 
     def convert(self, values: np.ndarray, nan_rep, encoding: str, errors: str):
         """
diff --git a/pandas/io/stata.py b/pandas/io/stata.py
index 8f3aa60b7..b9b436854 100644
--- a/pandas/io/stata.py
+++ b/pandas/io/stata.py
@@ -356,10 +356,9 @@ def _datetime_to_stata_elapsed_vec(dates: Series, fmt: str) -> Series:
                 time_delta = dates - stata_epoch
                 d["delta"] = time_delta._values.astype(np.int64) // 1000  # microseconds
             if days or year:
-                # ignore since mypy reports that DatetimeIndex has no year/month
                 date_index = DatetimeIndex(dates)
-                d["year"] = date_index.year  # type: ignore
-                d["month"] = date_index.month  # type: ignore
+                d["year"] = date_index.year
+                d["month"] = date_index.month
             if days:
                 days_in_ns = dates.astype(np.int64) - to_datetime(
                     d["year"], format="%Y"
diff --git a/setup.cfg b/setup.cfg
index fda4ba406..6c42b27c7 100644
--- a/setup.cfg
+++ b/setup.cfg
@@ -126,6 +126,8 @@ ignore_missing_imports=True
 no_implicit_optional=True
 check_untyped_defs=True
 strict_equality=True
+warn_redundant_casts = True
+warn_unused_ignores = True
 
 [mypy-pandas.tests.*]
 check_untyped_defs=False
