commit 303541eba0797f30c6f10084acbd522220cbc56a
Author: Joris Van den Bossche <jorisvandenbossche@gmail.com>
Date:   Sat Feb 25 22:38:56 2017 +0100

    DOC: fix doc build warnings (#15505)

diff --git a/doc/source/advanced.rst b/doc/source/advanced.rst
index b6f015c15..f380070dd 100644
--- a/doc/source/advanced.rst
+++ b/doc/source/advanced.rst
@@ -965,6 +965,7 @@ The different indexing operation can potentially change the dtype of a ``Series`
    res
 
 .. ipython:: python
+
    series2 = pd.Series([True])
    series2.dtype
    res = series2.reindex_like(series1)
diff --git a/doc/source/basics.rst b/doc/source/basics.rst
index f5f7c7322..f649b3fd8 100644
--- a/doc/source/basics.rst
+++ b/doc/source/basics.rst
@@ -1889,7 +1889,7 @@ gotchas
 
 Performing selection operations on ``integer`` type data can easily upcast the data to ``floating``.
 The dtype of the input data will be preserved in cases where ``nans`` are not introduced (starting in 0.11.0)
-See also :ref:`Support for integer ``NA`` <gotchas.intna>`
+See also :ref:`Support for integer NA <gotchas.intna>`
 
 .. ipython:: python
 
diff --git a/doc/source/contributing.rst b/doc/source/contributing.rst
index 5c2bb9b73..2f838a3ab 100644
--- a/doc/source/contributing.rst
+++ b/doc/source/contributing.rst
@@ -461,7 +461,7 @@ C (cpplint)
 
 *pandas* uses the `Google <https://google.github.io/styleguide/cppguide.html>`_
 standard. Google provides an open source style checker called ``cpplint``, but we
-use a fork of it that can be found `here <https://github.com/cpplint/cpplint>`_.
+use a fork of it that can be found `here <https://github.com/cpplint/cpplint>`__.
 Here are *some* of the more common ``cpplint`` issues:
 
   - we restrict line-length to 80 characters to promote readability
@@ -479,7 +479,7 @@ You can also run this command on an entire directory if necessary::
 
 To make your commits compliant with this standard, you can install the
 `ClangFormat <http://clang.llvm.org/docs/ClangFormat.html>`_ tool, which can be
-downloaded `here <http://llvm.org/builds/>`_. To configure, in your home directory,
+downloaded `here <http://llvm.org/builds/>`__. To configure, in your home directory,
 run the following command::
 
     clang-format style=google -dump-config  > .clang-format
@@ -611,7 +611,7 @@ Or with one of the following constructs::
     pytest pandas/tests/[test-module].py::[TestClass]
     pytest pandas/tests/[test-module].py::[TestClass]::[test_method]
 
-For more, see the `pytest<http://doc.pytest.org/en/latest/>`_ documentation.
+For more, see the `pytest <http://doc.pytest.org/en/latest/>`_ documentation.
 
     .. versionadded:: 0.20.0
 
diff --git a/doc/source/install.rst b/doc/source/install.rst
index 80a5d7e7d..8b0fec6a3 100644
--- a/doc/source/install.rst
+++ b/doc/source/install.rst
@@ -282,7 +282,7 @@ Optional Dependencies
     okay.)
   * `BeautifulSoup4`_ and `lxml`_
   * `BeautifulSoup4`_ and `html5lib`_ and `lxml`_
-  * Only `lxml`_, although see :ref:`HTML Table Parsing <gotchas.html>`
+  * Only `lxml`_, although see :ref:`HTML Table Parsing <io.html.gotchas>`
     for reasons as to why you should probably **not** take this approach.
 
   .. warning::
diff --git a/doc/source/io.rst b/doc/source/io.rst
index 55ef2c09d..35e8b7778 100644
--- a/doc/source/io.rst
+++ b/doc/source/io.rst
@@ -2043,7 +2043,7 @@ Reading HTML Content
 
 .. warning::
 
-   We **highly encourage** you to read the :ref:`HTML Table Parsing gotchas<io.html.gotchas>`
+   We **highly encourage** you to read the :ref:`HTML Table Parsing gotchas <io.html.gotchas>`
    below regarding the issues surrounding the BeautifulSoup4/html5lib/lxml parsers.
 
 .. versionadded:: 0.12.0
@@ -4681,7 +4681,7 @@ The key functions are:
 
 
 Supported Data Types
-++++++++++++++++++++
+''''''''''''''''''''
 
 Pandas supports all these `BigQuery data types <https://cloud.google.com/bigquery/data-types>`__:
 ``STRING``, ``INTEGER`` (64bit), ``FLOAT`` (64 bit), ``BOOLEAN`` and
@@ -4689,7 +4689,7 @@ Pandas supports all these `BigQuery data types <https://cloud.google.com/bigquer
 are not supported.
 
 Integer and boolean ``NA`` handling
-+++++++++++++++++++++++++++++++++++
+'''''''''''''''''''''''''''''''''''
 
 .. versionadded:: 0.20
 
@@ -4710,7 +4710,7 @@ and unnoticed precision lost for identifier is what we want to avoid.
 .. _io.bigquery_deps:
 
 Dependencies
-++++++++++++
+''''''''''''
 
 This module requires following additional dependencies:
 
diff --git a/doc/source/whatsnew/v0.20.0.txt b/doc/source/whatsnew/v0.20.0.txt
index c94429b46..123fc3464 100644
--- a/doc/source/whatsnew/v0.20.0.txt
+++ b/doc/source/whatsnew/v0.20.0.txt
@@ -120,7 +120,7 @@ Notably, a new numerical index, ``UInt64Index``, has been created (:issue:`14937
 - Bug in ``pd.unique()`` in which unsigned 64-bit integers were causing overflow (:issue:`14915`)
 - Bug in ``pd.value_counts()`` in which unsigned 64-bit integers were being erroneously truncated in the output (:issue:`14934`)
 
-.. _whatsnew_0200.enhancements.groupy_categorical
+.. _whatsnew_0200.enhancements.groupy_categorical:
 
 GroupBy on Categoricals
 ^^^^^^^^^^^^^^^^^^^^^^^
diff --git a/pandas/core/generic.py b/pandas/core/generic.py
index 921fa2fb1..85c7130ca 100644
--- a/pandas/core/generic.py
+++ b/pandas/core/generic.py
@@ -1035,6 +1035,7 @@ class NDFrame(PandasObject):
     _shared_docs['to_excel'] = """
     Write %(klass)s to an excel sheet
     %(versionadded_to_excel)s
+
     Parameters
     ----------
     excel_writer : string or ExcelWriter object
diff --git a/pandas/io/html.py b/pandas/io/html.py
index 3c38dae91..53595b94e 100644
--- a/pandas/io/html.py
+++ b/pandas/io/html.py
@@ -853,7 +853,7 @@ def read_html(io, match='.+', flavor=None, header=None, index_col=None,
     Notes
     -----
     Before using this function you should read the :ref:`gotchas about the
-    HTML parsing libraries <html-gotchas>`.
+    HTML parsing libraries <io.html.gotchas>`.
 
     Expect to do some cleanup after you call this function. For example, you
     might need to manually assign column names if the column names are
diff --git a/pandas/io/json/normalize.py b/pandas/io/json/normalize.py
index d684441c5..f29472155 100644
--- a/pandas/io/json/normalize.py
+++ b/pandas/io/json/normalize.py
@@ -106,11 +106,10 @@ def json_normalize(data, record_path=None, meta=None,
         path to records is ['foo', 'bar']
     meta_prefix : string, default None
     errors : {'raise', 'ignore'}, default 'raise'
-
-        * ignore : will ignore KeyError if keys listed in meta are not
-        always present
-        * raise : will raise KeyError if keys listed in meta are not
-        always present
+        * 'ignore' : will ignore KeyError if keys listed in meta are not
+          always present
+        * 'raise' : will raise KeyError if keys listed in meta are not
+          always present
 
         .. versionadded:: 0.20.0
 
diff --git a/pandas/io/parsers.py b/pandas/io/parsers.py
index 88d0c6c12..78c524781 100755
--- a/pandas/io/parsers.py
+++ b/pandas/io/parsers.py
@@ -181,7 +181,7 @@ infer_datetime_format : boolean, default False
     If True and parse_dates is enabled, pandas will attempt to infer the format
     of the datetime strings in the columns, and if it can be inferred, switch
     to a faster method of parsing them. In some cases this can increase the
-    parsing speed by ~5-10x.
+    parsing speed by 5-10x.
 keep_date_col : boolean, default False
     If True and parse_dates specifies combining multiple columns then
     keep the original columns.
@@ -200,10 +200,10 @@ iterator : boolean, default False
     Return TextFileReader object for iteration or getting chunks with
     ``get_chunk()``.
 chunksize : int, default None
-    Return TextFileReader object for iteration. `See IO Tools docs for more
-    information
-    <http://pandas.pydata.org/pandas-docs/stable/io.html#io-chunking>`_ on
-    ``iterator`` and ``chunksize``.
+    Return TextFileReader object for iteration.
+    See the `IO Tools docs
+    <http://pandas.pydata.org/pandas-docs/stable/io.html#io-chunking>`_
+    for more information on ``iterator`` and ``chunksize``.
 compression : {'infer', 'gzip', 'bz2', 'zip', 'xz', None}, default 'infer'
     For on-the-fly decompression of on-disk data. If 'infer', then use gzip,
     bz2, zip or xz if filepath_or_buffer is a string ending in '.gz', '.bz2',
