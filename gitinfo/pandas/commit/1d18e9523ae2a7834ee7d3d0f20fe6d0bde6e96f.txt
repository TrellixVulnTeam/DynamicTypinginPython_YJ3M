commit 1d18e9523ae2a7834ee7d3d0f20fe6d0bde6e96f
Author: jbrockmendel <jbrockmendel@gmail.com>
Date:   Thu Feb 27 09:07:10 2020 -0800

    implement test_to_period (#32270)

diff --git a/pandas/tests/series/methods/test_to_period.py b/pandas/tests/series/methods/test_to_period.py
new file mode 100644
index 000000000..28c4aad3e
--- /dev/null
+++ b/pandas/tests/series/methods/test_to_period.py
@@ -0,0 +1,47 @@
+import numpy as np
+
+from pandas import (
+    DataFrame,
+    DatetimeIndex,
+    PeriodIndex,
+    Series,
+    date_range,
+    period_range,
+)
+import pandas._testing as tm
+
+
+class TestToPeriod:
+    def test_to_period(self):
+        rng = date_range("1/1/2000", "1/1/2001", freq="D")
+        ts = Series(np.random.randn(len(rng)), index=rng)
+
+        pts = ts.to_period()
+        exp = ts.copy()
+        exp.index = period_range("1/1/2000", "1/1/2001")
+        tm.assert_series_equal(pts, exp)
+
+        pts = ts.to_period("M")
+        exp.index = exp.index.asfreq("M")
+        tm.assert_index_equal(pts.index, exp.index.asfreq("M"))
+        tm.assert_series_equal(pts, exp)
+
+        # GH#7606 without freq
+        idx = DatetimeIndex(["2011-01-01", "2011-01-02", "2011-01-03", "2011-01-04"])
+        exp_idx = PeriodIndex(
+            ["2011-01-01", "2011-01-02", "2011-01-03", "2011-01-04"], freq="D"
+        )
+
+        s = Series(np.random.randn(4), index=idx)
+        expected = s.copy()
+        expected.index = exp_idx
+        tm.assert_series_equal(s.to_period(), expected)
+
+        df = DataFrame(np.random.randn(4, 4), index=idx, columns=idx)
+        expected = df.copy()
+        expected.index = exp_idx
+        tm.assert_frame_equal(df.to_period(), expected)
+
+        expected = df.copy()
+        expected.columns = exp_idx
+        tm.assert_frame_equal(df.to_period(axis=1), expected)
diff --git a/pandas/tests/series/test_timeseries.py b/pandas/tests/series/test_timeseries.py
index 592fd6ba5..efaf5f806 100644
--- a/pandas/tests/series/test_timeseries.py
+++ b/pandas/tests/series/test_timeseries.py
@@ -173,41 +173,6 @@ class TestTimeSeries:
         ts = Series(1, index=rng)
         repr(ts)
 
-    def test_to_period(self):
-        from pandas.core.indexes.period import period_range
-
-        ts = _simple_ts("1/1/2000", "1/1/2001")
-
-        pts = ts.to_period()
-        exp = ts.copy()
-        exp.index = period_range("1/1/2000", "1/1/2001")
-        tm.assert_series_equal(pts, exp)
-
-        pts = ts.to_period("M")
-        exp.index = exp.index.asfreq("M")
-        tm.assert_index_equal(pts.index, exp.index.asfreq("M"))
-        tm.assert_series_equal(pts, exp)
-
-        # GH 7606 without freq
-        idx = DatetimeIndex(["2011-01-01", "2011-01-02", "2011-01-03", "2011-01-04"])
-        exp_idx = pd.PeriodIndex(
-            ["2011-01-01", "2011-01-02", "2011-01-03", "2011-01-04"], freq="D"
-        )
-
-        s = Series(np.random.randn(4), index=idx)
-        expected = s.copy()
-        expected.index = exp_idx
-        tm.assert_series_equal(s.to_period(), expected)
-
-        df = DataFrame(np.random.randn(4, 4), index=idx, columns=idx)
-        expected = df.copy()
-        expected.index = exp_idx
-        tm.assert_frame_equal(df.to_period(), expected)
-
-        expected = df.copy()
-        expected.columns = exp_idx
-        tm.assert_frame_equal(df.to_period(axis=1), expected)
-
     def test_groupby_count_dateparseerror(self):
         dr = date_range(start="1/1/2012", freq="5min", periods=10)
 
