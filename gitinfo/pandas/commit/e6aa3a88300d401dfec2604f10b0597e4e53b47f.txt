commit e6aa3a88300d401dfec2604f10b0597e4e53b47f
Author: Skipper Seabold <jsseabold@gmail.com>
Date:   Sat Feb 16 15:18:13 2013 -0500

    BUG: Fix broken YearBegin offset. Closes #2844.

diff --git a/pandas/tseries/offsets.py b/pandas/tseries/offsets.py
index 592cc551a..275fe06cd 100644
--- a/pandas/tseries/offsets.py
+++ b/pandas/tseries/offsets.py
@@ -966,7 +966,7 @@ class YearBegin(DateOffset, CacheableOffset):
     """DateOffset increments between calendar year begin dates"""
 
     def __init__(self, n=1, **kwds):
-        self.month = kwds.get('month', 12)
+        self.month = kwds.get('month', 1)
 
         if self.month < 1 or self.month > 12:
             raise ValueError('Month must go from 1 to 12')
@@ -974,7 +974,37 @@ class YearBegin(DateOffset, CacheableOffset):
         DateOffset.__init__(self, n=n, **kwds)
 
     def apply(self, other):
+        def _increment(date):
+            year = date.year if date.month < self.month else date.year + 1
+            return datetime(year, self.month, 1, date.hour, date.minute,
+                            date.second, date.microsecond)
+
+        def _decrement(date):
+            year = date.year if date.month > self.month else date.year - 1
+            return datetime(year, self.month, 1, date.hour, date.minute,
+                            date.second, date.microsecond)
+
+        def _rollf(date):
+            if (date.month != self.month) or date.day > 1:
+                date = _increment(date)
+            return date
+
         n = self.n
+        result = other
+        if n > 0:
+            while n > 0:
+                result = _increment(result)
+                n -= 1
+        elif n < 0:
+            while n < 0:
+                result = _decrement(result)
+                n += 1
+        else:
+            # n == 0, roll forward
+            result = _rollf(result)
+
+        return result
+
         if other.month != 1 or other.day != 1:
             other = datetime(other.year, 1, 1,
                              other.hour, other.minute, other.second,
@@ -984,9 +1014,8 @@ class YearBegin(DateOffset, CacheableOffset):
         other = other + relativedelta(years=n, day=1)
         return other
 
-    @classmethod
-    def onOffset(cls, dt):
-        return dt.month == 1 and dt.day == 1
+    def onOffset(self, dt):
+        return dt.month == self.month and dt.day == 1
 
     @property
     def rule_code(self):
diff --git a/pandas/tseries/tests/test_offsets.py b/pandas/tseries/tests/test_offsets.py
index f42e9b387..2120aaf34 100644
--- a/pandas/tseries/tests/test_offsets.py
+++ b/pandas/tseries/tests/test_offsets.py
@@ -1139,6 +1139,25 @@ class TestYearBegin(unittest.TestCase):
                        datetime(2008, 6, 30): datetime(2007, 1, 1),
                        datetime(2008, 12, 31): datetime(2007, 1, 1), }))
 
+        tests.append((YearBegin(month=4),
+                      {datetime(2007, 4, 1): datetime(2008, 4, 1),
+                       datetime(2007, 3, 1): datetime(2007, 4, 1),
+                       datetime(2007, 12, 15): datetime(2008, 4, 1),
+                       datetime(2012, 1, 31): datetime(2012, 4, 1), }))
+
+        tests.append((YearBegin(0, month=4),
+                      {datetime(2007, 4, 1): datetime(2007, 4, 1),
+                       datetime(2007, 3, 1): datetime(2007, 4, 1),
+                       datetime(2007, 12, 15): datetime(2008, 4, 1),
+                       datetime(2012, 1, 31): datetime(2012, 4, 1), }))
+
+        tests.append((YearBegin(-1, month=4),
+                      {datetime(2007, 4, 1): datetime(2006, 4, 1),
+                       datetime(2007, 3, 1): datetime(2006, 4, 1),
+                       datetime(2007, 12, 15): datetime(2007, 4, 1),
+                       datetime(2012, 1, 31): datetime(2011, 4, 1), }))
+
+
         for offset, cases in tests:
             for base, expected in cases.iteritems():
                 assertEq(offset, base, expected)
