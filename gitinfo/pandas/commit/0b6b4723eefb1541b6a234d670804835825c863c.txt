commit 0b6b4723eefb1541b6a234d670804835825c863c
Author: y-p <yoval@gmx.com>
Date:   Wed Dec 5 03:33:16 2012 +0200

    BUG: init df attributes ._is_consolidated, ._known_consolidated after un-pickle #2431

diff --git a/RELEASE.rst b/RELEASE.rst
index 8ade5f920..57667ff8d 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -121,6 +121,7 @@ pandas 0.10.0
   - Fixed a UnicdeDecodeError with series tidy_repr (#2225)
   - Fixed issued with duplicate keys in an index (#2347, #2380)
   - Fixed issues related to Hash randomization, on by default starting with 3.3 (#2331)
+  - Fixed issue with missing attributes after loading a pickled dataframe (#2431)
 
 pandas 0.9.1
 ============
diff --git a/doc/source/v0.10.0.txt b/doc/source/v0.10.0.txt
index 86741304e..367f728b2 100644
--- a/doc/source/v0.10.0.txt
+++ b/doc/source/v0.10.0.txt
@@ -101,6 +101,7 @@ Updated PyTables Support
          (the previous implementation would set the column size based on the first append)
        - indexing support via ``create_table_index`` (requires PyTables >= 2.3) (GH698_).
        - appending on a store would fail if the table was not first created via ``put``
+       - fixed issue with missing attributes after loading a pickled dataframe (GH2431)
        - minor change to select and remove: require a table ONLY if where is also provided (and not None)
 
     .. ipython:: python
@@ -155,3 +156,4 @@ on GitHub for a complete list.
 .. _GH2316: https://github.com/pydata/pandas/issues/2316
 .. _GH2097: https://github.com/pydata/pandas/issues/2097
 .. _GH2224: https://github.com/pydata/pandas/issues/2224
+.. _GH2431: https://github.com/pydata/pandas/issues/2431
diff --git a/pandas/core/internals.py b/pandas/core/internals.py
index b5471c479..435641b70 100644
--- a/pandas/core/internals.py
+++ b/pandas/core/internals.py
@@ -552,6 +552,9 @@ class BlockManager(object):
         self.axes = [_ensure_index(ax) for ax in ax_arrays]
         self.axes = _handle_legacy_indexes(self.axes)
 
+        self._is_consolidated = False
+        self._known_consolidated = False
+
         blocks = []
         for values, items in zip(bvalues, bitems):
             blk = make_block(values, items, self.axes[0])
