commit 9ca04b495b8d8b0057bd8a6f2a7175e54b6b2780
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Wed Jan 19 21:51:26 2011 -0500

    add axis argument to Series.plot

diff --git a/pandas/core/series.py b/pandas/core/series.py
index 1e50318ea..fe6eec2c8 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -895,7 +895,8 @@ class Series(np.ndarray, Picklable, Groupable):
 #-------------------------------------------------------------------------------
 # Miscellaneous
 
-    def plot(self, label=None, kind='line', rot=30, **kwds): # pragma: no cover
+    def plot(self, label=None, kind='line', rot=30, axes=None, style='-',
+             **kwds): # pragma: no cover
         """
         Plot the input series with the index on the x-axis using
         matplotlib / pylab.
@@ -923,19 +924,24 @@ class Series(np.ndarray, Picklable, Groupable):
 
         N = len(self)
 
+        if axes is None:
+            axes = plt.gca()
+
         if kind == 'line':
-            plt.plot(self.index, self.values, **kwds)
+            axes.plot(self.index, self.values, style, **kwds)
         elif kind == 'bar':
             xinds = np.arange(N) + 0.25
-            plt.bar(xinds, self.values, 0.5, bottom=np.zeros(N), linewidth=1)
+            axes.bar(xinds, self.values, 0.5, bottom=np.zeros(N), linewidth=1)
 
             if N < 10:
                 fontsize = 12
             else:
                 fontsize = 10
 
-            plt.xticks(xinds + 0.25, self.index, rotation=rot,
-                       fontsize=fontsize)
+            axes.set_xticks(xinds + 0.25)
+            axes.set_xticklabels(self.index, rotation=rot, fontsize=fontsize)
+
+        plt.draw_if_interactive()
 
     def toCSV(self, path):
         """
diff --git a/pandas/core/tests/test_series.py b/pandas/core/tests/test_series.py
index d3f372c33..9b33e65a3 100644
--- a/pandas/core/tests/test_series.py
+++ b/pandas/core/tests/test_series.py
@@ -607,6 +607,9 @@ class TestSeries(unittest.TestCase):
         self.assert_(isnull(merged['d']))
         self.assert_(not isnull(merged['c']))
 
+    def test_apply(self):
+
+
     def test_reindex(self):
         identity = self.series.reindex(self.series.index)
         self.assertEqual(id(self.series.index), id(identity.index))
diff --git a/pandas/io/parsers.py b/pandas/io/parsers.py
index 424bcb10f..5e1348508 100644
--- a/pandas/io/parsers.py
+++ b/pandas/io/parsers.py
@@ -4,6 +4,7 @@ Module contains tools for processing files into DataFrames or other objects
 
 from datetime import datetime, timedelta
 from itertools import izip
+import re
 import string
 
 import numpy as np
@@ -34,7 +35,7 @@ def parseText(filepath, sep='\t', header=0, indexCol=0, colNames = None):
     Parse whitespace separated file into a DataFrame object.
     Try to parse dates if possible.
     """
-    lines = [l.rstrip().split(sep) for l in open(filepath,'rb').readlines()]
+    lines = [re.split(sep, l.rstrip()) for l in open(filepath,'rb').readlines()]
     return simpleParser(lines, header=header, indexCol=indexCol,
                         colNames = colNames)
 
@@ -81,7 +82,7 @@ def simpleParser(lines, colNames=None, header=0, indexCol=0):
 
 NA_VALUES = set(['-1.#IND', '1.#QNAN', '1.#IND',
                  '-1.#QNAN','1.#INF','-1.#INF', '1.#INF000000',
-                 'NA', 'NULL', 'NaN', 'nan', ''])
+                 'NA', '#NA', 'NULL', 'NaN', 'nan', ''])
 
 def _floatify(data_dict):
     result = {}
