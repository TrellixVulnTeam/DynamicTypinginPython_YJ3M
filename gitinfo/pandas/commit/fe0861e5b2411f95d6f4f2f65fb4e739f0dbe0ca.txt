commit fe0861e5b2411f95d6f4f2f65fb4e739f0dbe0ca
Author: William Ayd <william.ayd@icloud.com>
Date:   Sat Apr 14 06:28:42 2018 -0700

    Np Any/All Transformation Bug (#20655)

diff --git a/doc/source/whatsnew/v0.23.0.txt b/doc/source/whatsnew/v0.23.0.txt
index 1f75de598..1f08972d9 100644
--- a/doc/source/whatsnew/v0.23.0.txt
+++ b/doc/source/whatsnew/v0.23.0.txt
@@ -1131,6 +1131,7 @@ Groupby/Resample/Rolling
 - Fixed a performance regression for ``GroupBy.nth`` and ``GroupBy.last`` with some object columns (:issue:`19283`)
 - Bug in :func:`DataFrameGroupBy.cumsum` and :func:`DataFrameGroupBy.cumprod` when ``skipna`` was passed (:issue:`19806`)
 - Bug in :func:`Dataframe.resample` that dropped timezone information (:issue:`13238`)
+- Bug in :func:`DataFrame.groupby` where transformations using ``np.all`` and ``np.any`` were raising a ``ValueError`` (:issue:`20653`)
 
 Sparse
 ^^^^^^
diff --git a/pandas/core/base.py b/pandas/core/base.py
index 8907e9144..0d55fa8b9 100644
--- a/pandas/core/base.py
+++ b/pandas/core/base.py
@@ -188,6 +188,8 @@ class SelectionMixin(object):
         builtins.sum: 'sum',
         builtins.max: 'max',
         builtins.min: 'min',
+        np.all: 'all',
+        np.any: 'any',
         np.sum: 'sum',
         np.mean: 'mean',
         np.prod: 'prod',
diff --git a/pandas/tests/groupby/test_transform.py b/pandas/tests/groupby/test_transform.py
index 23326d1b1..390b99d0f 100644
--- a/pandas/tests/groupby/test_transform.py
+++ b/pandas/tests/groupby/test_transform.py
@@ -723,3 +723,15 @@ class TestGroupBy(MixIn):
             exp = DataFrame({'vals': exp_vals * 2})
             result = get_result(grp)
             tm.assert_frame_equal(result, exp)
+
+    @pytest.mark.parametrize("func", [np.any, np.all])
+    def test_any_all_np_func(self, func):
+        # GH 20653
+        df = pd.DataFrame([['foo', True],
+                           [np.nan, True],
+                           ['foo', True]], columns=['key', 'val'])
+
+        exp = pd.Series([True, np.nan, True], name='val')
+
+        res = df.groupby('key')['val'].transform(func)
+        tm.assert_series_equal(res, exp)
