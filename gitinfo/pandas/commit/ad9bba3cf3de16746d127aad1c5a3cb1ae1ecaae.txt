commit ad9bba3cf3de16746d127aad1c5a3cb1ae1ecaae
Author: jreback <jeff@reback.net>
Date:   Sat Jan 12 14:14:23 2013 -0500

    DOC: update release notes

diff --git a/RELEASE.rst b/RELEASE.rst
index e9585759d..9cd91c6ef 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -62,6 +62,7 @@ pandas 0.10.1
     values. (GH2631_)
   - Attempt to parse ISO8601 format dates when parse_dates=True in read_csv for
     major performance boost in such cases (GH2698_)
+  - Add methods ``neg`` and ``inv`` to Series
 
 **Bug fixes**
 
@@ -95,6 +96,7 @@ pandas 0.10.1
   - Fix C parser-tokenizer bug with trailing fields. (GH2668_)
   - Don't exclude non-numeric data from GroupBy.max/min (GH2700_)
   - Don't lose time zone when calling DatetimeIndex.drop (GH2621_)
+  - Fix setitem on a Series with a boolean key and a non-scalar as value (GH2686_)
 
 **API Changes**
 
@@ -126,6 +128,7 @@ pandas 0.10.1
 .. _GH2699: https://github.com/pydata/pandas/issues/2699
 .. _GH2700: https://github.com/pydata/pandas/issues/2700
 .. _GH2694: https://github.com/pydata/pandas/issues/2694
+.. _GH2686: https://github.com/pydata/pandas/issues/2686
 
 pandas 0.10.0
 =============
diff --git a/pandas/core/series.py b/pandas/core/series.py
index bd211d529..d5b1cf427 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -616,7 +616,7 @@ copy : boolean, default False
         if len(cond) != len(self):
             raise ValueError('condition must have same length as series')
 
-        if not cond.dtype == np.bool_:
+        if cond.dtype != np.bool_:
             cond = cond.astype(np.bool_)
 
         ser = self if inplace else self.copy()
@@ -675,7 +675,6 @@ copy : boolean, default False
             # Could not hash item
 
         if _is_bool_indexer(key):
-            #import pdb; pdb.set_
             key = self._check_bool_indexer(key)
             self.where(~key,value,inplace=True)
         else:
@@ -759,7 +758,7 @@ copy : boolean, default False
         # coerce to bool type
         if not hasattr(result, 'shape'):
             result = np.array(result)
-        if not result.dtype == np.bool_:
+        if result.dtype != np.bool_:
             result = result.astype(np.bool_)
 
         return result
