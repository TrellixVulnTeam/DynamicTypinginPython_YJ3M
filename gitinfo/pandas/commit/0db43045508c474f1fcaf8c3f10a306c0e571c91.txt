commit 0db43045508c474f1fcaf8c3f10a306c0e571c91
Author: Tom Bird <tombird1992@gmail.com>
Date:   Wed Aug 3 18:48:45 2016 +0100

    BUG: Empty lists shouldn't be counted as DateOffsets.
    
    closes #13844
    closes #13889

diff --git a/doc/source/whatsnew/v0.19.0.txt b/doc/source/whatsnew/v0.19.0.txt
index 0ff63117e..9ccbf5772 100644
--- a/doc/source/whatsnew/v0.19.0.txt
+++ b/doc/source/whatsnew/v0.19.0.txt
@@ -1133,6 +1133,7 @@ Bug Fixes
 - Regression in ``Series.quantile`` with nans (also shows up in ``.median()`` and ``.describe()`` ); furthermore now names the ``Series`` with the quantile (:issue:`13098`, :issue:`13146`)
 
 - Bug in ``SeriesGroupBy.transform`` with datetime values and missing groups (:issue:`13191`)
+- Bug where empty ``Series`` were incorrectly coerced in datetime-like numeric operations (:issue:`13844`)
 
 - Bug in ``Series.str.extractall()`` with ``str`` index raises ``ValueError``  (:issue:`13156`)
 - Bug in ``Series.str.extractall()`` with single group and quantifier  (:issue:`13382`)
diff --git a/pandas/core/ops.py b/pandas/core/ops.py
index c8d074d3d..b84eb0ba4 100644
--- a/pandas/core/ops.py
+++ b/pandas/core/ops.py
@@ -586,10 +586,9 @@ class _TimeOp(_Op):
         """ check if obj or all elements of list-like is DateOffset """
         if isinstance(arr_or_obj, pd.DateOffset):
             return True
-        elif is_list_like(arr_or_obj):
+        elif is_list_like(arr_or_obj) and len(arr_or_obj):
             return all(isinstance(x, pd.DateOffset) for x in arr_or_obj)
-        else:
-            return False
+        return False
 
 
 def _align_method_SERIES(left, right, align_asobject=False):
diff --git a/pandas/tests/series/test_timeseries.py b/pandas/tests/series/test_timeseries.py
index 341d18f98..07d2abc1b 100644
--- a/pandas/tests/series/test_timeseries.py
+++ b/pandas/tests/series/test_timeseries.py
@@ -552,3 +552,12 @@ class TestSeriesTimeSeries(TestData, tm.TestCase):
             self.assertTrue(ser.is_time_series)
         self.assertTrue(ser.index.is_all_dates)
         self.assertIsInstance(ser.index, DatetimeIndex)
+
+    def test_empty_series_ops(self):
+        # see issue #13844
+        a = Series(dtype='M8[ns]')
+        b = Series(dtype='m8[ns]')
+        assert_series_equal(a, a + b)
+        assert_series_equal(a, a - b)
+        assert_series_equal(a, b + a)
+        self.assertRaises(TypeError, lambda x, y: x - y, b, a)
