commit e728f94b1e9f16f4720b0c99d2eec2ff184c0301
Author: jbrockmendel <jbrockmendel@gmail.com>
Date:   Fri Nov 24 12:05:55 2017 -0800

    Remove unused from datetime.pxd, check for fastpath in ensure_datetime64ns (#18453)

diff --git a/pandas/_libs/src/datetime.pxd b/pandas/_libs/src/datetime.pxd
index 3fc3625a0..0624779e5 100644
--- a/pandas/_libs/src/datetime.pxd
+++ b/pandas/_libs/src/datetime.pxd
@@ -5,7 +5,6 @@ from cpython cimport PyUnicode_Check, PyUnicode_AsASCIIString
 
 
 cdef extern from "numpy/ndarrayobject.h":
-    ctypedef int64_t npy_timedelta
     ctypedef int64_t npy_datetime
 
     ctypedef enum NPY_CASTING:
@@ -15,15 +14,10 @@ cdef extern from "numpy/ndarrayobject.h":
         NPY_SAME_KIND_CASTING
         NPY_UNSAFE_CASTING
 
-cdef extern from "numpy_helper.h":
-    npy_datetime get_datetime64_value(object o)
-    npy_timedelta get_timedelta64_value(object o)
-
 cdef extern from "numpy/npy_common.h":
     ctypedef unsigned char npy_bool
 
 cdef extern from "datetime/np_datetime.h":
-
     ctypedef enum PANDAS_DATETIMEUNIT:
         PANDAS_FR_Y
         PANDAS_FR_M
@@ -44,20 +38,12 @@ cdef extern from "datetime/np_datetime.h":
         npy_int64 year
         npy_int32 month, day, hour, min, sec, us, ps, as
 
-    npy_datetime pandas_datetimestruct_to_datetime(
-        PANDAS_DATETIMEUNIT fr, pandas_datetimestruct *d) nogil
-
     void pandas_datetime_to_datetimestruct(npy_datetime val,
                                            PANDAS_DATETIMEUNIT fr,
                                            pandas_datetimestruct *result) nogil
-    int days_per_month_table[2][12]
 
-    int dayofweek(int y, int m, int d) nogil
-    int is_leapyear(int64_t year) nogil
-    PANDAS_DATETIMEUNIT get_datetime64_unit(object o)
 
 cdef extern from "datetime/np_datetime_strings.h":
-
     int parse_iso_8601_datetime(char *str, int len, PANDAS_DATETIMEUNIT unit,
                                 NPY_CASTING casting,
                                 pandas_datetimestruct *out,
diff --git a/pandas/_libs/src/numpy_helper.h b/pandas/_libs/src/numpy_helper.h
index ad683459a..8a9a05723 100644
--- a/pandas/_libs/src/numpy_helper.h
+++ b/pandas/_libs/src/numpy_helper.h
@@ -18,14 +18,6 @@ The full license is in the LICENSE file, distributed with this software.
 
 PANDAS_INLINE npy_int64 get_nat(void) { return NPY_MIN_INT64; }
 
-PANDAS_INLINE npy_datetime get_datetime64_value(PyObject* obj) {
-    return ((PyDatetimeScalarObject*)obj)->obval;
-}
-
-PANDAS_INLINE npy_timedelta get_timedelta64_value(PyObject* obj) {
-    return ((PyTimedeltaScalarObject*)obj)->obval;
-}
-
 PANDAS_INLINE int is_integer_object(PyObject* obj) {
     return (!PyBool_Check(obj)) && PyArray_IsIntegerScalar(obj);
 }
diff --git a/pandas/_libs/tslibs/conversion.pyx b/pandas/_libs/tslibs/conversion.pyx
index 16e88bcae..f58ad0a86 100644
--- a/pandas/_libs/tslibs/conversion.pyx
+++ b/pandas/_libs/tslibs/conversion.pyx
@@ -104,13 +104,16 @@ def ensure_datetime64ns(ndarray arr):
         return result
 
     unit = get_datetime64_unit(arr.flat[0])
-    for i in range(n):
-        if ivalues[i] != NPY_NAT:
-            pandas_datetime_to_datetimestruct(ivalues[i], unit, &dts)
-            iresult[i] = dtstruct_to_dt64(&dts)
-            check_dts_bounds(&dts)
-        else:
-            iresult[i] = NPY_NAT
+    if unit == PANDAS_FR_ns:
+        result = arr
+    else:
+        for i in range(n):
+            if ivalues[i] != NPY_NAT:
+                pandas_datetime_to_datetimestruct(ivalues[i], unit, &dts)
+                iresult[i] = dtstruct_to_dt64(&dts)
+                check_dts_bounds(&dts)
+            else:
+                iresult[i] = NPY_NAT
 
     return result
 
