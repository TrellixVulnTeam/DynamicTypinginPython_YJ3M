commit c6d8a318e5fb4120890cfaa46038b05f2bb20d75
Author: Chang She <chang@lambdafoundry.com>
Date:   Fri May 11 17:18:29 2012 -0400

    ENH: inplace Series.rename

diff --git a/pandas/core/internals.py b/pandas/core/internals.py
index 617c4113d..48dc38e99 100644
--- a/pandas/core/internals.py
+++ b/pandas/core/internals.py
@@ -103,18 +103,22 @@ class Block(object):
         return _merge_blocks([self, other], self.ref_items)
 
     def reindex_axis(self, indexer, mask, needs_masking, axis=0,
-                     fill_value=np.nan):
+                     fill_value=np.nan, out=None):
         """
         Reindex using pre-computed indexer information
         """
         if self.values.size > 0:
             new_values = com.take_fast(self.values, indexer, mask,
                                        needs_masking, axis=axis,
-                                       fill_value=fill_value)
+                                       fill_value=fill_value,
+                                       out=out)
         else:
             shape = list(self.shape)
             shape[axis] = len(indexer)
-            new_values = np.empty(shape)
+            if out is not None and (out.shape == shape):
+                new_values = out
+            else:
+                new_values = np.empty(shape)
             new_values.fill(fill_value)
         return make_block(new_values, self.items, self.ref_items)
 
diff --git a/pandas/core/series.py b/pandas/core/series.py
index 1ba5a19b0..eb721a6c6 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -2460,7 +2460,7 @@ copy : boolean, default False
 
         return Series(result, index=self.index, name=self.name)
 
-    def rename(self, mapper):
+    def rename(self, mapper, inplace=False):
         """
         Alter Series index using dict or function
 
@@ -2495,7 +2495,7 @@ copy : boolean, default False
         renamed : Series (new object)
         """
         mapper_f = _get_rename_function(mapper)
-        result = self.copy()
+        result = self if inplace else self.copy()
         result.index = [mapper_f(x) for x in self.index]
 
         return result
diff --git a/pandas/tests/test_series.py b/pandas/tests/test_series.py
index 8f1873a45..e85c85c47 100644
--- a/pandas/tests/test_series.py
+++ b/pandas/tests/test_series.py
@@ -2375,6 +2375,12 @@ class TestSeries(unittest.TestCase, CheckNameIntegration):
         renamed = s.rename({'b' : 'foo', 'd' : 'bar'})
         self.assert_(np.array_equal(renamed.index, ['a', 'foo', 'c', 'bar']))
 
+    def test_rename_inplace(self):
+        renamer = lambda x: x.strftime('%Y%m%d')
+        expected = renamer(self.ts.index[0])
+        self.ts.rename(renamer, inplace=True)
+        self.assertEqual(self.ts.index[0], expected)
+
     def test_preserveRefs(self):
         seq = self.ts[[5,10,15]]
         seq[1] = np.NaN
