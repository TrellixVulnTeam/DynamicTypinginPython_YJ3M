commit fc518880fce9fb5829da9cb3e7c1a35ae8dc10e2
Author: Chang She <chang@lambdafoundry.com>
Date:   Tue May 1 04:20:38 2012 -0400

    ENH: column name option to Series.reset_index. GH #1164

diff --git a/pandas/core/series.py b/pandas/core/series.py
index ff6c058b3..5ac68e3a0 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -677,7 +677,7 @@ copy : boolean, default False
             new_values = np.concatenate([self.values, [value]])
             return Series(new_values, index=new_index, name=self.name)
 
-    def reset_index(self, drop=False):
+    def reset_index(self, drop=False, name=None):
         """
         Analagous to the DataFrame.reset_index function, see docstring there.
 
@@ -685,6 +685,8 @@ copy : boolean, default False
         ----------
         drop : boolean, default False
             Do not try to insert index into dataframe columns
+        name : object, default None
+            The name of the column corresponding to the Series values
 
         Returns
         ----------
@@ -694,7 +696,12 @@ copy : boolean, default False
             return Series(self, index=np.arange(len(self)), name=self.name)
         else:
             from pandas.core.frame import DataFrame
-            return DataFrame(self).reset_index(drop=drop)
+            if name is None:
+                df = DataFrame(self)
+            else:
+                df = DataFrame({name : self})
+
+            return df.reset_index(drop=drop)
 
     def __repr__(self):
         """Clean string representation of a Series"""
diff --git a/pandas/tests/test_series.py b/pandas/tests/test_series.py
index 388be8ea6..962a9dddc 100644
--- a/pandas/tests/test_series.py
+++ b/pandas/tests/test_series.py
@@ -2467,6 +2467,19 @@ class TestSeriesNonUnique(unittest.TestCase):
         self.assertRaises(KeyError, s.__getitem__, stamp)
         self.assertRaises(KeyError, s.__setitem__, stamp, 0)
 
+    def test_reset_index(self):
+        df = tm.makeDataFrame()[:5]
+        ser = df.stack()
+        ser.index.names = ['hash', 'category']
+
+        ser.name = 'value'
+        df = ser.reset_index()
+        self.assert_('value' in df)
+
+        df = ser.reset_index(name='value2')
+        self.assert_('value2' in df)
+
+
 if __name__ == '__main__':
     nose.runmodule(argv=[__file__,'-vvs','-x','--pdb', '--pdb-failure'],
                    exit=False)
