commit 23e8f9e7ef929e504882a890e9b3ec515ff2d0a7
Author: y-p <yoval@gmx.com>
Date:   Wed Mar 13 17:15:18 2013 +0200

    TST: Enforce grouper=f() result has len(labels) == len(data) GH3035

diff --git a/pandas/tests/test_groupby.py b/pandas/tests/test_groupby.py
index 7344a5aa5..0e5130ea3 100644
--- a/pandas/tests/test_groupby.py
+++ b/pandas/tests/test_groupby.py
@@ -226,6 +226,22 @@ class TestGroupBy(unittest.TestCase):
         b = np.array([1,2,3],dtype='object')
         self.assertRaises(AssertionError, pd.algos.groupby_object,a, b)
 
+    def test_groupby_grouper_f_sanity_checked(self):
+        import pandas as pd
+        dates = pd.date_range('01-Jan-2013', periods=12, freq='MS')
+        ts = pd.TimeSeries(np.random.randn(12), index=dates)
+
+        # GH3035
+        # index.map is used to apply grouper to the index
+        # if it fails on the elements, map tries it on the entire index as
+        # a sequence. That can yield invalid results that cause trouble
+        # down the line.
+        # the surprise comes from using key[0:6] rather then str(key)[0:6]
+        # when the elements are Timestamp.
+        # the result is Index[0:6], very confusing.
+
+        self.assertRaises(AssertionError, ts.groupby,lambda key: key[0:6])
+
     def test_groupby_nonobject_dtype(self):
         key = self.mframe.index.labels[0]
         grouped = self.mframe.groupby(key)
