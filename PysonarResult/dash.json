{"/home/xxm/Desktop/EMSE/dataset/dash/tests/integration/devtools/test_props_check.py": {".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_props_check.test_dvpc001_prop_check_errors_with_path": {"var": {"app": {"Dash": [[179, "    app = dash.Dash(__name__, eager_loading=True)"]]}, "route_url": {"str": [[201, "        route_url = \"{}/{}\".format(dash_duo.server_url, tc)"]]}, "tc": {"?": [[200, "    for tc in test_cases:"]]}}, "func": {"display_content": {"? -> str": [[184, "    def display_content(pathname):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_props_check": {"var": {"test_cases": {"dict": [[8, "test_cases = {"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_props_check.test_dvpc001_prop_check_errors_with_path.display_conten": {"var": {"test_case": {"{dict | dict | dict | dict | dict | dict | dict | dict | dict | dict | dict | dict | dict | dict | dict | dict | dict}": [[187, "        test_case = test_cases[pathname.strip(\"/\")]"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_props_check.test_dvpc001_prop_check_errors_with_pat": {"param": {"dash_duo": {"?": [[178, "def test_dvpc001_prop_check_errors_with_path(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtool": {"func": {"test_dvpc001_prop_check_errors_with_path": {"? -> None": [[178, "def test_dvpc001_prop_check_errors_with_path(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_props_check.test_dvpc001_prop_check_errors_with_path.display_co": {"param": {"pathname": {"?": [[184, "    def display_content(pathname):"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/tests/integration/renderer/test_persistence.py": {".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_persistence.test_rdps006_move_on_page.move_table": {"var": {"i": {"int": [[249, "        for i in range(1, (n or 0) + 1):"]]}}, "param": {"n": {"?": [[247, "    def move_table(n):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_persistence.simple_table": {"var": {"props": {"dict": [[29, "    props = dict("]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_persistence.check_table_": {"param": {"names": {"[str]": [[80, "def check_table_names(dash_duo, names, table_id=\"table\"):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_persistence.test_rdps012_pattern_matching.make_inpu": {"param": {"persistence": {"str": [[459, "    def make_input(persistence, n):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_persistence.test_rdps007_one_prop_changed.hide_cols": {"param": {"n": {"?": [[280, "    def hide_cols(n):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_persistence.reloadable_a": {"func": {"report_props": {"(?, ?) -> str": [[57, "    def report_props(columns, hidden_columns):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_persistence.test_rdps005_persisted_props.toggle_table": {"param": {"n": {"?": [[220, "    def toggle_table(n):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_persistence.test_rdps011_toggle_persistence2": {"var": {"app": {"Dash": [[406, "    app = dash.Dash(__name__)"]]}}, "param": {"dash_duo": {"?": [[405, "def test_rdps011_toggle_persistence2(dash_duo):"]]}}, "func": {"set_out": {"? -> ?": [[425, "    def set_out(val):"]]}, "set_persistence": {"? -> ?": [[421, "    def set_persistence(val):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_persistence.test_rdps008_unsaved_part_changed.toggle_deletable": {"param": {"n": {"?": [[305, "    def toggle_deletable(n):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_persistence.test_rdps004_show_hide": {"var": {"app": {"Dash": [[174, "    app = dash.Dash(__name__)"]]}}, "param": {"dash_duo": {"?": [[173, "def test_rdps004_show_hide(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_persistence.test_rdps012_pattern_matching.set_persistence": {"param": {"val": {"?": [[489, "    def set_persistence(val, n):"]]}, "n": {"?": [[489, "    def set_persistence(val, n):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_persistence.rename_and_hid": {"param": {"rename": {"int": [[68, "def rename_and_hide(dash_duo, rename=0, new_name=NEW_NAME, hide=1):"]]}, "new_name": {"str": [[68, "def rename_and_hide(dash_duo, rename=0, new_name=NEW_NAME, hide=1):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_persistence": {"var": {"NEW_NAME": {"str": [[65, "NEW_NAME = \"mango\""]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integra": {"func": {"test_rdps011_toggle_persistence2": {"? -> None": [[405, "def test_rdps011_toggle_persistence2(dash_duo):"]]}, "test_rdps010_toggle_persistence": {"? -> None": [[353, "def test_rdps010_toggle_persistence(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_persisten": {"func": {"test_rdps001_local_reload": {"? -> None": [[94, "def test_rdps001_local_reload(dash_duo):"]]}, "test_rdps009_clear_prop_callback": {"? -> None": [[328, "def test_rdps009_clear_prop_callback(dash_duo):"]]}, "clear_storage": {"? -> None": [[16, "def clear_storage(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_persistence.test_rdps010_toggl": {"func": {"set_persistence": {"? -> ?": [[369, "    def set_persistence(val):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_persistence.test_rdps008_unsaved_part_changed": {"var": {"app": {"Dash": [[299, "    app = dash.Dash(__name__)"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_persistence.test_rdps003_memory_reload": {"var": {"app": {"Dash": [[162, "    app = reloadable_app(persistence_type=\"memory\")"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_persistence.test_rdps009_clear_prop_callback": {"var": {"app": {"Dash": [[329, "    app = dash.Dash(__name__)"]]}}, "param": {"dash_duo": {"?": [[328, "def test_rdps009_clear_prop_callback(dash_duo):"]]}}, "func": {"reset_names": {"? -> {[dict] | _NoUpdate}": [[335, "    def reset_names(n):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_persistence.test_rdps010_toggle_persistence.set_out": {"param": {"val": {"?": [[373, "    def set_out(val):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_persistence.test_rdps002_session_rel": {"param": {"dash_duo": {"?": [[146, "def test_rdps002_session_reload(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_persistence.test_rdps003_memory_rel": {"param": {"dash_duo": {"?": [[161, "def test_rdps003_memory_reload(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_persistence.test_rdps008_unsaved_part_change": {"param": {"dash_duo": {"?": [[298, "def test_rdps008_unsaved_part_changed(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_persistence.test_rdps004_show_hid": {"func": {"toggle_table": {"? -> str": [[180, "    def toggle_table(n):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_persistence.test_rdps007_one_prop_changed": {"var": {"app": {"Dash": [[274, "    app = dash.Dash(__name__)"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_persistence.reloadable_": {"var": {"app": {"Dash": [[40, "    app = dash.Dash(__name__)"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_persistence.test_rdps012_pattern_matching.content": {"param": {"n": {"?": [[473, "    def content(n):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_persistence.test_rdps012_pattern_matching": {"var": {"app": {"Dash": [[467, "    app = dash.Dash(__name__)"]]}, "_": {"int": [[501, "    for _ in range(3):"]]}}, "param": {"dash_duo": {"?": [[456, "def test_rdps012_pattern_matching(dash_duo):"]]}}, "func": {"content": {"? -> [?]": [[473, "    def content(n):"]]}, "set_out": {"? -> ?": [[496, "    def set_out(val):"]]}, "make_input": {"(?, ?) -> ? / (str, ?) -> ?": [[459, "    def make_input(persistence, n):"]]}, "set_persistence": {"(?, ?) -> ?": [[489, "    def set_persistence(val, n):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_persistence.test_rdps010_toggle_persistence.set_persistence": {"param": {"val": {"?": [[369, "    def set_persistence(val):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_persistence.test_rdps011_toggle_persistence2.set_persistence": {"param": {"val": {"?": [[421, "    def set_persistence(val):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_persistence.test_rdps010_toggle_persistence.make_inpu": {"param": {"persistence": {"str": [[354, "    def make_input(persistence):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_persistence.check_table_nam": {"var": {"headers": {"?": [[84, "    headers = dash_duo.find_elements(\"#{} .column-header-name\".format(table_id))"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_persistence.test_rdps008_unsaved_part_chan": {"func": {"toggle_deletable": {"? -> None": [[305, "    def toggle_deletable(n):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_persistence.check_table_name": {"param": {"dash_duo": {"?": [[80, "def check_table_names(dash_duo, names, table_id=\"table\"):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_persistence.table_colu": {"param": {"names": {"(str, str)": [[21, "def table_columns(names, **extra_props):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_persistence.test_rdps002_session_reload": {"var": {"app": {"Dash": [[147, "    app = reloadable_app(persistence_type=\"session\")"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_persistence.test_rdps006_move_on_page.move_tab": {"var": {"children": {"[?]": [[250, "            children = ["]], "[None]": [[248, "        children = [html.Div(\"div 0\", id=\"div0\"), simple_table()]"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_persistence.test_rdps004_show_hide.toggle_table": {"param": {"n": {"?": [[180, "    def toggle_table(n):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_persistence.clear_storage": {"param": {"dash_duo": {"?": [[16, "def clear_storage(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_persistence.check_table_names": {"var": {"i": {"?": [[87, "    for i, n in enumerate(names):"]]}, "name_el": {"?": [[88, "        name_el = dash_duo.find_element("]]}}, "param": {"table_id": {"str": [[80, "def check_table_names(dash_duo, names, table_id=\"table\"):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_persistence.test_rdps001_local_reload": {"var": {"app": {"Dash": [[95, "    app = reloadable_app()"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_persistence.reloadable_app.report_prop": {"param": {"hidden_columns": {"?": [[57, "    def report_props(columns, hidden_columns):"]]}, "columns": {"?": [[57, "    def report_props(columns, hidden_columns):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_persistence.test_rdps007_one_prop_change": {"param": {"dash_duo": {"?": [[273, "def test_rdps007_one_prop_changed(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_persistence.test_rdps006_move_on_page.find_last_div": {"param": {"n": {"int": [[256, "    def find_last_div(n):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_persistence.simple_tabl": {"param": {"names": {"(str, str)": [[28, "def simple_table(names=(\"a\", \"b\"), **props_override):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_persistence.test_rdps012_pattern_matching.set_out": {"param": {"val": {"?": [[496, "    def set_out(val):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_persistence.test_rdps009_clear_prop_callback.reset_names": {"param": {"n": {"?": [[335, "    def reset_names(n):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_persistence.test_rdps006_move_on_pag": {"func": {"move_table": {"? -> {[?] | [None]}": [[247, "    def move_table(n):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_persistence.test_rdps010_toggle_persistence": {"var": {"app": {"Dash": [[357, "    app = dash.Dash(__name__)"]]}}, "param": {"dash_duo": {"?": [[353, "def test_rdps010_toggle_persistence(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_persistence.test_rdps007_one_prop_chang": {"func": {"hide_cols": {"? -> None": [[280, "    def hide_cols(n):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_persi": {"func": {"test_rdps007_one_prop_changed": {"? -> None": [[273, "def test_rdps007_one_prop_changed(dash_duo):"]]}, "check_table_names": {"(?, ?, str) -> None / (?, [str], str) -> None": [[80, "def check_table_names(dash_duo, names, table_id=\"table\"):"]]}, "table_columns": {"(str, str) -> [dict] / ? -> [dict]": [[21, "def table_columns(names, **extra_props):"]]}, "test_rdps008_unsaved_part_changed": {"? -> None": [[298, "def test_rdps008_unsaved_part_changed(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_persistence.test_rdps010_toggle_persistenc": {"func": {"set_out": {"? -> ?": [[373, "    def set_out(val):"]]}, "make_input": {"? -> ? / str -> ?": [[354, "    def make_input(persistence):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_persistenc": {"func": {"test_rdps004_show_hide": {"? -> None": [[173, "def test_rdps004_show_hide(dash_duo):"]]}, "test_rdps003_memory_reload": {"? -> None": [[161, "def test_rdps003_memory_reload(dash_duo):"]]}, "rename_and_hide": {"(?, int, str, int) -> None": [[68, "def rename_and_hide(dash_duo, rename=0, new_name=NEW_NAME, hide=1):"]]}, "reloadable_app": {"() -> Dash": [[39, "def reloadable_app(**props_override):"]]}, "test_rdps002_session_reload": {"? -> None": [[146, "def test_rdps002_session_reload(dash_duo):"]]}, "test_rdps005_persisted_props": {"? -> None": [[210, "def test_rdps005_persisted_props(dash_duo):"]]}, "test_rdps006_move_on_page": {"? -> None": [[240, "def test_rdps006_move_on_page(dash_duo):"]]}, "simple_table": {"(str, str) -> None": [[28, "def simple_table(names=(\"a\", \"b\"), **props_override):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_persistence.reloadable_app": {"func": {"layout": {"() -> ?": [[43, "    def layout():"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_persistence.test_rdps005_persisted_prop": {"param": {"dash_duo": {"?": [[210, "def test_rdps005_persisted_props(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_persistence.rename_and_": {"param": {"hide": {"str": [[68, "def rename_and_hide(dash_duo, rename=0, new_name=NEW_NAME, hide=1):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integratio": {"func": {"test_rdps012_pattern_matching": {"? -> None": [[456, "def test_rdps012_pattern_matching(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_persistence.test_rdps011_toggle_persistence2.set_out": {"param": {"val": {"?": [[425, "    def set_out(val):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_persistence.test_rdps005_persisted_props": {"var": {"app": {"Dash": [[211, "    app = dash.Dash(__name__)"]]}}, "func": {"toggle_table": {"? -> None": [[220, "    def toggle_table(n):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_persistence.test_rdps006_move_on_page": {"var": {"i": {"int": [[267, "    for i in range(1, 5):"]]}, "app": {"Dash": [[241, "    app = dash.Dash(__name__)"]]}}, "param": {"dash_duo": {"?": [[240, "def test_rdps006_move_on_page(dash_duo):"]]}}, "func": {"find_last_div": {"int -> None": [[256, "    def find_last_div(n):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_persistence.rename_and_hide": {"var": {"prompt": {"?": [[72, "    prompt = dash_duo.driver.switch_to.alert"]]}}, "param": {"dash_duo": {"?": [[68, "def rename_and_hide(dash_duo, rename=0, new_name=NEW_NAME, hide=1):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_persistence.test_rdps001_local_rel": {"param": {"dash_duo": {"?": [[94, "def test_rdps001_local_reload(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_persistence.test_rdps012_pattern_matching.make_input": {"param": {"n": {"?": [[459, "    def make_input(persistence, n):"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/tests/integration/callbacks/test_callback_context.py": {".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_callback_context.test_cbcx004_triggered_backward_compa": {"func": {"report_triggered": {"? -> str": [[76, "    def report_triggered(n):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_callback_context.test_cbcx002_triggere": {"param": {"dash_duo": {"?": [[37, "def test_cbcx002_triggered(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_callback_con": {"func": {"test_cbcx002_triggered": {"? -> None": [[37, "def test_cbcx002_triggered(dash_duo):"]]}, "test_cbcx004_triggered_backward_compat": {"? -> None": [[71, "def test_cbcx004_triggered_backward_compat(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_callback_context.test_cbcx004_triggered_backward_compat.report_": {"var": {"triggered": {"CallbackContext -> FalsyList": [[77, "        triggered = callback_context.triggered"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_callback_context.test_cbcx004_triggered_backward_compat.report_triggere": {"var": {"split_propid": {"?": [[79, "        split_propid = json.dumps(triggered[0][\"prop_id\"].split(\".\"))"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_callback_context.test_cbcx004_triggered_backward_compat.report_triggered": {"var": {"bool_val": {"str": [[78, "        bool_val = \"truthy\" if triggered else \"falsy\""]]}, "full_val": {"?": [[80, "        full_val = json.dumps(triggered)"]]}}, "param": {"n": {"?": [[76, "    def report_triggered(n):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_callback_context.test_cbcx001_modified_respons": {"var": {"cookie": {"?": [[30, "    cookie = dash_duo.driver.get_cookie(\"dash_cookie\")"]]}}, "func": {"update_output": {"? -> str": [[19, "    def update_output(value):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integrati": {"func": {"test_cbcx003_no_callback_context": {"() -> None": [[65, "def test_cbcx003_no_callback_context():"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_callback": {"func": {"test_cbcx001_modified_response": {"? -> None": [[14, "def test_cbcx001_modified_response(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_callback_context.test_cbcx001_modified_response.update_output": {"param": {"value": {"?": [[19, "    def update_output(value):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_callback_context.test_cbcx002_triggered.on_click": {"var": {"trigger": {"?": [[50, "        trigger = callback_context.triggered[0]"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_callback_context.test_cbcx002_triggered": {"var": {"i": {"int": [[57, "    for i in range(1, 5):"]]}, "app": {"Dash": [[38, "    app = Dash(__name__)"]]}, "btn": {"str": [[58, "        for btn in btns:"]]}, "btns": {"[str]": [[40, "    btns = [\"btn-{}\".format(x) for x in range(1, 6)]"]]}}, "func": {"on_click": {"() -> str": [[47, "    def on_click(*args):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_callback_context.test_cbcx004_triggered_backward_compat": {"var": {"app": {"Dash": [[72, "    app = Dash(__name__)"]]}}, "param": {"dash_duo": {"?": [[71, "def test_cbcx004_triggered_backward_compat(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_callback_context.test_cbcx003_no_callback_contex": {"var": {"attr": {"str": [[66, "    for attr in [\"inputs\", \"states\", \"triggered\", \"response\"]:"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_callback_context.test_cbcx001_modified_response": {"var": {"app": {"Dash": [[15, "    app = Dash(__name__)"]]}, "input1": {"?": [[25, "    input1 = dash_duo.find_element(\"#input\")"]]}}, "param": {"dash_duo": {"?": [[14, "def test_cbcx001_modified_response(dash_duo):"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/tests/integration/callbacks/test_wildcards.py": {".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_wildcards.todo_app.show_totals": {"var": {"count_all": {"int": [[131, "        count_all = len(done)"]]}, "count_done": {"int": [[132, "        count_done = len([d for d in done if d])"]]}}, "param": {"done": {"?": [[129, "    def show_totals(done):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_wildcards.fibonacci_app.sequenc": {"param": {"prev": {"?": [[288, "        def sequence(prev):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_wildcards.test_cbwc004_layout_chunk_changed_pr": {"func": {"display_output": {"? -> str": [[417, "    def display_output(n):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_wildcards.css_escap": {"var": {"sel": {"?": [[14, "    sel = re.sub(\"[\\\\{\\\\}\\\\\\\"\\\\'.:,]\", lambda m: \"\\\\\" + m.group(0), s)"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_wildcards.todo_app.display_content": {"param": {"_": {"?": [[38, "        def display_content(_):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_wildcards.test_cbwc004_layout_chunk_changed_props.update_dynamic_output_patter": {"param": {"wc_inputs": {"?": [[439, "    def update_dynamic_output_pattern(wc_inputs):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_wildcards.test_cbwc003_same_ke": {"func": {"display_dropdowns": {"(?, ?) -> [?]": [[362, "    def display_dropdowns(n_clicks, children):"]]}, "display_output": {"(?, ?) -> ?": [[381, "    def display_output(value, id):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_wildcards.fibonacci_": {"var": {"app": {"Dash": [[247, "    app = dash.Dash(__name__)"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_wildcards.test_cbwc003_same_keys.display_dropdowns": {"var": {"new_element": {"?": [[363, "        new_element = html.Div("]]}}, "param": {"children": {"?": [[362, "    def display_dropdowns(n_clicks, children):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_wildcards.fibonacci_app.show_sum": {"param": {"seq": {"?": [[298, "        def show_sum(seq):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_wildcards.test_cbwc001_todo_app.assert_": {"param": {"item": {"int": [[163, "    def assert_item(item, text, done, prefix=\"\", suffix=\"\"):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_wildcards.test_cbwc004_layout_chunk_changed_props": {"var": {"app": {"Dash": [[406, "    app = dash.Dash(__name__)"]]}, "trigger_text": {"str": [[473, "    trigger_text = 'triggered is Truthy with prop_ids {\"index\":1,\"type\":\"input\"}.value'"]]}}, "func": {"update_output_on_page_pattern": {"? -> str": [[448, "    def update_output_on_page_pattern(value):"]]}, "update_dynamic_output_pattern": {"? -> str": [[439, "    def update_dynamic_output_pattern(wc_inputs):"]]}, "trigger_info": {"() -> str": [[428, "    def trigger_info():"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_wildcards.todo_app.mark_": {"param": {"done": {"?": [[104, "    def mark_done(done):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_wildcards.test_cbwc003_same_keys.display_dropdow": {"param": {"n_clicks": {"?": [[362, "    def display_dropdowns(n_clicks, children):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_wildcards.test_cbwc001_todo_": {"var": {"app": {"Dash": [[143, "    app = todo_app(content_callback)"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_wildcards.test_cbwc004_layout_chunk_changed_props.update_output_on_page_pattern": {"param": {"value": {"?": [[448, "    def update_output_on_page_pattern(value):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_wildcards.todo_": {"var": {"app": {"Dash": [[20, "    app = dash.Dash(__name__)"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_wildcards": {"var": {"fibonacci_count": {"int": [[233, "fibonacci_count = 0"]]}}, "func": {"todo_app": {"? -> Dash": [[19, "def todo_app(content_callback):"]]}, "fibonacci_app": {"bool -> Dash / ? -> Dash": [[237, "def fibonacci_app(clientside):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_wildcards.test_cbwc004_layout_chunk_changed_props.display_output": {"param": {"n": {"?": [[417, "    def display_output(n):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_wildcards.todo_app.edit_list": {"var": {"adding": {"int": [[69, "        adding = len("]]}, "new_spec": {"[(?, [?])]": [[73, "        new_spec = ["]]}, "clearing": {"int": [[72, "        clearing = len([1 for i in triggered if i == \"clear-done.n_clicks\"])"]]}}, "param": {"clear": {"?": [[66, "    def edit_list(add, add2, clear, new_item, items, items_done):"]]}, "add": {"?": [[66, "    def edit_list(add, add2, clear, new_item, items, items_done):"]]}, "add2": {"?": [[66, "    def edit_list(add, add2, clear, new_item, items, items_done):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_wildcards.test_cbwc004_layout_chunk_changed_props.trigger_info": {"var": {"triggered": {"CallbackContext -> FalsyList": [[429, "        triggered = dash.callback_context.triggered"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_wildcards.test_cbwc002_fibonacci_": {"var": {"app": {"Dash": [[312, "    app = fibonacci_app(clientside)"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_wildcard": {"var": {"fibonacci_sum_count": {"int": [[234, "fibonacci_sum_count = 0"]]}}, "func": {"test_cbwc002_fibonacci_app": {"(?, ?) -> None": [[311, "def test_cbwc002_fibonacci_app(clientside, dash_duo):"]]}, "css_escape": {"? -> None": [[13, "def css_escape(s):"]]}, "test_cbwc005_callbacks_count": {"? -> None": [[478, "def test_cbwc005_callbacks_count(dash_duo):"]]}, "test_cbwc003_same_keys": {"? -> None": [[347, "def test_cbwc003_same_keys(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_wildcards.test_cbwc003_same_keys.display_output": {"param": {"id": {"?": [[381, "    def display_output(value, id):"]]}, "value": {"?": [[381, "    def display_output(value, id):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_wildcards.fibonacci_app.items": {"param": {"n": {"?": [[257, "    def items(n):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_wildcards.test_cbwc004_layout_chunk_changed_prop": {"param": {"dash_duo": {"?": [[405, "def test_cbwc004_layout_chunk_changed_props(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_wildcards.css_escape": {"param": {"s": {"?": [[13, "def css_escape(s):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_wildcards.test_cbwc001_todo_app.get_done_item": {"var": {"selector": {"None": [[160, "        selector = css_escape('#{\"action\":\"done\",\"item\":%d} input' % item)"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_wildcards.todo_app.edit_l": {"param": {"items": {"?": [[66, "    def edit_list(add, add2, clear, new_item, items, items_done):"]]}, "items_done": {"?": [[66, "    def edit_list(add, add2, clear, new_item, items, items_done):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_wildcards.test_cbwc001_todo_app.get_done_": {"param": {"item": {"int": [[159, "    def get_done_item(item):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_wildcards.test_cbwc002_fibonacci_app": {"param": {"dash_duo": {"?": [[311, "def test_cbwc002_fibonacci_app(clientside, dash_duo):"]]}, "clientside": {"?": [[311, "def test_cbwc002_fibonacci_app(clientside, dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_wildcards.test_cbwc001_todo_app.assert_item": {"var": {"expected_note": {"str": [[166, "        expected_note = \"\" if done else (prefix + \" preceding items are done\" + suffix)"]]}}, "param": {"text": {"str": [[163, "    def assert_item(item, text, done, prefix=\"\", suffix=\"\"):"]]}, "prefix": {"str": [[163, "    def assert_item(item, text, done, prefix=\"\", suffix=\"\"):"]]}, "done": {"bool": [[163, "    def assert_item(item, text, done, prefix=\"\", suffix=\"\"):"]]}, "suffix": {"str": [[163, "    def assert_item(item, text, done, prefix=\"\", suffix=\"\"):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_wildcards.test_cbwc001_todo_app": {"var": {"clear_done": {"?": [[154, "    clear_done = dash_duo.find_element(\"#clear-done\")"]]}, "add_item": {"?": [[153, "    add_item = dash_duo.find_element(\"#add\")"]]}, "new_item": {"?": [[152, "    new_item = dash_duo.find_element(\"#new-item\")"]]}}, "param": {"dash_duo": {"?": [[142, "def test_cbwc001_todo_app(content_callback, dash_duo):"]]}, "content_callback": {"?": [[142, "def test_cbwc001_todo_app(content_callback, dash_duo):"]]}}, "func": {"get_done_item": {"int -> None": [[159, "    def get_done_item(item):"]]}, "assert_item": {"(int, str, bool, str, str) -> None": [[163, "    def assert_item(item, text, done, prefix=\"\", suffix=\"\"):"]]}, "assert_count": {"int -> None": [[156, "    def assert_count(items):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_wildcards.fibonacci_app": {"param": {"clientside": {"bool": [[237, "def fibonacci_app(clientside):"]]}}, "func": {"items": {"? -> [?]": [[257, "    def items(n):"]]}, "show_sum": {"? -> str": [[298, "        def show_sum(seq):"]]}, "sequence": {"? -> int": [[288, "        def sequence(prev):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_wildcards.todo_app.ed": {"var": {"new_list": {"[?]": [[80, "        new_list = ["]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_wildcards.test_cbwc003_same_keys": {"var": {"app": {"Dash": [[348, "    app = dash.Dash(__name__, suppress_callback_exceptions=True)"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_wildcards.test_cbwc005_callbacks_count": {"var": {"app": {"Dash": [[482, "    app = fibonacci_app(False)"]]}}, "param": {"dash_duo": {"?": [[478, "def test_cbwc005_callbacks_count(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_wildcards.test_cbwc001_todo_app.assert_coun": {"param": {"items": {"int": [[156, "    def assert_count(items):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_wildcards.todo_app.show_preceding": {"var": {"done_before": {"int": [[120, "        done_before = len([1 for d in done_before if d])"]]}, "out": {"str": [[121, "        out = \"{} of {} preceding items are done\".format(done_before, all_before)"]]}, "all_before": {"int": [[119, "        all_before = len(done_before)"]]}}, "param": {"done_before": {"?": [[115, "    def show_preceding(done_before, this_done):"]]}, "this_done": {"?": [[115, "    def show_preceding(done_before, this_done):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_wildcar": {"func": {"display_content": {"? -> ?": [[38, "        def display_content(_):"]]}, "test_cbwc001_todo_app": {"(?, ?) -> None": [[142, "def test_cbwc001_todo_app(content_callback, dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_wildcards.todo_a": {"func": {"show_preceding": {"(?, ?) -> str": [[115, "    def show_preceding(done_before, this_done):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_wildcards.test_cbwc003_same_key": {"param": {"dash_duo": {"?": [[347, "def test_cbwc003_same_keys(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_wildcards.todo_app": {"var": {"content": {"?": [[22, "    content = html.Div("]]}, "style_todo": {"dict": [[44, "    style_todo = {\"display\": \"inline\", \"margin\": \"10px\"}"]]}, "style_done": {"dict": [[45, "    style_done = {\"textDecoration\": \"line-through\", \"color\": \"#888\"}"]]}}, "param": {"content_callback": {"?": [[19, "def todo_app(content_callback):"]]}}, "func": {"show_totals": {"? -> str": [[129, "    def show_totals(done):"]]}, "edit_list": {"(?, ?, ?, ?, ?, ?) -> [{[?] | str}]": [[66, "    def edit_list(add, add2, clear, new_item, items, items_done):"]]}, "mark_done": {"? -> dict": [[104, "    def mark_done(done):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_wildcards.todo_app.edit_lis": {"var": {"triggered": {"[?]": [[68, "        triggered = [t[\"prop_id\"] for t in dash.callback_context.triggered]"]]}}, "param": {"new_item": {"?": [[66, "    def edit_list(add, add2, clear, new_item, items, items_done):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_wildcards.todo_app.show_tota": {"var": {"result": {"str": [[133, "        result = \"{} of {} items completed\".format(count_done, count_all)"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_wi": {"func": {"test_cbwc004_layout_chunk_changed_props": {"? -> None": [[405, "def test_cbwc004_layout_chunk_changed_props(dash_duo):"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/tests/integration/callbacks/test_multiple_callbacks.py": {".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_multiple_callbacks.test_cbmt002_canceled_intermediate_callback.set_out": {"param": {"a": {"?": [[58, "    def set_out(a, b, c):"]]}, "c": {"?": [[58, "    def set_out(a, b, c):"]]}, "b": {"?": [[58, "    def set_out(a, b, c):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_multiple_callbacks.test_cbmt002_canceled_intermediate_callback": {"var": {"i": {"?": [[72, "    for i in list(range(10)) * 2:"]]}, "app": {"Dash": [[44, "    app = dash.Dash(__name__)"]]}, "chars": {"str": [[71, "    chars = \"x\""]]}}, "param": {"dash_duo": {"?": [[42, "def test_cbmt002_canceled_intermediate_callback(dash_duo):"]]}}, "func": {"set_out": {"(?, ?, ?) -> str": [[58, "    def set_out(a, b, c):"]]}, "set_c": {"? -> ?": [[66, "    def set_c(a):"]]}, "set_b": {"? -> None": [[62, "    def set_b(a):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_multiple_callbacks.test_cbmt006_derived_props.o": {"param": {"n_clicks": {"?": [[256, "    def on_click(n_clicks):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_multiple_callbacks.test_cbmt004_chain_with_sliders.update_slider2_val": {"param": {"n": {"?": [[172, "        def update_slider2_val(n):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_multiple_callbacks.test_cbmt004_chain_with_sliders.update_slider2_labe": {"param": {"val": {"?": [[182, "    def update_slider2_label(val):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_multiple_callbacks.test_cbmt003_chain_with_table.a12": {"param": {"n": {"?": [[97, "    def a12(n):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_multiple_callbacks.test_cbmt003_chain_with_table": {"var": {"app": {"Dash": [[80, "    app = dash.Dash(__name__)"]]}}, "param": {"dash_duo": {"?": [[78, "def test_cbmt003_chain_with_table(dash_duo):"]]}}, "func": {"b1": {"? -> str": [[101, "    def b1(a1):"]]}, "b2": {"(?, ?) -> str": [[108, "    def b2(a2, selected_cells):"]]}, "a12": {"? -> (str, str)": [[97, "    def a12(n):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_multip": {"func": {"test_cbmt002_canceled_intermediate_callback": {"? -> None": [[42, "def test_cbmt002_canceled_intermediate_callback(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_multiple_callbacks.test_cbmt006_derived_props": {"var": {"app": {"Dash": [[242, "    app = dash.Dash(__name__)"]]}}, "func": {"on_data": {"(?, ?) -> ?": [[252, "    def on_data(ts, data):"]]}, "on_click": {"? -> int": [[256, "    def on_click(n_clicks):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_multiple_callbacks.test_cbmt007_early_preventupdate_inputs_above_below": {"var": {"app": {"Dash": [[268, "    app = dash.Dash(__name__, suppress_callback_exceptions=True)"]]}, "pos": {"str": [[287, "    for pos in (\"above\", \"below\"):"]]}}, "param": {"dash_duo": {"?": [[267, "def test_cbmt007_early_preventupdate_inputs_above_below(dash_duo):"]]}}, "func": {"content": {"? -> ?": [[272, "    def content(_):"]]}, "dummy": {"? -> None": [[293, "        def dummy(_):"]]}, "out": {"? -> ?": [[300, "        def out(v):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_multiple_callbacks.test_cbmt002_canceled_intermediate_callback.set_c": {"param": {"a": {"?": [[66, "    def set_c(a):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_multiple_callbacks.test_cbmt004_chain_with_sliders.update_slider_vals": {"param": {"n": {"?": [[158, "        def update_slider_vals(n):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_multiple_callbacks.test_cbmt004_chain_with_sliders.update_slider1_val": {"param": {"n": {"?": [[166, "        def update_slider1_val(n):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_multiple_callbacks.test_cbmt005_multi_converging_chain": {"var": {"app": {"Dash": [[200, "    app = dash.Dash(__name__)"]]}}, "param": {"dash_duo": {"?": [[199, "def test_cbmt005_multi_converging_chain(dash_duo):"]]}}, "func": {"update_sliders": {"(?, ?) -> (int, int)": [[215, "    def update_sliders(button1, button2):"]]}, "update_graph": {"(?, ?) -> str": [[228, "    def update_graph(s1, s2):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_multiple_callbacks.test_cbmt001_called_multiple_times_and_out_of_order.update_output": {"param": {"n_clicks": {"?": [[21, "    def update_output(n_clicks):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_multiple_callbacks.test_cbmt003_chain_with_table.b2": {"param": {"selected_cells": {"?": [[108, "    def b2(a2, selected_cells):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_multiple_callbacks.test_cbmt005_multi_converging_chain.update_graph": {"param": {"s2": {"?": [[228, "    def update_graph(s1, s2):"]]}, "s1": {"?": [[228, "    def update_graph(s1, s2):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_multiple_callbacks.test_cbmt006_derived_props.on_": {"param": {"data": {"?": [[252, "    def on_data(ts, data):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_multiple_callbacks.test_cbmt004_chain_with_sliders": {"var": {"app": {"Dash": [[133, "    app = dash.Dash(__name__)"]]}}, "param": {"MULTI": {"?": [[132, "def test_cbmt004_chain_with_sliders(MULTI, dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_multiple_callbacks.test_cbmt001_called_multiple_times_and_out_of_order": {"var": {"app": {"Dash": [[15, "    app = dash.Dash(__name__)"]]}, "call_count": {"?": [[18, "    call_count = Value(\"i\", 0)"]]}}, "param": {"dash_duo": {"?": [[14, "def test_cbmt001_called_multiple_times_and_out_of_order(dash_duo):"]]}}, "func": {"update_output": {"? -> None": [[21, "    def update_output(n_clicks):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_multiple_callbacks.test_cbmt006_derived_props.on_data": {"param": {"ts": {"?": [[252, "    def on_data(ts, data):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_multiple_callbacks.test_cbmt004_chain_with_slider": {"param": {"dash_duo": {"?": [[132, "def test_cbmt004_chain_with_sliders(MULTI, dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_multiple_callbacks.test_cbmt007_early_preventupdate_inputs_above_below.out": {"param": {"v": {"?": [[300, "        def out(v):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_multiple_callbacks.test_cbmt004_chain_with": {"func": {"update_slider1_val": {"? -> None": [[166, "        def update_slider1_val(n):"]]}, "update_slider1_label": {"? -> str": [[178, "    def update_slider1_label(val):"]]}, "update_slider2_label": {"? -> str": [[182, "    def update_slider2_label(val):"]]}, "update_slider_vals": {"? -> (?, ?)": [[158, "        def update_slider_vals(n):"]]}, "update_slider2_val": {"? -> None": [[172, "        def update_slider2_val(n):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_multiple_callbacks.test_cbmt002_canceled_intermediate_callback.set_b": {"param": {"a": {"?": [[62, "    def set_b(a):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_multiple_callbacks.test_cbmt003_chain_with_table.b": {"param": {"a1": {"?": [[101, "    def b1(a1):"]]}, "a2": {"?": [[108, "    def b2(a2, selected_cells):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_multiple_callbacks.test_cbmt005_multi_converging_chain.update_sliders": {"param": {"button2": {"?": [[215, "    def update_sliders(button1, button2):"]]}, "button1": {"?": [[215, "    def update_sliders(button1, button2):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_multiple_callbacks.test_cbmt004_chain_with_sliders.update_slider1_labe": {"param": {"val": {"?": [[178, "    def update_slider1_label(val):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_multiple_callbacks.test_cbmt007_early_preventupdate_inputs_above_below.dummy": {"param": {"_": {"?": [[293, "        def dummy(_):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_multiple_callbacks.test_cbmt007_early_preventupdate_inputs_above_below.content": {"param": {"_": {"?": [[272, "    def content(_):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_multiple_callback": {"func": {"test_cbmt007_early_preventupdate_inputs_above_below": {"? -> None": [[267, "def test_cbmt007_early_preventupdate_inputs_above_below(dash_duo):"]]}, "test_cbmt006_derived_props": {"? -> None": [[241, "def test_cbmt006_derived_props(dash_duo):"]]}, "test_cbmt004_chain_with_sliders": {"(?, ?) -> None": [[132, "def test_cbmt004_chain_with_sliders(MULTI, dash_duo):"]]}, "test_cbmt005_multi_converging_chain": {"? -> None": [[199, "def test_cbmt005_multi_converging_chain(dash_duo):"]]}, "test_cbmt001_called_multiple_times_and_out_of_order": {"? -> None": [[14, "def test_cbmt001_called_multiple_times_and_out_of_order(dash_duo):"]]}, "test_cbmt003_chain_with_table": {"? -> None": [[78, "def test_cbmt003_chain_with_table(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_multiple_callbacks.test_cbmt006_derived_prop": {"param": {"dash_duo": {"?": [[241, "def test_cbmt006_derived_props(dash_duo):"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/tests/unit/test_app_runners.py": {".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.test_app_runners.test_process_server_smoke": {"var": {"this_dir": {"str": [[30, "    this_dir = os.path.dirname(__file__)"]]}, "r": {"?": [[35, "        r = requests.get(dash_process_server.url)"]]}, "cwd": {"str": [[29, "    cwd = os.getcwd()"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.test_app_runners.test_threaded_server_smok": {"param": {"dash_thread_server": {"?": [[10, "def test_threaded_server_smoke(dash_thread_server):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.test_app_runn": {"func": {"test_process_server_smoke": {"? -> ?": [[28, "def test_process_server_smoke(dash_process_server):"]]}, "test_threaded_server_smoke": {"? -> None": [[10, "def test_threaded_server_smoke(dash_thread_server):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.test_app_runners.test_process_server_smok": {"var": {"assets_dir": {"str": [[31, "    assets_dir = os.path.abspath(os.path.join(this_dir, \"..\", \"assets\"))"]]}}, "param": {"dash_process_server": {"?": [[28, "def test_process_server_smoke(dash_process_server):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.test_app_runners.test_threaded_server_smoke": {"var": {"app": {"Dash": [[11, "    app = dash.Dash(__name__)"]]}, "r": {"?": [[20, "    r = requests.get(dash_thread_server.url)"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/dash/exceptions.py": {".home.xxm.Desktop.EMSE.dataset.dash.dash": {"class": {"ObsoleteKwargException": {"<ObsoleteKwargException>": [[9, "class ObsoleteKwargException(DashException):"]]}, "NonExistentEventException": {"<NonExistentEventException>": [[21, "class NonExistentEventException(CallbackException):"]]}, "MissingCallbackContextException": {"<MissingCallbackContextException>": [[70, "class MissingCallbackContextException(CallbackException):"]]}, "ResourceException": {"<ResourceException>": [[66, "class ResourceException(DashException):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.excep": {"class": {"IDsCantContainPeriods": {"<IDsCantContainPeriods>": [[29, "class IDsCantContainPeriods(CallbackException):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.exc": {"class": {"UnsupportedRelativePath": {"<UnsupportedRelativePath>": [[74, "class UnsupportedRelativePath(CallbackException):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.exceptions.DashExceptio": {"func": {"__init__": {"? -> ?": [[5, "    def __init__(self, msg=\"\"):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.d": {"class": {"DashException": {"<DashException>": [[4, "class DashException(Exception):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.exceptions.DashException.__init__": {"param": {"msg": {"str": [[5, "    def __init__(self, msg=\"\"):"]]}, "self": {"DashException": [[5, "    def __init__(self, msg=\"\"):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.except": {"class": {"InvalidResourceError": {"<InvalidResourceError>": [[54, "class InvalidResourceError(DashException):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.exceptions": {"class": {"IncorrectTypeException": {"<IncorrectTypeException>": [[25, "class IncorrectTypeException(CallbackException):"]]}, "InvalidIndexException": {"<InvalidIndexException>": [[58, "class InvalidIndexException(DashException):"]]}, "DependencyException": {"<DependencyException>": [[62, "class DependencyException(DashException):"]]}, "DuplicateIdError": {"<DuplicateIdError>": [[42, "class DuplicateIdError(DashException):"]]}, "ProxyError": {"<ProxyError>": [[78, "class ProxyError(DashException):"]]}, "CallbackException": {"<CallbackException>": [[17, "class CallbackException(DashException):"]]}, "InvalidConfig": {"<InvalidConfig>": [[50, "class InvalidConfig(DashException):"]]}, "NoLayoutException": {"<NoLayoutException>": [[13, "class NoLayoutException(DashException):"]]}, "PreventUpdate": {"<PreventUpdate>": [[38, "class PreventUpdate(CallbackException):"]]}, "InvalidComponentIdError": {"<InvalidComponentIdError>": [[34, "class InvalidComponentIdError(IDsCantContainPeriods):"]]}, "InvalidCallbackReturnValue": {"<InvalidCallbackReturnValue>": [[46, "class InvalidCallbackReturnValue(CallbackException):"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/@plotly/dash-generator-test-component-nested/setup.py": {".home.xxm.Desktop.EMSE.dataset.dash.@plotly.dash-generator-test-component-nested.setu": {"var": {"package_name": {"str": [[7, "package_name = str(package[\"name\"].replace(\" \", \"_\").replace(\"-\", \"_\"))"]]}, "package": {"?": [[5, "    package = json.load(f)"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/tests/integration/callbacks/test_basic_callback.py": {".home.xxm.Desktop.EMSE.dataset.dash.tests.integration": {"func": {"test_cbsc001_simple_callback": {"? -> None": [[14, "def test_cbsc001_simple_callback(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_basic_callback.test_cbsc007_parallel_up": {"func": {"set_data": {"? -> [dict]": [[319, "    def set_data(path):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_basic_callback.test_cbsc004_callback_using_unloaded_async_component.update_ou": {"param": {"data": {"?": [[202, "    def update_out(n_clicks, data):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_basic_callback.test_cbsc002_callbacks_generating_children": {"var": {"paths": {"?": [[96, "    paths = dash_duo.redux_state_paths"]]}, "app": {"Dash": [[53, "    app = dash.Dash(__name__, suppress_callback_exceptions=True)"]]}}, "param": {"dash_duo": {"?": [[49, "def test_cbsc002_callbacks_generating_children(dash_duo):"]]}}, "func": {"pad_output": {"? -> ?": [[59, "    def pad_output(input):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_basic_callback.test_cbsc004_callback_using_unloaded_async_componen": {"var": {"expected": {"str": [[230, "        expected = '[{\"a\": \"b\"}] - ' + str(i)"]]}}, "func": {"update_out": {"(?, ?) -> str": [[202, "    def update_out(n_clicks, data):"]]}, "update_out2": {"(?, ?) -> str": [[210, "    def update_out2(n_clicks, data):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_basic_callback.test_cbsc005_children_type": {"var": {"outputs": {"[{[str] | [{[int] | str}] | [{[str] | str}] | [{[{int | str}] | str}] | [{float | str}] | [{int | str}]}]": [[243, "    outputs = ["]]}}, "param": {"dash_duo": {"?": [[239, "def test_cbsc005_children_types(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_basic_callback.test_cbsc001_simple_callback": {"var": {"app": {"Dash": [[15, "    app = dash.Dash(__name__)"]]}, "input_": {"?": [[34, "    input_ = dash_duo.find_element(\"#input\")"]]}, "call_count": {"?": [[22, "    call_count = Value(\"i\", 0)"]]}}, "param": {"dash_duo": {"?": [[14, "def test_cbsc001_simple_callback(dash_duo):"]]}}, "func": {"update_output": {"? -> None": [[25, "    def update_output(value):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_basic_callback.test_cbsc007_parallel_updates": {"var": {"app": {"Dash": [[307, "    app = dash.Dash()"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_basic_callback.test_cbsc005_children_typ": {"func": {"set_children": {"? -> {[int] | [str] | [{int | str}] | _NoUpdate | float | int | str}": [[255, "    def set_children(n):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_basic_callback.test_cbsc006_array_of_objects.set_ou": {"param": {"opts": {"?": [[279, "    def set_out(opts):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_basic_callback.test_cbsc006_array_of_objects": {"var": {"i": {"int": [[286, "    for i in range(5):"]]}, "app": {"Dash": [[269, "    app = dash.Dash()"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_basic_callback.test_cbsc007_parallel_upda": {"func": {"set_out": {"(?, ?) -> str": [[325, "    def set_out(path, data):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_basic_callback.test_cbsc002_callbacks_generating_childre": {"var": {"call_count": {"?": [[67, "    call_count = Value(\"i\", 0)"]]}, "pad_input": {"?": [[80, "    pad_input, pad_div = dash_duo.dash_innerhtml_dom.select_one("]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_basic_callback.test_cbsc007_parallel_upd": {"func": {"set_path": {"? -> str": [[329, "    def set_path(n):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_basic_callback.test_cbsc004_callback_using_unloaded_async_component.update_out2": {"param": {"n_clicks": {"?": [[210, "    def update_out2(n_clicks, data):"]]}, "data": {"?": [[210, "    def update_out2(n_clicks, data):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_basic_callback.test_cbsc004_callback_using_unloaded_async_component": {"var": {"i": {"int": [[229, "    for i in range(2, 10):"]]}, "app": {"Dash": [[176, "    app = dash.Dash()"]]}}, "param": {"dash_duo": {"?": [[175, "def test_cbsc004_callback_using_unloaded_async_component(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_basic_callback": {"func": {"test_cbsc005_children_types": {"? -> None": [[239, "def test_cbsc005_children_types(dash_duo):"]]}, "test_cbsc006_array_of_objects": {"? -> None": [[268, "def test_cbsc006_array_of_objects(dash_duo):"]]}, "test_cbsc007_parallel_updates": {"(?, ?) -> None": [[293, "def test_cbsc007_parallel_updates(refresh, dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_basic_callback.test_cbsc005_children_types": {"var": {"app": {"Dash": [[240, "    app = dash.Dash()"]]}, "children": {"?": [[263, "    for children, text in outputs:"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_basic_callback.test_cbsc006_array_of_objec": {"func": {"set_out": {"? -> int": [[279, "    def set_out(opts):"]]}, "set_options": {"? -> [dict]": [[275, "    def set_options(n):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_basic_callback.test_cbsc006_array_of_objects.set_options": {"param": {"n": {"?": [[275, "    def set_options(n):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_basic_callback.test_cbsc004_callback_using_unloaded_async_component.update_out": {"param": {"n_clicks": {"?": [[202, "    def update_out(n_clicks, data):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_basic_callback.test_cbsc003_callback_with_unloaded_async_component.update_out": {"param": {"n_clicks": {"?": [[161, "    def update_out(n_clicks):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_basic_callback.test_cbsc007_parallel_updates.set_d": {"param": {"path": {"?": [[319, "    def set_data(path):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integr": {"func": {"test_cbsc003_callback_with_unloaded_async_component": {"? -> None": [[142, "def test_cbsc003_callback_with_unloaded_async_component(dash_duo):"]]}, "test_cbsc004_callback_using_unloaded_async_component": {"? -> None": [[175, "def test_cbsc004_callback_using_unloaded_async_component(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_basic_callback.test_cbsc001_simple_callback.update_output": {"param": {"value": {"?": [[25, "    def update_output(value):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_basic_callback.test_cbsc006_array_of_object": {"param": {"dash_duo": {"?": [[268, "def test_cbsc006_array_of_objects(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_basic_callback.test_cbsc003_callback_with_unloaded_async_component": {"var": {"app": {"Dash": [[143, "    app = dash.Dash()"]]}}, "param": {"dash_duo": {"?": [[142, "def test_cbsc003_callback_with_unloaded_async_component(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_basic_callback.test_cbsc007_parallel_update": {"param": {"dash_duo": {"?": [[293, "def test_cbsc007_parallel_updates(refresh, dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_basic_callback.test_cbsc007_parallel_updates.set_ou": {"param": {"path": {"?": [[325, "    def set_out(path, data):"]]}, "data": {"?": [[325, "    def set_out(path, data):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integratio": {"func": {"test_cbsc002_callbacks_generating_children": {"? -> None": [[49, "def test_cbsc002_callbacks_generating_children(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_basic_callback.test_cbsc003_callback_with_unloaded_async_componen": {"func": {"update_out": {"? -> str": [[161, "    def update_out(n_clicks):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_basic_callback.test_cbsc002_callbacks_generating_childr": {"func": {"update_input": {"? -> None": [[70, "    def update_input(value):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_basic_callback.test_cbsc007_parallel_updates.set_path": {"param": {"n": {"?": [[329, "    def set_path(n):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_basic_callback.test_cbsc007_parallel_updat": {"param": {"refresh": {"?": [[293, "def test_cbsc007_parallel_updates(refresh, dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_basic_callback.test_cbsc002_callbacks_generating_children.update_input": {"param": {"value": {"?": [[70, "    def update_input(value):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_basic_callback.test_cbsc005_children_types.set_childre": {"param": {"n": {"?": [[255, "    def set_children(n):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_basic_callback.test_cbsc002_callbacks_generating_children.pad_o": {"param": {"input": {"?": [[59, "    def pad_output(input):"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/tests/integration/devtools/test_devtools_error_handling.py": {".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_devtools_error_handling.app_with_error": {"func": {"bad_sub": {"() -> int": [[26, "    def bad_sub():"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_devtools_error_handling.app_with_errors.update_output": {"param": {"n_clicks": {"?": [[20, "    def update_output(n_clicks):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_devtools_error_handling.test_dveh005_multipl": {"func": {"update_outputs": {"? -> [str]": [[247, "    def update_outputs(n_clicks):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_devtools_error_handl": {"func": {"test_dveh002_prevent_update_not_in_error_msg": {"? -> None": [[122, "def test_dveh002_prevent_update_not_in_error_msg(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_devtools_error_handli": {"param": {"test_dveh006_long_python_errors": {"?": [[86, "def test_dveh006_long_python_errors(dash_duo):"]]}}, "func": {"test_dveh006_long_python_errors": {"? -> None": [[86, "def test_dveh006_long_python_errors(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_devtools_error_handling.test_dveh001_python_error": {"param": {"dash_duo": {"?": [[39, "def test_dveh001_python_errors(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_devtools_error_handling.test_dveh005_multiple_outputs.update_output": {"param": {"n_clicks": {"?": [[247, "    def update_outputs(n_clicks):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_devtools_error_handling.app_with_errors": {"var": {"app": {"Dash": [[10, "    app = dash.Dash(__name__)"]]}}, "func": {"update_output": {"? -> int": [[20, "    def update_output(n_clicks):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_devtools_error_handling.test_dveh002_prevent_update_not_in_error_msg": {"var": {"app": {"Dash": [[124, "    app = dash.Dash(__name__)"]]}, "_": {"int": [[150, "    for _ in range(3):"]]}}, "param": {"dash_duo": {"?": [[122, "def test_dveh002_prevent_update_not_in_error_msg(dash_duo):"]]}}, "func": {"update_output": {"? -> str": [[134, "    def update_output(n_clicks):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_devtools_error_handling": {"func": {"test_dveh001_python_errors": {"? -> None": [[39, "def test_dveh001_python_errors(dash_duo):"]]}, "app_with_errors": {"() -> Dash": [[9, "def app_with_errors():"]]}, "test_dveh003_validation_errors_in_place": {"? -> None": [[163, "def test_dveh003_validation_errors_in_place(dash_duo):"]]}, "test_dveh005_multiple_outputs": {"? -> None": [[231, "def test_dveh005_multiple_outputs(dash_duo):"]]}, "test_dveh004_validation_errors_creation": {"? -> None": [[197, "def test_dveh004_validation_errors_creation(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_devtools_error_handling.test_dveh005_multiple_outputs": {"var": {"app": {"Dash": [[232, "    app = dash.Dash(__name__)"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_devtools_error_handling.test_dveh003_validation_errors_in_place.update_output": {"param": {"n_clicks": {"?": [[175, "    def update_output(n_clicks):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_devtools_error_handling.get_error_html": {"param": {"dash_duo": {"?": [[32, "def get_error_html(dash_duo, index):"]]}, "index": {"int": [[32, "def get_error_html(dash_duo, index):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_devtools_error_handling.test_dveh004_validation_errors_creation.update_output": {"param": {"n_clicks": {"?": [[209, "    def update_output(n_clicks):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_devtools_error_handling.test_dveh001_python_errors": {"var": {"error0": {"?": [[69, "    error0 = get_error_html(dash_duo, 0)"]]}, "error1": {"?": [[78, "    error1 = get_error_html(dash_duo, 1)"]]}, "app": {"Dash": [[40, "    app = app_with_errors()"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_devtools_error_handling.test_dveh005_multiple_output": {"param": {"dash_duo": {"?": [[231, "def test_dveh005_multiple_outputs(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_devtools_error_handling.test_dveh006_long_python_errors": {"var": {"error0": {"?": [[105, "    error0 = get_error_html(dash_duo, 0)"]]}, "error1": {"?": [[114, "    error1 = get_error_html(dash_duo, 1)"]]}, "app": {"Dash": [[87, "    app = app_with_errors()"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_devtools_error_handlin": {"func": {"get_error_html": {"(?, ?) -> ? / (?, int) -> ?": [[32, "def get_error_html(dash_duo, index):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_devtools_error_handling.test_dveh004_validation_errors_creation": {"var": {"app": {"Dash": [[198, "    app = dash.Dash(__name__)"]]}}, "param": {"dash_duo": {"?": [[197, "def test_dveh004_validation_errors_creation(dash_duo):"]]}}, "func": {"update_output": {"? -> None": [[209, "    def update_output(n_clicks):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_devtools_error_handling.test_dveh006_long_python_error": {"param": {"dash_duo": {"?": [[86, "def test_dveh006_long_python_errors(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_devtools_error_handling.test_dveh003_validation_errors_in_plac": {"func": {"update_output": {"? -> None": [[175, "    def update_output(n_clicks):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_devtools_error_handling.test_dveh002_prevent_update_not_in_error_msg.update_output": {"param": {"n_clicks": {"?": [[134, "    def update_output(n_clicks):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_devtools_error_handling.test_dveh003_validation_errors_in_place": {"var": {"app": {"Dash": [[164, "    app = dash.Dash(__name__)"]]}}, "param": {"dash_duo": {"?": [[163, "def test_dveh003_validation_errors_in_place(dash_duo):"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/tests/unit/development/test_component_loader.py": {".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_component_loader.test_loadcomponents_from_generated_cl": {"var": {"my_component_kwargs": {"dict": [[178, "    my_component_kwargs = {"]]}, "a_kwargs": {"dict": [[186, "    a_kwargs = {\"children\": \"Child\", \"href\": \"Hello World\"}"]]}}, "param": {"make_namespace": {"?": [[159, "def test_loadcomponents_from_generated_class(write_metada_file, make_namespace):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_component_loader.test_loadcomponents": {"var": {"c": {"[{<Component> | ? -> () -> None}]": [[138, "    c = load_components(METADATA_PATH)"]]}, "my_component": {"{<Component> | ? -> () -> None}": [[124, "    my_component = generate_class("]]}, "a_component": {"{<Component> | ? -> () -> None}": [[131, "    a_component = generate_class("]]}}, "param": {"c": {"(str, ?, ?, str) -> {<Component> | ? -> () -> None} / (?, ?, ?, ?) -> {<Component> | ? -> () -> None} / (?, ?, ?, str) -> {<Component> | ? -> () -> None}": [[138, "    c = load_components(METADATA_PATH)"]]}, "write_metada_file": {"?": [[123, "def test_loadcomponents(write_metada_file):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_component_lo": {"func": {"write_metada_file": {"() -> None": [[106, "def write_metada_file():"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_component_loader.test_load": {"var": {"my_component_kwargs": {"dict": [[140, "    my_component_kwargs = {"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.dev": {"func": {"test_loadcomponents_from_generated_class": {"(?, ?) -> None": [[159, "def test_loadcomponents_from_generated_class(write_metada_file, make_namespace):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_component_loader": {"var": {"METADATA_PATH": {"str": [[12, "METADATA_PATH = \"metadata.json\""]]}, "METADATA_STRING": {"str": [[14, "METADATA_STRING = \"\"\"{"]]}, "METADATA": {"?": [[100, "METADATA = json.JSONDecoder(object_pairs_hook=collections.OrderedDict).decode("]]}}, "func": {"make_namespace": {"() -> None": [[114, "def make_namespace():"]]}, "test_loadcomponents": {"? -> None": [[123, "def test_loadcomponents(write_metada_file):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_component_loader.make_namespac": {"var": {"init_file_path": {"str": [[116, "    init_file_path = \"default_namespace/__init__.py\""]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_component_loader.test_loadcomponent": {"var": {"a_kwargs": {"dict": [[148, "    a_kwargs = {\"children\": \"Child\", \"href\": \"Hello World\"}"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_component_loader.test_loadcomponents_from_generated_class": {"var": {"a_runtime": {"{<Component> | ? -> () -> None}": [[167, "    a_runtime = generate_class("]]}, "my_component_runtime": {"{<Component> | ? -> () -> None}": [[160, "    my_component_runtime = generate_class("]]}}, "param": {"write_metada_file": {"?": [[159, "def test_loadcomponents_from_generated_class(write_metada_file, make_namespace):"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/dash/development/build_process.py": {".home.xxm.Desktop.EMSE.dataset.dash.dash.development.build_process.BuildProcess": {"func": {"_concat": {"() -> str": [[40, "    def _concat(*paths):"]]}, "__init__": {"? -> ?": [[21, "    def __init__(self, main, deps_info):"]]}, "_clean_path": {"str -> ? / ? -> ?": [[44, "    def _clean_path(path):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.build_process.BuildProcess.bundles": {"var": {"ext": {"str": [[124, "            ext = \"min.js\" if \"min\" in filename.split(\".\") else \"js\""]]}, "target": {"str": [[125, "            target = ("]]}, "t": {"?": [[142, "            t = string.Template(fp.read())"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.build_process.BuildProcess._clean_": {"param": {"path": {"str": [[44, "    def _clean_path(path):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.build_process": {"var": {"logger": {"?": [[14, "logger = logging.getLogger(__name__)"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.build_process.BuildProcess.bundle": {"var": {"_script": {"str": [[135, "        _script = \"build:dev\" if build == \"local\" else \"build:js\""]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.build_process.BuildProcess.bundl": {"var": {"version": {"?": [[120, "            version = self.deps[\"/\".join(filter(None, [scope, name]))][\"version\"]"]]}, "versions": {"dict": [[115, "        versions = {"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.build_process.BuildProcess._parse_packag": {"param": {"self": {"BuildProcess": [[31, "    def _parse_package(self, path):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.build_process.BuildProcess.__init__": {"param": {"self": {"BuildProcess": [[21, "    def __init__(self, main, deps_info):"]]}, "main": {"?": [[21, "    def __init__(self, main, deps_info):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.build_process.BuildPro": {"func": {"_parse_package": {"(BuildProcess, ?) -> None / (BuildProcess, str) -> None": [[31, "    def _parse_package(self, path):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.build_process.BuildProcess._parse_": {"var": {"package": {"?": [[33, "            package = json.load(fp)"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.build_p": {"class": {"BuildProcess": {"<BuildProcess>": [[20, "class BuildProcess(object):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.build_process.BuildProcess.digest": {"var": {"copies": {"tuple": [[82, "        copies = tuple("]]}, "payload": {"dict": [[89, "        payload = {self.name: self.version}"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.build_process.BuildProcess.__init": {"param": {"deps_info": {"?": [[21, "    def __init__(self, main, deps_info):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.build_process.BuildProcess._parse_package": {"param": {"path": {"str": [[31, "    def _parse_package(self, path):"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/dash/testing/errors.py": {".home.xxm.Desktop.EMSE.dataset.dash.dash": {"class": {"TestingTimeoutError": {"<TestingTimeoutError>": [[21, "class TestingTimeoutError(DashTestingError):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing": {"class": {"BrowserError": {"<BrowserError>": [[25, "class BrowserError(DashTestingError):"]]}, "ServerCloseError": {"<ServerCloseError>": [[17, "class ServerCloseError(DashTestingError):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.errors": {"class": {"InvalidDriverError": {"<InvalidDriverError>": [[5, "class InvalidDriverError(DashTestingError):"]]}, "NoAppFoundError": {"<NoAppFoundError>": [[9, "class NoAppFoundError(DashTestingError):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.d": {"class": {"DashTestingError": {"<DashTestingError>": [[1, "class DashTestingError(Exception):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.e": {"class": {"DashAppLoadingError": {"<DashAppLoadingError>": [[13, "class DashAppLoadingError(DashTestingError):"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/tests/unit/development/conftest.py": {".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.conftest.load_test_metadata": {"var": {"json_string": {"str": [[14, "        json_string = data_file.read()"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.conftest.load_test_metad": {"var": {"json_path": {"str": [[12, "    json_path = os.path.join(_dir, \"metadata_test.json\")"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.conftest.load_test_metadata_json": {"var": {"data": {"?": [[15, "        data = json.JSONDecoder(object_pairs_hook=OrderedDict).decode(json_string)"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.conf": {"func": {"load_test_metadata_json": {"() -> None": [[11, "def load_test_metadata_json():"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/tests/integration/callbacks/test_missing_outputs.py": {".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_outputs.test_cbmo001_all_outpu": {"var": {"actions": {"[[str]]": [[69, "    actions = ["]]}, "selector": {"str": [[81, "    for selector, content, output in actions:"]]}}, "param": {"with_simple": {"?": [[15, "def test_cbmo001_all_output(with_simple, dash_duo):"]]}}, "func": {"content": {"? -> [?]": [[28, "    def content(n1):"]]}, "content_inner": {"? -> None": [[51, "        def content_inner(n2):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_outputs.test_cbmo001_all_output.out2": {"param": {"contents": {"?": [[61, "        def out2(contents):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_outputs.test_cbmo001_all_output.content_and_output": {"var": {"n1": {"int": [[44, "            n1 = len(content_ids)"]]}}, "param": {"n2": {"?": [[39, "        def content_and_output(n2, content_ids):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_outputs.test_cbmo002_all_and_match_output.content_and_output": {"var": {"n1": {"int": [[136, "            n1 = len(content_ids)"]]}}, "param": {"n2": {"?": [[131, "        def content_and_output(n2, content_ids):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_outputs.test_cbmo003_multi_all.content_inner": {"var": {"n1j": {"int": [[220, "        n1j = len(dash.callback_context.outputs_list[1])"]]}, "n1i": {"int": [[219, "        n1i = len(dash.callback_context.outputs_list[0])"]]}}, "param": {"n2": {"?": [[215, "    def content_inner(n2):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_outputs.test_cbmo001_all_output.content_inner": {"var": {"n1": {"int": [[55, "            n1 = len(dash.callback_context.outputs_list)"]]}}, "param": {"n2": {"?": [[51, "        def content_inner(n2):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing": {"func": {"test_cbmo002_all_and_match_output": {"(?, ?) -> None": [[90, "def test_cbmo002_all_and_match_output(with_simple, dash_duo):"]]}, "test_cbmo001_all_output": {"(?, ?) -> None": [[15, "def test_cbmo001_all_output(with_simple, dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_outputs.test_cbmo002_all_and_match_output.content": {"param": {"n1": {"?": [[102, "    def content(n1):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_outputs.test_cbmo002_all_and_match_outp": {"func": {"out2": {"? -> int": [[158, "        def out2(contents):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_outputs.test_cbmo002_all_and_match_output.content_inner": {"var": {"n1": {"int": [[149, "            n1 = len(dash.callback_context.outputs_list)"]]}}, "param": {"n2": {"?": [[145, "        def content_inner(n2):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_outputs.test_cbmo002_all_and_match_output": {"var": {"app": {"Dash": [[91, "    app = dash.Dash(__name__)"]]}, "j": {"?": [[180, "        for j, (content, output) in enumerate(output_spec):"]]}}, "param": {"dash_duo": {"?": [[90, "def test_cbmo002_all_and_match_output(with_simple, dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_outputs.test_cbmo001_all_output": {"var": {"app": {"Dash": [[16, "    app = dash.Dash(__name__)"]]}}, "param": {"dash_duo": {"?": [[15, "def test_cbmo001_all_output(with_simple, dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_outputs.test_cbmo001_all_output.content": {"param": {"n1": {"?": [[28, "    def content(n1):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_outputs.test_cbmo003_multi_all": {"var": {"app": {"Dash": [[188, "    app = dash.Dash(__name__)"]]}, "actions": {"[[str]]": [[238, "    actions = ["]]}}, "param": {"dash_duo": {"?": [[187, "def test_cbmo003_multi_all(dash_duo):"]]}}, "func": {"content": {"? -> ([?], [?])": [[206, "    def content(n1):"]]}, "out2": {"(?, ?) -> int": [[229, "    def out2(ci, cj):"]]}, "content_inner": {"? -> (?, ?)": [[215, "    def content_inner(n2):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_outputs.test_cbmo002_all_and_match_outpu": {"var": {"actions": {"[[{[[str]] | str}]]": [[166, "    actions = ["]]}, "selector": {"{[[str]] | str}": [[178, "    for selector, output_spec in actions:"]]}}, "param": {"with_simple": {"?": [[90, "def test_cbmo002_all_and_match_output(with_simple, dash_duo):"]]}}, "func": {"content": {"? -> [?]": [[102, "    def content(n1):"]]}, "content_inner": {"? -> None": [[145, "        def content_inner(n2):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_outputs.test_cbmo001_all_outp": {"func": {"out2": {"? -> int": [[61, "        def out2(contents):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_outputs.test_cbmo001_all_output.content_and_outpu": {"var": {"content": {"?": [[45, "            content = [n2 or 0] * n1"]]}}, "param": {"content_ids": {"?": [[39, "        def content_and_output(n2, content_ids):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_outputs.test_cbmo003_multi_a": {"var": {"selector": {"str": [[255, "    for selector, content1, content2, output in actions:"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_outputs.test_cbmo003_multi_all.content": {"var": {"c2": {"[?]": [[208, "        c2 = [html.Div(id={\"j\": j}) for j in range((n1 or 0) % 3)]"]]}, "c1": {"[?]": [[207, "        c1 = [html.Div(id={\"i\": i}) for i in range(((n1 or 0) + 2) % 4)]"]]}}, "param": {"n1": {"?": [[206, "    def content(n1):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_outputs.test_cbmo003_multi_all.out2": {"param": {"cj": {"?": [[229, "    def out2(ci, cj):"]]}, "ci": {"?": [[229, "    def out2(ci, cj):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_outputs.test_cbmo002_all_and_match_output.content_and_outpu": {"var": {"content": {"?": [[137, "            content = [n2 or 0] * n1"]]}}, "param": {"content_ids": {"?": [[131, "        def content_and_output(n2, content_ids):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_outputs.test_cbmo002_all_and_match": {"func": {"content_and_output": {"(?, ?) -> (?, int)": [[131, "        def content_and_output(n2, content_ids):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_outp": {"func": {"test_cbmo003_multi_all": {"? -> None": [[187, "def test_cbmo003_multi_all(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_outputs.test_cbmo002_all_and_match_output.out2": {"param": {"contents": {"?": [[158, "        def out2(contents):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_outputs": {"var": {"debugging": {"dict": [[9, "debugging = dict("]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_outputs.test_cbmo001_all": {"func": {"content_and_output": {"(?, ?) -> (?, int)": [[39, "        def content_and_output(n2, content_ids):"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/dash/version.py": {".home.xxm.Desktop.EMSE.dataset.dash.dash": {"var": {"__version__": {"str": [[1, "__version__ = \"1.13.4\""]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/tests/integration/devtools/test_callback_validation.py": {".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.test_dvcv011_duplicate_outputs_simple": {"var": {"app": {"Dash": [[598, "    app = Dash(__name__)"]]}}, "param": {"dash_duo": {"?": [[597, "def test_dvcv011_duplicate_outputs_simple(dash_duo):"]]}}, "func": {"c2": {"? -> ?": [[605, "    def c2(children):"]]}, "c": {"? -> ?": [[601, "    def c(children):"]]}, "s": {"? -> ?": [[609, "    def s(children):"]]}, "s2": {"? -> ?": [[613, "    def s2(children):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.test_dvcv015_multipage_validation_layou": {"param": {"validation": {"?": [[799, "def test_dvcv015_multipage_validation_layout(validation, dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.test_dvcv006_inconsistent_wildcards.y": {"param": {"c": {"?": [[300, "    def y(b, c, d, e):"]]}, "b": {"?": [[300, "    def y(b, c, d, e):"]]}, "e": {"?": [[300, "    def y(b, c, d, e):"]]}, "d": {"?": [[300, "    def y(b, c, d, e):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.test_dvcv012_circular_2_ste": {"var": {"app": {"Dash": [[634, "    app = Dash(__name__)"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.test_dvcv013_circular_3_step.c2": {"param": {"children": {"?": [[675, "    def c2(children):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.test_dvcv011_duplicate_outputs_simple.s": {"param": {"children": {"?": [[609, "    def s(children):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.test_dvcv014_multipage_error": {"var": {"specs": {"[[{[str] | str}]]": [[783, "    specs = ["]]}}, "param": {"dash_duo": {"?": [[779, "def test_dvcv014_multipage_errors(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.multipag": {"func": {"update_output": {"(?, ?, ?) -> ?": [[761, "    def update_output(n_clicks, input1, input2):"]]}, "display_value": {"? -> str": [[772, "    def display_value(value):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.test_dvcv011_duplicate_outputs_simple.c2": {"param": {"children": {"?": [[605, "    def c2(children):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.test_dvcv001_blank": {"var": {"app": {"Dash": [[63, "    app = Dash(__name__)"]]}}, "param": {"dash_duo": {"?": [[62, "def test_dvcv001_blank(dash_duo):"]]}}, "func": {"x": {"() -> int": [[67, "    def x():"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.test_dvcv005_input_output_overlap": {"param": {"dash_duo": {"?": [[228, "def test_dvcv005_input_output_overlap(dash_duo):"]]}}, "func": {"y": {"? -> (?, ?)": [[239, "    def y(c):"]]}, "x": {"? -> ?": [[233, "    def x(a):"]]}, "x2": {"? -> [?]": [[243, "    def x2(a):"]]}, "y2": {"? -> (?, ?)": [[250, "    def y2(c):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.test_dvcv015_multipage_validation_layout": {"var": {"app": {"Dash": [[800, "    app = multipage_app(validation)"]]}}, "param": {"dash_duo": {"?": [[799, "def test_dvcv015_multipage_validation_layout(validation, dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation": {"var": {"dispatch_specs": {"[[{[?] | str}]]": [[429, "dispatch_specs = ["]]}}, "func": {"test_dvcv010_bad_props": {"? -> None": [[498, "def test_dvcv010_bad_props(dash_duo):"]]}, "test_dvcv014_multipage_errors": {"? -> None": [[779, "def test_dvcv014_multipage_errors(dash_duo):"]]}, "test_dvcv004_duplicate_outputs_across_callbacks": {"? -> None": [[159, "def test_dvcv004_duplicate_outputs_across_callbacks(dash_duo):"]]}, "test_dvcv007_disallowed_ids": {"? -> None": [[342, "def test_dvcv007_disallowed_ids(dash_duo):"]]}, "test_dvcv013_circular_3_step": {"? -> None": [[663, "def test_dvcv013_circular_3_step(dash_duo):"]]}, "check_errors": {"(?, [[{[?] | str}]]) -> None / (?, ?) -> None / (?, [[{[str] | str}]]) -> None / (?, [{[{[?] | str}] | [{[str] | str}]}]) -> None": [[14, "def check_errors(dash_duo, specs):"]]}, "bad_id_app": {"() -> Dash": [[390, "def bad_id_app(**kwargs):"]]}, "test_dvcv012_circular_2_step": {"? -> None": [[633, "def test_dvcv012_circular_2_step(dash_duo):"]]}, "multipage_app": {"? -> Dash / bool -> Dash": [[698, "def multipage_app(validation=False):"]]}, "test_dvcv003_duplicate_outputs_same_callback": {"? -> None": [[123, "def test_dvcv003_duplicate_outputs_same_callback(dash_duo):"]]}, "test_dvcv011_duplicate_outputs_simple": {"? -> None": [[597, "def test_dvcv011_duplicate_outputs_simple(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.test_dvcv005_input_output_overlap.x2": {"param": {"a": {"?": [[243, "    def x2(a):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.test_dvcv004_duplicate_outputs_across_callbacks.y2": {"param": {"c": {"?": [[180, "    def y2(c):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.multipage_app.display_pag": {"param": {"pathname": {"?": [[747, "    def display_page(pathname):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.multipage_app": {"var": {"validation_layout": {"?": [[736, "    validation_layout = html.Div([skeleton, layout_index, layout_page_1, layout_page_2])"]]}, "skeleton": {"?": [[701, "    skeleton = html.Div("]]}, "layout_index": {"?": [[705, "    layout_index = html.Div("]]}}, "param": {"validation": {"bool": [[698, "def multipage_app(validation=False):"]]}}, "func": {"validation_function": {"() -> ?": [[738, "    def validation_function():"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integ": {"func": {"test_dvcv002_blank_id_prop": {"? -> None": [[83, "def test_dvcv002_blank_id_prop(dash_duo):"]]}, "test_dvcv009_suppress_callback_exceptions": {"? -> None": [[492, "def test_dvcv009_suppress_callback_exceptions(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.test_dvcv012_circular_2_st": {"var": {"specs": {"[[{[str] | str}]]": [[650, "    specs = ["]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.bad_id_app": {"func": {"h": {"? -> ?": [[420, "    def h(a):"]]}, "g2": {"? -> [?]": [[415, "    def g2(a):"]]}, "g": {"? -> ?": [[407, "    def g(a):"]]}, "f": {"? -> ?": [[403, "    def f(a):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.test_dvcv003_duplicate_outputs_same_callback.y": {"param": {"b": {"?": [[137, "    def y(b):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.test_dvcv010_bad_pro": {"var": {"specs": {"[[{[str] | str}]]": [[530, "    specs = ["]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback": {"func": {"test_dvcv015_multipage_validation_layout": {"(?, ?) -> None": [[799, "def test_dvcv015_multipage_validation_layout(validation, dash_duo):"]]}, "test_dvcv006_inconsistent_wildcards": {"? -> None": [[284, "def test_dvcv006_inconsistent_wildcards(dash_duo):"]]}, "test_dvcv005_input_output_overlap": {"? -> None": [[228, "def test_dvcv005_input_output_overlap(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.check_errors": {"var": {"cnt": {"int": [[18, "    cnt = len(specs)"]]}, "i": {"int": [[22, "    for i in range(cnt):"]], "?": [[37, "    for i, (message, snippets) in enumerate(specs):"]]}, "j": {"?": [[38, "        for j, (msg, txt) in enumerate(found):"]]}, "orig_found": {"[(?, ?)]": [[35, "    orig_found = found[:]"]]}, "found": {"[(?, ?)]": [[21, "    found = []"]]}, "txt": {"?": [[30, "        txt = dash_duo.wait_for_element(txt_selector).text"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.test_dvcv005_input_output_overl": {"var": {"app": {"Dash": [[229, "    app = Dash(__name__)"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.test_dvcv013_circular_3_ste": {"var": {"app": {"Dash": [[664, "    app = Dash(__name__)"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.check_error": {"var": {"msg": {"?": [[23, "        msg = dash_duo.find_elements(\".dash-fe-error__title\")[i].text"]]}, "has_BE": {"?": [[26, "        has_BE = dash_duo.driver.execute_script("]]}}, "param": {"dash_duo": {"?": [[14, "def check_errors(dash_duo, specs):"]]}, "specs": {"{[[{[?] | str}]] | [[{[str] | str}]] | [{[{[?] | str}] | [{[str] | str}]}]}": [[14, "def check_errors(dash_duo, specs):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.test_dvcv002_blank_id_prop": {"param": {"dash_duo": {"?": [[83, "def test_dvcv002_blank_id_prop(dash_duo):"]]}}, "func": {"x": {"? -> ?": [[89, "    def x(a):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.test_dvcv003_duplicate_outputs_same_callback.x": {"param": {"b": {"?": [[130, "    def x(b):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.test_dvcv006_inconsistent_wildcards.x": {"param": {"c": {"?": [[292, "    def x(c):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validatio": {"var": {"debugging": {"dict": [[9, "debugging = dict("]]}}, "func": {"test_dvcv001_blank": {"? -> None": [[62, "def test_dvcv001_blank(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.test_dvcv008_wrong_callback_i": {"param": {"dash_duo": {"?": [[440, "def test_dvcv008_wrong_callback_id(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.test_dvcv005_input_output_overlap.y2": {"param": {"c": {"?": [[250, "    def y2(c):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.test_dvcv006_inconsistent_wildcard": {"var": {"specs": {"[[{[str] | str}]]": [[305, "    specs = ["]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.multi": {"var": {"layout_page_1": {"?": [[712, "    layout_page_1 = html.Div("]]}, "layout_page_2": {"?": [[725, "    layout_page_2 = html.Div("]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.test_dvcv013_circular_3_step.callback": {"param": {"children": {"?": [[671, "    def callback(children):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.mult": {"func": {"display_page": {"? -> ?": [[747, "    def display_page(pathname):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.test_dvcv012_circular_2_step.callback": {"param": {"children": {"?": [[641, "    def callback(children):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.test_dvcv011_duplicate_outputs_simpl": {"var": {"specs": {"[[{[str] | str}]]": [[626, "    specs = ["]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.multipage_app.display_": {"param": {"value": {"?": [[772, "    def display_value(value):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.multipage_": {"var": {"app": {"Dash": [[699, "    app = Dash(__name__, suppress_callback_exceptions=(validation == \"suppress\"))"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.test_dvcv007_disallowed_id": {"var": {"specs": {"[[{[str] | str}]]": [[355, "    specs = ["]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash": {"func": {"test_dvcv008_wrong_callback_id": {"? -> None": [[440, "def test_dvcv008_wrong_callback_id(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.bad_id_app.g2": {"param": {"a": {"?": [[415, "    def g2(a):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.test_dvcv010_bad_props": {"var": {"app": {"Dash": [[499, "    app = Dash(__name__)"]]}}, "func": {"xyz": {"(?, ?, ?) -> None": [[516, "    def xyz(a, b, c):"]]}, "f": {"(?, ?, ?) -> ?": [[525, "    def f(a, b, c):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.test_dvcv011_duplicate_outputs_simp": {"param": {"children": {"?": [[601, "    def c(children):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.test_dvcv003_duplicate_outputs_same_callback": {"var": {"app": {"Dash": [[124, "    app = Dash(__name__)"]]}, "specs": {"[[{[str] | str}]]": [[142, "    specs = ["]]}}, "param": {"dash_duo": {"?": [[123, "def test_dvcv003_duplicate_outputs_same_callback(dash_duo):"]]}}, "func": {"y": {"? -> (?, ?)": [[137, "    def y(b):"]]}, "x": {"? -> (?, ?)": [[130, "    def x(b):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.test_dvcv004_duplicate_outputs_across_callback": {"var": {"specs": {"[[{[str] | str}]]": [[199, "    specs = ["]]}}, "param": {"dash_duo": {"?": [[159, "def test_dvcv004_duplicate_outputs_across_callbacks(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.test_dvcv005_input_output_overlap.x": {"param": {"a": {"?": [[233, "    def x(a):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.test_dvcv004_duplicate_outputs_across_callbacks.z2": {"param": {"b": {"?": [[194, "    def z2(b):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.test_dvcv012_circular_2_step": {"param": {"dash_duo": {"?": [[633, "def test_dvcv012_circular_2_step(dash_duo):"]]}}, "func": {"callback": {"? -> ?": [[641, "    def callback(children):"]]}, "c2": {"? -> ?": [[645, "    def c2(children):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.test_dvcv013_circular_3_st": {"var": {"specs": {"[[{[str] | str}]]": [[684, "    specs = ["]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.check": {"var": {"txt_selector": {"str": [[29, "        txt_selector = \".dash-backend-error\" if has_BE else \".dash-fe-error__info\""]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.test_dvcv004_duplicate_outputs_across_callbacks": {"var": {"app": {"Dash": [[160, "    app = Dash(__name__)"]]}}, "func": {"z": {"? -> (?, ?)": [[187, "    def z(b):"]]}, "x2": {"? -> ?": [[174, "    def x2(b):"]]}, "y": {"? -> ?": [[170, "    def y(b):"]]}, "x": {"? -> (?, ?)": [[166, "    def x(b):"]]}, "y2": {"? -> ?": [[180, "    def y2(c):"]]}, "z2": {"? -> (?, ?)": [[194, "    def z2(b):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.test_dvcv008_wrong_callback_id": {"var": {"specs": {"[[{[str] | str}]]": [[443, "    specs = ["]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.test_dvcv011_duplicate_outputs_simple.s2": {"param": {"children": {"?": [[613, "    def s2(children):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.test_dvcv004_duplicate_outputs_across_callbacks.x2": {"param": {"b": {"?": [[174, "    def x2(b):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.bad_id_": {"var": {"app": {"Dash": [[391, "    app = Dash(__name__, **kwargs)"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.test_dvcv010_bad_props.f": {"param": {"a": {"?": [[525, "    def f(a, b, c):"]]}, "c": {"?": [[525, "    def f(a, b, c):"]]}, "b": {"?": [[525, "    def f(a, b, c):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.test_dvcv012_circular_2_step.c2": {"param": {"children": {"?": [[645, "    def c2(children):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.test_dvcv006_inconsistent_wildcards": {"var": {"app": {"Dash": [[285, "    app = Dash(__name__)"]]}}, "func": {"y": {"(?, ?, ?, ?) -> ?": [[300, "    def y(b, c, d, e):"]]}, "x": {"? -> (?, [?])": [[292, "    def x(c):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.test_dvcv013_circular_3_step.c3": {"param": {"children": {"?": [[679, "    def c3(children):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.multipage_app.update_output": {"param": {"n_clicks": {"?": [[761, "    def update_output(n_clicks, input1, input2):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.test_dvcv005_input_output_overlap.y": {"param": {"c": {"?": [[239, "    def y(c):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.test_dvcv004_duplicate_outputs_across_callbacks.x": {"param": {"b": {"?": [[166, "    def x(b):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.test_dvcv004_duplicate_outputs_across_callbacks.y": {"param": {"b": {"?": [[170, "    def y(b):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.test_dvcv004_duplicate_outputs_across_callbacks.z": {"param": {"b": {"?": [[187, "    def z(b):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.test_dvcv007_disallowed_ids": {"var": {"app": {"Dash": [[343, "    app = Dash(__name__)"]]}}, "func": {"y": {"? -> ?": [[350, "    def y(b):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.test_dvcv002_blank_id_prop.x": {"param": {"a": {"?": [[89, "    def x(a):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.test_dvcv007_disallowed_i": {"param": {"dash_duo": {"?": [[342, "def test_dvcv007_disallowed_ids(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.test_dvcv005_input_output_overla": {"var": {"specs": {"[[{[str] | str}]]": [[255, "    specs = ["]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.bad_id_app.h": {"param": {"a": {"?": [[420, "    def h(a):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.test_dvcv013_circular_3_step": {"param": {"dash_duo": {"?": [[663, "def test_dvcv013_circular_3_step(dash_duo):"]]}}, "func": {"c3": {"? -> ?": [[679, "    def c3(children):"]]}, "callback": {"? -> ?": [[671, "    def callback(children):"]]}, "c2": {"? -> ?": [[675, "    def c2(children):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.test_dvcv014_multipage_errors": {"var": {"app": {"Dash": [[780, "    app = multipage_app()"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.test_dvcv009_suppress_callback_exception": {"param": {"dash_duo": {"?": [[492, "def test_dvcv009_suppress_callback_exceptions(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.multipage_app.update_o": {"param": {"input2": {"?": [[761, "    def update_output(n_clicks, input1, input2):"]]}, "input1": {"?": [[761, "    def update_output(n_clicks, input1, input2):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.test_dvcv010_bad_props.xyz": {"param": {"a": {"?": [[516, "    def xyz(a, b, c):"]]}, "c": {"?": [[516, "    def xyz(a, b, c):"]]}, "b": {"?": [[516, "    def xyz(a, b, c):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.test_dvcv006_inconsistent_wildcar": {"param": {"dash_duo": {"?": [[284, "def test_dvcv006_inconsistent_wildcards(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.test_dvcv010_bad_prop": {"param": {"dash_duo": {"?": [[498, "def test_dvcv010_bad_props(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.test_dvcv007_disallowed_ids.y": {"param": {"b": {"?": [[350, "    def y(b):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.test_dvcv002_blank_id_pro": {"var": {"app": {"Dash": [[85, "    app = Dash(__name__, suppress_callback_exceptions=True)"]]}, "specs": {"[{[{[?] | str}] | [{[str] | str}]}]": [[95, "    specs = ["]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.bad_id_app.f": {"param": {"a": {"?": [[403, "    def f(a):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_callback_validation.bad_id_app.g": {"param": {"a": {"?": [[407, "    def g(a):"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/tests/integration/test_integration.py": {".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_integration.test_inin013_no_update_chain": {"param": {"dash_duo": {"?": [[409, "def test_inin013_no_update_chains(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_integration.test_inin010_func_layout_accepte": {"param": {"dash_duo": {"?": [[363, "def test_inin010_func_layout_accepted(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_integration.test_inin009_invalid_index_strin": {"var": {"exc_msg": {"str": [[352, "    exc_msg = str(err.value)"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_integration.test_inin019_callback_dep_types": {"var": {"app": {"Dash": [[648, "    app = Dash(__name__)"]]}}, "func": {"f2": {"? -> ?": [[664, "        def f2(i):"]]}, "f3": {"? -> ?": [[676, "        def f3(i):"]]}, "f4": {"? -> ?": [[687, "    def f4(i):"]]}, "f": {"? -> ?": [[656, "        def f(i):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_integration.test_inin015_with_custom_renderer_interpolate": {"param": {"dash_duo": {"?": [[545, "def test_inin015_with_custom_renderer_interpolated(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_integration.test_inin007_meta_tag": {"var": {"metas": {"[dict]": [[260, "    metas = ["]]}}, "param": {"dash_duo": {"?": [[259, "def test_inin007_meta_tags(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_integration.test_inin020_callback_return_validatio": {"func": {"single": {"str -> ?": [[705, "    def single(a):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_integration.nested_app": {"param": {"text": {"str": [[751, "def nested_app(server, path, text):"]]}, "server": {"?": [[751, "def nested_app(server, path, text):"]]}}, "func": {"out": {"? -> str": [[756, "    def out(n):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_integration.test_inin014_with_custom_renderer": {"var": {"app": {"Dash": [[474, "    app = Dash(__name__)"]]}, "input1": {"?": [[533, "    input1 = dash_duo.find_element(\"#input\")"]]}}, "param": {"dash_duo": {"?": [[473, "def test_inin014_with_custom_renderer(dash_duo):"]]}}, "func": {"update_output": {"? -> ?": [[528, "    def update_output(value):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_integration.test_inin012_multi_output_no_update": {"var": {"app": {"Dash": [[376, "    app = Dash(__name__)"]]}}, "param": {"dash_duo": {"?": [[375, "def test_inin012_multi_output_no_update(dash_duo):"]]}}, "func": {"show_clicks": {"? -> [_NoUpdate]": [[391, "    def show_clicks(n):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_integration.test_inin019_callback_dep_types.f": {"param": {"i": {"?": [[656, "        def f(i):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_integration.test_inin004_wildcard_data_attribu": {"var": {"test_time": {"datetime": [[173, "    test_time = datetime.datetime(2012, 1, 10, 2, 3)"]]}, "test_date": {"date": [[174, "    test_date = datetime.date(test_time.year, test_time.month, test_time.day)"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_integration.test_inin005_no_props_component": {"var": {"app": {"Dash": [[204, "    app = Dash()"]]}}, "param": {"dash_duo": {"?": [[203, "def test_inin005_no_props_component(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_integration.test_inin006_flow_component.display_output": {"param": {"flow_value": {"?": [[240, "    def display_output(react_value, flow_value):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_integration.test_inin_024_port_env_succe": {"param": {"dash_duo": {"?": [[743, "def test_inin_024_port_env_success(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_integration.test_inin017_late_component_register.update_output": {"param": {"value": {"?": [[633, "    def update_output(value):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_integration.test_inin003_aborted": {"var": {"callback1_count": {"?": [[130, "    callback1_count = Value(\"i\", 0)"]]}, "callback2_count": {"?": [[131, "    callback2_count = Value(\"i\", 0)"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_integr": {"func": {"test_inin012_multi_output_no_update": {"? -> None": [[375, "def test_inin012_multi_output_no_update(dash_duo):"]]}, "test_inin010_func_layout_accepted": {"? -> None": [[363, "def test_inin010_func_layout_accepted(dash_duo):"]]}, "test_inin008_index_customization": {"? -> None": [[283, "def test_inin008_index_customization(dash_duo):"]]}, "test_inin013_no_update_chains": {"? -> None": [[409, "def test_inin013_no_update_chains(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_integration.test_inin025_url_base_pathnam": {"var": {"server": {"?": [[763, "    server = flask.Flask(__name__)"]]}}, "param": {"dash_thread_server": {"?": [[762, "def test_inin025_url_base_pathname(dash_br, dash_thread_server):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_integration.test_inin015_with_custom_renderer_interpolated.CustomDash": {"func": {"interpolate_index": {"CustomDash -> str": [[568, "        def interpolate_index(self, **kwargs):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_integration.test_inin025_url_base_pathname": {"var": {"app": {"Dash": [[764, "    app = nested_app(server, \"/app1/\", \"The first\")"]]}}, "param": {"dash_br": {"?": [[762, "def test_inin025_url_base_pathname(dash_br, dash_thread_server):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_integration.test_inin002_wildcard_callback.update_tex": {"param": {"data": {"?": [[93, "    def update_text(data):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_integration.test_inin007_meta_tags": {"var": {"i": {"int": [[276, "    for i in range(2, len(meta)):"]]}, "app": {"Dash": [[265, "    app = Dash(meta_tags=metas)"]]}, "meta": {"?": [[271, "    meta = dash_duo.find_elements(\"meta\")"]]}, "meta_tag": {"?": [[277, "        meta_tag = meta[i]"]]}, "meta_info": {"dict": [[278, "        meta_info = metas[i - 2]"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_integration.test_inin020_callback_return_validation.multi2": {"param": {"a": {"str": [[731, "    def multi2(a):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_integratio": {"func": {"test_inin019_callback_dep_types": {"() -> None": [[647, "def test_inin019_callback_dep_types():"]]}, "test_inin009_invalid_index_string": {"? -> None": [[329, "def test_inin009_invalid_index_string(dash_duo):"]]}, "test_inin007_meta_tags": {"? -> None": [[259, "def test_inin007_meta_tags(dash_duo):"]]}, "test_inin002_wildcard_callback": {"? -> None": [[64, "def test_inin002_wildcard_callback(dash_duo):"]]}, "test_inin001_simple_callback": {"? -> None": [[29, "def test_inin001_simple_callback(dash_duo):"]]}, "test_inin004_wildcard_data_attributes": {"? -> None": [[171, "def test_inin004_wildcard_data_attributes(dash_duo):"]]}, "test_inin025_url_base_pathname": {"(?, ?) -> None": [[762, "def test_inin025_url_base_pathname(dash_br, dash_thread_server):"]]}, "nested_app": {"(?, ?, ?) -> Dash / (?, str, str) -> Dash": [[751, "def nested_app(server, path, text):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_integration.test_inin014_with_custom_renderer.update_output": {"param": {"value": {"?": [[528, "    def update_output(value):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_integration.test_inin001_simple_callback": {"var": {"app": {"Dash": [[30, "    app = Dash(__name__)"]]}, "input1": {"?": [[50, "    input1 = dash_duo.find_element(\"#input\")"]]}, "call_count": {"?": [[38, "    call_count = Value(\"i\", 0)"]]}}, "param": {"dash_duo": {"?": [[29, "def test_inin001_simple_callback(dash_duo):"]]}}, "func": {"update_output": {"? -> None": [[41, "    def update_output(value):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_integration.test_inin015_with_custom_renderer_interpolat": {"var": {"renderer": {"str": [[547, "    renderer = \"\"\""]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_integration.test_inin019_callback_dep_types.f4": {"param": {"i": {"?": [[687, "    def f4(i):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_integration.test_inin020_callback_return_validation.single": {"param": {"a": {"str": [[705, "    def single(a):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_integration.test_inin019_callback_dep_types.f2": {"param": {"i": {"?": [[664, "        def f2(i):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_integration.test_inin015_with_custom_renderer_interpolated.CustomDash.interpolate_index": {"param": {"self": {"CustomDash": [[568, "        def interpolate_index(self, **kwargs):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_integration.test_inin009_invalid_index_string": {"var": {"app": {"Dash": [[330, "    app = Dash()"]]}}, "param": {"dash_duo": {"?": [[329, "def test_inin009_invalid_index_string(dash_duo):"]]}}, "func": {"will_raise": {"() -> None": [[332, "    def will_raise():"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_integration.test_inin003_aborted_": {"func": {"callback2": {"? -> None": [[142, "    def callback2(value):"]]}, "callback1": {"? -> _NoUpdate": [[134, "    def callback1(value):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_integration.test_inin015_with_custom_renderer_interpolated.update_output": {"param": {"value": {"?": [[608, "    def update_output(value):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_integration.test_inin003_aborted_callback": {"var": {"initial_input": {"str": [[118, "    initial_input = \"initial input\""]]}, "app": {"Dash": [[121, "    app = Dash(__name__)"]]}, "input_": {"?": [[148, "    input_ = dash_duo.find_element(\"#input\")"]]}, "initial_output": {"str": [[119, "    initial_output = \"initial output\""]]}}, "param": {"dash_duo": {"?": [[114, "def test_inin003_aborted_callback(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_integration.test_inin020_callback_return_validation": {"var": {"outputs_list": {"[dict]": [[721, "        outputs_list = ["], [735, "        outputs_list = ["]]}, "app": {"Dash": [[692, "    app = Dash(__name__)"]]}}, "func": {"multi2": {"str -> [str]": [[731, "    def multi2(a):"]]}, "multi": {"str -> [int]": [[717, "    def multi(a):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_integration.test_inin019_callback_dep_types.f3": {"param": {"i": {"?": [[676, "        def f3(i):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_integration.test_inin015_with_custom_renderer_interpolated": {"var": {"app": {"CustomDash": [[590, "    app = CustomDash()"]]}, "input1": {"?": [[613, "    input1 = dash_duo.find_element(\"#input\")"]]}}, "class": {"CustomDash": {"<CustomDash>": [[567, "    class CustomDash(Dash):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash": {"func": {"test_inin017_late_component_register": {"? -> None": [[625, "def test_inin017_late_component_register(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_integration.test_inin006_flow_componen": {"func": {"display_output": {"(?, ?) -> ?": [[240, "    def display_output(react_value, flow_value):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_integration.test_inin008_index_customization": {"var": {"app": {"Dash": [[284, "    app = Dash()"]]}}, "param": {"dash_duo": {"?": [[283, "def test_inin008_index_customization(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_integration.test_inin006_flow_component.display_outp": {"param": {"react_value": {"?": [[240, "    def display_output(react_value, flow_value):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_integration.test_inin004_wildcard_data_attribute": {"var": {"attrs": {"dict": [[175, "    attrs = {"]]}}, "param": {"dash_duo": {"?": [[171, "def test_inin004_wildcard_data_attributes(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_integration.test_inin013_no_update_chains.a_out": {"param": {"a": {"?": [[427, "    def a_out(a):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_integration.test_inin013_no_update_chains.b_out": {"param": {"b": {"?": [[431, "    def b_out(b):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_integration.test_inin001_simple_callback.update_output": {"param": {"value": {"?": [[41, "    def update_output(value):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_integration.test_inin_024_port_env_success": {"var": {"app": {"Dash": [[744, "    app = Dash(__name__)"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_integration.test_inin002_wildcard_callback.update_dat": {"param": {"value": {"?": [[88, "    def update_data(value):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_integration.test_inin015_with_custom_renderer_interpol": {"func": {"update_output": {"? -> ?": [[608, "    def update_output(value):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_integration.test_inin012_multi_output_no_update.show_clicks": {"param": {"n": {"?": [[391, "    def show_clicks(n):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_integ": {"func": {"test_inin015_with_custom_renderer_interpolated": {"? -> None": [[545, "def test_inin015_with_custom_renderer_interpolated(dash_duo):"]]}, "test_inin003_aborted_callback": {"? -> None": [[114, "def test_inin003_aborted_callback(dash_duo):"]]}, "test_inin020_callback_return_validation": {"() -> None": [[691, "def test_inin020_callback_return_validation():"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_integration.test_inin003_aborted_callback.callback1": {"param": {"value": {"?": [[134, "    def callback1(value):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_integration.test_inin017_late_component_register": {"var": {"app": {"Dash": [[626, "    app = Dash()"]]}, "btn": {"?": [[641, "    btn = dash_duo.find_element(\"#btn-insert\")"]]}}, "param": {"dash_duo": {"?": [[625, "def test_inin017_late_component_register(dash_duo):"]]}}, "func": {"update_output": {"? -> None": [[633, "    def update_output(value):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_integration.test_inin003_aborted_callback.callback2": {"param": {"value": {"?": [[142, "    def callback2(value):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_integration.test_inin004_wildcard_data_attributes": {"var": {"expected": {"?": [[191, "    expected = BeautifulSoup("]]}, "app": {"Dash": [[172, "    app = Dash()"]]}, "actual": {"?": [[190, "    actual = BeautifulSoup(div.get_attribute(\"innerHTML\"), \"lxml\").decode()"]]}, "div": {"?": [[187, "    div = dash_duo.find_element(\"#data-element\")"]]}}, "param": {"expected": {"?": [[203, "def test_inin005_no_props_component(dash_duo):"]]}, "k": {"?": [[203, "def test_inin005_no_props_component(dash_duo):"]]}, "v": {"?": [[203, "def test_inin005_no_props_component(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_integration.test_inin006_flow_component": {"var": {"app": {"Dash": [[222, "    app = Dash()"]]}}, "param": {"dash_duo": {"?": [[221, "def test_inin006_flow_component(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_integration.test_inin020_callback_return_validation.multi": {"param": {"a": {"str": [[717, "    def multi(a):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_integration.nested_app.out": {"param": {"n": {"?": [[756, "    def out(n):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_integration.test_inin013_no_update_chains.ab_out": {"param": {"a": {"?": [[439, "    def ab_out(a, b):"]]}, "b": {"?": [[439, "    def ab_out(a, b):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_integra": {"param": {"test_inin005_no_props_component": {"?": [[203, "def test_inin005_no_props_component(dash_duo):"]]}}, "func": {"test_inin014_with_custom_renderer": {"? -> None": [[473, "def test_inin014_with_custom_renderer(dash_duo):"]]}, "test_inin006_flow_component": {"? -> None": [[221, "def test_inin006_flow_component(dash_duo):"]]}, "test_inin005_no_props_component": {"? -> None": [[203, "def test_inin005_no_props_component(dash_duo):"]]}, "test_inin_024_port_env_success": {"? -> None": [[743, "def test_inin_024_port_env_success(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_integration.test_inin010_func_layout_accepted": {"var": {"app": {"Dash": [[364, "    app = Dash()"]]}}, "func": {"create_layout": {"() -> ?": [[366, "    def create_layout():"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_integration.nested_": {"var": {"app": {"Dash": [[752, "    app = Dash(__name__, server=server, url_base_pathname=path)"]]}}, "param": {"path": {"str": [[751, "def nested_app(server, path, text):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_integration.test_inin002_wildcard_callback": {"var": {"app": {"Dash": [[65, "    app = Dash(__name__)"]]}, "input1": {"?": [[100, "    input1 = dash_duo.find_element(\"#input\")"]]}, "input_call_count": {"?": [[85, "    input_call_count = Value(\"i\", 0)"]]}}, "param": {"dash_duo": {"?": [[64, "def test_inin002_wildcard_callback(dash_duo):"]]}}, "func": {"update_text": {"? -> ?": [[93, "    def update_text(data):"]]}, "update_data": {"? -> None": [[88, "    def update_data(value):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_integration.test_inin013_no_update_chains": {"var": {"app": {"Dash": [[410, "    app = Dash(__name__)"]]}, "b_in": {"?": [[445, "    b_in = dash_duo.find_element(\"#b_in\")"]]}, "a_in": {"?": [[444, "    a_in = dash_duo.find_element(\"#a_in\")"]]}}, "func": {"b_out": {"? -> ?": [[431, "    def b_out(b):"]]}, "a_out": {"? -> (?, _NoUpdate)": [[427, "    def a_out(a):"]]}, "ab_out": {"(?, ?) -> str": [[439, "    def ab_out(a, b):"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/dash/dependencies.py": {".home.xxm.Desktop.EMSE.dataset.dash.dash.dependencies.ClientsideF": {"param": {"function_name": {"str": [[121, "    def __init__(self, namespace=None, function_name=None):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dependencies._Wildcard.__str__": {"param": {"self": {"_Wildcard": [[8, "    def __str__(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dependencies.DashDependency.__eq__": {"param": {"self": {"DashDependency": [[54, "    def __eq__(self, other):"]]}, "other": {"?": [[54, "    def __eq__(self, other):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dependencies.DashDependency.__ini": {"param": {"component_property": {"str": [[26, "    def __init__(self, component_id, component_property):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dependencies.Input": {"var": {"allowed_wildcards": {"(_Wildcard, _Wildcard, _Wildcard)": [[111, "    allowed_wildcards = (MATCH, ALL, ALLSMALLER)"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dependencies._Wildcard.to_json": {"param": {"self": {"_Wildcard": [[14, "    def to_json(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dependencies.DashDependency._id_matches": {"var": {"other_wild": {"int": [[83, "                other_wild = isinstance(other_v, _Wildcard)"]]}, "other_v": {"?": [[79, "                other_v = other_id[k]"]]}, "v_wild": {"int": [[82, "                v_wild = isinstance(v, _Wildcard)"]]}, "k": {"?": [[78, "            for k, v in my_id.items():"]]}, "other_dict": {"int": [[70, "        other_dict = isinstance(other_id, dict)"]]}, "my_id": {"?": [[67, "        my_id = self.component_id"]]}, "other_id": {"?": [[68, "        other_id = other.component_id"]]}}, "param": {"other": {"?": [[66, "    def _id_matches(self, other):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dependencies.DashDependency.__hash__": {"param": {"self": {"DashDependency": [[98, "    def __hash__(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dependencies._Wildcard.__init__": {"param": {"self": {"_Wildcard": [[5, "    def __init__(self, name):"]]}, "name": {"str": [[5, "    def __init__(self, name):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dependencies.DashDependency.to_dict": {"param": {"self": {"{DashDependency | Input | State}": [[51, "    def to_dict(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dependencies.DashDependency.component_id_str._json": {"var": {"vstr": {"?": [[43, "            vstr = v.to_json() if hasattr(v, \"to_json\") else json.dumps(v)"]]}}, "param": {"k": {"?": [[42, "        def _json(k, v):"]]}, "v": {"?": [[42, "        def _json(k, v):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dependencies": {"var": {"ALL": {"_Wildcard": [[21, "ALL = _Wildcard(\"ALL\")"]]}, "ALLSMALLER": {"_Wildcard": [[22, "ALLSMALLER = _Wildcard(\"ALLSMALLER\")"]]}, "MATCH": {"_Wildcard": [[20, "MATCH = _Wildcard(\"MATCH\")"]]}}, "class": {"Output": {"<Output>": [[102, "class Output(DashDependency):  # pylint: disable=too-few-public-methods"]]}, "State": {"<State>": [[114, "class State(DashDependency):  # pylint: disable=too-few-public-methods"]]}, "_Wildcard": {"<_Wildcard>": [[4, "class _Wildcard:  # pylint: disable=too-few-public-methods"]]}, "Input": {"<Input>": [[108, "class Input(DashDependency):  # pylint: disable=too-few-public-methods"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dependencies.DashDependency.__init__": {"param": {"self": {"{DashDependency | Input | Output | State}": [[26, "    def __init__(self, component_id, component_property):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dependencies.ClientsideFunction": {"func": {"__repr__": {"ClientsideFunction -> str": [[134, "    def __repr__(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dependencies._Wildcard": {"func": {"__str__": {"_Wildcard -> str": [[8, "    def __str__(self):"]]}, "to_json": {"_Wildcard -> str": [[14, "    def to_json(self):"]]}, "__repr__": {"_Wildcard -> str": [[11, "    def __repr__(self):"]]}, "__init__": {"? -> ?": [[5, "    def __init__(self, name):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dependenci": {"class": {"DashDependency": {"<DashDependency>": [[25, "class DashDependency:  # pylint: disable=too-few-public-methods"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dependencies.DashDependency.__repr__": {"param": {"self": {"DashDependency": [[33, "    def __repr__(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dependencies.ClientsideFunctio": {"func": {"__init__": {"? -> ?": [[121, "    def __init__(self, namespace=None, function_name=None):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dependencies.DashDependency._id_match": {"var": {"self_dict": {"int": [[69, "        self_dict = isinstance(my_id, dict)"]]}}, "param": {"self": {"DashDependency": [[66, "    def _id_matches(self, other):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dependencies.ClientsideFunction.__init__": {"param": {"self": {"ClientsideFunction": [[121, "    def __init__(self, namespace=None, function_name=None):"]]}, "namespace": {"str": [[121, "    def __init__(self, namespace=None, function_name=None):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dependencies.Output": {"var": {"allowed_wildcards": {"(_Wildcard, _Wildcard)": [[105, "    allowed_wildcards = (MATCH, ALL)"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dependencies.Stat": {"var": {"allowed_wildcards": {"(_Wildcard, _Wildcard, _Wildcard)": [[117, "    allowed_wildcards = (MATCH, ALL, ALLSMALLER)"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dependencies.DashDependency.component_id_str": {"var": {"i": {"str": [[37, "        i = self.component_id"]]}}, "param": {"self": {"{DashDependency | Input | Output | State}": [[36, "    def component_id_str(self):"]]}}, "func": {"_dump": {"? -> ?": [[39, "        def _dump(v):"]]}, "_json": {"(?, ?) -> str": [[42, "        def _json(k, v):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dependencies.DashDependency.__str__": {"param": {"self": {"DashDependency": [[30, "    def __str__(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dependencies.ClientsideFunction.__repr__": {"param": {"self": {"ClientsideFunction": [[134, "    def __repr__(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dependencies.DashDependency.component_id_str._dump": {"param": {"v": {"?": [[39, "        def _dump(v):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dependencies._Wildcard.__repr__": {"param": {"self": {"_Wildcard": [[11, "    def __repr__(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dep": {"class": {"ClientsideFunction": {"<ClientsideFunction>": [[120, "class ClientsideFunction:  # pylint: disable=too-few-public-methods"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dependencies.DashDependency": {"param": {"component_id": {"{dict | dict | str}": [[26, "    def __init__(self, component_id, component_property):"]]}}, "func": {"_id_matches": {"(DashDependency, ?) -> bool": [[66, "    def _id_matches(self, other):"]]}, "__str__": {"DashDependency -> str": [[30, "    def __str__(self):"]]}, "component_id_str": {"DashDependency -> str / State -> str / Input -> str / Output -> str": [[36, "    def component_id_str(self):"]]}, "__repr__": {"DashDependency -> str": [[33, "    def __repr__(self):"]]}, "__hash__": {"DashDependency -> int": [[98, "    def __hash__(self):"]]}, "__eq__": {"(DashDependency, ?) -> bool": [[54, "    def __eq__(self, other):"]]}, "__init__": {"? -> ?": [[26, "    def __init__(self, component_id, component_property):"]]}, "to_dict": {"DashDependency -> dict / Input -> dict / State -> dict": [[51, "    def to_dict(self):"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/tests/integration/test_render.py": {".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_generate_overlapping_outp": {"var": {"call_counts": {"dict": [[672, "        call_counts = {"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.wait_for_text_to_equal": {"param": {"assertion_text": {"str": [[34, "    def wait_for_text_to_equal(self, selector, assertion_text, timeout=TIMEOUT):"]]}, "timeout": {"int": [[34, "    def wait_for_text_to_equal(self, selector, assertion_text, timeout=TIMEOUT):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.setUp": {"param": {"self": {"Tests": [[25, "    def setUp(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_rendering_layout_calls_callback_once_per_outp": {"var": {"call_count": {"?": [[373, "        call_count = Value(\"i\", 0)"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests": {"func": {"click_redo": {"Tests -> None": [[62, "    def click_redo(self):"]]}, "wait_for_text_to_equal": {"(Tests, ?, ?, int) -> None / (Tests, str, str, int) -> None / (Tests, str, ?, int) -> None": [[34, "    def wait_for_text_to_equal(self, selector, assertion_text, timeout=TIMEOUT):"]]}, "click_undo": {"Tests -> None": [[56, "    def click_undo(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.wait_for_element_by_css_": {"param": {"selector": {"str": [[28, "    def wait_for_element_by_css_selector(self, selector, timeout=TIMEOUT):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_event_properties.update_output": {"param": {"n_clicks": {"?": [[158, "        def update_output(n_clicks):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_removing_component_while_its_getting_update": {"var": {"body": {"() -> ?": [[335, "        body = lambda: self.driver.find_element_by_id(\"body\")"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_chained_dependencies_branched_lineage.update_child": {"param": {"parenta_value": {"?": [[262, "        def update_childa(parenta_value, parentb_value):"]]}, "parentb_value": {"?": [[262, "        def update_childa(parenta_value, parentb_value):"], [275, "        def update_childb(parenta_value, parentb_value, grandparent_value):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_generate_overlapping": {"func": {"display_output": {"() -> None": [[681, "        def display_output(*args):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_chained_dependencies_direct_lineage": {"var": {"input2": {"() -> ?": [[184, "        input2 = lambda: self.driver.find_element_by_id(\"input-2\")"]]}, "output": {"() -> ?": [[185, "        output = lambda: self.driver.find_element_by_id(\"output\")"]]}, "app": {"Dash": [[175, "        app = Dash(__name__)"]]}, "input1": {"() -> ?": [[183, "        input1 = lambda: self.driver.find_element_by_id(\"input-1\")"]]}, "call_counts": {"dict": [[187, "        call_counts = {\"output\": Value(\"i\", 0), \"input-2\": Value(\"i\", 0)}"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_generate_overlapping_outputs": {"var": {"i": {"int": [[692, "        for i in range(1, 5):"], [708, "        for i in range(1, 5):"]]}, "outputid": {"str": [[693, "            outputid = \"output-{}\".format(i)"], [709, "            outputid = \"output-{}\".format(i)"]]}, "app": {"Dash": [[655, "        app = Dash()"]]}, "block": {"?": [[657, "        block = html.Div("]]}}, "func": {"generate_callback": {"str -> () -> str": [[685, "        def generate_callback(outputid):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_chained_dependencies_branched_lineag": {"var": {"parentb": {"() -> ?": [[236, "        parentb = lambda: self.driver.find_element_by_id(\"parent-b\")"]]}, "parenta": {"() -> ?": [[235, "        parenta = lambda: self.driver.find_element_by_id(\"parent-a\")"]]}}, "param": {"self": {"Tests": [[224, "    def test_chained_dependencies_branched_lineage(self):"]]}}, "func": {"update_childa": {"(?, ?) -> str": [[262, "        def update_childa(parenta_value, parentb_value):"]]}, "update_parenta": {"? -> str": [[248, "        def update_parenta(value):"]]}, "update_parentb": {"? -> str": [[253, "        def update_parentb(value):"]]}, "update_childb": {"(?, ?, ?) -> str": [[275, "        def update_childb(parenta_value, parentb_value, grandparent_value):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_initialization_with_overlapping_outputs": {"var": {"i": {"int": [[632, "        for i in range(1, 5):"], [647, "        for i in range(1, 5):"]]}, "outputid": {"str": [[633, "            outputid = \"output-{}\".format(i)"], [648, "            outputid = \"output-{}\".format(i)"]]}, "app": {"Dash": [[604, "        app = Dash()"]]}}, "func": {"generate_callback": {"str -> () -> str": [[625, "        def generate_callback(outputid):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_callbacks_called_multiple_times_and_out_of_order_multi_output": {"var": {"ready": {"?": [[493, "        ready = self.driver.execute_script("]]}, "app": {"Dash": [[461, "        app = Dash(__name__)"]]}}, "param": {"self": {"Tests": [[460, "    def test_callbacks_called_multiple_times_and_out_of_order_multi_output(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_request_hook": {"var": {"post_payload": {"?": [[869, "        post_payload = self.wait_for_element_by_css_selector("]]}, "post_response": {"?": [[872, "        post_response = self.wait_for_element_by_css_selector("]]}}, "param": {"self": {"Tests": [[782, "    def test_request_hooks(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_array_of_falsy_child": {"var": {"app": {"Dash": [[130, "        app = Dash(__name__)"]]}}, "param": {"self": {"Tests": [[129, "    def test_array_of_falsy_child(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_removing_component_while_its_getting_updated.update_body": {"param": {"chapter": {"?": [[310, "        def update_body(chapter):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_request_hooks": {"var": {"initialValue": {"?": [[857, "        initialValue = input1.get_attribute(\"value\")"]]}, "action": {"?": [[859, "        action = ActionChains(self.driver)"], [861, "        action = action.send_keys(Keys.BACKSPACE * len(initialValue))"]]}, "app": {"Dash": [[783, "        app = Dash(__name__)"]]}, "input1": {"?": [[856, "        input1 = self.wait_for_element_by_css_selector(\"#input\")"]]}, "pre_payload": {"?": [[868, "        pre_payload = self.wait_for_element_by_css_selector(\"#output-pre-payload\").text"]]}}, "func": {"update_output": {"? -> ?": [[851, "        def update_output(value):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.T": {"func": {"test_graphs_in_tabs_do_not_share_state": {"Tests -> None": [[902, "    def test_graphs_in_tabs_do_not_share_state(self):"]]}, "test_rendering_layout_calls_callback_once_per_output": {"Tests -> None": [[371, "    def test_rendering_layout_calls_callback_once_per_output(self):"]]}, "test_removing_component_while_its_getting_updated": {"Tests -> None": [[293, "    def test_removing_component_while_its_getting_updated(self):"]]}, "test_of_falsy_child": {"Tests -> None": [[139, "    def test_of_falsy_child(self):"]]}, "test_callbacks_with_shared_grandparent": {"Tests -> None": [[501, "    def test_callbacks_with_shared_grandparent(self):"]]}, "test_callbacks_triggered_on_generated_output": {"Tests -> None": [[541, "    def test_callbacks_triggered_on_generated_output(self):"]]}, "setUp": {"Tests -> None": [[25, "    def setUp(self):"]]}, "test_no_undo_redo": {"Tests -> None": [[112, "    def test_no_undo_redo(self):"]]}, "test_callbacks_called_multiple_times_and_out_of_order_multi_output": {"Tests -> None": [[460, "    def test_callbacks_called_multiple_times_and_out_of_order_multi_output(self):"]]}, "test_rendering_new_content_calls_callback_once_per_output": {"Tests -> None": [[405, "    def test_rendering_new_content_calls_callback_once_per_output(self):"]]}, "check_undo_redo_exist": {"(Tests, ?, ?) -> None / (Tests, bool, bool) -> None": [[68, "    def check_undo_redo_exist(self, has_undo, has_redo):"]]}, "test_multiple_properties_update_at_same_time_on_same_component": {"Tests -> None": [[716, "    def test_multiple_properties_update_at_same_time_on_same_component(self):"]]}, "test_chained_dependencies_direct_lineage": {"Tests -> None": [[174, "    def test_chained_dependencies_direct_lineage(self):"]]}, "test_initialization_with_overlapping_outputs": {"Tests -> None": [[603, "    def test_initialization_with_overlapping_outputs(self):"]]}, "test_generate_overlapping_outputs": {"Tests -> None": [[654, "    def test_generate_overlapping_outputs(self):"]]}, "test_chained_dependencies_branched_lineage": {"Tests -> None": [[224, "    def test_chained_dependencies_branched_lineage(self):"]]}, "test_undo_redo": {"Tests -> None": [[77, "    def test_undo_redo(self):"]]}, "test_array_of_falsy_child": {"Tests -> None": [[129, "    def test_array_of_falsy_child(self):"]]}, "wait_for_element_by_css_selector": {"(Tests, ?, int) -> ? / (Tests, str, int) -> ?": [[28, "    def wait_for_element_by_css_selector(self, selector, timeout=TIMEOUT):"]]}, "test_event_properties": {"Tests -> None": [[149, "    def test_event_properties(self):"]]}, "test_request_hooks": {"Tests -> None": [[782, "    def test_request_hooks(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_callbacks_called_multiple_times_and_out_of_order_multi_output.update_output": {"param": {"n_clicks": {"?": [[476, "        def update_output(n_clicks):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_removing_component_while_its_getting_updated.chapter2_assertions": {"var": {"html_body": {"?": [[354, "            html_body = layout[\"props\"][\"children\"][1]"]]}, "layout": {"?": [[347, "            layout = self.driver.execute_script("]]}, "dcc_radio": {"?": [[353, "            dcc_radio = layout[\"props\"][\"children\"][0]"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_removing_component_while_its_getting_updated.this_callback_takes_forever": {"param": {"n_clicks": {"?": [[326, "        def this_callback_takes_forever(n_clicks):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render": {"var": {"TIMEOUT": {"int": [[21, "TIMEOUT = 20"]]}}, "class": {"Tests": {"<Tests>": [[24, "class Tests(IntegrationTests):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_rendering_new_content_calls_callback_once_per_outp": {"var": {"call_count": {"?": [[407, "        call_count = Value(\"i\", 0)"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.check_undo_redo_exist": {"var": {"els": {"?": [[70, "        els = self.driver.find_elements_by_css_selector(selector)"]]}}, "param": {"self": {"Tests": [[68, "    def check_undo_redo_exist(self, has_undo, has_redo):"]]}, "has_redo": {"bool": [[68, "    def check_undo_redo_exist(self, has_undo, has_redo):"]]}, "has_undo": {"bool": [[68, "    def check_undo_redo_exist(self, has_undo, has_redo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_rendering_new_content_calls_callback_once_per": {"func": {"display_output": {"? -> str": [[423, "        def display_output(n_clicks):"]]}, "dynamic_output": {"() -> None": [[444, "        def dynamic_output(*args):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_callbacks_called_multiple_times_and_out_of_order_multi_outp": {"var": {"button": {"?": [[483, "        button = self.wait_for_element_by_css_selector(\"#input\")"]]}, "call_count": {"?": [[470, "        call_count = Value(\"i\", 0)"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_no_undo_red": {"var": {"toolbar": {"?": [[126, "        toolbar = self.driver.find_elements_by_css_selector(\"._dash-undo-redo\")"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.click": {"var": {"redo_selector": {"str": [[63, "        redo_selector = \"._dash-undo-redo span:last-child div:last-child\""]]}, "undo_selector": {"str": [[57, "        undo_selector = \"._dash-undo-redo span:first-child div:last-child\""]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_graphs_in_tabs_do_not_share_state": {"var": {"tab2_layout": {"[?]": [[935, "        tab2_layout = ["]]}, "app": {"Dash": [[903, "        app = Dash()"]]}, "tab1_layout": {"[?]": [[921, "        tab1_layout = ["]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_callbacks_triggered_on_generated_output": {"var": {"app": {"Dash": [[542, "        app = Dash()"]]}}, "param": {"self": {"Tests": [[541, "    def test_callbacks_triggered_on_generated_output(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_generate_overlapping_output": {"param": {"self": {"Tests": [[654, "    def test_generate_overlapping_outputs(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_multiple_properties_update_at_same_time_on_same_componen": {"var": {"prev_timestamp_2": {"?": [[771, "        prev_timestamp_2 = timestamp_2.value"]]}, "prev_timestamp_1": {"?": [[762, "        prev_timestamp_1 = timestamp_1.value"]]}, "timestamp_2": {"?": [[719, "        timestamp_2 = Value(\"d\", -5)"]]}, "timestamp_1": {"?": [[718, "        timestamp_1 = Value(\"d\", -5)"]]}}, "func": {"update_output": {"() -> str": [[739, "        def update_output(*args):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_graphs_in_tabs_do_n": {"func": {"display_hover_data": {"? -> ?": [[953, "        def display_hover_data(hover_data):"]]}, "display_hover_data_2": {"? -> ?": [[960, "        def display_hover_data_2(hover_data):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_no_undo_redo.set_b": {"param": {"a": {"?": [[117, "        def set_b(a):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_of_falsy_child": {"var": {"app": {"Dash": [[140, "        app = Dash(__name__)"]]}}, "param": {"self": {"Tests": [[139, "    def test_of_falsy_child(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_rendering_new_content_calls_callback_once_per_output": {"var": {"app": {"Dash": [[406, "        app = Dash(__name__)"]]}}, "param": {"self": {"Tests": [[405, "    def test_rendering_new_content_calls_callback_once_per_output(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.wait_for_text_to_equa": {"param": {"self": {"Tests": [[34, "    def wait_for_text_to_equal(self, selector, assertion_text, timeout=TIMEOUT):"]]}, "selector": {"str": [[34, "    def wait_for_text_to_equal(self, selector, assertion_text, timeout=TIMEOUT):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_event_properti": {"param": {"self": {"Tests": [[149, "    def test_event_properties(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_generate_overlapping_outputs.generate_": {"func": {"callback": {"() -> str": [[686, "            def callback(*args):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_initialization_with_overlapping_outputs.generate_callback": {"param": {"outputid": {"str": [[625, "        def generate_callback(outputid):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_rendering_layout_calls_callback_once_per": {"func": {"dynamic_output": {"() -> None": [[393, "        def dynamic_output(*args):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_initialization_with_overlapping_outp": {"var": {"call_counts": {"dict": [[618, "        call_counts = {"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_graphs_in_tabs_do_not_share_state.display_hover_data_2": {"param": {"hover_data": {"?": [[960, "        def display_hover_data_2(hover_data):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_undo_redo": {"var": {"a": {"?": [[87, "        a = self.wait_for_element_by_css_selector(\"#a\")"]]}, "app": {"Dash": [[78, "        app = Dash(__name__, show_undo_redo=True)"]]}}, "param": {"self": {"Tests": [[77, "    def test_undo_redo(self):"]]}}, "func": {"set_b": {"? -> ?": [[82, "        def set_b(a):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_callbacks_triggered_on_generated_output.display_tab2_output": {"param": {"value": {"?": [[580, "        def display_tab2_output(value):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.click_": {"var": {"redo": {"?": [[65, "        redo = self.wait_for_element_by_css_selector(redo_selector)"]]}, "undo": {"?": [[58, "        undo = self.wait_for_element_by_css_selector(undo_selector)"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_removing_component_while_its_getting": {"func": {"update_body": {"? -> {[?] | str}": [[310, "        def update_body(chapter):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.click_redo": {"param": {"self": {"Tests": [[62, "    def click_redo(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_callbacks_triggered_on_generated_output.display_tab1_output": {"param": {"value": {"?": [[573, "        def display_tab1_output(value):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_chained_dependencies_branched_lineage": {"var": {"childa": {"() -> ?": [[237, "        childa = lambda: self.driver.find_element_by_id(\"child-a\")"]]}, "app": {"Dash": [[225, "        app = Dash(__name__)"]]}, "call_counts": {"dict": [[240, "        call_counts = {"]]}, "childb": {"() -> ?": [[238, "        childb = lambda: self.driver.find_element_by_id(\"child-b\")"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_callbacks_with_shared_grandparent.dropdown_1": {"param": {"session_id": {"?": [[520, "        def dropdown_1(value, session_id):"]]}, "value": {"?": [[520, "        def dropdown_1(value, session_id):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_callbacks_with_shared_grandparent.dropdown_2": {"param": {"session_id": {"?": [[528, "        def dropdown_2(value, session_id):"]]}, "value": {"?": [[528, "        def dropdown_2(value, session_id):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_removing_component_while_its_getting_updated": {"var": {"app": {"Dash": [[294, "        app = Dash(__name__)"]]}, "call_counts": {"dict": [[307, "        call_counts = {\"body\": Value(\"i\", 0), \"button-output\": Value(\"i\", 0)}"]]}}, "param": {"self": {"Tests": [[293, "    def test_removing_component_while_its_getting_updated(self):"]]}}, "func": {"chapter2_assertions": {"() -> None": [[344, "        def chapter2_assertions():"]]}, "this_callback_takes_forever": {"? -> str": [[326, "        def this_callback_takes_forever(n_clicks):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_graphs_in_tabs_do_not_share_sta": {"func": {"render_content": {"? -> [?]": [[964, "        def render_content(tab):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_multiple_properties_update_at_same_time_on_same_compone": {"var": {"call_count": {"?": [[717, "        call_count = Value(\"i\", 0)"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_chained_dependencies_direct_lineage.update_o": {"param": {"input2": {"?": [[198, "        def update_output(input1, input2):"]]}, "input1": {"?": [[198, "        def update_output(input1, input2):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_callbacks_triggered_on_generate": {"func": {"display_tab1_output": {"? -> str": [[573, "        def display_tab1_output(value):"]]}, "display_tab2_output": {"? -> str": [[580, "        def display_tab2_output(value):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_chained_dependencies_branched_lineage.update_childb": {"param": {"grandparent_value": {"?": [[275, "        def update_childb(parenta_value, parentb_value, grandparent_value):"]]}, "parenta_value": {"?": [[275, "        def update_childb(parenta_value, parentb_value, grandparent_value):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_callbacks_triggered_on_generated_outpu": {"func": {"display_content": {"? -> ?": [[567, "        def display_content(value):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_callbacks_with_shared_grandparent": {"var": {"app": {"Dash": [[502, "        app = Dash()"]]}}, "param": {"self": {"Tests": [[501, "    def test_callbacks_with_shared_grandparent(self):"]]}}, "func": {"dropdown_1": {"(?, ?) -> [dict]": [[520, "        def dropdown_1(value, session_id):"]]}, "dropdown_2": {"(?, ?) -> [dict]": [[528, "        def dropdown_2(value, session_id):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_request_hooks.update_output": {"param": {"value": {"?": [[851, "        def update_output(value):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.check_undo_redo_exi": {"var": {"texts": {"{[?] | [str]}": [[71, "        texts = ([\"undo\"] if has_undo else []) + ([\"redo\"] if has_redo else [])"]]}, "selector": {"str": [[69, "        selector = \"._dash-undo-redo span div:last-child\""]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_rendering_layout_calls_callback_once_per_output": {"var": {"app": {"Dash": [[372, "        app = Dash(__name__)"]]}}, "param": {"self": {"Tests": [[371, "    def test_rendering_layout_calls_callback_once_per_output(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_chained_dependencies_branched_lineage.update_parent": {"param": {"value": {"?": [[248, "        def update_parenta(value):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.click_undo": {"param": {"self": {"Tests": [[56, "    def click_undo(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_rendering_new_content_calls_callback_once_per_output.display_output": {"param": {"n_clicks": {"?": [[423, "        def display_output(n_clicks):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_undo_redo.set_b": {"param": {"a": {"?": [[82, "        def set_b(a):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_event_properties": {"var": {"output": {"() -> ?": [[166, "        output = lambda: self.driver.find_element_by_id(\"output\")"]]}, "app": {"Dash": [[150, "        app = Dash(__name__)"]]}, "btn": {"?": [[165, "        btn = self.driver.find_element_by_id(\"button\")"]]}, "call_count": {"?": [[155, "        call_count = Value(\"i\", 0)"]]}}, "func": {"update_output": {"? -> str": [[158, "        def update_output(n_clicks):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_chained_dependencies_direct_lineag": {"param": {"self": {"Tests": [[174, "    def test_chained_dependencies_direct_lineage(self):"]]}}, "func": {"update_output": {"(?, ?) -> str": [[198, "        def update_output(input1, input2):"]]}, "update_input": {"? -> str": [[190, "        def update_input(input1):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.wait_for_element_by_css_selector": {"param": {"self": {"Tests": [[28, "    def wait_for_element_by_css_selector(self, selector, timeout=TIMEOUT):"]]}, "timeout": {"int": [[28, "    def wait_for_element_by_css_selector(self, selector, timeout=TIMEOUT):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_chained_dependencies_direct_lineage.update_": {"param": {"input1": {"?": [[190, "        def update_input(input1):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_chained_dependencies_branched_lineage.update_parentb": {"param": {"value": {"?": [[253, "        def update_parentb(value):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_callbacks_called_multiple_times_and_out_of_order_multi": {"func": {"update_output": {"? -> (?, int)": [[476, "        def update_output(n_clicks):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_graphs_in_tabs_do_not_share_state.render_conten": {"param": {"tab": {"?": [[964, "        def render_content(tab):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_graphs_in_tabs_do_not_share_state.display": {"param": {"hover_data": {"?": [[953, "        def display_hover_data(hover_data):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_graphs_in_tabs_do_not_share_s": {"var": {"graph_1_expected_clickdata": {"dict": [[980, "        graph_1_expected_clickdata = {"]]}, "graph_2_expected_clickdata": {"dict": [[994, "        graph_2_expected_clickdata = {"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_initialization_with_overlapping_output": {"param": {"self": {"Tests": [[603, "    def test_initialization_with_overlapping_outputs(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_graphs_in_tabs_do_not_share_stat": {"param": {"self": {"Tests": [[902, "    def test_graphs_in_tabs_do_not_share_state(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_callbacks_triggered_on_generated_outp": {"var": {"call_counts": {"dict": [[545, "        call_counts = {\"tab1\": Value(\"i\", 0), \"tab2\": Value(\"i\", 0)}"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_multiple_properties_update_at_same_time_on_same_component": {"var": {"app": {"Dash": [[721, "        app = Dash()"]]}}, "param": {"self": {"Tests": [[716, "    def test_multiple_properties_update_at_same_time_on_same_component(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_callbacks_triggered_on_generated_output.display_content": {"param": {"value": {"?": [[567, "        def display_content(value):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_initialization_with_overlapping_outputs.generate_": {"func": {"callback": {"() -> str": [[626, "            def callback(*args):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_no_undo_redo": {"var": {"a": {"?": [[122, "        a = self.wait_for_element_by_css_selector(\"#a\")"]]}, "app": {"Dash": [[113, "        app = Dash(__name__)"]]}}, "param": {"self": {"Tests": [[112, "    def test_no_undo_redo(self):"]]}}, "func": {"set_b": {"? -> ?": [[117, "        def set_b(a):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_generate_overlapping_outputs.generate_callback": {"param": {"outputid": {"str": [[685, "        def generate_callback(outputid):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_render.Tests.test_callbacks_with_shared_grandpare": {"var": {"call_counts": {"dict": [[514, "        call_counts = {\"dropdown_1\": Value(\"i\", 0), \"dropdown_2\": Value(\"i\", 0)}"]]}, "options": {"[dict]": [[512, "        options = [{\"value\": \"a\", \"label\": \"a\"}]"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/tests/integration/callbacks/test_layout_paths_with_callbacks.py": {".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_layout_paths_with_callbacks.test_cblp001_radio_buttons_callbacks_generating_children.check_chapter": {"var": {"value": {"?": [[156, "        value = ("]]}, "key": {"?": [[151, "        for key in dash_duo.redux_state_paths[\"strs\"]:"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_layout_paths_with_callbacks.test_cblp001_radio_buttons_callbacks_generating_child": {"func": {"generate_graph_callback": {"str -> ? -> dict": [[107, "    def generate_graph_callback(counterId):"]]}, "generate_label_callback": {"str -> ? -> None": [[128, "    def generate_label_callback(id_):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_layout_paths_w": {"func": {"test_cblp001_radio_buttons_callbacks_generating_children": {"? -> None": [[11, "def test_cblp001_radio_buttons_callbacks_generating_children(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_layout_paths_with_callbacks.test_cblp001_radio_buttons_callbacks_generating_children.generate_label_callback.update_lab": {"param": {"value": {"?": [[129, "        def update_label(value):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_layout_paths_with_callbacks.test_cblp001_radio_buttons_callbacks_generating_children.check_call_coun": {"param": {"chapters": {"{(str, str) | str}": [[181, "    def check_call_counts(chapters, count):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_layout_paths_with_callbacks.test_cblp001_radio_buttons_callbacks_generating_children.generate_label_callback": {"param": {"id_": {"str": [[128, "    def generate_label_callback(id_):"]]}}, "func": {"update_label": {"? -> None": [[129, "        def update_label(value):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_layout_paths_with_callbacks.test_cblp001_radio_buttons_callbacks_generating_children.display_chapter": {"param": {"toc_value": {"?": [[101, "    def display_chapter(toc_value):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_layout_paths_with_callbacks.test_cblp001_radio_buttons_callbacks_generating_children.check_": {"param": {"chapter": {"str": [[148, "    def check_chapter(chapter):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_layout_paths_with_callbacks.test_cblp001_radio_buttons_callbacks_generating_children.check_call_counts": {"var": {"chapter": {"str": [[182, "        for chapter in chapters:"]]}}, "param": {"count": {"int": [[181, "    def check_call_counts(chapters, count):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_layout_paths_with_callbacks.test_cblp001_radio_buttons_callbacks_generating_childre": {"var": {"call_counts": {"dict": [[90, "    call_counts = {"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_layout_paths_with_callbacks.test_cblp001_radio_buttons_callbacks_generating_children.generate_graph_callback.callback": {"param": {"value": {"?": [[108, "        def callback(value):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_layout_paths_with_callbacks.test_cblp001_radio_buttons_callbacks_generating_children.generate_graph_callback": {"param": {"counterId": {"str": [[107, "    def generate_graph_callback(counterId):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_layout_paths_with_callbacks.test_cblp001_radio_buttons_callbacks_generating_children.generate_graph_": {"func": {"callback": {"? -> dict": [[108, "        def callback(value):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_layout_paths_with_callbacks.test_cblp001_radio_buttons_callbacks_generating_children": {"var": {"chapter": {"str": [[135, "    for chapter in [\"chapter1\", \"chapter2\", \"chapter3\"]:"]]}, "paths": {"?": [[222, "    paths = dash_duo.redux_state_paths"]]}, "EXPECTED_PATHS": {"?": [[14, "        EXPECTED_PATHS = json.load(fp)"]]}, "key": {"?": [[224, "    for key in paths[\"strs\"]:"]]}, "script": {"?": [[33, "    for script in dcc._js_dist:"]]}, "app": {"Dash": [[16, "    app = Dash(__name__)"]]}, "chapters": {"dict": [[36, "    chapters = {"]]}, "TIMEOUT": {"int": [[12, "    TIMEOUT = 2"]]}}, "param": {"dash_duo": {"?": [[11, "def test_cblp001_radio_buttons_callbacks_generating_children(dash_duo):"]]}}, "func": {"display_chapter": {"? -> {[?] | str}": [[101, "    def display_chapter(toc_value):"]]}, "check_chapter": {"str -> None": [[148, "    def check_chapter(chapter):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_layout_paths_with_callbacks.test_cblp001_radio_buttons_callbacks_generating_childr": {"func": {"check_call_counts": {"(str, int) -> None / ((str, str), int) -> None": [[181, "    def check_call_counts(chapters, count):"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/tests/assets/simple_app.py": {".home.xxm.Desktop.EMSE.dataset.dash.tests.assets.simple_app.on_": {"param": {"value": {"?": [[22, "def on_value(value):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.assets.simple_app.on_sty": {"param": {"value": {"?": [[30, "def on_style(value):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.assets.simple_": {"var": {"app": {"Dash": [[9, "app = dash.Dash(__name__)"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.assets.simple_app": {"func": {"on_value": {"? -> None": [[22, "def on_value(value):"]]}, "on_style": {"? -> dict": [[30, "def on_style(value):"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/tests/unit/development/metadata_test.py": {".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.metadata_test.Table": {"func": {"__init__": {"? -> ?": [[48, "    def __init__(self, children=None, optionalArray=Component.UNDEFINED, optionalBool=Component.UNDEFINED, optionalFunc=Component.UNDEFINED, optionalNumber=Component.UNDEFINED, optionalObject=Component.UNDEFINED, optionalString=Component.UNDEFINED, optionalSymbol=Component.UNDEFINED, optionalNode=Component.UNDEFINED, optionalElement=Component.UNDEFINED, optionalMessage=Component.UNDEFINED, optionalEnum=Component.UNDEFINED, optionalUnion=Component.UNDEFINED, optionalArrayOf=Component.UNDEFINED, optionalObjectOf=Component.UNDEFINED, optionalObjectWithExactAndNestedDescription=Component.UNDEFINED, optionalObjectWithShapeAndNestedDescription=Component.UNDEFINED, optionalAny=Component.UNDEFINED, customProp=Component.UNDEFINED, customArrayProp=Component.UNDEFINED, id=Component.UNDEFINED, **kwargs):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.metadata_test.Table.__in": {"var": {"_explicit_args": {"?": [[56, "        _explicit_args = kwargs.pop('_explicit_args')"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.metadata_test": {"class": {"Table": {"<Table>": [[6, "class Table(Component):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.metadata_test.Table.__init__": {"var": {"k": {"?": [[61, "        for k in []:"]]}, "args": {"dict": [[59, "        args = {k: _locals[k] for k in _explicit_args if k != 'children'}"]]}}, "param": {"customArrayProp": {"_UNDEFINED": [[48, "    def __init__(self, children=None, optionalArray=Component.UNDEFINED, optionalBool=Component.UNDEFINED, optionalFunc=Component.UNDEFINED, optionalNumber=Component.UNDEFINED, optionalObject=Component.UNDEFINED, optionalString=Component.UNDEFINED, optionalSymbol=Component.UNDEFINED, optionalNode=Component.UNDEFINED, optionalElement=Component.UNDEFINED, optionalMessage=Component.UNDEFINED, optionalEnum=Component.UNDEFINED, optionalUnion=Component.UNDEFINED, optionalArrayOf=Component.UNDEFINED, optionalObjectOf=Component.UNDEFINED, optionalObjectWithExactAndNestedDescription=Component.UNDEFINED, optionalObjectWithShapeAndNestedDescription=Component.UNDEFINED, optionalAny=Component.UNDEFINED, customProp=Component.UNDEFINED, customArrayProp=Component.UNDEFINED, id=Component.UNDEFINED, **kwargs):"]]}, "optionalObject": {"<Component>": [[48, "    def __init__(self, children=None, optionalArray=Component.UNDEFINED, optionalBool=Component.UNDEFINED, optionalFunc=Component.UNDEFINED, optionalNumber=Component.UNDEFINED, optionalObject=Component.UNDEFINED, optionalString=Component.UNDEFINED, optionalSymbol=Component.UNDEFINED, optionalNode=Component.UNDEFINED, optionalElement=Component.UNDEFINED, optionalMessage=Component.UNDEFINED, optionalEnum=Component.UNDEFINED, optionalUnion=Component.UNDEFINED, optionalArrayOf=Component.UNDEFINED, optionalObjectOf=Component.UNDEFINED, optionalObjectWithExactAndNestedDescription=Component.UNDEFINED, optionalObjectWithShapeAndNestedDescription=Component.UNDEFINED, optionalAny=Component.UNDEFINED, customProp=Component.UNDEFINED, customArrayProp=Component.UNDEFINED, id=Component.UNDEFINED, **kwargs):"]]}, "optionalBool": {"<Component>": [[48, "    def __init__(self, children=None, optionalArray=Component.UNDEFINED, optionalBool=Component.UNDEFINED, optionalFunc=Component.UNDEFINED, optionalNumber=Component.UNDEFINED, optionalObject=Component.UNDEFINED, optionalString=Component.UNDEFINED, optionalSymbol=Component.UNDEFINED, optionalNode=Component.UNDEFINED, optionalElement=Component.UNDEFINED, optionalMessage=Component.UNDEFINED, optionalEnum=Component.UNDEFINED, optionalUnion=Component.UNDEFINED, optionalArrayOf=Component.UNDEFINED, optionalObjectOf=Component.UNDEFINED, optionalObjectWithExactAndNestedDescription=Component.UNDEFINED, optionalObjectWithShapeAndNestedDescription=Component.UNDEFINED, optionalAny=Component.UNDEFINED, customProp=Component.UNDEFINED, customArrayProp=Component.UNDEFINED, id=Component.UNDEFINED, **kwargs):"]]}, "optionalFunc": {"_UNDEFINED": [[48, "    def __init__(self, children=None, optionalArray=Component.UNDEFINED, optionalBool=Component.UNDEFINED, optionalFunc=Component.UNDEFINED, optionalNumber=Component.UNDEFINED, optionalObject=Component.UNDEFINED, optionalString=Component.UNDEFINED, optionalSymbol=Component.UNDEFINED, optionalNode=Component.UNDEFINED, optionalElement=Component.UNDEFINED, optionalMessage=Component.UNDEFINED, optionalEnum=Component.UNDEFINED, optionalUnion=Component.UNDEFINED, optionalArrayOf=Component.UNDEFINED, optionalObjectOf=Component.UNDEFINED, optionalObjectWithExactAndNestedDescription=Component.UNDEFINED, optionalObjectWithShapeAndNestedDescription=Component.UNDEFINED, optionalAny=Component.UNDEFINED, customProp=Component.UNDEFINED, customArrayProp=Component.UNDEFINED, id=Component.UNDEFINED, **kwargs):"]]}, "optionalSymbol": {"_UNDEFINED": [[48, "    def __init__(self, children=None, optionalArray=Component.UNDEFINED, optionalBool=Component.UNDEFINED, optionalFunc=Component.UNDEFINED, optionalNumber=Component.UNDEFINED, optionalObject=Component.UNDEFINED, optionalString=Component.UNDEFINED, optionalSymbol=Component.UNDEFINED, optionalNode=Component.UNDEFINED, optionalElement=Component.UNDEFINED, optionalMessage=Component.UNDEFINED, optionalEnum=Component.UNDEFINED, optionalUnion=Component.UNDEFINED, optionalArrayOf=Component.UNDEFINED, optionalObjectOf=Component.UNDEFINED, optionalObjectWithExactAndNestedDescription=Component.UNDEFINED, optionalObjectWithShapeAndNestedDescription=Component.UNDEFINED, optionalAny=Component.UNDEFINED, customProp=Component.UNDEFINED, customArrayProp=Component.UNDEFINED, id=Component.UNDEFINED, **kwargs):"]]}, "customProp": {"_UNDEFINED": [[48, "    def __init__(self, children=None, optionalArray=Component.UNDEFINED, optionalBool=Component.UNDEFINED, optionalFunc=Component.UNDEFINED, optionalNumber=Component.UNDEFINED, optionalObject=Component.UNDEFINED, optionalString=Component.UNDEFINED, optionalSymbol=Component.UNDEFINED, optionalNode=Component.UNDEFINED, optionalElement=Component.UNDEFINED, optionalMessage=Component.UNDEFINED, optionalEnum=Component.UNDEFINED, optionalUnion=Component.UNDEFINED, optionalArrayOf=Component.UNDEFINED, optionalObjectOf=Component.UNDEFINED, optionalObjectWithExactAndNestedDescription=Component.UNDEFINED, optionalObjectWithShapeAndNestedDescription=Component.UNDEFINED, optionalAny=Component.UNDEFINED, customProp=Component.UNDEFINED, customArrayProp=Component.UNDEFINED, id=Component.UNDEFINED, **kwargs):"]]}, "id": {"<Component>": [[48, "    def __init__(self, children=None, optionalArray=Component.UNDEFINED, optionalBool=Component.UNDEFINED, optionalFunc=Component.UNDEFINED, optionalNumber=Component.UNDEFINED, optionalObject=Component.UNDEFINED, optionalString=Component.UNDEFINED, optionalSymbol=Component.UNDEFINED, optionalNode=Component.UNDEFINED, optionalElement=Component.UNDEFINED, optionalMessage=Component.UNDEFINED, optionalEnum=Component.UNDEFINED, optionalUnion=Component.UNDEFINED, optionalArrayOf=Component.UNDEFINED, optionalObjectOf=Component.UNDEFINED, optionalObjectWithExactAndNestedDescription=Component.UNDEFINED, optionalObjectWithShapeAndNestedDescription=Component.UNDEFINED, optionalAny=Component.UNDEFINED, customProp=Component.UNDEFINED, customArrayProp=Component.UNDEFINED, id=Component.UNDEFINED, **kwargs):"]]}, "optionalMessage": {"_UNDEFINED": [[48, "    def __init__(self, children=None, optionalArray=Component.UNDEFINED, optionalBool=Component.UNDEFINED, optionalFunc=Component.UNDEFINED, optionalNumber=Component.UNDEFINED, optionalObject=Component.UNDEFINED, optionalString=Component.UNDEFINED, optionalSymbol=Component.UNDEFINED, optionalNode=Component.UNDEFINED, optionalElement=Component.UNDEFINED, optionalMessage=Component.UNDEFINED, optionalEnum=Component.UNDEFINED, optionalUnion=Component.UNDEFINED, optionalArrayOf=Component.UNDEFINED, optionalObjectOf=Component.UNDEFINED, optionalObjectWithExactAndNestedDescription=Component.UNDEFINED, optionalObjectWithShapeAndNestedDescription=Component.UNDEFINED, optionalAny=Component.UNDEFINED, customProp=Component.UNDEFINED, customArrayProp=Component.UNDEFINED, id=Component.UNDEFINED, **kwargs):"]]}, "optionalNumber": {"_UNDEFINED": [[48, "    def __init__(self, children=None, optionalArray=Component.UNDEFINED, optionalBool=Component.UNDEFINED, optionalFunc=Component.UNDEFINED, optionalNumber=Component.UNDEFINED, optionalObject=Component.UNDEFINED, optionalString=Component.UNDEFINED, optionalSymbol=Component.UNDEFINED, optionalNode=Component.UNDEFINED, optionalElement=Component.UNDEFINED, optionalMessage=Component.UNDEFINED, optionalEnum=Component.UNDEFINED, optionalUnion=Component.UNDEFINED, optionalArrayOf=Component.UNDEFINED, optionalObjectOf=Component.UNDEFINED, optionalObjectWithExactAndNestedDescription=Component.UNDEFINED, optionalObjectWithShapeAndNestedDescription=Component.UNDEFINED, optionalAny=Component.UNDEFINED, customProp=Component.UNDEFINED, customArrayProp=Component.UNDEFINED, id=Component.UNDEFINED, **kwargs):"]]}, "self": {"Table": [[48, "    def __init__(self, children=None, optionalArray=Component.UNDEFINED, optionalBool=Component.UNDEFINED, optionalFunc=Component.UNDEFINED, optionalNumber=Component.UNDEFINED, optionalObject=Component.UNDEFINED, optionalString=Component.UNDEFINED, optionalSymbol=Component.UNDEFINED, optionalNode=Component.UNDEFINED, optionalElement=Component.UNDEFINED, optionalMessage=Component.UNDEFINED, optionalEnum=Component.UNDEFINED, optionalUnion=Component.UNDEFINED, optionalArrayOf=Component.UNDEFINED, optionalObjectOf=Component.UNDEFINED, optionalObjectWithExactAndNestedDescription=Component.UNDEFINED, optionalObjectWithShapeAndNestedDescription=Component.UNDEFINED, optionalAny=Component.UNDEFINED, customProp=Component.UNDEFINED, customArrayProp=Component.UNDEFINED, id=Component.UNDEFINED, **kwargs):"]]}, "optionalObjectWithShapeAndNestedDescription": {"_UNDEFINED": [[48, "    def __init__(self, children=None, optionalArray=Component.UNDEFINED, optionalBool=Component.UNDEFINED, optionalFunc=Component.UNDEFINED, optionalNumber=Component.UNDEFINED, optionalObject=Component.UNDEFINED, optionalString=Component.UNDEFINED, optionalSymbol=Component.UNDEFINED, optionalNode=Component.UNDEFINED, optionalElement=Component.UNDEFINED, optionalMessage=Component.UNDEFINED, optionalEnum=Component.UNDEFINED, optionalUnion=Component.UNDEFINED, optionalArrayOf=Component.UNDEFINED, optionalObjectOf=Component.UNDEFINED, optionalObjectWithExactAndNestedDescription=Component.UNDEFINED, optionalObjectWithShapeAndNestedDescription=Component.UNDEFINED, optionalAny=Component.UNDEFINED, customProp=Component.UNDEFINED, customArrayProp=Component.UNDEFINED, id=Component.UNDEFINED, **kwargs):"]]}, "children": {"None": [[48, "    def __init__(self, children=None, optionalArray=Component.UNDEFINED, optionalBool=Component.UNDEFINED, optionalFunc=Component.UNDEFINED, optionalNumber=Component.UNDEFINED, optionalObject=Component.UNDEFINED, optionalString=Component.UNDEFINED, optionalSymbol=Component.UNDEFINED, optionalNode=Component.UNDEFINED, optionalElement=Component.UNDEFINED, optionalMessage=Component.UNDEFINED, optionalEnum=Component.UNDEFINED, optionalUnion=Component.UNDEFINED, optionalArrayOf=Component.UNDEFINED, optionalObjectOf=Component.UNDEFINED, optionalObjectWithExactAndNestedDescription=Component.UNDEFINED, optionalObjectWithShapeAndNestedDescription=Component.UNDEFINED, optionalAny=Component.UNDEFINED, customProp=Component.UNDEFINED, customArrayProp=Component.UNDEFINED, id=Component.UNDEFINED, **kwargs):"]]}, "optionalString": {"_UNDEFINED": [[48, "    def __init__(self, children=None, optionalArray=Component.UNDEFINED, optionalBool=Component.UNDEFINED, optionalFunc=Component.UNDEFINED, optionalNumber=Component.UNDEFINED, optionalObject=Component.UNDEFINED, optionalString=Component.UNDEFINED, optionalSymbol=Component.UNDEFINED, optionalNode=Component.UNDEFINED, optionalElement=Component.UNDEFINED, optionalMessage=Component.UNDEFINED, optionalEnum=Component.UNDEFINED, optionalUnion=Component.UNDEFINED, optionalArrayOf=Component.UNDEFINED, optionalObjectOf=Component.UNDEFINED, optionalObjectWithExactAndNestedDescription=Component.UNDEFINED, optionalObjectWithShapeAndNestedDescription=Component.UNDEFINED, optionalAny=Component.UNDEFINED, customProp=Component.UNDEFINED, customArrayProp=Component.UNDEFINED, id=Component.UNDEFINED, **kwargs):"]]}, "optionalElement": {"_UNDEFINED": [[48, "    def __init__(self, children=None, optionalArray=Component.UNDEFINED, optionalBool=Component.UNDEFINED, optionalFunc=Component.UNDEFINED, optionalNumber=Component.UNDEFINED, optionalObject=Component.UNDEFINED, optionalString=Component.UNDEFINED, optionalSymbol=Component.UNDEFINED, optionalNode=Component.UNDEFINED, optionalElement=Component.UNDEFINED, optionalMessage=Component.UNDEFINED, optionalEnum=Component.UNDEFINED, optionalUnion=Component.UNDEFINED, optionalArrayOf=Component.UNDEFINED, optionalObjectOf=Component.UNDEFINED, optionalObjectWithExactAndNestedDescription=Component.UNDEFINED, optionalObjectWithShapeAndNestedDescription=Component.UNDEFINED, optionalAny=Component.UNDEFINED, customProp=Component.UNDEFINED, customArrayProp=Component.UNDEFINED, id=Component.UNDEFINED, **kwargs):"]]}, "optionalArray": {"_UNDEFINED": [[48, "    def __init__(self, children=None, optionalArray=Component.UNDEFINED, optionalBool=Component.UNDEFINED, optionalFunc=Component.UNDEFINED, optionalNumber=Component.UNDEFINED, optionalObject=Component.UNDEFINED, optionalString=Component.UNDEFINED, optionalSymbol=Component.UNDEFINED, optionalNode=Component.UNDEFINED, optionalElement=Component.UNDEFINED, optionalMessage=Component.UNDEFINED, optionalEnum=Component.UNDEFINED, optionalUnion=Component.UNDEFINED, optionalArrayOf=Component.UNDEFINED, optionalObjectOf=Component.UNDEFINED, optionalObjectWithExactAndNestedDescription=Component.UNDEFINED, optionalObjectWithShapeAndNestedDescription=Component.UNDEFINED, optionalAny=Component.UNDEFINED, customProp=Component.UNDEFINED, customArrayProp=Component.UNDEFINED, id=Component.UNDEFINED, **kwargs):"]]}, "optionalNode": {"<Component>": [[48, "    def __init__(self, children=None, optionalArray=Component.UNDEFINED, optionalBool=Component.UNDEFINED, optionalFunc=Component.UNDEFINED, optionalNumber=Component.UNDEFINED, optionalObject=Component.UNDEFINED, optionalString=Component.UNDEFINED, optionalSymbol=Component.UNDEFINED, optionalNode=Component.UNDEFINED, optionalElement=Component.UNDEFINED, optionalMessage=Component.UNDEFINED, optionalEnum=Component.UNDEFINED, optionalUnion=Component.UNDEFINED, optionalArrayOf=Component.UNDEFINED, optionalObjectOf=Component.UNDEFINED, optionalObjectWithExactAndNestedDescription=Component.UNDEFINED, optionalObjectWithShapeAndNestedDescription=Component.UNDEFINED, optionalAny=Component.UNDEFINED, customProp=Component.UNDEFINED, customArrayProp=Component.UNDEFINED, id=Component.UNDEFINED, **kwargs):"]]}, "optionalObjectOf": {"<Component>": [[48, "    def __init__(self, children=None, optionalArray=Component.UNDEFINED, optionalBool=Component.UNDEFINED, optionalFunc=Component.UNDEFINED, optionalNumber=Component.UNDEFINED, optionalObject=Component.UNDEFINED, optionalString=Component.UNDEFINED, optionalSymbol=Component.UNDEFINED, optionalNode=Component.UNDEFINED, optionalElement=Component.UNDEFINED, optionalMessage=Component.UNDEFINED, optionalEnum=Component.UNDEFINED, optionalUnion=Component.UNDEFINED, optionalArrayOf=Component.UNDEFINED, optionalObjectOf=Component.UNDEFINED, optionalObjectWithExactAndNestedDescription=Component.UNDEFINED, optionalObjectWithShapeAndNestedDescription=Component.UNDEFINED, optionalAny=Component.UNDEFINED, customProp=Component.UNDEFINED, customArrayProp=Component.UNDEFINED, id=Component.UNDEFINED, **kwargs):"]]}, "optionalEnum": {"<Component>": [[48, "    def __init__(self, children=None, optionalArray=Component.UNDEFINED, optionalBool=Component.UNDEFINED, optionalFunc=Component.UNDEFINED, optionalNumber=Component.UNDEFINED, optionalObject=Component.UNDEFINED, optionalString=Component.UNDEFINED, optionalSymbol=Component.UNDEFINED, optionalNode=Component.UNDEFINED, optionalElement=Component.UNDEFINED, optionalMessage=Component.UNDEFINED, optionalEnum=Component.UNDEFINED, optionalUnion=Component.UNDEFINED, optionalArrayOf=Component.UNDEFINED, optionalObjectOf=Component.UNDEFINED, optionalObjectWithExactAndNestedDescription=Component.UNDEFINED, optionalObjectWithShapeAndNestedDescription=Component.UNDEFINED, optionalAny=Component.UNDEFINED, customProp=Component.UNDEFINED, customArrayProp=Component.UNDEFINED, id=Component.UNDEFINED, **kwargs):"]]}, "optionalArrayOf": {"_UNDEFINED": [[48, "    def __init__(self, children=None, optionalArray=Component.UNDEFINED, optionalBool=Component.UNDEFINED, optionalFunc=Component.UNDEFINED, optionalNumber=Component.UNDEFINED, optionalObject=Component.UNDEFINED, optionalString=Component.UNDEFINED, optionalSymbol=Component.UNDEFINED, optionalNode=Component.UNDEFINED, optionalElement=Component.UNDEFINED, optionalMessage=Component.UNDEFINED, optionalEnum=Component.UNDEFINED, optionalUnion=Component.UNDEFINED, optionalArrayOf=Component.UNDEFINED, optionalObjectOf=Component.UNDEFINED, optionalObjectWithExactAndNestedDescription=Component.UNDEFINED, optionalObjectWithShapeAndNestedDescription=Component.UNDEFINED, optionalAny=Component.UNDEFINED, customProp=Component.UNDEFINED, customArrayProp=Component.UNDEFINED, id=Component.UNDEFINED, **kwargs):"]]}, "optionalUnion": {"_UNDEFINED": [[48, "    def __init__(self, children=None, optionalArray=Component.UNDEFINED, optionalBool=Component.UNDEFINED, optionalFunc=Component.UNDEFINED, optionalNumber=Component.UNDEFINED, optionalObject=Component.UNDEFINED, optionalString=Component.UNDEFINED, optionalSymbol=Component.UNDEFINED, optionalNode=Component.UNDEFINED, optionalElement=Component.UNDEFINED, optionalMessage=Component.UNDEFINED, optionalEnum=Component.UNDEFINED, optionalUnion=Component.UNDEFINED, optionalArrayOf=Component.UNDEFINED, optionalObjectOf=Component.UNDEFINED, optionalObjectWithExactAndNestedDescription=Component.UNDEFINED, optionalObjectWithShapeAndNestedDescription=Component.UNDEFINED, optionalAny=Component.UNDEFINED, customProp=Component.UNDEFINED, customArrayProp=Component.UNDEFINED, id=Component.UNDEFINED, **kwargs):"]]}, "optionalObjectWithExactAndNestedDescription": {"_UNDEFINED": [[48, "    def __init__(self, children=None, optionalArray=Component.UNDEFINED, optionalBool=Component.UNDEFINED, optionalFunc=Component.UNDEFINED, optionalNumber=Component.UNDEFINED, optionalObject=Component.UNDEFINED, optionalString=Component.UNDEFINED, optionalSymbol=Component.UNDEFINED, optionalNode=Component.UNDEFINED, optionalElement=Component.UNDEFINED, optionalMessage=Component.UNDEFINED, optionalEnum=Component.UNDEFINED, optionalUnion=Component.UNDEFINED, optionalArrayOf=Component.UNDEFINED, optionalObjectOf=Component.UNDEFINED, optionalObjectWithExactAndNestedDescription=Component.UNDEFINED, optionalObjectWithShapeAndNestedDescription=Component.UNDEFINED, optionalAny=Component.UNDEFINED, customProp=Component.UNDEFINED, customArrayProp=Component.UNDEFINED, id=Component.UNDEFINED, **kwargs):"]]}, "optionalAny": {"<Component>": [[48, "    def __init__(self, children=None, optionalArray=Component.UNDEFINED, optionalBool=Component.UNDEFINED, optionalFunc=Component.UNDEFINED, optionalNumber=Component.UNDEFINED, optionalObject=Component.UNDEFINED, optionalString=Component.UNDEFINED, optionalSymbol=Component.UNDEFINED, optionalNode=Component.UNDEFINED, optionalElement=Component.UNDEFINED, optionalMessage=Component.UNDEFINED, optionalEnum=Component.UNDEFINED, optionalUnion=Component.UNDEFINED, optionalArrayOf=Component.UNDEFINED, optionalObjectOf=Component.UNDEFINED, optionalObjectWithExactAndNestedDescription=Component.UNDEFINED, optionalObjectWithShapeAndNestedDescription=Component.UNDEFINED, optionalAny=Component.UNDEFINED, customProp=Component.UNDEFINED, customArrayProp=Component.UNDEFINED, id=Component.UNDEFINED, **kwargs):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.metadata_test.Table.__init": {"var": {"_locals": {"dict": [[57, "        _locals = locals()"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/dash/development/_py_components_generation.py": {".home.xxm.Desktop.EMSE.dataset.dash.dash.development._py_comp": {"func": {"create_docstring": {"(?, ?, ?) -> str / (?, None, ?) -> str / (str, ?, ?) -> str / (str, None, ?) -> str": [[207, "def create_docstring(component_name, props, description):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._py_components_generation.prohibit_event": {"param": {"props": {"?": [[250, "def prohibit_events(props):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._py_components_generation.map_js_to_py_types_prop_types": {"param": {"type_object": {"?": [[463, "def map_js_to_py_types_prop_types(type_object):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._py_components_generation.map_js_to_py_types_prop_types.lambda%92": {"param": {"t": {"?": [[496, "        ),"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._py_components_generation.create_prop_docstr": {"var": {"indent_spacing": {"str": [[425, "    indent_spacing = \"  \" * indent_num"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._py_components_generation.create_docstring": {"var": {"props": {"None": [[225, "    props = reorder_props(props=props)"]]}}, "param": {"prop": {"?": [[250, "def prohibit_events(props):"]]}, "props": {"None": [[207, "def create_docstring(component_name, props, description):"]]}, "description": {"?": [[207, "def create_docstring(component_name, props, description):"]]}, "component_name": {"str": [[207, "def create_docstring(component_name, props, description):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._py_components_generation.generate_class_file": {"var": {"import_string": {"str": [[126, "    import_string = ("]]}, "class_string": {"str": [[131, "    class_string = generate_class_string(typename, props, description, namespace)"]]}}, "param": {"props": {"[?]": [[113, "def generate_class_file(typename, props, description, namespace):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._py_components_generation.generate_class_fil": {"param": {"typename": {"str": [[113, "def generate_class_file(typename, props, description, namespace):"]]}, "namespace": {"str": [[113, "def generate_class_file(typename, props, description, namespace):"]]}, "description": {"(str, ?, ?, str) -> None / (?, ?, ?, ?) -> None / (?, ?, ?, str) -> None": [[113, "def generate_class_file(typename, props, description, namespace):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._py_components_generatio": {"func": {"generate_class_file": {"(str, ?, ?, str) -> None / (?, ?, ?, ?) -> None / (?, ?, ?, str) -> None": [[113, "def generate_class_file(typename, props, description, namespace):"]]}, "generate_class_string": {"(str, ?, ?, str) -> str / (?, ?, ?, ?) -> str / (?, ?, ?, str) -> str": [[12, "def generate_class_string(typename, props, description, namespace):"]]}, "generate_class": {"(str, ?, ?, str) -> {<Component> | ? -> () -> None} / (?, ?, ?, ?) -> {<Component> | ? -> () -> None} / (?, ?, ?, str) -> {<Component> | ? -> () -> None}": [[171, "def generate_class(typename, props, description, namespace):"]]}, "generate_classes_files": {"(str, None) -> [?] / (?, [?]) -> [?] / (?, None) -> [?]": [[154, "def generate_classes_files(project_shortname, metadata, *component_generators):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._py_components_generation.map_js_to_py_types_prop_ty": {"func": {"shape_or_exact": {"() -> str": [[466, "    def shape_or_exact():"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._py_components_generation.generate_cl": {"param": {"namespace": {"str": [[171, "def generate_class(typename, props, description, namespace):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._py_components_generation.reorder_": {"var": {"props": {"?": [[308, "        props = OrderedDict([(\"children\", \"\")] + list(props.items()))"]]}}, "param": {"props": {"None": [[290, "def reorder_props(props):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._py_components_generation.generate_class_strin": {"var": {"default_argtext": {"str": [[82, "        default_argtext = \"children=None, \""], [85, "        default_argtext = \"\""]]}, "required_args": {"[?]": [[99, "    required_args = required_props(props)"]]}, "argtext": {"str": [[83, "        argtext = \"children=children, **args\""], [86, "        argtext = \"**args\""]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._py_components_generation.j": {"param": {"is_flow_type": {"?": [[579, "def js_to_py_type(type_object, is_flow_type=False, indent_num=0):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._py_components_generation.generate_i": {"param": {"project_shortname": {"str": [[142, "def generate_imports(project_shortname, components):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._py_com": {"func": {"create_prop_docstring": {"(?, ?, ?, ?, ?, ?, bool) -> str / (?, ?, ?, ?, ?, int, bool) -> str": [[386, "def create_prop_docstring("]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._py_components_generation.generate_classes_fil": {"var": {"components": {"[?]": [[155, "    components = []"]]}}, "param": {"project_shortname": {"str": [[154, "def generate_classes_files(project_shortname, metadata, *component_generators):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._py_components_generation.generate_classes_files": {"var": {"component_path": {"?": [[156, "    for component_path, component_data in metadata.items():"]]}, "generator": {"(str, ?, ?, str) -> None / (?, ?, ?, ?) -> None / (?, ?, ?, str) -> None": [[160, "        for generator in component_generators:"]]}, "component_name": {"?": [[157, "        component_name = component_path.split(\"/\")[-1].split(\".\")[0]"]]}}, "param": {"metadata": {"{None | [?]}": [[154, "def generate_classes_files(project_shortname, metadata, *component_generators):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._py_components_generation.generate_class": {"var": {"file_name": {"str": [[132, "    file_name = \"{:s}.py\".format(typename)"]]}, "file_path": {"str": [[134, "    file_path = os.path.join(namespace, file_name)"]]}}, "param": {"typename": {"str": [[171, "def generate_class(typename, props, description, namespace):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._py_components_generation.generate_cla": {"var": {"scope": {"dict": [[185, "    scope = {\"Component\": Component, \"_explicitize_args\": _explicitize_args}"]]}, "string": {"str": [[184, "    string = generate_class_string(typename, props, description, namespace)"]]}, "result": {"{<Component> | ? -> () -> None}": [[188, "    result = scope[typename]"]]}}, "param": {"description": {"?": [[171, "def generate_class(typename, props, description, namespace):"]]}, "props": {"?": [[171, "def generate_class(typename, props, description, namespace):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._py_components_generation.map_js_to_py_types_prop_types.shape_or_exact": {"param": {"prop": {"?": [[496, "        ),"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._py_components_generation.filter_": {"param": {"props": {"None": [[313, "def filter_props(props):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._py_components_generation.generate_impor": {"param": {"components": {"[?]": [[142, "def generate_imports(project_shortname, components):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._py_components_generation.map_js_to_py_types_flow_types": {"param": {"type_object": {"?": [[529, "def map_js_to_py_types_flow_types(type_object):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._py_components_generation": {"var": {"filtered_props": {"?": [[359, "    filtered_props = copy.deepcopy(props)"]]}, "js_to_py_types": {"dict": [[597, "    js_to_py_types = ("]]}, "list_of_valid_wildcard_attr_prefixes": {"[str]": [[283, "    list_of_valid_wildcard_attr_prefixes = []"]]}}, "param": {"js_to_py_type": {"?": [[579, "def js_to_py_type(type_object, is_flow_type=False, indent_num=0):"]]}}, "func": {"reorder_props": {"None -> None / ? -> None": [[290, "def reorder_props(props):"]]}, "filter_props": {"? -> None / None -> None": [[313, "def filter_props(props):"]]}, "parse_wildcards": {"? -> [str]": [[270, "def parse_wildcards(props):"]]}, "required_props": {"? -> [?]": [[192, "def required_props(props):"]]}, "js_to_py_type": {"(?, bool, int) -> str": [[579, "def js_to_py_type(type_object, is_flow_type=False, indent_num=0):"]]}, "map_js_to_py_types_flow_types": {"? -> dict": [[529, "def map_js_to_py_types_flow_types(type_object):"]]}, "map_js_to_py_types_prop_types": {"? -> dict": [[463, "def map_js_to_py_types_prop_types(type_object):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._py_components_generation.parse_wildcard": {"param": {"props": {"?": [[270, "def parse_wildcards(props):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._py_components_generation.generate": {"var": {"imports_string": {"str": [[144, "        imports_string = \"{}\\n\\n{}\".format("]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._py_components_generation.parse_wildcards": {"var": {"wildcard_attr": {"str": [[284, "    for wildcard_attr in [\"data-*\", \"aria-*\"]:"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._py_components_genera": {"param": {"prohibit_events": {"?": [[250, "def prohibit_events(props):"]]}}, "func": {"prohibit_events": {"? -> None": [[250, "def prohibit_events(props):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._py_components_generation.required_": {"param": {"props": {"?": [[192, "def required_props(props):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._py_components_generation.create_prop_docstring": {"var": {"prop_name": {"?": [[387, "    prop_name,"]]}, "type_object": {"?": [[388, "    type_object,"]]}, "is_flow_type": {"bool": [[393, "    is_flow_type=False,"]]}, "default": {"str": [[428, "        default = \"\""], [433, "        default = default.title()"]], "?": [[391, "    default,"], [430, "        default = default[\"value\"]"]]}, "indent_num": {"int": [[392, "    indent_num,"]]}, "required": {"?": [[389, "    required,"]]}, "py_type_name": {"str": [[422, "    py_type_name = js_to_py_type("]]}, "is_required": {"str": [[435, "    is_required = \"optional\""], [437, "        is_required = \"required\""], [439, "        is_required = \"default {}\".format(default.replace(\"\\n\", \"\\n\" + indent_spacing))"]]}, "description": {"?": [[390, "    description,"]]}}, "param": {"prop_name": {"?": [[394, "):"]]}, "type_object": {"?": [[394, "):"]]}, "is_flow_type": {"bool": [[394, "):"]]}, "default": {"?": [[394, "):"]]}, "indent_num": {"int": [[394, "):"]]}, "required": {"?": [[394, "):"]]}, "description": {"?": [[394, "):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._py_components_generation.generate_class_": {"var": {"docstring": {"str": [[72, "    docstring = create_docstring("]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._py_components_generation.generate_class_string": {"var": {"filtered_props": {"None": [[69, "    filtered_props = reorder_props(filter_props(props))"]]}, "wildcard_prefixes": {"str": [[70, "    wildcard_prefixes = repr(parse_wildcards(props))"]]}, "c": {"str": [[44, "    c = '''class {typename}(Component):"]]}, "prop_keys": {"list": [[79, "    prop_keys = list(props.keys())"]]}, "list_of_valid_keys": {"str": [[71, "    list_of_valid_keys = repr(list(map(str, filtered_props.keys())))"]]}}, "param": {"typename": {"str": [[12, "def generate_class_string(typename, props, description, namespace):"]]}, "namespace": {"str": [[12, "def generate_class_string(typename, props, description, namespace):"]]}, "description": {"?": [[12, "def generate_class_string(typename, props, description, namespace):"]]}, "props": {"?": [[12, "def generate_class_string(typename, props, description, namespace):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._py_components_generation.js_to": {"var": {"js_type_name": {"?": [[596, "    js_type_name = type_object[\"name\"]"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._py_components_generation.js": {"param": {"type_object": {"?": [[579, "def js_to_py_type(type_object, is_flow_type=False, indent_num=0):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._py_components_generation.filter_props": {"var": {"arg_type": {"?": [[369, "            arg_type = arg[\"type\"][\"name\"]"]]}, "arg_type_name": {"?": [[373, "            arg_type_name = arg[\"flowType\"][\"name\"]"]]}, "arg_name": {"?": [[361, "    for arg_name, arg in list(filtered_props.items()):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._py_c": {"func": {"generate_imports": {"(str, [?]) -> None / (?, [?]) -> None": [[142, "def generate_imports(project_shortname, components):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._py_components_generation.js_to_py_typ": {"param": {"indent_num": {"?": [[579, "def js_to_py_type(type_object, is_flow_type=False, indent_num=0):"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/dash/testing/composite.py": {".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.composite.DashComposite": {"func": {"__init__": {"? -> ?": [[5, "    def __init__(self, server, **kwargs):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.composite.DashRComposite": {"func": {"__init__": {"? -> ?": [[20, "    def __init__(self, server, **kwargs):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.composite.DashJuliaComposite": {"func": {"__init__": {"? -> ?": [[35, "    def __init__(self, server, **kwargs):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.composite.DashJuliaComposite.__init__": {"param": {"self": {"DashJuliaComposite": [[35, "    def __init__(self, server, **kwargs):"]]}, "server": {"?": [[35, "    def __init__(self, server, **kwargs):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.composite.DashJuliaComposite.start_server": {"param": {"self": {"DashJuliaComposite": [[39, "    def start_server(self, app, cwd=None):"]]}, "app": {"?": [[39, "    def start_server(self, app, cwd=None):"]]}, "cwd": {"None": [[39, "    def start_server(self, app, cwd=None):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.composite.DashRComposite.start_server": {"param": {"self": {"DashRComposite": [[24, "    def start_server(self, app, cwd=None):"]]}, "app": {"?": [[24, "    def start_server(self, app, cwd=None):"]]}, "cwd": {"None": [[24, "    def start_server(self, app, cwd=None):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.composite.DashComposite.start_server": {"param": {"self": {"DashComposite": [[9, "    def start_server(self, app, **kwargs):"]]}, "app": {"?": [[9, "    def start_server(self, app, **kwargs):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.c": {"class": {"DashComposite": {"<DashComposite>": [[4, "class DashComposite(Browser):"]]}, "DashRComposite": {"<DashRComposite>": [[19, "class DashRComposite(Browser):"]]}, "DashJuliaComposite": {"<DashJuliaComposite>": [[34, "class DashJuliaComposite(Browser):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.composite.DashRComposite.__init__": {"param": {"self": {"DashRComposite": [[20, "    def __init__(self, server, **kwargs):"]]}, "server": {"?": [[20, "    def __init__(self, server, **kwargs):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.composite.DashComposite.__init__": {"param": {"self": {"DashComposite": [[5, "    def __init__(self, server, **kwargs):"]]}, "server": {"?": [[5, "    def __init__(self, server, **kwargs):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.composite.DashJuliaComposi": {"func": {"start_server": {"(DashJuliaComposite, ?, None) -> None": [[39, "    def start_server(self, app, cwd=None):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.composite.DashRComposi": {"func": {"start_server": {"(DashRComposite, ?, None) -> None": [[24, "    def start_server(self, app, cwd=None):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.composite.DashComposi": {"func": {"start_server": {"(DashComposite, ?) -> None": [[9, "    def start_server(self, app, **kwargs):"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/tests/integration/clientside/test_clientside.py": {".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.clientside.test_clientside.test_clsd001_simple_clientside_serverside_callback": {"var": {"app": {"Dash": [[12, "    app = Dash(__name__, assets_folder=\"assets\")"]]}}, "param": {"dash_duo": {"?": [[11, "def test_clsd001_simple_clientside_serverside_callback(dash_duo):"]]}}, "func": {"update_output": {"? -> str": [[23, "    def update_output(value):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.clientside.test_clientside.test_clsd012_clientside_callback_context_state": {"param": {"dash_duo": {"?": [[550, "def test_clsd012_clientside_callback_context_states(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.clientside.test_clientside.test_clsd011_clientside_callback_context_inputs_list": {"var": {"app": {"Dash": [[482, "    app = Dash(__name__, assets_folder=\"assets\")"]]}}, "param": {"dash_duo": {"?": [[481, "def test_clsd011_clientside_callback_context_inputs_list(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.clientside.test_clientside.test_clsd002_chained_serverside_clientside_callbacks": {"var": {"app": {"Dash": [[43, "    app = Dash(__name__, assets_folder=\"assets\")"]]}, "x_input": {"?": [[123, "    x_input = dash_duo.wait_for_element_by_css_selector(\"#x\")"]]}}, "func": {"divide_by_two": {"? -> float": [[79, "    def divide_by_two(value):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.clientside.test_clientside.test_clsd004_clientside_multiple_output": {"param": {"dash_duo": {"?": [[182, "def test_clsd004_clientside_multiple_outputs(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.clientside.test_clientside.test_clsd003_clientside_exceptions_halt_subsequent_update": {"var": {"first_input": {"?": [[166, "    first_input = dash_duo.wait_for_element(\"#first\")"]]}}, "param": {"dash_duo": {"?": [[141, "def test_clsd003_clientside_exceptions_halt_subsequent_updates(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.clientside.test_clientside.test_clsd006_PreventUpdate": {"var": {"app": {"Dash": [[254, "    app = Dash(__name__, assets_folder=\"assets\")"]]}}, "param": {"dash_duo": {"?": [[253, "def test_clsd006_PreventUpdate(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.clientside.test_clientside.test_clsd004_clientside_multiple_outputs": {"var": {"app": {"Dash": [[183, "    app = Dash(__name__, assets_folder=\"assets\")"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.clientside.test_clientside.test_clsd004_clientside_multiple_outpu": {"var": {"selector": {"str": [[208, "    for selector, expected in ["], [219, "    for selector, expected in ["]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.clientside.test_clientside.test_clsd003_clientside_exceptions_halt_subsequent_upda": {"var": {"selector": {"str": [[163, "    for selector, expected in test_cases:"], [170, "    for selector, expected in test_cases:"], [178, "    for selector, expected in test_cases:"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.clientside.test_clientside.test_clsd007_no_update": {"var": {"app": {"Dash": [[298, "    app = Dash(__name__, assets_folder=\"assets\")"]]}}, "param": {"dash_duo": {"?": [[297, "def test_clsd007_no_update(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integra": {"func": {"test_clsd008_clientside_inline_source": {"? -> None": [[336, "def test_clsd008_clientside_inline_source(dash_duo):"]]}, "test_clsd004_clientside_multiple_outputs": {"? -> None": [[182, "def test_clsd004_clientside_multiple_outputs(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.clientside.test_clientside.test_clsd013_clientside_callback_context_states_list": {"var": {"app": {"Dash": [[620, "    app = Dash(__name__, assets_folder=\"assets\")"]]}}, "param": {"dash_duo": {"?": [[619, "def test_clsd013_clientside_callback_context_states_list(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.clientside.test_clientside.test_clsd008_clientside_inline_sourc": {"func": {"update_output": {"? -> str": [[348, "    def update_output(value):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.clientside.test_clientside.test_clsd001_simple_clientside_serverside_callback.update_output": {"param": {"value": {"?": [[23, "    def update_output(value):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.clientside.test_clientside.test_clsd008_clientside_inline_source": {"var": {"app": {"Dash": [[337, "    app = Dash(__name__, assets_folder=\"assets\")"]]}}, "param": {"dash_duo": {"?": [[336, "def test_clsd008_clientside_inline_source(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.clientside.test_clientside.test_clsd002_chained_serverside_clientside_callback": {"var": {"test_cases": {"[[str]]": [[109, "    test_cases = ["], [126, "    test_cases = ["]]}, "call_counts": {"dict": [[76, "    call_counts = {\"divide\": Value(\"i\", 0), \"display\": Value(\"i\", 0)}"]]}, "selector": {"str": [[117, "    for selector, expected in test_cases:"], [134, "    for selector, expected in test_cases:"]]}}, "param": {"dash_duo": {"?": [[42, "def test_clsd002_chained_serverside_clientside_callbacks(dash_duo):"]]}}, "func": {"display_all": {"() -> str": [[92, "    def display_all(*args):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.clientside.test_clientside.test_clsd010_clientside_callback_context_inputs": {"var": {"app": {"Dash": [[413, "    app = Dash(__name__, assets_folder=\"assets\")"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.clientside.test_clientsi": {"func": {"test_clsd006_PreventUpdate": {"? -> None": [[253, "def test_clsd006_PreventUpdate(dash_duo):"]]}, "test_clsd007_no_update": {"? -> None": [[297, "def test_clsd007_no_update(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.clientside.test_clientside.test_clsd010_clientside_callback_context_input": {"param": {"dash_duo": {"?": [[412, "def test_clsd010_clientside_callback_context_inputs(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.clientside.test_clientside.test_clsd012_clientside_callback_context_states": {"var": {"app": {"Dash": [[551, "    app = Dash(__name__, assets_folder=\"assets\")"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash": {"func": {"test_clsd009_clientside_callback_context_triggered": {"? -> None": [[371, "def test_clsd009_clientside_callback_context_triggered(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integr": {"func": {"test_clsd013_clientside_callback_context_states_list": {"? -> None": [[619, "def test_clsd013_clientside_callback_context_states_list(dash_duo):"]]}, "test_clsd012_clientside_callback_context_states": {"? -> None": [[550, "def test_clsd012_clientside_callback_context_states(dash_duo):"]]}, "test_clsd010_clientside_callback_context_inputs": {"? -> None": [[412, "def test_clsd010_clientside_callback_context_inputs(dash_duo):"]]}, "test_clsd003_clientside_exceptions_halt_subsequent_updates": {"? -> None": [[141, "def test_clsd003_clientside_exceptions_halt_subsequent_updates(dash_duo):"]]}, "test_clsd011_clientside_callback_context_inputs_list": {"? -> None": [[481, "def test_clsd011_clientside_callback_context_inputs_list(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.clientside.test_clientside.test_clsd002_chained_serverside_clientside_callbacks.divide_by_two": {"param": {"value": {"?": [[79, "    def divide_by_two(value):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.clientside.test_clientside.test_clsd009_clientside_callback_context_triggered": {"var": {"app": {"Dash": [[372, "    app = Dash(__name__, assets_folder=\"assets\")"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.clientside.test_clientside.test_clsd009_clientside_callback_context_triggere": {"param": {"dash_duo": {"?": [[371, "def test_clsd009_clientside_callback_context_triggered(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integratio": {"func": {"test_clsd001_simple_clientside_serverside_callback": {"? -> None": [[11, "def test_clsd001_simple_clientside_serverside_callback(dash_duo):"]]}, "test_clsd002_chained_serverside_clientside_callbacks": {"? -> None": [[42, "def test_clsd002_chained_serverside_clientside_callbacks(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.clientside.test_clientside.test_clsd008_clientside_inline_source.update_output": {"param": {"value": {"?": [[348, "    def update_output(value):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.clientside.test_clientside.test_clsd003_clientside_exceptions_halt_subsequent_updates": {"var": {"app": {"Dash": [[142, "    app = Dash(__name__, assets_folder=\"assets\")"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.clientside.test_clientside.test_clsd005_clientside_fails_when_returning_a_promise": {"var": {"app": {"Dash": [[230, "    app = Dash(__name__, assets_folder=\"assets\")"]]}}, "param": {"dash_duo": {"?": [[229, "def test_clsd005_clientside_fails_when_returning_a_promise(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.clientside.test_clientside.test_clsd003_clientside_exceptions_halt_subsequent_upd": {"var": {"test_cases": {"[[str]]": [[162, "    test_cases = [[\"#first\", \"1\"], [\"#second\", \"2\"], [\"#third\", \"3\"]]"], [169, "    test_cases = [[\"#first\", \"11\"], [\"#second\", \"2\"], [\"#third\", \"3\"]]"], [177, "    test_cases = [[\"#first\", \"111\"], [\"#second\", \"112\"], [\"#third\", \"113\"]]"]]}}}, ".home.xxm.Desktop.EMSE": {"func": {"test_clsd005_clientside_fails_when_returning_a_promise": {"? -> None": [[229, "def test_clsd005_clientside_fails_when_returning_a_promise(dash_duo):"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/dash/resources.py": {".home.xxm.Desktop.EMSE.dataset.dash.dash.resources.Scripts": {"func": {"__init__": {"? -> ?": [[109, "    def __init__(self, serve_locally, eager):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.resources.Css.append_c": {"param": {"self": {"Css": [[101, "    def append_css(self, stylesheet):"]]}, "stylesheet": {"dict": [[101, "    def append_css(self, stylesheet):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.resources._Config.__init": {"param": {"eager_loading": {"bool": [[91, "    def __init__(self, serve_locally, eager_loading):"]]}, "serve_locally": {"bool": [[91, "    def __init__(self, serve_locally, eager_loading):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.resources.Scripts.append_": {"param": {"script": {"dict": [[113, "    def append_script(self, script):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.resources._Config": {"func": {"__init__": {"? -> ?": [[91, "    def __init__(self, serve_locally, eager_loading):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.resources.Resources.append_resourc": {"param": {"self": {"Resources": [[14, "    def append_resource(self, resource):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.resources.Scripts.__init": {"param": {"serve_locally": {"bool": [[109, "    def __init__(self, serve_locally, eager):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.resources.C": {"func": {"append_css": {"(Css, ?) -> None / (Css, dict) -> None": [[101, "    def append_css(self, stylesheet):"]]}, "get_all_css": {"Css -> [dict]": [[104, "    def get_all_css(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.resources.Resources._filter_resourc": {"param": {"dev_bundles": {"bool": [[18, "    def _filter_resources(self, all_resources, dev_bundles=False):"]]}, "self": {"Resources": [[18, "    def _filter_resources(self, all_resources, dev_bundles=False):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.resources.Resources._filter_resources": {"var": {"info": {"[int]": [[55, "                info = os.stat(s[\"filepath\"])"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.resources.Resources.get_a": {"var": {"lib_resources": {"[?]": [[83, "        lib_resources = ComponentRegistry.get_resources(self.resource_name)"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.resources._Config.__init__": {"param": {"self": {"_Config": [[91, "    def __init__(self, serve_locally, eager_loading):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.resources.S": {"func": {"append_script": {"(Scripts, dict) -> None / (Scripts, ?) -> None": [[113, "    def append_script(self, script):"]]}, "get_all_scripts": {"(Scripts, bool) -> [dict]": [[116, "    def get_all_scripts(self, dev_bundles=False):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.resources.R": {"var": {"filtered_resources": {"{[dict] | [dict]}": [[19, "        filtered_resources = []"]]}, "filtered_resource": {"{dict | dict}": [[21, "            filtered_resource = {}"]]}}, "func": {"append_resource": {"(Resources, dict) -> None / (Resources, ?) -> None": [[14, "    def append_resource(self, resource):"]]}, "_filter_resources": {"(Resources, ?, bool) -> [dict] / (Resources, [?], bool) -> [dict] / (Resources, [{dict | dict}], bool) -> [dict] / (Resources, [dict], bool) -> [dict]": [[18, "    def _filter_resources(self, all_resources, dev_bundles=False):"]]}, "get_all_resources": {"(Resources, bool) -> [dict]": [[82, "    def get_all_resources(self, dev_bundles=False):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.resources.Resources.append_": {"param": {"resource": {"dict": [[14, "    def append_resource(self, resource):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.resources.Resources._filt": {"param": {"all_resources": {"{[?] | [dict] | [{dict | dict}]}": [[18, "    def _filter_resources(self, all_resources, dev_bundles=False):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.resources.Resources.get_all_resourc": {"param": {"dev_bundles": {"bool": [[82, "    def get_all_resources(self, dev_bundles=False):"]]}, "self": {"Resources": [[82, "    def get_all_resources(self, dev_bundles=False):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.resources.Resources._filter_resource": {"var": {"s": {"{dict | dict | dict}": [[20, "        for s in all_resources:"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.resources.Scripts.get_all_script": {"param": {"dev_bundles": {"bool": [[116, "    def get_all_scripts(self, dev_bundles=False):"]]}, "self": {"Scripts": [[116, "    def get_all_scripts(self, dev_bundles=False):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.resources.Resources.__init__": {"param": {"self": {"Resources": [[10, "    def __init__(self, resource_name):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.resources.Css.get_all_c": {"param": {"self": {"Css": [[104, "    def get_all_css(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.resources.Scripts.append_script": {"param": {"self": {"Scripts": [[113, "    def append_script(self, script):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.resources.Resources.__init": {"param": {"resource_name": {"str": [[10, "    def __init__(self, resource_name):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash": {"class": {"Resources": {"<Resources>": [[9, "class Resources:"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.resources.Scripts.__init__": {"param": {"eager": {"bool": [[109, "    def __init__(self, serve_locally, eager):"]]}, "self": {"Scripts": [[109, "    def __init__(self, serve_locally, eager):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.resources.Resources": {"func": {"__init__": {"? -> ?": [[10, "    def __init__(self, resource_name):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.resource": {"class": {"Css": {"<Css>": [[96, "class Css:"]]}, "Scripts": {"<Scripts>": [[108, "class Scripts:"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.resources.Css.__init": {"param": {"serve_locally": {"bool": [[97, "    def __init__(self, serve_locally):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.resources.Css": {"func": {"__init__": {"? -> ?": [[97, "    def __init__(self, serve_locally):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.resources.Resources.get": {"var": {"all_resources": {"[?]": [[84, "        all_resources = lib_resources + self._resources"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.resources": {"class": {"_Config": {"<_Config>": [[90, "class _Config:"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.resources.Css.__init__": {"param": {"self": {"Css": [[97, "    def __init__(self, serve_locally):"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/dash/testing/plugin.py": {".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.plugin.dashjl": {"param": {"request": {"?": [[174, "def dashjl(request, dashjl_server, tmpdir):"]]}, "tmpdir": {"?": [[174, "def dashjl(request, dashjl_server, tmpdir):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.plugin.pytest_runtest_makereport": {"var": {"rep": {"?": [[80, "    rep = outcome.get_result()"]]}, "name": {"?": [[84, "        for name, fixture in item.funcargs.items():"]]}}, "param": {"call": {"?": [[77, "def pytest_runtest_makereport(item, call):  # pylint: disable=unused-argument"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.plugin.pytest_addhooks": {"var": {"method": {"?": [[70, "    method = getattr(pluginmanager, \"add_hookspecs\", None)"], [72, "        method = pluginmanager.addhooks  # pragma: no cover"]]}}, "param": {"pluginmanager": {"?": [[65, "def pytest_addhooks(pluginmanager):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.plugin.dash_b": {"param": {"request": {"?": [[124, "def dash_br(request, tmpdir):"]]}, "tmpdir": {"?": [[124, "def dash_br(request, tmpdir):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.plug": {"func": {"pytest_addoption": {"? -> None": [[19, "def pytest_addoption(parser):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.plugi": {"func": {"pytest_runtest_makereport": {"(?, ?) -> ?": [[77, "def pytest_runtest_makereport(item, call):  # pylint: disable=unused-argument"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.plugin.dash_duo": {"param": {"dash_thread_server": {"?": [[140, "def dash_duo(request, dash_thread_server, tmpdir):"]]}, "request": {"?": [[140, "def dash_duo(request, dash_thread_server, tmpdir):"]]}, "tmpdir": {"?": [[140, "def dash_duo(request, dash_thread_server, tmpdir):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.plugin": {"param": {"dashr_server": {"?": [[157, "def dashr(request, dashr_server, tmpdir):"]]}, "dashjl_server": {"?": [[174, "def dashjl(request, dashjl_server, tmpdir):"]]}}, "func": {"pytest_addhooks": {"? -> None": [[65, "def pytest_addhooks(pluginmanager):"]]}, "dashr_server": {"() -> None": [[112, "def dashr_server():"]]}, "dashr": {"(?, ?, ?) -> None": [[157, "def dashr(request, dashr_server, tmpdir):"]]}, "dashjl_server": {"() -> None": [[118, "def dashjl_server():"]]}, "dashjl": {"(?, ?, ?) -> None": [[174, "def dashjl(request, dashjl_server, tmpdir):"]]}, "dash_process_server": {"() -> None": [[105, "def dash_process_server():"]]}, "dash_duo": {"(?, ?, ?) -> None": [[140, "def dash_duo(request, dash_thread_server, tmpdir):"]]}, "dash_br": {"(?, ?) -> None": [[124, "def dash_br(request, tmpdir):"]]}, "dash_thread_server": {"() -> None": [[98, "def dash_thread_server():"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.plugin.dash": {"param": {"request": {"?": [[157, "def dashr(request, dashr_server, tmpdir):"]]}, "tmpdir": {"?": [[157, "def dashr(request, dashr_server, tmpdir):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.plugin.pytest_addoption": {"var": {"dash": {"?": [[20, "    dash = parser.getgroup(\"Dash\", \"Dash Integration Tests\")"]]}}, "param": {"parser": {"?": [[19, "def pytest_addoption(parser):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.plugin.pytest_runtest_makerepor": {"var": {"outcome": {"None": [[79, "    outcome = yield"]]}}, "param": {"item": {"?": [[77, "def pytest_runtest_makereport(item, call):  # pylint: disable=unused-argument"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/tests/integration/renderer/test_state_and_input.py": {".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_state_and_input.test_rdsi001_state_and_inputs.update_outpu": {"param": {"state": {"?": [[27, "    def update_output(input, state):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_state_and_input.test_rdsi001_state_and_input": {"param": {"dash_duo": {"?": [[10, "def test_rdsi001_state_and_inputs(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_state_and_input.test_rdsi001_state_and_inputs.update_o": {"param": {"input": {"?": [[27, "    def update_output(input, state):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integratio": {"func": {"test_rdsi001_state_and_inputs": {"? -> None": [[10, "def test_rdsi001_state_and_inputs(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_state_and_input.test_rdsi002_event_properties_state_and_inputs.update_output": {"param": {"n_clicks": {"?": [[81, "    def update_output(input, n_clicks, state):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_state_and_input.test_rdsi002_event_properties_state_and_inputs": {"var": {"app": {"Dash": [[64, "    app = dash.Dash(__name__)"]]}, "call_count": {"?": [[74, "    call_count = Value(\"i\", 0)"]]}}, "func": {"output": {"() -> ?": [[90, "    def output():"]]}, "btn": {"() -> ?": [[87, "    def btn():"]]}, "update_output": {"(?, ?, ?) -> str": [[81, "    def update_output(input, n_clicks, state):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_state_and_input.test_rdsi001_state_and_inputs": {"var": {"app": {"Dash": [[11, "    app = dash.Dash(__name__)"]]}, "call_count": {"?": [[20, "    call_count = Value(\"i\", 0)"]]}}, "func": {"update_output": {"(?, ?) -> str": [[27, "    def update_output(input, state):"]]}, "input_": {"() -> ?": [[33, "    def input_():"]]}, "output_": {"() -> ?": [[36, "    def output_():"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_state_and_input.test_rdsi002_event_properties_state_and_input": {"param": {"dash_duo": {"?": [[63, "def test_rdsi002_event_properties_state_and_inputs(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integ": {"func": {"test_rdsi002_event_properties_state_and_inputs": {"? -> None": [[63, "def test_rdsi002_event_properties_state_and_inputs(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_state_and_input.test_rdsi002_event_properties_state_and_inputs.update_o": {"param": {"input": {"?": [[81, "    def update_output(input, n_clicks, state):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_state_and_input.test_rdsi002_event_properties_state_and_inputs.update_outpu": {"param": {"state": {"?": [[81, "    def update_output(input, n_clicks, state):"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/dash/development/base_component.py": {".home.xxm.Desktop.EMSE.dataset.dash.dash.development.base_component.ComponentMeta.__new__": {"var": {"component": {"?": [[32, "        component = abc.ABCMeta.__new__(mcs, name, bases, attributes)"]]}, "module": {"?": [[33, "        module = attributes[\"__module__\"].split(\".\")[0]"]]}}, "param": {"attributes": {"?": [[31, "    def __new__(mcs, name, bases, attributes):"]]}, "bases": {"?": [[31, "    def __new__(mcs, name, bases, attributes):"]]}, "mcs": {"ComponentMeta": [[31, "    def __new__(mcs, name, bases, attributes):"]]}, "name": {"?": [[31, "    def __new__(mcs, name, bases, attributes):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.base_component._explicitize_arg": {"var": {"varnames": {"?": [[353, "        varnames = func.func_code.co_varnames"], [356, "        varnames = func.__code__.co_varnames"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.base_component.Component.to_plotly": {"var": {"as_json": {"dict": [[163, "        as_json = {"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.base_component.Component._traverse_id": {"param": {"self": {"Component": [[296, "    def _traverse_ids(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.base_component.Component._get_set_or_delet": {"param": {"self": {"Component": [[173, "    def _get_set_or_delete(self, id, operation, new_item=None):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.base_component.Component._id_str": {"var": {"id_": {"?": [[267, "        id_ = stringify_id(getattr(component, \"id\", \"\"))"]]}}, "param": {"component": {"Component": [[266, "    def _id_str(component):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.base_component.Component._get_set_or_del": {"param": {"operation": {"str": [[173, "    def _get_set_or_delete(self, id, operation, new_item=None):"]]}, "new_item": {"None": [[173, "    def _get_set_or_delete(self, id, operation, new_item=None):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.base_component.Component._traverse_with_pa": {"var": {"children_string": {"str": [[274, "        children_string = children_type + self._id_str(children)"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.base_component.Compone": {"func": {"to_plotly_json": {"Component -> dict": [[144, "    def to_plotly_json(self):"]]}, "__init__": {"? -> ?": [[81, "    def __init__(self, **kwargs):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.base_component.Componen": {"var": {"props_with_values": {"[?]": [[331, "        props_with_values = ["]]}}, "func": {"__delitem__": {"(Component, ?) -> None": [[256, "    def __delitem__(self, id):  # pylint: disable=redefined-builtin"]]}, "_traverse_with_paths": {"Component -> None": [[270, "    def _traverse_with_paths(self):"]]}, "__getitem__": {"(Component, ?) -> Component": [[244, "    def __getitem__(self, id):  # pylint: disable=redefined-builtin"]]}, "_traverse_ids": {"Component -> None": [[296, "    def _traverse_ids(self):"]]}, "_get_set_or_delete": {"(Component, ?, str, ?) -> Component / (Component, ?, ?, None) -> Component / (Component, ?, str, None) -> Component": [[173, "    def _get_set_or_delete(self, id, operation, new_item=None):"]]}, "__iter__": {"Component -> None": [[302, "    def __iter__(self):"]]}, "_traverse": {"Component -> None": [[260, "    def _traverse(self):"]]}, "__setitem__": {"(Component, ?, ?) -> Component / (Component, ?, None) -> None": [[252, "    def __setitem__(self, id, item):  # pylint: disable=redefined-builtin"]]}, "_id_str": {"Component -> str / ? -> str": [[266, "    def _id_str(component):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.base_component.Component.__delitem__": {"param": {"self": {"Component": [[256, "    def __delitem__(self, id):  # pylint: disable=redefined-builtin"]]}, "id": {"?": [[256, "    def __delitem__(self, id):  # pylint: disable=redefined-builtin"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.base_component.Component._traverse": {"var": {"t": {"?": [[262, "        for t in self._traverse_with_paths():"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.base_component.ComponentRegistry.get": {"param": {"resource_name": {"str": [[18, "    def get_resources(cls, resource_name):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.base_component.Component.__getitem__": {"param": {"self": {"Component": [[244, "    def __getitem__(self, id):  # pylint: disable=redefined-builtin"]]}, "id": {"?": [[244, "    def __getitem__(self, id):  # pylint: disable=redefined-builtin"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.base_component.Component": {"var": {"REQUIRED": {"_REQUIRED": [[79, "    REQUIRED = _REQUIRED()"]]}, "UNDEFINED": {"_UNDEFINED": [[70, "    UNDEFINED = _UNDEFINED()"]]}}, "class": {"_REQUIRED": {"<_REQUIRED>": [[72, "    class _REQUIRED(object):"]]}, "_UNDEFINED": {"<_UNDEFINED>": [[63, "    class _UNDEFINED(object):"]]}}, "func": {"__repr__": {"Component -> str": [[329, "    def __repr__(self):"]]}, "__len__": {"Component -> int": [[307, "    def __len__(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.base_component.ComponentR": {"var": {"registry": {"?": [[15, "    registry = set()"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.base_component.Component._traverse_with_path": {"param": {"self": {"Component": [[270, "    def _traverse_with_paths(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.base_componen": {"func": {"_explicitize_args": {"? -> () -> None": [[350, "def _explicitize_args(func):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.base_component.Component.__re": {"var": {"props_string": {"str": [[339, "            props_string = \", \".join("], [344, "            props_string = repr(getattr(self, \"children\", None))"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.base_component.ComponentRegistry": {"func": {"get_resources": {"(<ComponentRegistry>, str) -> [?] / (<ComponentRegistry>, ?) -> [?]": [[18, "    def get_resources(cls, resource_name):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.base_component.Component.__len__": {"var": {"length": {"int": [[313, "        length = 0"], [315, "            length = 0"], [317, "            length = 1"], [326, "            length = 1"]]}, "c": {"?": [[320, "            for c in self.children:"]]}}, "param": {"self": {"Component": [[307, "    def __len__(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.base_component.Component._UNDEFINED": {"func": {"__str__": {"_UNDEFINED -> str": [[67, "        def __str__(self):"]]}, "__repr__": {"_UNDEFINED -> str": [[64, "        def __repr__(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.base_component.Component._UNDEFINED.__repr__": {"param": {"self": {"_UNDEFINED": [[64, "        def __repr__(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.base_c": {"class": {"ComponentRegistry": {"<ComponentRegistry>": [[12, "class ComponentRegistry:"]]}, "ComponentMeta": {"<ComponentMeta>": [[28, "class ComponentMeta(abc.ABCMeta):"]]}, "Component": {"<Component>": [[62, "class Component(with_metaclass(ComponentMeta, object)):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.base_component.Component.__iter__": {"var": {"t": {"?": [[304, "        for t in self._traverse_ids():"]]}}, "param": {"self": {"Component": [[302, "    def __iter__(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.base_component.Component._UNDEFINED.__str__": {"param": {"self": {"_UNDEFINED": [[67, "        def __str__(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.base_component": {"func": {"is_number": {"? -> bool": [[45, "def is_number(s):"]]}, "_check_if_has_indexable_children": {"? -> None / Component -> None": [[53, "def _check_if_has_indexable_children(item):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.base_component._check_if_has_indexable_children": {"param": {"item": {"Component": [[53, "def _check_if_has_indexable_children(item):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.base_component.ComponentRegistry.get_resources": {"var": {"module_name": {"?": [[21, "        for module_name in cls.registry:"]]}, "module": {"?": [[22, "            module = sys.modules[module_name]"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.base_component.Component._REQUIRED.__repr__": {"param": {"self": {"_REQUIRED": [[73, "        def __repr__(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.base_component.Component._traver": {"param": {"self": {"Component": [[260, "    def _traverse(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.base_component._explicitize_ar": {"var": {"new_sig": {"?": [[371, "        new_sig = inspect.signature(wrapper).replace("]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.base_component.Component._traverse_with_paths": {"var": {"p": {"?": [[280, "            for p, t in children._traverse_with_paths():"], [293, "                    for p, t in i._traverse_with_paths():"]]}, "children": {"?": [[272, "        children = getattr(self, \"children\", None)"]]}, "idx": {"?": [[285, "            for idx, i in enumerate(children):"]]}, "children_type": {"?": [[273, "        children_type = type(children).__name__"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.base_component.Component._get_set_or_delete": {"var": {"i": {"?": [[206, "            for i, item in enumerate(self.children):"]]}}, "param": {"id": {"?": [[173, "    def _get_set_or_delete(self, id, operation, new_item=None):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.base_compo": {"var": {"MutableSequence": {"?": [[8, "MutableSequence = patch_collections_abc(\"MutableSequence\")"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.base_component.Component._REQUIRED.__str__": {"param": {"self": {"_REQUIRED": [[76, "        def __str__(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.base_component._explicitize_args": {"param": {"func": {"?": [[350, "def _explicitize_args(func):"]]}}, "func": {"wrapper": {"() -> None": [[358, "    def wrapper(*args, **kwargs):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.base_component.ComponentMeta": {"func": {"__new__": {"(ComponentMeta, ?, ?, ?) -> None": [[31, "    def __new__(mcs, name, bases, attributes):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.base_component.Component._REQUIRED": {"func": {"__str__": {"_REQUIRED -> str": [[76, "        def __str__(self):"]]}, "__repr__": {"_REQUIRED -> str": [[73, "        def __repr__(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.base_component.ComponentRegistry.get_": {"var": {"resources": {"[?]": [[19, "        resources = []"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.base_component.Com": {"var": {"error_string_prefix": {"str": [[92, "                error_string_prefix = \"The `{}.{}` component (version {}){}\".format("], [101, "                error_string_prefix = \"The `{}` component{}\".format("]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.base_component.Component.__init": {"var": {"id_key": {"?": [[126, "                    for id_key, id_val in v.items():"]]}, "k_in_propnames": {"bool": [[85, "            k_in_propnames = k in self._prop_names"]]}, "k_in_wildcards": {"int": [[86, "            k_in_wildcards = any("]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.base_component.Component.to_plotly_json": {"var": {"props": {"dict": [[146, "        props = {"]]}}, "param": {"self": {"Component": [[144, "    def to_plotly_json(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.base_component.ComponentRegistry.get_resource": {"param": {"cls": {"<ComponentRegistry>": [[18, "    def get_resources(cls, resource_name):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.base_component.Component._traverse_ids": {"var": {"t": {"?": [[298, "        for t in self._traverse():"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.base_component.is_number": {"param": {"s": {"?": [[45, "def is_number(s):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.base_component.Component.__repr__": {"param": {"self": {"Component": [[329, "    def __repr__(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.base_component.Component.__setitem__": {"param": {"item": {"(Component, ?, ?) -> Component / (Component, ?, None) -> None": [[252, "    def __setitem__(self, id, item):  # pylint: disable=redefined-builtin"]]}, "self": {"(Component, ?, str, ?) -> Component / (Component, ?, ?, None) -> Component / (Component, ?, str, None) -> Component": [[252, "    def __setitem__(self, id, item):  # pylint: disable=redefined-builtin"]]}, "id": {"?": [[252, "    def __setitem__(self, id, item):  # pylint: disable=redefined-builtin"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.base_component.Component._traverse_w": {"var": {"list_path": {"str": [[286, "                list_path = \"[{:d}] {:s}{}\".format("]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.base_component.Component.__init__": {"var": {"k": {"?": [[83, "        for k, v in list(kwargs.items()):"]]}}, "param": {"self": {"Component": [[81, "    def __init__(self, **kwargs):"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/setup.py": {".home.xxm.Desktop.EMSE.dataset.dash.setup.read_req_fil": {"var": {"requires": {"[?]": [[10, "        requires = (line.strip() for line in fp)"]]}}, "param": {"req_type": {"str": [[8, "def read_req_file(req_type):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.setup": {"var": {"main_ns": {"dict": [[4, "main_ns = {}"]]}}, "func": {"read_req_file": {"str -> [?]": [[8, "def read_req_file(req_type):"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/dash/testing/browser.py": {".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser.wait_for_element_by_css_selector": {"param": {"self": {"Browser": [[210, "    def wait_for_element_by_css_selector(self, selector, timeout=None):"]]}, "timeout": {"None": [[210, "    def wait_for_element_by_css_selector(self, selector, timeout=None):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser.open_new_tab": {"param": {"url": {"None": [[362, "    def open_new_tab(self, url=None):"]]}, "self": {"Browser": [[362, "    def open_new_tab(self, url=None):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser._get_firefox": {"var": {"fp": {"?": [[443, "        fp = webdriver.FirefoxProfile()"]]}, "options": {"None": [[436, "        options = self._get_wd_options()"]]}, "capabilities": {"?": [[438, "        capabilities = DesiredCapabilities.FIREFOX"]]}}, "param": {"self": {"Browser": [[435, "    def _get_firefox(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser._wait_fo": {"param": {"args": {"{(?, ?) | (?, ?) | (?, ?, ?) | (?, DashPageMixin -> str)}": [[191, "    def _wait_for(self, method, args, timeout, msg):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser.wait_for_style_to_equal": {"param": {"timeout": {"None": [[249, "    def wait_for_style_to_equal(self, selector, style, val, timeout=None):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser.get_webdriver": {"param": {"self": {"Browser": [[370, "    def get_webdriver(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser.find_elemen": {"param": {"selector": {"?": [[178, "    def find_elements(self, selector):"]], "str": [[173, "    def find_element(self, selector):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser.select_dcc_dropdow": {"var": {"menu": {"?": [[330, "        menu = dropdown.find_element_by_css_selector(\"div.Select-menu-outer\")"]]}, "options": {"?": [[333, "        options = menu.find_elements_by_css_selector(\"div.VirtualizedSelectOption\")"]]}, "option": {"?": [[339, "            for option in options:"]]}}, "param": {"index": {"None": [[326, "    def select_dcc_dropdown(self, elem_or_selector, value=None, index=None):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser.wait_for_no_elemen": {"param": {"selector": {"?": [[223, "    def wait_for_no_elements(self, selector, timeout=None):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser._get_": {"var": {"chrome": {"?": [[408, "        chrome = ("]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Brow": {"func": {"percy_snapshot": {"(Browser, str, bool) -> ? / (Browser, ?, bool) -> ?": [[128, "    def percy_snapshot(self, name=\"\", wait_for_callbacks=False):"]]}, "reset_log_timestamp": {"Browser -> None": [[532, "    def reset_log_timestamp(self):"]]}, "server_url": {"? -> ?": [[553, "    def server_url(self, value):"]], "Browser -> None": [[549, "    def server_url(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser.__exit": {"param": {"exc_val": {"?": [[88, "    def __exit__(self, exc_type, exc_val, traceback):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser.__init__": {"var": {"pause": {"bool": [[46, "        pause=False,"]]}, "remote": {"bool": [[37, "        remote=False,"]]}, "self": {"Browser": [[35, "        self,"]]}, "headless": {"bool": [[39, "        headless=False,"]]}, "options": {"None": [[40, "        options=None,"]]}, "browser": {"?": [[36, "        browser,"]]}}, "param": {"pause": {"bool": [[47, "    ):"]]}, "remote": {"bool": [[47, "    ):"]]}, "self": {"Browser": [[47, "    ):"]]}, "headless": {"bool": [[47, "    ):"]]}, "options": {"None": [[47, "    ):"]]}, "browser": {"?": [[47, "    ):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser.multiple_": {"param": {"clicks": {"?": [[466, "    def multiple_click(self, elem_or_selector, clicks):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser.wait_for_element_by_id": {"param": {"self": {"Browser": [[236, "    def wait_for_element_by_id(self, element_id, timeout=None):"]]}, "timeout": {"?": [[236, "    def wait_for_element_by_id(self, element_id, timeout=None):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser.wait_for_contains_tex": {"param": {"timeout": {"None": [[278, "    def wait_for_contains_text(self, selector, text, timeout=None):"]]}, "selector": {"?": [[278, "    def wait_for_contains_text(self, selector, text, timeout=None):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser.session_id": {"param": {"self": {"Browser": [[545, "    def session_id(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser._get_element": {"param": {"self": {"Browser": [[186, "    def _get_element(self, elem_or_selector):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser.visit_and_sn": {"var": {"resource_path": {"?": [[103, "        resource_path,"]]}}, "param": {"resource_path": {"?": [[108, "    ):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.b": {"class": {"Browser": {"<Browser>": [[32, "class Browser(DashPageMixin):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser.visit_and_snapsh": {"var": {"stay_on_page": {"bool": [[107, "        stay_on_page=False,"]]}, "wait_for_callbacks": {"bool": [[105, "        wait_for_callbacks=True,"]]}}, "param": {"stay_on_page": {"bool": [[108, "    ):"]]}, "wait_for_callbacks": {"bool": [[108, "    ):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser.reset_log_timestamp": {"var": {"entries": {"?": [[535, "            entries = self.driver.get_log(\"browser\")"]]}}, "param": {"self": {"Browser": [[532, "    def reset_log_timestamp(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser.__exi": {"param": {"exc_type": {"?": [[88, "    def __exit__(self, exc_type, exc_val, traceback):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser.toggle_window": {"var": {"idx": {"int": [[350, "        idx = (self._window_idx + 1) % 2"]]}}, "param": {"self": {"Browser": [[348, "    def toggle_window(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser.wait_for_text_to_equa": {"param": {"self": {"Browser": [[262, "    def wait_for_text_to_equal(self, selector, text, timeout=None):"]]}, "selector": {"?": [[262, "    def wait_for_text_to_equal(self, selector, text, timeout=None):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser.get_log": {"param": {"self": {"Browser": [[517, "    def get_logs(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser.__exit__": {"param": {"self": {"Browser": [[88, "    def __exit__(self, exc_type, exc_val, traceback):"]]}, "traceback": {"?": [[88, "    def __exit__(self, exc_type, exc_val, traceback):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.brows": {"var": {"logger": {"?": [[29, "logger = logging.getLogger(__name__)"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser.__enter__": {"param": {"self": {"Browser": [[85, "    def __enter__(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser.click_at_coord_fraction": {"param": {"self": {"Browser": [[510, "    def click_at_coord_fractions(self, elem_or_selector, fx, fy):"]]}, "elem_or_selector": {"?": [[510, "    def click_at_coord_fractions(self, elem_or_selector, fx, fy):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser.switch_window": {"param": {"self": {"Browser": [[354, "    def switch_window(self, idx=0):"]]}, "idx": {"int": [[354, "    def switch_window(self, idx=0):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser.wait_for_element": {"param": {"self": {"Browser": [[205, "    def wait_for_element(self, selector, timeout=None):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser.percy_snapsh": {"param": {"wait_for_callbacks": {"bool": [[128, "    def percy_snapshot(self, name=\"\", wait_for_callbacks=False):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser.take_snapsho": {"var": {"target": {"str": [[162, "        target = \"/tmp/dash_artifacts\" if not self._is_windows() else os.getenv(\"TEMP\")"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser.wait_for_contains_": {"param": {"text": {"?": [[278, "    def wait_for_contains_text(self, selector, text, timeout=None):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser.wait_for_element_by_css_": {"param": {"selector": {"DashPageMixin -> str": [[210, "    def wait_for_element_by_css_selector(self, selector, timeout=None):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser.wait_for_style_to_equa": {"param": {"self": {"Browser": [[249, "    def wait_for_style_to_equal(self, selector, style, val, timeout=None):"]]}, "style": {"?": [[249, "    def wait_for_style_to_equal(self, selector, style, val, timeout=None):"]]}, "selector": {"?": [[249, "    def wait_for_style_to_equal(self, selector, style, val, timeout=None):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser.wait_for_no_elements": {"param": {"timeout": {"None": [[223, "    def wait_for_no_elements(self, selector, timeout=None):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser.driver": {"param": {"self": {"Browser": [[540, "    def driver(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser._get_elemen": {"param": {"elem_or_selector": {"?": [[186, "    def _get_element(self, elem_or_selector):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser.zoom_in_graph_by": {"param": {"start_fraction": {"float": [[489, "    ):"]]}, "zoom_box_fraction": {"float": [[489, "    ):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser.wait_for_element_by": {"param": {"element_id": {"Browser -> None": [[236, "    def wait_for_element_by_id(self, element_id, timeout=None):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser._get_chrome": {"var": {"params": {"dict": [[425, "            params = {"]]}, "options": {"None": [[389, "        options = self._get_wd_options()"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser.visit_and_snapshot": {"var": {"hook_id": {"?": [[104, "        hook_id,"]]}, "self": {"Browser": [[102, "        self,"]]}}, "param": {"hook_id": {"?": [[108, "    ):"]]}, "self": {"Browser": [[108, "    ):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Brows": {"func": {"wait_for_element_by_id": {"(Browser, ?, None) -> None": [[236, "    def wait_for_element_by_id(self, element_id, timeout=None):"]]}, "_get_chrome": {"Browser -> None": [[388, "    def _get_chrome(self):"]]}, "__enter__": {"Browser -> Browser": [[85, "    def __enter__(self):"]]}, "driver": {"Browser -> None": [[540, "    def driver(self):"]]}, "wait_for_element": {"(Browser, ?, None) -> None": [[205, "    def wait_for_element(self, selector, timeout=None):"]]}, "_get_firefox": {"Browser -> None": [[435, "    def _get_firefox(self):"]]}, "get_webdriver": {"Browser -> ?": [[370, "    def get_webdriver(self):"]]}, "clear_input": {"(Browser, ?) -> None": [[471, "    def clear_input(self, elem_or_selector):"]]}, "wait_for_text_to_equal": {"(Browser, ?, ?, None) -> None": [[262, "    def wait_for_text_to_equal(self, selector, text, timeout=None):"]]}, "wait_for_page": {"(Browser, None, int) -> ?": [[294, "    def wait_for_page(self, url=None, timeout=10):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.B": {"func": {"wait_for_element_by_css_selector": {"(Browser, DashPageMixin -> str, None) -> None / (Browser, ?, None) -> None": [[210, "    def wait_for_element_by_css_selector(self, selector, timeout=None):"]]}, "wait_for_contains_text": {"(Browser, ?, ?, None) -> None": [[278, "    def wait_for_contains_text(self, selector, text, timeout=None):"]]}, "select_dcc_dropdown": {"(Browser, ?, None, None) -> None": [[326, "    def select_dcc_dropdown(self, elem_or_selector, value=None, index=None):"]]}, "wait_for_no_elements": {"(Browser, ?, None) -> None": [[223, "    def wait_for_no_elements(self, selector, timeout=None):"]]}, "wait_for_style_to_equal": {"(Browser, ?, ?, ?, None) -> None": [[249, "    def wait_for_style_to_equal(self, selector, style, val, timeout=None):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser.percy": {"var": {"snapshot_name": {"str": [[132, "        snapshot_name = \"{} - py{}.{}\".format("]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser.click_at_coord_fractions": {"var": {"elem": {"str": [[511, "        elem = self._get_element(elem_or_selector)"]]}}, "param": {"fx": {"?": [[510, "    def click_at_coord_fractions(self, elem_or_selector, fx, fy):"]]}, "fy": {"?": [[510, "    def click_at_coord_fractions(self, elem_or_selector, fx, fy):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser.clear_inpu": {"param": {"elem_or_selector": {"?": [[471, "    def clear_input(self, elem_or_selector):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser.multiple_click": {"var": {"_": {"int": [[468, "        for _ in range(clicks):"]]}}, "param": {"self": {"Browser": [[466, "    def multiple_click(self, elem_or_selector, clicks):"]]}, "elem_or_selector": {"?": [[466, "    def multiple_click(self, elem_or_selector, clicks):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser.wait_for_style_to_equ": {"param": {"val": {"?": [[249, "    def wait_for_style_to_equal(self, selector, style, val, timeout=None):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser._wait_for": {"var": {"_wait": {"?": [[193, "        _wait = ("]]}}, "param": {"msg": {"str": [[191, "    def _wait_for(self, method, args, timeout, msg):"]]}, "self": {"Browser": [[191, "    def _wait_for(self, method, args, timeout, msg):"]]}, "method": {"{<contains_text> | <style_to_equal> | <text_to_equal>}": [[191, "    def _wait_for(self, method, args, timeout, msg):"]]}, "timeout": {"None": [[191, "    def _wait_for(self, method, args, timeout, msg):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser.wait_for_page": {"param": {"url": {"None": [[294, "    def wait_for_page(self, url=None, timeout=10):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser.wait_for_elemen": {"param": {"timeout": {"None": [[205, "    def wait_for_element(self, selector, timeout=None):"]]}, "selector": {"?": [[205, "    def wait_for_element(self, selector, timeout=None):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser.zoom_in_graph_by_ratio": {"var": {"self": {"Browser": [[488, "        self, elem_or_selector, start_fraction=0.5, zoom_box_fraction=0.2, compare=True"]]}, "prev": {"?": [[495, "        prev = elem.get_attribute(\"innerHTML\")"]]}, "elem": {"str": [[493, "        elem = self._get_element(elem_or_selector)"]]}, "w": {"?": [[496, "        w, h = elem.size[\"width\"], elem.size[\"height\"]"]]}}, "param": {"self": {"Browser": [[489, "    ):"]]}, "prev": {"Browser": [[495, "        prev = elem.get_attribute(\"innerHTML\")"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser.visit_and_snapsho": {"var": {"path": {"?": [[110, "            path = resource_path.lstrip(\"/\")"]]}, "assert_check": {"bool": [[106, "        assert_check=True,"]]}}, "param": {"assert_check": {"bool": [[108, "    ):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser.wait_for_no_element": {"param": {"self": {"Browser": [[223, "    def wait_for_no_elements(self, selector, timeout=None):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser.server_ur": {"param": {"self": {"Browser": [[549, "    def server_url(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser._get_wd_": {"var": {"options": {"?": [[377, "        options = ("]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser.__ini": {"var": {"percy_assets_root": {"str": [[44, "        percy_assets_root=\"\","]]}, "remote_url": {"None": [[38, "        remote_url=None,"]]}, "download_path": {"str": [[41, "        download_path=\"\","]]}}, "param": {"percy_assets_root": {"str": [[47, "    ):"]]}, "remote_url": {"None": [[47, "    ):"]]}, "download_path": {"str": [[47, "    ):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser.wait_for_text_to_equal": {"param": {"text": {"?": [[262, "    def wait_for_text_to_equal(self, selector, text, timeout=None):"]]}, "timeout": {"None": [[262, "    def wait_for_text_to_equal(self, selector, text, timeout=None):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser.select_dcc_": {"var": {"dropdown": {"str": [[327, "        dropdown = self._get_element(elem_or_selector)"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser.select_dcc_dropdown": {"param": {"self": {"Browser": [[326, "    def select_dcc_dropdown(self, elem_or_selector, value=None, index=None):"]]}, "elem_or_selector": {"?": [[326, "    def select_dcc_dropdown(self, elem_or_selector, value=None, index=None):"]]}, "value": {"None": [[326, "    def select_dcc_dropdown(self, elem_or_selector, value=None, index=None):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser.take_snapshot": {"param": {"self": {"Browser": [[153, "    def take_snapshot(self, name):"]]}, "name": {"?": [[153, "    def take_snapshot(self, name):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser.wait_for_pag": {"param": {"self": {"Browser": [[294, "    def wait_for_page(self, url=None, timeout=10):"]]}, "timeout": {"int": [[294, "    def wait_for_page(self, url=None, timeout=10):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser.download_path": {"param": {"self": {"Browser": [[563, "    def download_path(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser.percy_snapshot": {"param": {"self": {"Browser": [[128, "    def percy_snapshot(self, name=\"\", wait_for_callbacks=False):"]]}, "name": {"str": [[128, "    def percy_snapshot(self, name=\"\", wait_for_callbacks=False):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser.wait_for_contains_text": {"param": {"self": {"Browser": [[278, "    def wait_for_contains_text(self, selector, text, timeout=None):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser.clear_input": {"var": {"elem": {"str": [[473, "        elem = self._get_element(elem_or_selector)"]]}}, "param": {"self": {"Browser": [[471, "    def clear_input(self, elem_or_selector):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser": {"func": {"__exit__": {"(Browser, ?, ?, ?) -> ?": [[88, "    def __exit__(self, exc_type, exc_val, traceback):"]]}, "multiple_click": {"(Browser, ?, ?) -> None": [[466, "    def multiple_click(self, elem_or_selector, clicks):"]]}, "find_elements": {"(Browser, ?) -> None": [[178, "    def find_elements(self, selector):"]]}, "download_path": {"Browser -> str": [[563, "    def download_path(self):"]]}, "visit_and_snapshot": {"(Browser, ?, ?, bool, bool, bool) -> ?": [[101, "    def visit_and_snapshot("]]}, "session_id": {"Browser -> ?": [[545, "    def session_id(self):"]]}, "switch_window": {"(Browser, int) -> None": [[354, "    def switch_window(self, idx=0):"]]}, "find_element": {"(Browser, ?) -> None / (Browser, str) -> None": [[173, "    def find_element(self, selector):"]]}, "_get_wd_options": {"Browser -> None": [[376, "    def _get_wd_options(self):"]]}, "_is_windows": {"() -> bool": [[463, "    def _is_windows():"]]}, "toggle_window": {"Browser -> None": [[348, "    def toggle_window(self):"]]}, "get_logs": {"Browser -> [?]": [[517, "    def get_logs(self):"]]}, "_get_element": {"(Browser, ?) -> str": [[186, "    def _get_element(self, elem_or_selector):"]]}, "take_snapshot": {"(Browser, ?) -> ?": [[153, "    def take_snapshot(self, name):"]]}, "__init__": {"? -> ?": [[34, "    def __init__("]]}, "open_new_tab": {"(Browser, None) -> None": [[362, "    def open_new_tab(self, url=None):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser.zoom_in_graph_by_rati": {"param": {"compare": {"bool": [[489, "    ):"]]}, "elem_or_selector": {"?": [[489, "    ):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser._get_wd_option": {"param": {"self": {"Browser": [[376, "    def _get_wd_options(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser.find_element": {"param": {"self": {"Browser": [[173, "    def find_element(self, selector):"], [178, "    def find_elements(self, selector):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser.__init": {"var": {"percy_finalize": {"bool": [[43, "        percy_finalize=True,"]]}, "percy_run": {"bool": [[42, "        percy_run=True,"]]}}, "param": {"percy_finalize": {"bool": [[47, "    ):"]]}, "percy_run": {"bool": [[47, "    ):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser._get_chrom": {"var": {"res": {"?": [[429, "            res = chrome.execute(\"send_command\", params)"]]}, "capabilities": {"?": [[391, "        capabilities = DesiredCapabilities.CHROME"]]}}, "param": {"self": {"Browser": [[388, "    def _get_chrome(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browser.__in": {"var": {"wait_timeout": {"int": [[45, "        wait_timeout=10,"]]}}, "param": {"wait_timeout": {"int": [[47, "    ):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.browser.Browse": {"func": {"_wait_for": {"(Browser, <contains_text>, (?, ?), None, str) -> None / (Browser, ?, ?, ?, ?) -> None / (Browser, ?, (?, DashPageMixin -> str), None, str) -> None / (Browser, <style_to_equal>, (?, ?, ?), None, str) -> None / (Browser, ?, (?, ?), None, str) -> None / (Browser, <text_to_equal>, (?, ?), None, str) -> None": [[191, "    def _wait_for(self, method, args, timeout, msg):"]]}, "click_at_coord_fractions": {"(Browser, ?, ?, ?) -> None": [[510, "    def click_at_coord_fractions(self, elem_or_selector, fx, fy):"]]}, "zoom_in_graph_by_ratio": {"(Browser, ?, float, float, bool) -> ?": [[487, "    def zoom_in_graph_by_ratio("]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/tests/unit/development/test_generate_class_file.py": {".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_generate_class_file.make_component_dir": {"param": {"load_test_metadata_json": {"?": [[23, "def make_component_dir(load_test_metadata_json):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_generate_class_f": {"param": {"component_class_string": {"?": [[64, "def test_class_string(expected_class_string, component_class_string):"]]}, "expected_class_string": {"?": [[64, "def test_class_string(expected_class_string, component_class_string):"]]}}, "func": {"test_class_string": {"(?, ?) -> None": [[64, "def test_class_string(expected_class_string, component_class_string):"]]}, "written_class_string": {"? -> str": [[51, "def written_class_string(make_component_dir):"]]}, "component_class_string": {"? -> str": [[41, "def component_class_string(make_component_dir):"]]}, "expected_class_string": {"() -> str": [[33, "def expected_class_string():"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_generate_class_file.expected_cl": {"var": {"expected_string_path": {"str": [[35, "    expected_string_path = os.path.join(_dir, \"metadata_test.py\")"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_generate_class_file.written_class_string": {"var": {"written_file_path": {"str": [[59, "    written_file_path = os.path.join(\"TableComponents\", \"Table.py\")"]]}}, "param": {"make_component_dir": {"?": [[51, "def written_class_string(make_component_dir):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_generate_class_file.component_class_string": {"param": {"make_component_dir": {"?": [[41, "def component_class_string(make_component_dir):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_generate_class_file": {"var": {"import_string": {"str": [[15, "import_string = ("]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_generate_class_file.test_class_f": {"param": {"written_class_string": {"?": [[74, "def test_class_file(expected_class_string, written_class_string):"]]}, "expected_class_string": {"?": [[74, "def test_class_file(expected_class_string, written_class_string):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_gener": {"func": {"test_class_file": {"(?, ?) -> None": [[74, "def test_class_file(expected_class_string, written_class_string):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_generate_class_fil": {"func": {"make_component_dir": {"? -> None": [[23, "def make_component_dir(load_test_metadata_json):"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/tests/unit/dash/test_utils.py": {".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.dash.test_utils.test_ddut001_attribute_dict": {"var": {"a": {"AttributeDict": [[7, "    a = utils.AttributeDict()"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.dash.test_util": {"func": {"test_ddut001_attribute_dict": {"() -> None": [[6, "def test_ddut001_attribute_dict():"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/@plotly/dash-generator-test-component-nested/base/__init__.py": {".home.xxm.Desktop.EMSE.dataset.dash.@plotly.dash-generator-test-component-nested.ba": {"var": {"__version__": {"?": [[10, "__version__ = package['version']"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.@plotly.dash-generator-test-component-nested.base": {"var": {"_js_dist": {"[dict]": [[15, "_js_dist = ["]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.@plotly.dash-generator-test-component-nested.bas": {"var": {"_component": {"?": [[22, "for _component in __all__:"]]}, "_filepath": {"str": [[5, "_filepath = _os.path.abspath(_os.path.join(_basepath, 'package.json'))"]]}, "package_name": {"?": [[9, "package_name = package['name'].replace(' ', '_').replace('-', '_')"]]}, "package": {"?": [[7, "    package = json.load(f)"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.@plotly.dash-generator-test-component-nested": {"var": {"_basepath": {"str": [[4, "_basepath = _os.path.dirname(__file__)"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/tests/unit/development/test_r_component_gen.py": {".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_r_component_gen": {"var": {"expected_exports": {"[str]": [[63, "    expected_exports = [prefix + c for c in components] + ["]]}}, "func": {"test_r_exports": {"? -> None": [[20, "def test_r_exports(make_r_dir):"]]}, "make_r_dir": {"() -> None": [[12, "def make_r_dir():"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_r_component_gen.test_r_expor": {"var": {"matches": {"?": [[85, "    matches = re.findall(r\"export\\(([^()]+)\\)\", exports.replace(\"\\n\", \" \"))"]]}, "components": {"[str]": [[60, "    components = [\"Component1\", \"Component2\"]"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_r_component_gen.test_r_": {"var": {"exports": {"str": [[83, "    exports = make_namespace_exports(components, prefix)"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_r_component_gen.test_r_exports": {"var": {"prefix": {"str": [[61, "    prefix = \"pre\""]]}, "mock_component_file": {"?": [[71, "    mock_component_file = dedent("]]}, "extra_file": {"?": [[21, "    extra_file = dedent("]]}}, "param": {"make_r_dir": {"?": [[20, "def test_r_exports(make_r_dir):"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/dash/_configs.py": {".home.xxm.Desktop.EMSE.dataset.dash.dash._configs.pathname_configs": {"var": {"app_name": {"?": [[109, "    app_name = load_dash_env_vars().DASH_APP_NAME"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._config": {"func": {"load_dash_env_vars": {"() -> AttributeDict": [[8, "def load_dash_env_vars():"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._configs.get_combined_config": {"var": {"env": {"?": [[50, "    env = load_dash_env_vars().get(\"DASH_{}\".format(name.upper()))"]]}}, "param": {"default": {"{bool | str}": [[43, "def get_combined_config(name, val, default=None):"]]}, "name": {"str": [[43, "def get_combined_config(name, val, default=None):"]]}, "val": {"{bool | str}": [[43, "def get_combined_config(name, val, default=None):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.d": {"var": {"_pathname_config_error_message": {"str": [[60, "    _pathname_config_error_message = \"\"\""]]}}, "func": {"pathname_configs": {"(str, None, None) -> ({bool | str}, {bool | str}, {bool | str}) / (None, None, None) -> (bool, {bool | str}, {bool | str}) / (str, str, None) -> ({bool | str}, {bool | str}, {bool | str})": [[57, "def pathname_configs("]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._configs": {"var": {"DASH_ENV_VARS": {"AttributeDict": [[40, "DASH_ENV_VARS = load_dash_env_vars()  # used in tests"]]}}, "func": {"get_combined_config": {"(str, str, None) -> {bool | str} / (str, bool, bool) -> bool / (str, None, None) -> bool / (str, None, str) -> {bool | str} / (str, None, bool) -> bool / (str, ?, None) -> bool / (str, bool, None) -> bool": [[43, "def get_combined_config(name, val, default=None):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._configs.pathname_config": {"var": {"requests_pathname_prefix": {"bool": [[79, "    requests_pathname_prefix = get_combined_config("]], "?": [[112, "        requests_pathname_prefix = \"/\" + app_name + routes_pathname_prefix"]], "{bool | str}": [[114, "        requests_pathname_prefix = routes_pathname_prefix"]]}, "url_base_pathname": {"str": [[58, "    url_base_pathname=None, routes_pathname_prefix=None, requests_pathname_prefix=None"]], "{bool | str}": [[73, "    url_base_pathname = get_combined_config(\"url_base_pathname\", url_base_pathname)"]]}, "routes_pathname_prefix": {"str": [[100, "        routes_pathname_prefix = \"/\""]], "{bool | str}": [[75, "    routes_pathname_prefix = get_combined_config("], [98, "        routes_pathname_prefix = url_base_pathname"]]}}, "param": {"requests_pathname_prefix": {"None": [[59, "):"]]}, "url_base_pathname": {"str": [[59, "):"]]}, "routes_pathname_prefix": {"str": [[59, "):"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/tests/integration/renderer/test_dependencies.py": {".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_dependencies.test_rddp001_dependencies_on_components_that_dont_exist.update_output": {"param": {"value": {"?": [[18, "    def update_output(value):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integ": {"func": {"test_rddp001_dependencies_on_components_that_dont_exist": {"? -> None": [[9, "def test_rddp001_dependencies_on_components_that_dont_exist(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_dependencies.test_rddp001_dependencies_on_components_that_dont_exis": {"var": {"output_1_call_count": {"?": [[15, "    output_1_call_count = Value(\"i\", 0)"]]}, "output_2_call_count": {"?": [[25, "    output_2_call_count = Value(\"i\", 0)"]]}}, "func": {"update_output_2": {"? -> None": [[28, "    def update_output_2(value):"]]}, "update_output": {"? -> None": [[18, "    def update_output(value):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_dependencies.test_rddp001_dependencies_on_components_that_dont_exist": {"var": {"app": {"Dash": [[10, "    app = dash.Dash(__name__)"]]}}, "param": {"dash_duo": {"?": [[9, "def test_rddp001_dependencies_on_components_that_dont_exist(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_dependencies.test_rddp001_dependencies_on_components_that_dont_exist.update_output_2": {"param": {"value": {"?": [[28, "    def update_output_2(value):"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/dash/testing/wait.py": {".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.wait.contains_tex": {"func": {"__init__": {"? -> ?": [[55, "    def __init__(self, selector, text):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.wait.style_to_equal.__call__": {"var": {"elem": {"?": [[95, "            elem = driver.find_element_by_css_selector(self.selector)"]]}, "val": {"?": [[96, "            val = elem.value_of_css_property(self.style)"]]}}, "param": {"self": {"style_to_equal": [[93, "    def __call__(self, driver):"]]}, "driver": {"?": [[93, "    def __call__(self, driver):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.wait": {"var": {"logger": {"?": [[9, "logger = logging.getLogger(__name__)"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.wait.contains_text.__call__": {"var": {"elem": {"?": [[61, "            elem = driver.find_element_by_css_selector(self.selector)"]]}}, "param": {"self": {"contains_text": [[59, "    def __call__(self, driver):"]]}, "driver": {"?": [[59, "    def __call__(self, driver):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.wait.text_to_equ": {"func": {"__call__": {"(text_to_equal, ?) -> bool": [[75, "    def __call__(self, driver):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.wait.unti": {"param": {"poll": {"float": [[14, "):  # noqa: C0330"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.wait.text_to_equal": {"func": {"__init__": {"? -> ?": [[71, "    def __init__(self, selector, text):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.wa": {"func": {"until": {"(() -> bool, int, float, str) -> ? / (() -> bool, int, float, str) -> bool / (Browser -> ?, int, float, str) -> None / (() -> ?, int, float, str) -> None / (DashPageMixin -> ?, int, float, str) -> None / (?, int, float, str) -> None": [[12, "def until("]]}, "until_not": {"(?, ?, float, str) -> None": [[33, "def until_not("]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.wai": {"class": {"style_to_equal": {"<style_to_equal>": [[87, "class style_to_equal(object):"]]}, "text_to_equal": {"<text_to_equal>": [[70, "class text_to_equal(object):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.wait.contains_text": {"func": {"__call__": {"(contains_text, ?) -> bool": [[59, "    def __call__(self, driver):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.wait.contains_text.__init__": {"param": {"text": {"?": [[55, "    def __init__(self, selector, text):"]]}, "self": {"contains_text": [[55, "    def __init__(self, selector, text):"]]}, "selector": {"?": [[55, "    def __init__(self, selector, text):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.wait.until_no": {"var": {"end_time": {"int": [[43, "    end_time = time.time() + timeout"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.w": {"class": {"contains_text": {"<contains_text>": [[54, "class contains_text(object):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.wait.until": {"var": {"res": {"bool": [[15, "    res = wait_cond()"], [27, "        res = wait_cond()"]]}, "wait_cond": {"{() -> ? | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | Browser -> ? | DashPageMixin -> ?}": [[13, "    wait_cond, timeout, poll=0.1, msg=\"expected condition not met within timeout\""]], "?": [[34, "    wait_cond, timeout, poll=0.1, msg=\"expected condition met within timeout\""]]}, "end_time": {"int": [[22, "    end_time = time.time() + timeout"]]}}, "param": {"msg": {"str": [[14, "):  # noqa: C0330"]]}, "wait_cond": {"{() -> ? | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | Browser -> ? | DashPageMixin -> ?}": [[14, "):  # noqa: C0330"]], "?": [[35, "):  # noqa: C0330"]]}, "timeout": {"int": [[14, "):  # noqa: C0330"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.wait.style_to_equal": {"func": {"__init__": {"? -> ?": [[88, "    def __init__(self, selector, style, val):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.wait.style_to_equal.__init__": {"param": {"self": {"style_to_equal": [[88, "    def __init__(self, selector, style, val):"]]}, "style": {"?": [[88, "    def __init__(self, selector, style, val):"]]}, "val": {"?": [[88, "    def __init__(self, selector, style, val):"]]}, "selector": {"?": [[88, "    def __init__(self, selector, style, val):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.wait.until_n": {"param": {"timeout": {"?": [[35, "):  # noqa: C0330"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.wait.until_not": {"var": {"res": {"?": [[36, "    res = wait_cond()"], [48, "        res = wait_cond()"]]}}, "param": {"msg": {"str": [[35, "):  # noqa: C0330"]]}, "poll": {"float": [[35, "):  # noqa: C0330"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.wait.text_to_equal.__init__": {"param": {"text": {"?": [[71, "    def __init__(self, selector, text):"]]}, "self": {"text_to_equal": [[71, "    def __init__(self, selector, text):"]]}, "selector": {"?": [[71, "    def __init__(self, selector, text):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.wait.style_to_equ": {"func": {"__call__": {"(style_to_equal, ?) -> bool": [[93, "    def __call__(self, driver):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.wait.text_to_equal.__call__": {"var": {"elem": {"?": [[77, "            elem = driver.find_element_by_css_selector(self.selector)"]]}}, "param": {"self": {"text_to_equal": [[75, "    def __call__(self, driver):"]]}, "driver": {"?": [[75, "    def __call__(self, driver):"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/tests/unit/development/test_flow_metadata_conversions.py": {".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_flow_metadata_conversions.load_test_flow_metadata_json": {"var": {"path": {"str": [[119, "    path = os.path.join(_dir, \"flow_metadata_test.json\")"]]}, "data": {"?": [[122, "        data = json.JSONDecoder(object_pairs_hook=OrderedDict).decode(json_string)"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_flow_metadata_conversions.test_docgen_to_python_arg": {"var": {"props": {"?": [[137, "    props = load_test_flow_metadata_json[\"props\"]"]]}}, "param": {"load_test_flow_metadata_json": {"?": [[136, "def test_docgen_to_python_args(load_test_flow_metadata_json):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_flow_metadata_conversions.load_test_flow_metadata": {"var": {"json_string": {"str": [[121, "        json_string = data_file.read()"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_flow_metadata_conversi": {"func": {"test_docgen_to_python_args": {"? -> None": [[136, "def test_docgen_to_python_args(load_test_flow_metadata_json):"]]}, "load_test_flow_metadata_json": {"() -> None": [[118, "def load_test_flow_metadata_json():"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_flow_metadata_conversio": {"var": {"expected_arg_strings": {"?": [[16, "expected_arg_strings = OrderedDict("]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_flow_metadata_conversions.test_": {"var": {"docstring": {"str": [[127, "    docstring = create_docstring("]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_flow_metadata_conversions": {"var": {"_dir": {"str": [[14, "_dir = os.path.dirname(os.path.abspath(__file__))"]]}, "expected_doc": {"[str]": [[68, "expected_doc = ["]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_flow_metadata_conversions.test_docstring": {"param": {"load_test_flow_metadata_json": {"?": [[126, "def test_docstring(load_test_flow_metadata_json):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_flow_metadata_conv": {"func": {"test_docstring": {"? -> None": [[126, "def test_docstring(load_test_flow_metadata_json):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_flow_metadata_conversions.test_docgen_to_python_args": {"var": {"prop_name": {"?": [[139, "    for prop_name, prop in list(props.items()):"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/tests/unit/development/__init__.py": {".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development": {"var": {"_dir": {"str": [[3, "_dir = os.path.dirname(os.path.abspath(__file__))"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.has_trailing_space": {"param": {"s": {"?": [[6, "def has_trailing_space(s):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.dev": {"var": {"expected_table_component_doc": {"[str]": [[10, "expected_table_component_doc = ["]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.developm": {"func": {"has_trailing_space": {"? -> int": [[6, "def has_trailing_space(s):"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/tests/unit/dash/test_async_resources.py": {".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.dash.test_async_resources.obj": {"func": {"__init__": {"? -> ?": [[5, "    def __init__(self, dict):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.dash.test_async_resources.test_resources_lazy": {"var": {"filtered": {"[dict]": [[39, "    filtered = resource._filter_resources("]]}, "resource": {"Resources": [[36, "    resource = Resources(\"js_test\")"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.dash.test_async_resources.obj.__init__": {"param": {"self": {"obj": [[5, "    def __init__(self, dict):"]]}, "dict": {"dict": [[5, "    def __init__(self, dict):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.dash.test_async_resources.test_resources_eag": {"var": {"filtered": {"[dict]": [[14, "    filtered = resource._filter_resources("]]}, "resource": {"Resources": [[11, "    resource = Resources(\"js_test\")"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.dash.test_asyn": {"func": {"test_resources_lazy": {"() -> None": [[34, "def test_resources_lazy():"]]}, "test_resources_eager": {"() -> None": [[9, "def test_resources_eager():"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.dash.test_async_resources": {"class": {"obj": {"<obj>": [[4, "class obj(object):"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/dash/testing/application_runners.py": {".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.application_runners.BaseDashRunner.__init": {"param": {"keep_open": {"?": [[54, "    def __init__(self, keep_open, stop_timeout):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.application_runners.BaseDashRunner.stop": {"param": {"self": {"BaseDashRunner": [[64, "    def stop(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.application_runners.ThreadedRunne": {"func": {"start": {"(ThreadedRunner, ?) -> ?": [[129, "    def start(self, app, **kwargs):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.application_runners.JuliaRunner.star": {"var": {"path": {"str": [[369, "            path = os.path.join(self.tmp_app_path, \"app.jl\")"]]}, "assets": {"[str]": [[395, "                assets = ["]]}, "asset": {"str": [[401, "                for asset in assets:"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.application_runners.ThreadedRunner.stop": {"param": {"self": {"ThreadedRunner": [[160, "    def stop(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.application_runners.ProcessRunner.star": {"var": {"application_name": {"str": [[181, "        application_name=\"app\","]]}}, "param": {"application_name": {"str": [[185, "    ):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.application_runners.JuliaRunner.s": {"var": {"target": {"str": [[402, "                    target = os.path.join(self.tmp_app_path, os.path.basename(asset))"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.application_runners.BaseDashRunner.__exi": {"param": {"exc_type": {"?": [[81, "    def __exit__(self, exc_type, exc_val, traceback):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.application_runners.JuliaRunn": {"param": {"start_timeout": {"int": [[351, "    def start(self, app, start_timeout=30, cwd=None):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.application_runners.ProcessRunner.stop": {"param": {"self": {"ProcessRunner": [[219, "    def stop(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.application_runners.impor": {"param": {"application_name": {"str": [[25, "def import_app(app_file, application_name=\"app\"):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.application_runners.JuliaRunner.__init__": {"param": {"self": {"JuliaRunner": [[344, "    def __init__(self, keep_open=False, stop_timeout=3):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.application_runners.RRunner.star": {"var": {"path": {"str": [[270, "            path = os.path.join(self.tmp_app_path, \"app.R\")"]]}, "assets": {"[str]": [[294, "                assets = ["]]}, "asset": {"str": [[300, "                for asset in assets:"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.application_runners.ProcessRunner.__init": {"param": {"keep_open": {"bool": [[171, "    def __init__(self, keep_open=False, stop_timeout=3):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.application_runners.ThreadedRunner.start": {"param": {"self": {"ThreadedRunner": [[129, "    def start(self, app, **kwargs):"]]}, "app": {"?": [[129, "    def start(self, app, **kwargs):"]]}}, "func": {"_handle_error": {"() -> None": [[133, "        def _handle_error():"]]}, "run": {"() -> None": [[138, "        def run():"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.application_runners.RRunner.__init__": {"param": {"self": {"RRunner": [[247, "    def __init__(self, keep_open=False, stop_timeout=3):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.application_runners.ThreadedRunner": {"func": {"stop": {"ThreadedRunner -> None": [[160, "    def stop(self):"]]}, "__init__": {"? -> ?": [[112, "    def __init__(self, keep_open=False, stop_timeout=3):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.application_runners.RRunner.__in": {"param": {"stop_timeout": {"int": [[247, "    def __init__(self, keep_open=False, stop_timeout=3):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.application_runners.JuliaRunner.sta": {"var": {"entry": {"?": [[383, "                for entry in inspect.stack():"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.application_runners.BaseDashRunner.ur": {"param": {"self": {"BaseDashRunner": [[93, "    def url(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.application_runners.JuliaRunner.__in": {"param": {"stop_timeout": {"int": [[344, "    def __init__(self, keep_open=False, stop_timeout=3):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.application_runners.RRunn": {"param": {"start_timeout": {"int": [[252, "    def start(self, app, start_timeout=2, cwd=None):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.application_runners.ProcessRunne": {"func": {"start": {"(ProcessRunner, None, str, None, int, int) -> ?": [[178, "    def start("]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.application_runners.BaseDashRunner.__exit": {"param": {"exc_val": {"?": [[81, "    def __exit__(self, exc_type, exc_val, traceback):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.application_runners.ProcessRunner.start": {"var": {"args": {"?": [[193, "        args = shlex.split("]]}, "self": {"ProcessRunner": [[179, "        self,"]]}, "raw_command": {"None": [[182, "        raw_command=None,"]]}, "app_module": {"None": [[180, "        app_module=None,"]]}}, "param": {"self": {"ProcessRunner": [[185, "    ):"]]}, "raw_command": {"None": [[185, "    ):"]]}, "app_module": {"None": [[185, "    ):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.application_runners.RRunner.start": {"var": {"app": {"str": [[280, "            app = path"]]}, "args": {"?": [[319, "        args = shlex.split("]]}, "cwd": {"str": [[258, "                cwd = os.path.dirname(app)"], [286, "                        cwd = os.path.dirname(os.path.realpath(entry[1]))"]]}}, "param": {"self": {"RRunner": [[252, "    def start(self, app, start_timeout=2, cwd=None):"]]}, "app": {"?": [[252, "    def start(self, app, start_timeout=2, cwd=None):"]]}, "cwd": {"None": [[252, "    def start(self, app, start_timeout=2, cwd=None):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.application_runners.BaseDashRunner.__in": {"param": {"stop_timeout": {"?": [[54, "    def __init__(self, keep_open, stop_timeout):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.application_runners.BaseDashRunner.start": {"param": {"self": {"BaseDashRunner": [[61, "    def start(self, *args, **kwargs):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.application_runners.BaseDashRunner.__init__": {"param": {"self": {"BaseDashRunner": [[54, "    def __init__(self, keep_open, stop_timeout):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.application_runners.ThreadedRunn": {"func": {"_stop_server": {"() -> str": [[120, "    def _stop_server():"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.application_runners.ProcessRunner": {"func": {"stop": {"ProcessRunner -> ?": [[219, "    def stop(self):"]]}, "__init__": {"? -> ?": [[171, "    def __init__(self, keep_open=False, stop_timeout=3):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.application_runners.RRunner.__init": {"param": {"keep_open": {"bool": [[247, "    def __init__(self, keep_open=False, stop_timeout=3):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.application_runners.ThreadedRunner.__in": {"param": {"stop_timeout": {"int": [[112, "    def __init__(self, keep_open=False, stop_timeout=3):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.application_runners.BaseDashRunner.accessible": {"param": {"url": {"BaseDashRunner -> str": [[68, "    def accessible(url):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.application_runners.BaseDashRunner": {"func": {"accessible": {"? -> bool / BaseDashRunner -> str -> bool": [[68, "    def accessible(url):"]]}, "__exit__": {"(BaseDashRunner, ?, ?, ?) -> ?": [[81, "    def __exit__(self, exc_type, exc_val, traceback):"]]}, "stop": {"BaseDashRunner -> None": [[64, "    def stop(self):"]]}, "tmp_app_path": {"BaseDashRunner -> None": [[102, "    def tmp_app_path(self):"]]}, "is_windows": {"BaseDashRunner -> bool": [[98, "    def is_windows(self):"]]}, "__call__": {"BaseDashRunner -> None": [[75, "    def __call__(self, *args, **kwargs):"]]}, "__init__": {"? -> ?": [[54, "    def __init__(self, keep_open, stop_timeout):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.application_runners.ThreadedRunner.__init__": {"param": {"self": {"ThreadedRunner": [[112, "    def __init__(self, keep_open=False, stop_timeout=3):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.application_runners.RRunner": {"func": {"__init__": {"? -> ?": [[247, "    def __init__(self, keep_open=False, stop_timeout=3):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.application_runners.ProcessRunner.__in": {"param": {"stop_timeout": {"int": [[171, "    def __init__(self, keep_open=False, stop_timeout=3):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.application_runners.ThreadedRunner._stop_serv": {"var": {"stopper": {"?": [[122, "        stopper = flask.request.environ.get(\"werkzeug.server.shutdown\")"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.application_runners.JuliaRunner.__init": {"param": {"keep_open": {"bool": [[344, "    def __init__(self, keep_open=False, stop_timeout=3):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.application_runners.BaseDashRunner.__enter__": {"param": {"self": {"BaseDashRunner": [[78, "    def __enter__(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.application_runners.BaseDashRu": {"func": {"__enter__": {"BaseDashRunner -> BaseDashRunner": [[78, "    def __enter__(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.application_runners.ProcessRunner.__init__": {"param": {"self": {"ProcessRunner": [[171, "    def __init__(self, keep_open=False, stop_timeout=3):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.application_runners.BaseDashRunner.tmp_app_path": {"param": {"self": {"BaseDashRunner": [[102, "    def tmp_app_path(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.application_runners.BaseDashRunner.is_window": {"param": {"self": {"BaseDashRunner": [[98, "    def is_windows(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.application_runners.JuliaRunner.start": {"var": {"app": {"str": [[379, "            app = path"]]}, "args": {"?": [[420, "        args = shlex.split("]]}, "cwd": {"str": [[357, "                cwd = os.path.dirname(app)"], [385, "                        cwd = os.path.dirname(os.path.realpath(entry[1]))"]]}}, "param": {"self": {"JuliaRunner": [[351, "    def start(self, app, start_timeout=30, cwd=None):"]]}, "app": {"?": [[351, "    def start(self, app, start_timeout=30, cwd=None):"]]}, "cwd": {"None": [[351, "    def start(self, app, start_timeout=30, cwd=None):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.application_runners.RRunner.sta": {"var": {"entry": {"?": [[284, "                for entry in inspect.stack():"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.application_runners.BaseDashRunne": {"func": {"url": {"BaseDashRunner -> str": [[93, "    def url(self):"]]}, "start": {"BaseDashRunner -> None": [[61, "    def start(self, *args, **kwargs):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.application_": {"class": {"ProcessRunner": {"<ProcessRunner>": [[165, "class ProcessRunner(BaseDashRunner):"]]}, "BaseDashRunner": {"<BaseDashRunner>": [[51, "class BaseDashRunner(object):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.application_runners.RRunne": {"func": {"start": {"(RRunner, ?, int, None) -> ?": [[252, "    def start(self, app, start_timeout=2, cwd=None):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.application_runners.import_": {"var": {"app": {"?": [[44, "        app = app_module[application_name]"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.application_runners.ProcessRunner.sto": {"var": {"_except": {"<Exception>": [[233, "                    _except = Exception"]], "?": [[229, "                    _except = subprocess.TimeoutExpired"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.application_runners.RRunner.s": {"var": {"target": {"str": [[301, "                    target = os.path.join(self.tmp_app_path, os.path.basename(asset))"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.application_runners.import": {"var": {"app_module": {"?": [[43, "        app_module = runpy.run_module(app_file)"]]}}, "param": {"app_file": {"?": [[25, "def import_app(app_file, application_name=\"app\"):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.application_runners.BaseDashRunner.__exit__": {"param": {"self": {"BaseDashRunner": [[81, "    def __exit__(self, exc_type, exc_val, traceback):"]]}, "traceback": {"?": [[81, "    def __exit__(self, exc_type, exc_val, traceback):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.application_runners.ThreadedRunner.__init": {"param": {"keep_open": {"bool": [[112, "    def __init__(self, keep_open=False, stop_timeout=3):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.application_runners.BaseDashRunner.__call__": {"param": {"self": {"BaseDashRunner": [[75, "    def __call__(self, *args, **kwargs):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.application_runners.JuliaRunne": {"func": {"start": {"(JuliaRunner, ?, int, None) -> ?": [[351, "    def start(self, app, start_timeout=30, cwd=None):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.application_runners.ProcessRunn": {"var": {"start_timeout": {"int": [[184, "        start_timeout=3,"]]}}, "param": {"start_timeout": {"int": [[185, "    ):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.application_runners.JuliaRunner": {"func": {"__init__": {"? -> ?": [[344, "    def __init__(self, keep_open=False, stop_timeout=3):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.application_runners": {"var": {"logger": {"?": [[22, "logger = logging.getLogger(__name__)"]]}}, "class": {"ThreadedRunner": {"<ThreadedRunner>": [[106, "class ThreadedRunner(BaseDashRunner):"]]}, "JuliaRunner": {"<JuliaRunner>": [[343, "class JuliaRunner(ProcessRunner):"]]}, "RRunner": {"<RRunner>": [[246, "class RRunner(ProcessRunner):"]]}}, "func": {"import_app": {"(?, str) -> ?": [[25, "def import_app(app_file, application_name=\"app\"):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.application_runners.ProcessRunner.sta": {"var": {"port": {"int": [[183, "        port=8050,"]]}}, "param": {"port": {"int": [[185, "    ):"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/dash/development/_r_components_generation.py": {".home.xxm.Desktop.EMSE.dataset.dash.dash.development._r_components_generation.get_async_ty": {"param": {"dep": {"?": [[343, "def get_async_type(dep):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._r_components_generation.generat": {"var": {"package_url": {"str": [[617, "        package_url = \"\""]], "?": [[615, "        package_url = pkg_data.get(\"homepage\", \"\")"]]}, "package_version": {"?": [[589, "    package_version = pkg_data.get(\"version\", \"0.0.1\")"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._r_components_generation.create_prop_docstring_": {"param": {"required": {"?": [[944, "):"]]}, "description": {"?": [[944, "):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._r_com": {"var": {"package_description": {"?": [[577, "            package_description = rpkg_data.get("], [587, "        package_description = pkg_data.get(\"description\", \"\")"]]}}, "func": {"create_prop_docstring_r": {"(?, ?, ?, ?, int, bool) -> str / (?, ?, ?, ?, ?, bool) -> str": [[942, "def create_prop_docstring_r("]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._r_components_generation.wrap": {"param": {"code": {"str": [[358, "def wrap(tag, code):"]]}, "tag": {"str": [[358, "def wrap(tag, code):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._r_components_generatio": {"var": {"help_string": {"str": [[62, "help_string = \"\"\"% Auto-generated: do not edit by hand"]]}, "frame_element_template": {"str": [[43, "frame_element_template = \"\"\"`{dep_name}` = structure(list(name = \"{dep_name}\","]]}, "packages_string": {"str": [[662, "    packages_string = \"\""]]}}, "func": {"generate_rpkg": {"([?], None, ?, str, str, str, str, bool) -> None": [[536, "def generate_rpkg("]]}, "get_async_type": {"? -> str": [[343, "def get_async_type(dep):"]]}, "generate_js_metadata": {"([?], ?) -> str": [[245, "def generate_js_metadata(pkg_data, project_shortname):"]]}, "generate_class_string": {"(?, None, ?, None) -> str / (?, ?, ?, ?) -> str": [[180, "def generate_class_string(name, props, project_shortname, prefix):"]]}, "print_r_type": {"? -> str": [[934, "def print_r_type(typedata):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._r_components_generation.make_namespace_expor": {"var": {"matches": {"?": [[829, "            matches = re.findall("]]}, "fnlist": {"[?]": [[799, "    fnlist = []"]]}, "omitlist": {"[str]": [[796, "    omitlist = [\"utils.R\", \"internal.R\"] + ["]]}}, "param": {"components": {"{[?] | [str]}": [[781, "def make_namespace_exports(components, prefix):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._r_components_generation.write_js_metadat": {"var": {"file_name": {"str": [[495, "    file_name = \"internal.R\""]]}, "filename": {"str": [[517, "        for filename in filenames:"]]}, "rel_dirname": {"str": [[516, "    for rel_dirname, _, filenames in os.walk(project_shortname):"]]}}, "param": {"has_wildcards": {"bool": [[481, "def write_js_metadata(pkg_data, project_shortname, has_wildcards):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._r_components_generation.print_r_": {"var": {"typestring": {"str": [[935, "    typestring = get_r_type(typedata).capitalize()"]]}}, "param": {"typedata": {"?": [[934, "def print_r_type(typedata):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._r_components_generation.get_r": {"var": {"js_type_name": {"?": [[920, "    js_type_name = type_object[\"name\"]"]]}}, "param": {"type_object": {"?": [[905, "def get_r_type(type_object, is_flow_type=False, indent_num=0):"]]}, "is_flow_type": {"bool": [[905, "def get_r_type(type_object, is_flow_type=False, indent_num=0):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._r_components_generation.write_help": {"var": {"file_name": {"str": [[380, "    file_name = funcname + \".Rd\""]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._r_components_generati": {"var": {"frame_open_template": {"str": [[40, "frame_open_template = \"\"\".{rpkgname}_js_metadata <- function() {{"]]}, "package_author_fn": {"?": [[628, "    package_author_fn = package_author_name.split(\" \")[0]"]]}, "package_author_ln": {"?": [[629, "    package_author_ln = package_author_name.rsplit(\" \", 2)[-1]"]]}, "package_author_name": {"?": [[625, "    package_author_name = package_author.split(\" <\")[0]"]]}}, "func": {"make_namespace_exports": {"([str], str) -> str / ([?], None) -> str": [[781, "def make_namespace_exports(components, prefix):"]]}, "format_fn_name": {"(None, ?) -> str / (?, ?) -> str": [[738, "def format_fn_name(prefix, name):"]]}, "snake_case_to_camel_case": {"? -> str": [[729, "def snake_case_to_camel_case(namestring):"]]}, "generate_exports": {"(?, [?], [?], [?], None, None, str, str, str) -> None": [[745, "def generate_exports("]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._r_components_generation.generate_export": {"var": {"has_wildcards": {"bool": [[760, "    has_wildcards = False"], [763, "            has_wildcards = True"]]}, "package_depends": {"str": [[752, "    package_depends,"]]}}, "param": {"package_depends": {"str": [[756, "):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._r_components_generation.generate_expor": {"var": {"package_suggests": {"str": [[754, "    package_suggests,"]]}, "components": {"[?]": [[747, "    components,"]]}}, "param": {"package_suggests": {"str": [[756, "):"]]}, "components": {"[?]": [[756, "):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._r_components_generation.snake_case_to_camel_case": {"var": {"s": {"?": [[730, "    s = namestring.split(\"_\")"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._r_components_generation.generate_js_metadat": {"var": {"css_name": {"str": [[292, "                css_name = \"'{}'\".format(rpp)"], [296, "                css_name = \"NULL\""], [317, "            css_name = \"'{}'\".format(rpp)"], [321, "            css_name = \"NULL\""]]}, "async_or_dynamic": {"str": [[284, "            async_or_dynamic = get_async_type(curr_dep)"], [314, "        async_or_dynamic = get_async_type(dep)"]]}, "dep_name": {"str": [[289, "                dep_name = \"{}\".format(project_shortname)"]], "?": [[287, "                dep_name = rpp.split(\".\")[0]"]]}, "rpkgname": {"str": [[266, "    rpkgname = snake_case_to_camel_case(project_shortname)"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._r_components_generation.get_wildcards_": {"var": {"wildcards": {"str": [[993, "    wildcards = \"\""], [997, "        wildcards = \"NULL\""]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._r_components_generation.write_help_f": {"var": {"accepted_wildcards": {"str": [[385, "    accepted_wildcards = \"\""], [394, "        accepted_wildcards = get_wildcards_r(prop_keys)"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._r_components_generation.get_wildcard": {"param": {"prop_keys": {"list": [[992, "def get_wildcards_r(prop_keys):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._r_components_generation.write_class": {"var": {"file_name": {"str": [[471, "    file_name = format_fn_name(prefix, name) + \".R\""]]}, "file_path": {"str": [[473, "    file_path = os.path.join(\"R\", file_name)"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._r_components_generation.write_class_fil": {"var": {"name": {"?": [[457, "    name, props, description, project_shortname, prefix=None, rpkg_data=None"]]}}, "param": {"project_shortname": {"?": [[458, "):"]]}, "prefix": {"None": [[458, "):"]]}, "name": {"?": [[458, "):"]]}, "description": {"?": [[458, "):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._r_components_generation.write_js_me": {"param": {"pkg_data": {"[?]": [[481, "def write_js_metadata(pkg_data, project_shortname, has_wildcards):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._r_components_generation.generate_js": {"var": {"function_frame_body": {"[?]": [[276, "    function_frame_body = []"]], "str": [[309, "            function_frame_body = \",\\n\".join(function_frame)"], [323, "        function_frame_body = frame_body_template.format("]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._r_components_generation.get_r_typ": {"param": {"indent_num": {"int": [[905, "def get_r_type(type_object, is_flow_type=False, indent_num=0):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._r_components_generation.format_fn_nam": {"param": {"prefix": {"None": [[738, "def format_fn_name(prefix, name):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._r_components_generation": {"var": {"frame_close_template": {"str": [[57, "frame_close_template = \"\"\")"]]}, "wildcard_helper": {"str": [[149, "wildcard_helper = \"\"\""]]}, "pkghelp_stub": {"str": [[136, "pkghelp_stub = \"\"\"% Auto-generated: do not edit by hand"]]}, "wildcard_template": {"str": [[168, "wildcard_template = \"\"\""]]}, "wildcard_help_template": {"str": [[172, "wildcard_help_template = \"\"\""]]}, "frame_body_template": {"str": [[50, "frame_body_template = \"\"\"`{project_shortname}` = structure(list(name = \"{project_shortname}\","]]}}, "func": {"get_wildcards_r": {"? -> str / list -> str": [[992, "def get_wildcards_r(prop_keys):"]]}, "write_js_metadata": {"([?], ?, bool) -> None": [[481, "def write_js_metadata(pkg_data, project_shortname, has_wildcards):"]]}, "get_r_prop_types": {"? -> dict": [[844, "def get_r_prop_types(type_object):"]]}, "write_class_file": {"(?, ?, ?, ?, None, None) -> None": [[456, "def write_class_file("]]}, "get_r_type": {"(?, bool, int) -> str": [[905, "def get_r_type(type_object, is_flow_type=False, indent_num=0):"]]}, "wrap": {"(str, str) -> str / (?, ?) -> str / (str, ?) -> str": [[358, "def wrap(tag, code):"]]}, "write_help_file": {"(?, None, ?, None, None) -> None / (?, ?, ?, ?, ?) -> None": [[364, "def write_help_file(name, props, description, prefix, rpkg_data):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._r_components_generation.make_namespace_export": {"var": {"s": {"?": [[810, "            s = re.sub(\"#.*$\", \"\", s, flags=re.M)"], [813, "            s = s.replace(\"\\n\", \" \").replace(\"\\r\", \" \")"], [816, "            s = re.sub(r\"'([^'\\\\]|\\\\'|\\\\[^'])*'\", \"''\", s)"], [817, "            s = re.sub(r'\"([^\"\\\\]|\\\\\"|\\\\[^\"])*\"', '\"\"', s)"], [825, "                s = re.sub(r\"\\(([^()]|\\(\\))*\\)\", \"()\", s)"], [826, "                s = re.sub(r\"\\{([^{}]|\\{\\})*\\}\", \"{}\", s)"]], "str": [[807, "            s = script.read()"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._r_components_generation.make_namespac": {"var": {"export_string": {"str": [[782, "    export_string = \"\""]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._r_components_generation.generate_exports": {"var": {"rpkg_data": {"None": [[750, "    rpkg_data,"]]}, "prefix": {"None": [[751, "    prefix,"]]}, "pkg_data": {"[?]": [[749, "    pkg_data,"]]}, "component_data": {"?": [[761, "    for component_data in metadata.values():"]]}, "metadata": {"[?]": [[748, "    metadata,"]]}}, "param": {"rpkg_data": {"None": [[756, "):"]]}, "prefix": {"None": [[756, "):"]]}, "pkg_data": {"[?]": [[756, "):"]]}, "metadata": {"[?]": [[756, "):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._r_components_generation.generate_js_metadata": {"var": {"rpp": {"?": [[282, "            rpp = curr_dep[\"relative_package_path\"]"], [312, "        rpp = dep[\"relative_package_path\"]"]]}, "dep": {"int": [[280, "        for dep in range(len(alldist)):"]], "?": [[311, "        dep = alldist[0]"]]}, "curr_dep": {"?": [[281, "            curr_dep = alldist[dep]"]]}, "function_string": {"str": [[332, "    function_string = \"\".join("]]}, "project_ver": {"?": [[264, "    project_ver = pkg_data.get(\"version\")"]]}, "mod": {"?": [[260, "    mod = importlib.import_module(project_shortname)"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._r_components_generation.get_r_prop_types": {"param": {"type_object": {"?": [[844, "def get_r_prop_types(type_object):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._r_components_generation.generate_class_strin": {"var": {"default_argtext": {"str": [[193, "    default_argtext = \"\""]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._r_components_generation.generate": {"var": {"rpkg_data": {"None": [[538, "    rpkg_data,"]]}}, "param": {"rpkg_data": {"None": [[545, "):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._r_components_generation.write_js_metad": {"var": {"file_path": {"str": [[502, "    file_path = os.path.join(\"R\", file_name)"]]}}, "param": {"project_shortname": {"?": [[481, "def write_js_metadata(pkg_data, project_shortname, has_wildcards):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._r_components_generation.wr": {"var": {"file_path": {"str": [[428, "    file_path = os.path.join(\"man\", file_name)"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._r_components_generation.get_async_type": {"var": {"async_or_dynamic": {"str": [[344, "    async_or_dynamic = \"\""], [352, "            async_or_dynamic = \", {} = {}\".format(key, keyval)"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._r_components_generation.generate_r": {"var": {"pkghelp": {"str": [[715, "            pkghelp = pkghelp_stub.format("]]}, "package_issues": {"str": [[607, "        package_issues = \"\""]], "?": [[605, "        package_issues = pkg_data[\"bugs\"].get(\"url\", \"\")"]]}, "package_name": {"str": [[566, "    package_name = snake_case_to_camel_case(project_shortname)"]]}, "package_depends": {"?": [[594, "        package_depends = re.sub(r\"(,(?![ ]))\", \", \", package_depends)"]], "str": [[541, "    package_depends,"], [593, "        package_depends = \", \" + package_depends.strip(\",\").lstrip()"]]}, "package_license": {"str": [[656, "        package_license = pkg_data.get(\"license\", \"\") + \" + file LICENSE\""]], "?": [[654, "        package_license = pkg_data.get(\"license\", \"\")"]]}, "package_suggests": {"?": [[602, "        package_suggests = re.sub(r\"(,(?![ ]))\", \", \", package_suggests)"]], "str": [[543, "    package_suggests,"], [601, "        package_suggests = package_suggests.strip(\",\").lstrip()"], [675, "            package_suggests = package_suggests.lstrip(\", \")"]]}, "pkghelp_stub_path": {"str": [[679, "    pkghelp_stub_path = os.path.join(\"man\", package_name + \"-package.Rd\")"]]}, "package_title": {"?": [[573, "            package_title = rpkg_data.get("], [586, "        package_title = pkg_data.get(\"description\", \"\")"]]}, "pkg_data": {"[?]": [[537, "    pkg_data,"]]}}, "param": {"pkg_data": {"[?]": [[545, "):"]]}, "package_suggests": {"str": [[545, "):"]]}, "package_depends": {"str": [[545, "):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._r_components_generation.write_help_file": {"var": {"wildcards": {"str": [[382, "    wildcards = \"\""], [395, "        wildcards = \", ...\""]]}}, "param": {"rpkg_data": {"None": [[364, "def write_help_file(name, props, description, prefix, rpkg_data):"]]}, "props": {"None": [[364, "def write_help_file(name, props, description, prefix, rpkg_data):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._r_components_generation.write_help_fil": {"var": {"item_text": {"?": [[413, "    item_text = re.sub(r\"(?<!\\\\)%\", \"\\\\%\", item_text)"]], "str": [[384, "    item_text = \"\""]]}, "description": {"?": [[412, "    description = re.sub(r\"(?<!\\\\)%\", \"\\\\%\", description)"], [418, "        description = description.split(\"**Example Usage**\")[0].rstrip()"]]}, "prop_keys": {"list": [[391, "    prop_keys = list(props.keys())"]]}, "funcname": {"str": [[379, "    funcname = format_fn_name(prefix, name)"]]}, "item": {"?": [[398, "    for item in prop_keys[:]:"]]}, "ex": {"?": [[443, "        ex = rpkg_data.get(\"r_examples\")"]]}, "the_ex": {"?": [[444, "        the_ex = ([e for e in ex if e.get(\"name\") == funcname] or [None])[0]"]]}}, "param": {"prefix": {"None": [[364, "def write_help_file(name, props, description, prefix, rpkg_data):"]]}, "name": {"?": [[364, "def write_help_file(name, props, description, prefix, rpkg_data):"]]}, "description": {"?": [[364, "def write_help_file(name, props, description, prefix, rpkg_data):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._r_components_generation.gen": {"var": {"package_imports": {"?": [[598, "        package_imports = re.sub(r\"(,(?![ ]))\", \", \", package_imports)"]], "str": [[542, "    package_imports,"], [597, "        package_imports = package_imports.strip(\",\").lstrip()"]]}, "package_copyright": {"str": [[567, "    package_copyright = \"\""], [581, "            package_copyright = \"\\nCopyright: {}\".format("]]}, "package_author": {"?": [[623, "    package_author = pkg_data.get(\"author\")"]]}, "rpackage_list": {"[str]": [[664, "    rpackage_list = package_depends.split(\", \") + package_imports.split(\", \")"]], "?": [[665, "    rpackage_list = filter(bool, rpackage_list)"]]}, "package_rauthors": {"str": [[568, "    package_rauthors = \"\""], [645, "            package_rauthors = \"\\nAuthors@R: {}\".format("], [649, "            package_rauthors = '\\nAuthors@R: person(\"{}\", \"{}\", role = c(\"aut\", \"cre\"), email = \"{}\")'.format("]]}, "package_author_email": {"?": [[626, "    package_author_email = package_author.split(\" <\")[1][:-1]"]]}}, "param": {"package_imports": {"str": [[545, "):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._r_components_generation.make_namespace_expo": {"var": {"rfilelist": {"[?]": [[795, "    rfilelist = []"]]}, "script": {"str": [[801, "    for script in os.listdir(\"R\"):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._r_components_generation.get_r_prop_ty": {"func": {"shape_or_exact": {"() -> str": [[847, "    def shape_or_exact():"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._r_components_generation.snake_case_to_camel_c": {"param": {"namestring": {"?": [[729, "def snake_case_to_camel_case(namestring):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._r_components_generation.generate_js_me": {"var": {"alldist": {"?": [[262, "    alldist = getattr(mod, \"_js_dist\", []) + getattr(mod, \"_css_dist\", [])"]]}}, "param": {"pkg_data": {"[?]": [[245, "def generate_js_metadata(pkg_data, project_shortname):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._r_components_generation.generate_rpkg": {"var": {"project_shortname": {"?": [[539, "    project_shortname,"]]}, "has_wildcards": {"bool": [[544, "    has_wildcards,"]]}, "maintainer": {"?": [[631, "    maintainer = pkg_data.get(\"maintainer\", pkg_data.get(\"author\"))"]]}, "lib_name": {"?": [[569, "    lib_name = pkg_data.get(\"name\")"]]}}, "param": {"project_shortname": {"?": [[545, "):"]]}, "has_wildcards": {"bool": [[545, "):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._r_components_generation.genera": {"var": {"export_string": {"str": [[757, "    export_string = make_namespace_exports(components, prefix)"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._r_components_generation.write_js": {"var": {"target_dirname": {"str": [[523, "            target_dirname = os.path.join("]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._r_components_generation.generate_": {"var": {"rpackage": {"?": [[668, "        for rpackage in rpackage_list:"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._r_components_generation.get_async_typ": {"var": {"keyval": {"str": [[349, "                keyval = \"'{}'\".format(keyval.lower())"]], "?": [[347, "            keyval = dep[key]"], [351, "                keyval = str(keyval).upper()"]]}, "key": {"?": [[345, "    for key in dep.keys():"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._r_components_generation.generate_rpk": {"var": {"import_string": {"str": [[661, "    import_string = \"# AUTO GENERATED FILE - DO NOT EDIT\\n\\n\""]]}, "vignette_builder": {"str": [[672, "        vignette_builder = \"\\nVignetteBuilder: knitr\""], [677, "        vignette_builder = \"\""]]}, "description_string": {"str": [[694, "    description_string = description_template.format("]]}, "export_string": {"str": [[540, "    export_string,"]]}}, "param": {"export_string": {"str": [[545, "):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._r_components_generation.write_help_fi": {"var": {"default_argtext": {"str": [[383, "    default_argtext = \"\""]]}, "value_text": {"str": [[389, "    value_text = \"named list of JSON elements corresponding to React.js properties and their values\"  # noqa:E501"]]}, "result": {"str": [[445, "        result = \"\""]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._r_components_generation.generate_js_metad": {"var": {"function_frame": {"[?]": [[275, "    function_frame = []"]]}, "script_name": {"str": [[293, "                script_name = \"NULL\""], [295, "                script_name = \"'{}'\".format(rpp)"], [318, "            script_name = \"NULL\""], [320, "            script_name = \"'{}'\".format(rpp)"]]}, "function_frame_open": {"str": [[273, "    function_frame_open = frame_open_template.format(rpkgname=rpkgname)"]]}}, "param": {"project_shortname": {"?": [[245, "def generate_js_metadata(pkg_data, project_shortname):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._r_components_generation.g": {"var": {"js_to_r_types": {"dict": [[921, "    js_to_r_types = get_r_prop_types(type_object=type_object)"]]}, "prop_type": {"?": [[929, "        prop_type = js_to_r_types[js_type_name]()"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._r_components_generation.generate_class_string": {"var": {"wildcards": {"str": [[189, "    wildcards = \"\""], [198, "        wildcards = \", ...\""]]}, "default_paramtext": {"str": [[192, "    default_paramtext = \"\""]]}, "accepted_wildcards": {"str": [[194, "    accepted_wildcards = \"\""], [197, "        accepted_wildcards = get_wildcards_r(prop_keys)"]]}, "prop_keys": {"list": [[187, "    prop_keys = list(props.keys())"]]}, "wildcard_names": {"str": [[191, "    wildcard_names = \"\""], [202, "        wildcard_names = \", wildcard_names\""]]}, "item": {"?": [[210, "    for item in prop_keys[:]:"]]}, "wildcard_declaration": {"str": [[190, "    wildcard_declaration = \"\""], [199, "        wildcard_declaration = wildcard_template.format("]]}, "prop_names": {"str": [[205, "    prop_names = \", \".join("]]}, "props": {"None": [[185, "    props = reorder_props(props=props)"]]}}, "param": {"project_shortname": {"?": [[180, "def generate_class_string(name, props, project_shortname, prefix):"]]}, "prefix": {"None": [[180, "def generate_class_string(name, props, project_shortname, prefix):"]]}, "name": {"?": [[180, "def generate_class_string(name, props, project_shortname, prefix):"]]}, "props": {"None": [[180, "def generate_class_string(name, props, project_shortname, prefix):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._r_components_generation.make_namespace_exports": {"var": {"fn": {"?": [[835, "                fn = match[1]"]]}, "component": {"str": [[783, "    for component in components:"]]}, "rfile": {"?": [[805, "    for rfile in rfilelist:"]]}, "match": {"?": [[834, "            for match in matches:"]]}, "prev_len": {"int": [[822, "            prev_len = len(s) + 1"], [824, "                prev_len = len(s)"]]}}, "param": {"prefix": {"str": [[781, "def make_namespace_exports(components, prefix):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._r_components_generation.generate_ex": {"var": {"project_shortname": {"?": [[746, "    project_shortname,"]]}, "package_imports": {"str": [[753, "    package_imports,"]]}}, "param": {"project_shortname": {"?": [[756, "):"]]}, "package_imports": {"str": [[756, "):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._r_components_generation.format_fn_": {"param": {"name": {"?": [[738, "def format_fn_name(prefix, name):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._r_components_generation.write_js_metadata": {"var": {"extension": {"str": [[518, "            extension = os.path.splitext(filename)[1]"]]}, "function_string": {"str": [[492, "    function_string = generate_js_metadata("]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._r_components_g": {"var": {"description_template": {"str": [[85, "description_template = \"\"\"Package: {package_name}"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._r_components_generation.create_prop_docstring": {"var": {"prop_name": {"?": [[943, "    prop_name, type_object, required, description, indent_num, is_flow_type=False"]]}, "r_type_name": {"str": [[967, "    r_type_name = get_r_type("]]}}, "param": {"prop_name": {"?": [[944, "):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._r_components_generation.generate_class_stri": {"var": {"package_name": {"str": [[182, "    package_name = snake_case_to_camel_case(project_shortname)"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._r_components_genera": {"var": {"r_component_string": {"str": [[19, "r_component_string = \"\"\"{funcname} <- function({default_argtext}{wildcards}) {{"]]}, "rbuild_ignore_string": {"str": [[100, "rbuild_ignore_string = r\"\"\"# ignore JS config files/folders"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._r_components_generation.create_prop_docstring_r": {"var": {"indent_spacing": {"str": [[971, "    indent_spacing = \"  \" * indent_num"]]}}, "param": {"indent_num": {"int": [[944, "):"]]}, "type_object": {"?": [[944, "):"]]}, "is_flow_type": {"bool": [[944, "):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development._r_components_generation.write_class_file": {"var": {"import_string": {"str": [[468, "    import_string = \"# AUTO GENERATED FILE - DO NOT EDIT\\n\\n\""]]}, "class_string": {"str": [[469, "    class_string = generate_class_string(name, props, project_shortname, prefix)"]]}, "props": {"None": [[459, "    props = reorder_props(props=props)"]]}}, "param": {"rpkg_data": {"None": [[458, "):"]]}, "props": {"?": [[458, "):"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/tests/integration/test_race_conditions.py": {".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_race_conditions.create_race_conditions_test.tes": {"var": {"total_delay": {"int": [[51, "        total_delay = 0"]]}}, "func": {"update": {"? -> ?": [[34, "        def update(value):"]]}, "element_text": {"str -> str": [[42, "        def element_text(id):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_race_conditions.create_race_conditions_test.test": {"var": {"i": {"str": [[52, "        for i in routes:"]]}, "app": {"Dash": [[24, "        app = Dash()"]]}}, "param": {"self": {"?": [[23, "    def test(self):"]]}}, "func": {"delay": {"() -> None": [[37, "        def delay():"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_race_conditions.create_race_conditions_test.test.element_text": {"param": {"id": {"str": [[42, "        def element_text(id):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_race_conditions.T": {"func": {"setUp": {"Tests -> None": [[15, "    def setUp(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_race_condition": {"var": {"routes": {"[str]": [[68, "routes = ["]]}, "route_list": {"?": [[77, "for route_list in itertools.permutations(routes, len(routes)):"]]}}, "class": {"Tests": {"<Tests>": [[14, "class Tests(IntegrationTests):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_race_conditions.create_race_conditions_": {"param": {"endpoints": {"?": [[22, "def create_race_conditions_test(endpoints):"]]}}, "func": {"test": {"? -> None": [[23, "    def test(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_race_conditions": {"var": {"DELAY_TIME": {"float": [[19, "DELAY_TIME = 0.2"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_race_conditions.create_race_conditions_test.test.delay": {"var": {"i": {"?": [[38, "            for i, route in enumerate(endpoints):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integ": {"func": {"create_race_conditions_test": {"? -> ? -> None": [[22, "def create_race_conditions_test(endpoints):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_race_conditions.create_race_conditions_test.test.updat": {"param": {"value": {"?": [[34, "        def update(value):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_race_conditions.Tests.setUp": {"param": {"self": {"Tests": [[15, "    def setUp(self):"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/tests/integration/renderer/test_multi_output.py": {".home.xxm.Desktop.EMSE.dataset.dash.tests.integra": {"func": {"test_rdmo002_multi_outputs_on_single_component": {"? -> None": [[49, "def test_rdmo002_multi_outputs_on_single_component(dash_duo):"]]}, "test_rdmo001_single_input_multi_outputs_on_multiple_components": {"? -> None": [[11, "def test_rdmo001_single_input_multi_outputs_on_multiple_components(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_multi_outpu": {"func": {"test_rdmo005_set_props_behavior": {"? -> None": [[145, "def test_rdmo005_set_props_behavior(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_multi_output.test_rdmo001_single_input_multi_outputs_on_multiple_components": {"var": {"i": {"int": [[41, "        for i in range(N_OUTPUTS):"]]}, "app": {"Dash": [[14, "    app = dash.Dash(__name__)"]]}, "N_OUTPUTS": {"int": [[16, "    N_OUTPUTS = 50"]]}, "btn": {"?": [[36, "    btn = dash_duo.wait_for_element(\"#btn\")"]]}, "click": {"int": [[38, "    for click in range(1, 20):"]]}, "call_count": {"?": [[12, "    call_count = Value(\"i\")"]]}}, "func": {"update_output": {"? -> [str]": [[27, "    def update_output(n_clicks):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_multi_output.test_rdmo004_multi_output_circular_dependencie": {"param": {"dash_duo": {"?": [[114, "def test_rdmo004_multi_output_circular_dependencies(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_multi_output.test_rdmo001_single_input_multi_outputs_on_multiple_component": {"param": {"dash_duo": {"?": [[11, "def test_rdmo001_single_input_multi_outputs_on_multiple_components(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash": {"func": {"test_rdmo003_single_output_as_multi": {"? -> None": [[94, "def test_rdmo003_single_output_as_multi(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_multi_output.test_rdmo004_multi_output_circular_dependencies": {"var": {"app": {"Dash": [[115, "    app = dash.Dash(__name__)"]]}, "err_text": {"?": [[141, "    err_text = dash_duo.find_element(\"span.dash-fe-error__title\").text"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_multi_output.test_rdmo003_single_output_as_multi": {"var": {"app": {"Dash": [[95, "    app = dash.Dash(__name__)"]]}}, "param": {"dash_duo": {"?": [[94, "def test_rdmo003_single_output_as_multi(dash_duo):"]]}}, "func": {"update_output": {"? -> [str]": [[105, "    def update_output(value):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_multi_output.test_rdmo003_single_output_as_multi.update_output": {"param": {"value": {"?": [[105, "    def update_output(value):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_multi_output.test_rdmo002_multi_outputs_on_single_compone": {"var": {"call_count": {"?": [[50, "    call_count = Value(\"i\")"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_multi_output.test_rdmo004_multi_output_circular_dependenci": {"func": {"set_bc": {"? -> [?]": [[125, "    def set_bc(a):"]]}, "set_a": {"? -> str": [[119, "    def set_a(b):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_multi_output.test_rdmo005_set_props_behavior": {"var": {"app": {"Dash": [[146, "    app = dash.Dash(__name__)"]]}}, "param": {"dash_duo": {"?": [[145, "def test_rdmo005_set_props_behavior(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_multi_output.test_rdmo002_multi_outputs_on_single_component": {"var": {"app": {"Dash": [[51, "    app = dash.Dash(__name__)"]]}}, "param": {"dash_duo": {"?": [[49, "def test_rdmo002_multi_outputs_on_single_component(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_multi_output.test_rdmo002_multi_outputs_on_single_component.update_output": {"param": {"value": {"?": [[68, "    def update_output(value):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_multi_output.test_rdmo002_multi_outputs_on_single_componen": {"var": {"_html": {"?": [[75, "    _html = dash_duo.find_element(\"#output-container\").get_property(\"innerHTML\")"], [85, "    _html = dash_duo.find_element(\"#output-container\").get_property(\"innerHTML\")"]]}}, "func": {"update_output": {"? -> [dict]": [[68, "    def update_output(value):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integ": {"func": {"test_rdmo004_multi_output_circular_dependencies": {"? -> None": [[114, "def test_rdmo004_multi_output_circular_dependencies(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_multi_output.test_rdmo001_single_input_multi_outputs_on_multiple_components.update_output": {"param": {"n_clicks": {"?": [[27, "    def update_output(n_clicks):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_multi_output.test_rdmo004_multi_output_circular_dependencies.set_bc": {"param": {"a": {"?": [[125, "    def set_bc(a):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_multi_output.test_rdmo004_multi_output_circular_dependencies.set_a": {"param": {"b": {"?": [[119, "    def set_a(b):"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/dash/development/_all_keywords.py": {".home.xxm.Desktop.EMSE.dataset.dash.dash.development._all": {"var": {"python_keywords": {"[str]": [[2, "python_keywords = {"]]}, "r_keywords": {"[str]": [[49, "r_keywords = {"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/dash/_callback_context.py": {".home.xxm.Desktop.EMSE.dataset.dash.dash._callback_context.CallbackContext.input": {"param": {"self": {"CallbackContext": [[38, "    def inputs(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._callback_context.CallbackContext.states_list": {"param": {"self": {"CallbackContext": [[67, "    def states_list(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._callback_context.CallbackContext.outputs_list": {"param": {"self": {"CallbackContext": [[57, "    def outputs_list(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._callback_context.CallbackContext.respon": {"param": {"self": {"CallbackContext": [[72, "    def response(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash": {"var": {"callback_context": {"CallbackContext": [[76, "callback_context = CallbackContext()"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._callback_context.has_context": {"param": {"func": {"?": [[7, "def has_context(func):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._callback_": {"class": {"CallbackContext": {"<CallbackContext>": [[35, "class CallbackContext:"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._callback_context.h": {"func": {"assert_context": {"() -> None": [[9, "    def assert_context(*args, **kwargs):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._callback_context.FalsyList": {"func": {"__bool__": {"FalsyList -> bool": [[22, "    def __bool__(self):"]]}, "__nonzero__": {"FalsyList -> bool": [[26, "    def __nonzero__(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._callback_context.CallbackContext.inputs_list": {"param": {"self": {"CallbackContext": [[62, "    def inputs_list(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._callback": {"func": {"has_context": {"? -> () -> None": [[7, "def has_context(func):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._callback_context.CallbackContex": {"func": {"inputs": {"CallbackContext -> ?": [[38, "    def inputs(self):"]]}, "triggered": {"CallbackContext -> FalsyList": [[48, "    def triggered(self):"]]}, "states_list": {"CallbackContext -> ?": [[67, "    def states_list(self):"]]}, "states": {"CallbackContext -> ?": [[43, "    def states(self):"]]}, "outputs_list": {"CallbackContext -> ?": [[57, "    def outputs_list(self):"]]}, "inputs_list": {"CallbackContext -> ?": [[62, "    def inputs_list(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._callback_contex": {"var": {"falsy_triggered": {"FalsyList": [[31, "falsy_triggered = FalsyList([{\"prop_id\": \".\", \"value\": None}])"]]}}, "class": {"FalsyList": {"<FalsyList>": [[21, "class FalsyList(list):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._callback_context.CallbackContext": {"func": {"response": {"CallbackContext -> ?": [[72, "    def response(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._callback_context.CallbackContext.triggered": {"param": {"self": {"CallbackContext": [[48, "    def triggered(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._callback_context.FalsyList.__bool__": {"param": {"self": {"FalsyList": [[22, "    def __bool__(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._callback_context.CallbackContext.stat": {"param": {"self": {"CallbackContext": [[43, "    def states(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._callback_context.FalsyList.__nonzero__": {"param": {"self": {"FalsyList": [[26, "    def __nonzero__(self):"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/tests/integration/renderer/test_due_diligence.py": {".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_due_diligence.test_rddd001_initial_sta": {"var": {"fetched_dom": {"?": [[65, "    fetched_dom = dash_duo.dash_outerhtml_dom"]]}, "expected_dom": {"?": [[63, "        expected_dom = BeautifulSoup(fp.read().strip(), \"lxml\")"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_due_diligence.test_rddd001_initial_state": {"var": {"paths": {"?": [[83, "    paths = dash_duo.redux_state_paths"]]}, "app": {"Dash": [[14, "    app = dash.Dash(__name__)"]]}, "r": {"?": [[79, "    r = requests.get(\"{}/_dash-dependencies\".format(dash_duo.server_url))"]]}, "my_class_attrs": {"dict": [[15, "    my_class_attrs = {"]]}}, "param": {"dash_duo": {"?": [[13, "def test_rddd001_initial_state(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_due_diligenc": {"func": {"test_rddd001_initial_state": {"? -> None": [[13, "def test_rddd001_initial_state(dash_duo):"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/dash-renderer/setup.py": {".home.xxm.Desktop.EMSE.dataset.dash.dash-renderer.setu": {"var": {"package": {"?": [[5, "    package = json.load(fp)"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/dash/_utils.py": {".home.xxm.Desktop.EMSE.dataset.dash.dash._utils.for": {"param": {"tag_name": {"str": [[31, "def format_tag(tag_name, attributes, inner=\"\", closed=False, opened=False):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._utils.inputs_to_dict": {"var": {"i": {"?": [[198, "    for i in inputs_list:"]]}, "ii": {"?": [[200, "        for ii in inputsi:"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._utils.run_command_with_proce": {"var": {"is_win": {"bool": [[214, "    is_win = sys.platform == \"win32\""]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._utils.format_tag": {"param": {"attributes": {"{bool | dict | str}": [[31, "def format_tag(tag_name, attributes, inner=\"\", closed=False, opened=False):"]]}, "inner": {"str": [[31, "def format_tag(tag_name, attributes, inner=\"\", closed=False, opened=False):"]]}, "closed": {"bool": [[31, "def format_tag(tag_name, attributes, inner=\"\", closed=False, opened=False):"]]}, "opened": {"bool": [[31, "def format_tag(tag_name, attributes, inner=\"\", closed=False, opened=False):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._utils.split": {"param": {"callback_id": {"?": [[182, "def split_callback_id(callback_id):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._utils.run_command_with_process": {"var": {"proc": {"?": [[215, "    proc = subprocess.Popen(shlex.split(cmd, posix=is_win), shell=is_win)"]]}}, "param": {"cmd": {"?": [[213, "def run_command_with_process(cmd):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._utils.AttributeDict.__getattr__": {"param": {"self": {"AttributeDict": [[124, "    def __getattr__(self, key):"]]}, "key": {"?": [[124, "    def __getattr__(self, key):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._utils.get_relative_": {"param": {"path": {"?": [[61, "def get_relative_path(requests_pathname, path):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._utils.inputs_to_dic": {"var": {"inputs": {"dict": [[197, "    inputs = {}"]]}, "inputsi": {"[?]": [[199, "        inputsi = i if isinstance(i, list) else [i]"]]}, "id_str": {"None": [[201, "            id_str = stringify_id(ii[\"id\"])"]]}}, "param": {"inputs_list": {"?": [[196, "def inputs_to_dict(inputs_list):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._utils.stringify": {"param": {"id_": {"?": [[190, "def stringify_id(id_):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._u": {"func": {"interpolate_str": {"{? -> ? | str} -> {? -> ? | str} / ? -> None": [[23, "def interpolate_str(template, **data):"]]}, "split_callback_id": {"? -> {[?] | dict}": [[182, "def split_callback_id(callback_id):"]]}, "patch_collections_abc": {"str -> ?": [[99, "def patch_collections_abc(member):"]]}, "strip_relative_path": {"(?, ?) -> None": [[74, "def strip_relative_path(requests_pathname, path):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._utils.AttributeDict.__setattr__": {"param": {"self": {"AttributeDict": [[121, "    def __setattr__(self, key, value):"]]}, "value": {"?": [[121, "    def __setattr__(self, key, value):"]]}, "key": {"?": [[121, "    def __setattr__(self, key, value):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._utils": {"var": {"logger": {"?": [[16, "logger = logging.getLogger()"]]}}, "class": {"AttributeDict": {"<AttributeDict>": [[103, "class AttributeDict(dict):"]]}}, "func": {"get_relative_path": {"(?, ?) -> str": [[61, "def get_relative_path(requests_pathname, path):"]]}, "create_callback_id": {"Output -> str / ? -> str / [Output] -> str": [[159, "def create_callback_id(output):"]]}, "format_tag": {"(?, ?, str, bool, bool) -> str / (str, ?, str, bool, bool) -> str / (str, {bool | str}, str, bool, bool) -> str / (str, dict, str, bool, bool) -> str": [[31, "def format_tag(tag_name, attributes, inner=\"\", closed=False, opened=False):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._utils.split_callback": {"var": {"id_": {"?": [[186, "    id_, prop = callback_id.rsplit(\".\", 1)"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._utils.interpolate_str": {"var": {"s": {"{? -> ? | str}": [[24, "    s = template"]], "?": [[27, "        s = s.replace(key, v)"]]}, "k": {"?": [[25, "    for k, v in data.items():"]]}, "key": {"str": [[26, "        key = \"{%\" + k + \"%}\""]]}}, "param": {"template": {"{? -> ? | str}": [[23, "def interpolate_str(template, **data):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._utils.patch_collections_abc": {"param": {"member": {"str": [[99, "def patch_collections_abc(member):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._utils.AttributeDict.set_read_only": {"param": {"msg": {"str": [[133, "    def set_read_only(self, names, msg=\"Attribute is read-only\"):"]]}, "self": {"AttributeDict": [[133, "    def set_read_only(self, names, msg=\"Attribute is read-only\"):"]]}, "names": {"[str]": [[133, "    def set_read_only(self, names, msg=\"Attribute is read-only\"):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._utils.AttributeDict.__setitem__": {"param": {"self": {"AttributeDict": [[141, "    def __setitem__(self, key, val):"]]}, "val": {"?": [[141, "    def __setitem__(self, key, val):"]]}, "key": {"?": [[141, "    def __setitem__(self, key, val):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._utils.format_": {"var": {"tag": {"str": [[32, "    tag = \"<{tag} {attributes}\""]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._utils.AttributeDict.__setite": {"var": {"final_msg": {"?": [[145, "        final_msg = self.__dict__.get(\"_final\")"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._utils.AttributeDict": {"func": {"finalize": {"(AttributeDict, str) -> None": [[137, "    def finalize(self, msg=\"Object is final: No new keys may be added.\"):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._utils.AttributeDict.first": {"var": {"name": {"str": [[153, "        for name in names:"]]}, "value": {"?": [[154, "            value = self.get(name)"]]}}, "param": {"self": {"AttributeDict": [[152, "    def first(self, *names):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._utils.g": {"param": {"asset_path": {"{bool | str}": [[49, "def get_asset_path(requests_pathname, asset_path, asset_url_path):"]]}, "asset_url_path": {"str": [[49, "def get_asset_path(requests_pathname, asset_path, asset_url_path):"]]}, "requests_pathname": {"?": [[49, "def get_asset_path(requests_pathname, asset_path, asset_url_path):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash": {"func": {"inputs_to_vals": {"? -> [[?]]": [[206, "def inputs_to_vals(inputs):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._utils.strip_relative_": {"var": {"path": {"?": [[88, "        path = path.replace("]]}}, "param": {"path": {"?": [[74, "def strip_relative_path(requests_pathname, path):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._utils.AttributeDic": {"func": {"__setitem__": {"(AttributeDict, ?, ?) -> None": [[141, "    def __setitem__(self, key, val):"]]}, "__setattr__": {"(AttributeDict, ?, ?) -> None": [[121, "    def __setattr__(self, key, value):"]]}, "set_read_only": {"(AttributeDict, [str], str) -> None": [[133, "    def set_read_only(self, names, msg=\"Attribute is read-only\"):"]]}, "__getattr__": {"(AttributeDict, ?) -> ?": [[124, "    def __getattr__(self, key):"]]}, "first": {"AttributeDict -> None": [[152, "    def first(self, *names):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._utils.strip_relativ": {"param": {"requests_pathname": {"?": [[74, "def strip_relative_path(requests_pathname, path):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._utils.create_callback_id": {"param": {"output": {"{Output | [Output]}": [[159, "def create_callback_id(output):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._utils.get_relativ": {"param": {"requests_pathname": {"?": [[61, "def get_relative_path(requests_pathname, path):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._util": {"var": {"_strings": {"(?, ?)": [[20, "_strings = (type(\"\"), type(utils.bytes_to_native_str(b\"\")))"]]}}, "func": {"stringify_id": {"? -> None": [[190, "def stringify_id(id_):"]]}, "inputs_to_dict": {"? -> dict": [[196, "def inputs_to_dict(inputs_list):"]]}, "get_asset_path": {"(?, str, ?) -> str / (?, str, str) -> str / (?, bool, ?) -> str / (?, ?, ?) -> str / (?, None, ?) -> str": [[49, "def get_asset_path(requests_pathname, asset_path, asset_url_path):"]]}, "generate_hash": {"() -> ?": [[45, "def generate_hash():"]]}, "run_command_with_process": {"? -> ?": [[213, "def run_command_with_process(cmd):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._utils.inputs_to_val": {"param": {"inputs": {"?": [[206, "def inputs_to_vals(inputs):"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/tests/unit/test_resources.py": {".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.test_resources.test_external_kwarg": {"var": {"app": {"Dash": [[58, "    app = dash.Dash(__name__, serve_locally=False)"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.test_resources.StatMock": {"var": {"st_mtime": {"int": [[33, "    st_mtime = 1"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.test_resources": {"class": {"StatMock": {"<StatMock>": [[32, "class StatMock(object):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.test_resources.test_external": {"var": {"app": {"Dash": [[42, "    app = dash.Dash("]]}, "resource": {"[{bool | str}]": [[48, "    resource = app._collect_and_register_resources(app.scripts.get_all_scripts())"]]}}, "param": {"mocker": {"?": [[36, "def test_external(mocker):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.test_resourc": {"func": {"test_internal": {"? -> None": [[63, "def test_internal(mocker):"]]}, "test_external_kwarg": {"() -> None": [[57, "def test_external_kwarg():"]]}, "test_external": {"? -> None": [[36, "def test_external(mocker):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.test_resour": {"var": {"_monkey_patched_js_dist": {"[{dict | dict}]": [[5, "_monkey_patched_js_dist = ["]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.test_resources.test_internal": {"var": {"app": {"Dash": [[69, "    app = dash.Dash("]]}, "resource": {"[{bool | str}]": [[78, "            resource = app._collect_and_register_resources("]]}}, "param": {"mocker": {"?": [[63, "def test_internal(mocker):"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/tests/integration/IntegrationTests.py": {".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.IntegrationTests.IntegrationTests.tearDownCla": {"param": {"cls": {"<IntegrationTests>": [[54, "    def tearDownClass(cls):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.IntegrationTests.IntegrationTests.setUpCla": {"var": {"options": {"?": [[30, "        options = Options()"]]}}, "param": {"cls": {"<IntegrationTests>": [[27, "    def setUpClass(cls):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.IntegrationTests.IntegrationTests.wait_for_element_by_css_selector": {"param": {"self": {"IntegrationTests": [[97, "    def wait_for_element_by_css_selector(self, selector, timeout=TIMEOUT):"]]}, "timeout": {"int": [[97, "    def wait_for_element_by_css_selector(self, selector, timeout=TIMEOUT):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.IntegrationTests.IntegrationT": {"var": {"last_timestamp": {"int": [[24, "    last_timestamp = 0"]]}}, "func": {"setUpClass": {"<IntegrationTests> -> None": [[27, "    def setUpClass(cls):"]]}, "setUp": {"IntegrationTests -> None": [[59, "    def setUp(self):"]]}, "startServer": {"(IntegrationTests, ?) -> None / (Tests, Dash) -> None": [[73, "    def startServer(self, dash, **kwargs):"]]}, "percy_snapshot": {"(IntegrationTests, str) -> None / (Tests, str) -> None": [[90, "    def percy_snapshot(self, name=\"\"):"]]}, "tearDownClass": {"<IntegrationTests> -> None": [[54, "    def tearDownClass(cls):"]]}, "wait_for_element_by_css_selector": {"(IntegrationTests, ?, int) -> ?": [[97, "    def wait_for_element_by_css_selector(self, selector, timeout=TIMEOUT):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.IntegrationTests.IntegrationTests.tearDown": {"param": {"self": {"IntegrationTests": [[62, "    def tearDown(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.IntegrationTests": {"var": {"TIMEOUT": {"int": [[15, "TIMEOUT = 5"]]}}, "class": {"SeleniumDriverTimeout": {"<SeleniumDriverTimeout>": [[18, "class SeleniumDriverTimeout(Exception):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.IntegrationTests.IntegrationTests.get_log": {"var": {"entries": {"?": [[121, "        entries = self.driver.get_log(\"browser\")"]]}}, "param": {"self": {"{IntegrationTests | Tests}": [[120, "    def get_log(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.IntegrationTests.IntegrationTests.percy_snapshot": {"param": {"self": {"{IntegrationTests | Tests}": [[90, "    def percy_snapshot(self, name=\"\"):"]]}, "name": {"str": [[90, "    def percy_snapshot(self, name=\"\"):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.IntegrationTests.IntegrationTests.startServer.run": {"var": {"kws": {"dict": [[77, "            kws = dict(port=8050, debug=False, processes=4, threaded=False)"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.IntegrationTests.IntegrationTests.wait_for_element_by_css_": {"param": {"selector": {"?": [[97, "    def wait_for_element_by_css_selector(self, selector, timeout=TIMEOUT):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.IntegrationTests.IntegrationTests.clear_log": {"var": {"entries": {"?": [[116, "        entries = self.driver.get_log(\"browser\")"]]}}, "param": {"self": {"IntegrationTests": [[115, "    def clear_log(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.IntegrationTests.IntegrationTests.percy": {"var": {"snapshot_name": {"str": [[91, "        snapshot_name = \"{} - py{}.{}\".format("]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash": {"class": {"IntegrationTests": {"<IntegrationTests>": [[22, "class IntegrationTests(unittest.TestCase):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.IntegrationTests.IntegrationTests.startServe": {"func": {"run": {"() -> None": [[74, "        def run():"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.IntegrationTests.IntegrationTests.wait_for_text_to_equal": {"param": {"assertion_text": {"?": [[103, "    def wait_for_text_to_equal(self, selector, assertion_text, timeout=TIMEOUT):"]]}, "timeout": {"int": [[103, "    def wait_for_text_to_equal(self, selector, assertion_text, timeout=TIMEOUT):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.IntegrationTests.IntegrationTests.wait_until_get_log": {"var": {"cnt": {"int": [[127, "        cnt, poll = 0, 0.1"]]}}, "param": {"self": {"IntegrationTests": [[124, "    def wait_until_get_log(self, timeout=10):"]]}, "timeout": {"int": [[124, "    def wait_until_get_log(self, timeout=10):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.IntegrationTests.IntegrationTests": {"func": {"tearDown": {"IntegrationTests -> ?": [[62, "    def tearDown(self):"]]}, "get_log": {"IntegrationTests -> [?] / Tests -> [?]": [[120, "    def get_log(self):"]]}, "wait_until_get_log": {"(IntegrationTests, int) -> [?]": [[124, "    def wait_until_get_log(self, timeout=10):"]]}, "clear_log": {"IntegrationTests -> None": [[115, "    def clear_log(self):"]]}, "wait_for_text_to_equal": {"(IntegrationTests, ?, ?, int) -> None": [[103, "    def wait_for_text_to_equal(self, selector, assertion_text, timeout=TIMEOUT):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.IntegrationTests.IntegrationTests.setUpC": {"var": {"capabilities": {"?": [[33, "        capabilities = DesiredCapabilities.CHROME"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.IntegrationTests.IntegrationTests.wait_for_text_to_equa": {"var": {"el": {"?": [[104, "        el = self.wait_for_element_by_css_selector(selector)"]]}}, "param": {"self": {"IntegrationTests": [[103, "    def wait_for_text_to_equal(self, selector, assertion_text, timeout=TIMEOUT):"]]}, "selector": {"?": [[103, "    def wait_for_text_to_equal(self, selector, assertion_text, timeout=TIMEOUT):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.IntegrationTests.IntegrationTest": {"func": {"is_console_clean": {"IntegrationTests -> [?] / Tests -> [?]": [[137, "    def is_console_clean(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.IntegrationTests.IntegrationTests.is_console_clean": {"param": {"self": {"{IntegrationTests | Tests}": [[137, "    def is_console_clean(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.IntegrationTests.IntegrationTests.wait_until_get_": {"var": {"logs": {"None": [[126, "        logs = None"]], "[?]": [[129, "            logs = self.get_log()"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.IntegrationTests.IntegrationTests.setUp": {"param": {"self": {"IntegrationTests": [[59, "    def setUp(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.IntegrationTests.IntegrationTests.startServer": {"param": {"dash": {"Dash": [[73, "    def startServer(self, dash, **kwargs):"]]}, "self": {"{IntegrationTests | Tests}": [[73, "    def startServer(self, dash, **kwargs):"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/dash/testing/consts.py": {".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.consts": {"var": {"SELENIUM_GRID_DEFAULT": {"str": [[1, "SELENIUM_GRID_DEFAULT = \"http://localhost:4444/wd/hub\""]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/dash/development/component_generator.py": {".home.xxm.Desktop.EMSE.dataset.dash.dash.development.component_g": {"class": {"_CombinedFormatter": {"<_CombinedFormatter>": [[33, "class _CombinedFormatter("]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.component_generator.generate_compo": {"var": {"reserved_patterns": {"str": [[57, "    reserved_patterns = \"|\".join(\"^{}$\".format(p) for p in reserved_words)"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.component_generator": {"func": {"byteify": {"? -> [?]": [[199, "def byteify(input_object):"]]}, "safe_json_loads": {"str -> [?] / ? -> [?]": [[131, "def safe_json_loads(s):"]]}, "cli": {"() -> None": [[138, "def cli():"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.devel": {"func": {"generate_components": {"(?, ?, str, str, None, str, str, str) -> None": [[40, "def generate_components("]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.component_generator.generate_component": {"var": {"rdepends": {"str": [[46, "    rdepends=\"\","]]}, "is_windows": {"bool": [[53, "    is_windows = sys.platform == \"win32\""]]}}, "param": {"rdepends": {"str": [[49, "):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.component_generator.safe_json_l": {"var": {"jsondata_unicode": {"?": [[132, "    jsondata_unicode = json.loads(s, object_pairs_hook=OrderedDict)"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.component_generator.generate_": {"var": {"components": {"[?]": [[110, "    components = generate_classes_files(project_shortname, metadata, *generator_methods)"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.component_generat": {"var": {"reserved_words": {"[str]": [[23, "reserved_words = ["]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.component_generator.safe_json_load": {"param": {"s": {"str": [[131, "def safe_json_loads(s):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.component_generator.g": {"var": {"project_shortname": {"?": [[42, "    project_shortname,"], [51, "    project_shortname = project_shortname.replace(\"-\", \"_\").rstrip(\"/\\\\\")"]]}}, "param": {"project_shortname": {"?": [[49, "):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.component_generator.cli": {"var": {"parser": {"?": [[139, "    parser = argparse.ArgumentParser("]]}, "args": {"?": [[185, "    args = parser.parse_args()"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.component_generator.genera": {"var": {"components_source": {"?": [[41, "    components_source,"]]}}, "param": {"components_source": {"?": [[49, "):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.component_generator.generate_components": {"var": {"rpkg_data": {"None": [[103, "            rpkg_data = None"]], "?": [[101, "                rpkg_data = yaml.safe_load(yamldata)"]]}, "rprefix": {"None": [[45, "    rprefix=None,"]]}, "cmd": {"?": [[61, "    cmd = shlex.split("]]}, "extract_path": {"?": [[55, "    extract_path = pkg_resources.resource_filename(\"dash\", \"extract-meta.js\")"]]}, "ignore": {"str": [[44, "    ignore=\"^_\","]]}, "package_info_filename": {"str": [[43, "    package_info_filename=\"package.json\","]]}, "metadata": {"[?]": [[90, "    metadata = safe_json_loads(out.decode(\"utf-8\"))"]]}, "proc": {"?": [[72, "    proc = subprocess.Popen("]]}, "pkg_data": {"[?]": [[105, "            pkg_data = safe_json_loads(f.read())"]]}, "out": {"?": [[75, "    out, err = proc.communicate()"]]}}, "param": {"ignore": {"str": [[49, "):"]]}, "rprefix": {"None": [[49, "):"]]}, "package_info_filename": {"str": [[49, "):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.component_generator.generate_componen": {"var": {"rimports": {"str": [[47, "    rimports=\"\","]]}, "status": {"?": [[76, "    status = proc.poll()"]]}, "rsuggests": {"str": [[48, "    rsuggests=\"\","]]}}, "param": {"rimports": {"str": [[49, "):"]]}, "rsuggests": {"str": [[49, "):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.component_generator.byteify": {"param": {"input_object": {"?": [[199, "def byteify(input_object):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.component_generator.generate_comp": {"var": {"generator_methods": {"[(str, ?, ?, str) -> None / (?, ?, ?, ?) -> None / (?, ?, ?, str) -> None]": [[92, "    generator_methods = [generate_class_file]"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/tests/integration/renderer/test_iframe.py": {".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_iframe.test_rdif001_sandbox_allow_scripts.update_output": {"param": {"n_clicks": {"?": [[25, "    def update_output(n_clicks):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_iframe.test_rdif001_sandbox_allow_script": {"param": {"dash_duo": {"?": [[10, "def test_rdif001_sandbox_allow_scripts(dash_duo):"]]}}, "func": {"apply_cors": {"? -> None": [[33, "    def apply_cors(response):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_ifram": {"func": {"test_rdif001_sandbox_allow_scripts": {"? -> None": [[10, "def test_rdif001_sandbox_allow_scripts(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_iframe.test_rdif001_sandbox_allow_scripts": {"var": {"N_OUTPUTS": {"int": [[14, "    N_OUTPUTS = 50"]]}, "html_content": {"str": [[50, "    html_content = iframe.format(dash_duo.server_url)"]]}, "app": {"Dash": [[11, "    app = dash.Dash(__name__)"]]}, "iframe": {"str": [[42, "    iframe = \"\"\""]]}, "call_count": {"?": [[12, "    call_count = Value(\"i\")"]]}}, "func": {"update_output": {"? -> [str]": [[25, "    def update_output(n_clicks):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_iframe.test_rdif001_sandbox_allow_scripts.apply_c": {"param": {"response": {"?": [[33, "    def apply_cors(response):"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/tests/integration/test_generation.py": {".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_generatio": {"func": {"test_gene001_simple_callback": {"? -> None": [[12, "def test_gene001_simple_callback(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash": {"func": {"test_gene002_arbitrary_resources": {"? -> None": [[30, "def test_gene002_arbitrary_resources(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_generation.test_gene002_arbitrary_resources.update_container": {"param": {"n_clicks": {"?": [[36, "    def update_container(n_clicks):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_generation.test_gene002_arbitrary_resources": {"var": {"app": {"Dash": [[31, "    app = Dash(__name__)"]]}}, "func": {"update_container": {"? -> None": [[36, "    def update_container(n_clicks):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_generation.test_gene002_arbitrary_resource": {"param": {"dash_duo": {"?": [[30, "def test_gene002_arbitrary_resources(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_generation.test_gene001_simple_callback": {"var": {"app": {"Dash": [[13, "    app = Dash(__name__)"]]}}, "param": {"dash_duo": {"?": [[12, "def test_gene001_simple_callback(dash_duo):"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/tests/integration/test_scripts.py": {".home.xxm.Desktop.EMSE.dataset.dash.tests.integra": {"func": {"test_scripts_on_request": {"? -> None": [[49, "def test_scripts_on_request(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_scripts.findAsyncPlotlyJ": {"var": {"script": {"?": [[22, "    for script in scripts:"]]}}, "param": {"scripts": {"?": [[21, "def findAsyncPlotlyJs(scripts):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_scrip": {"func": {"findSyncPlotlyJs": {"? -> None": [[15, "def findSyncPlotlyJs(scripts):"]]}, "findAsyncPlotlyJs": {"? -> None": [[21, "def findAsyncPlotlyJs(scripts):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_scripts.test_script": {"param": {"dash_duo": {"?": [[28, "def test_scripts(dash_duo, is_eager):"]]}, "is_eager": {"?": [[28, "def test_scripts(dash_duo, is_eager):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration": {"func": {"test_scripts": {"(?, ?) -> None": [[28, "def test_scripts(dash_duo, is_eager):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_scripts.test_scripts_on_request": {"var": {"app": {"Dash": [[50, "    app = Dash(__name__, eager_loading=False)"]]}}, "param": {"dash_duo": {"?": [[49, "def test_scripts_on_request(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_scripts.test_scripts_on_reque": {"var": {"scripts": {"?": [[71, "    scripts = dash_duo.driver.find_elements(By.CSS_SELECTOR, \"script\")"], [80, "    scripts = dash_duo.driver.find_elements(By.CSS_SELECTOR, \"script\")"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_scripts.test_scripts_on_request.load_chart": {"param": {"n_clicks": {"?": [[54, "    def load_chart(n_clicks):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_scripts.test_scripts_on_reques": {"func": {"load_chart": {"? -> None": [[54, "    def load_chart(n_clicks):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_scripts.test_": {"var": {"scripts": {"?": [[43, "    scripts = dash_duo.driver.find_elements(By.CSS_SELECTOR, \"script\")"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_scripts.findSyncPlotlyJ": {"var": {"script": {"?": [[16, "    for script in scripts:"]]}}, "param": {"scripts": {"?": [[15, "def findSyncPlotlyJs(scripts):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.test_scripts.test_scripts": {"var": {"app": {"Dash": [[29, "    app = Dash(__name__, eager_loading=is_eager)"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/dash/_watch.py": {".home.xxm.Desktop.EMSE.dataset.dash.dash._watch.watch.walk": {"var": {"info": {"[int]": [[20, "                    info = os.stat(path)"]]}, "new_time": {"?": [[21, "                    new_time = info.st_mtime"]]}, "f": {"str": [[15, "                for f in files:"]]}, "current": {"str": [[14, "            for current, _, files in os.walk(folder):"]]}, "w": {"?": [[30, "        for w in [x for x in watched.keys() if x not in walked]:"]]}, "path": {"str": [[18, "                    path = os.path.join(current, f)"]]}, "folder": {"?": [[13, "        for folder in folders:"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._watch.wat": {"param": {"on_change": {"?": [[7, "def watch(folders, on_change, pattern=None, sleep_time=0.1):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._watch.watch": {"var": {"pattern": {"None": [[8, "    pattern = re.compile(pattern) if pattern else None"]]}, "walked": {"[str]": [[12, "        walked = []"]]}}, "param": {"folders": {"?": [[7, "def watch(folders, on_change, pattern=None, sleep_time=0.1):"]]}, "pattern": {"None": [[7, "def watch(folders, on_change, pattern=None, sleep_time=0.1):"]]}, "sleep_time": {"float": [[7, "def watch(folders, on_change, pattern=None, sleep_time=0.1):"]]}}, "func": {"walk": {"() -> None": [[11, "    def walk():"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._": {"var": {"watched": {"defaultdict": [[9, "    watched = collections.defaultdict(lambda: -1)"]]}}, "func": {"watch": {"(?, ?, None, float) -> None": [[7, "def watch(folders, on_change, pattern=None, sleep_time=0.1):"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/dash/_validate.py": {".home.xxm.Desktop.EMSE.dataset.dash.dash._validate.fail_callback": {"param": {"output_value": {"?": [[158, "def fail_callback_output(output_value, output):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._validate.validate_layout_typ": {"param": {"value": {"?": [[319, "def validate_layout_type(value):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._validate.fail_callback_output._validate_value": {"var": {"p": {"?": [[211, "            for p, j in val._traverse_with_paths():"]]}, "child": {"?": [[218, "                child = getattr(j, \"children\", None)"], [229, "            child = getattr(val, \"children\", None)"]]}}, "param": {"val": {"?": [[207, "    def _validate_value(val, index=None):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._validate.validate_callback": {"var": {"outputs": {"[?]": [[13, "    outputs = output if is_multi else [output]"]]}, "args": {"[?]": [[15, "    for args, cls in [(outputs, Output), (inputs, Input), (state, State)]:"]]}, "is_multi": {"int": [[11, "    is_multi = isinstance(output, (list, tuple))"]]}}, "param": {"output": {"?": [[10, "def validate_callback(output, inputs, state):"]]}, "state": {"?": [[10, "def validate_callback(output, inputs, state):"]]}, "inputs": {"?": [[10, "def validate_callback(output, inputs, state):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._validate.validate_j": {"param": {"registered_paths": {"?": [[284, "def validate_js_path(registered_paths, package_name, path_in_package_dist):"]]}, "path_in_package_dist": {"?": [[284, "def validate_js_path(registered_paths, package_name, path_in_package_dist):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._validate.validate_callback_arg": {"param": {"cls": {"{<Input> | <Output> | <State>}": [[19, "def validate_callback_args(args, cls):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._validate.fail_callback_": {"param": {"output": {"?": [[158, "def fail_callback_output(output_value, output):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._validate.check_obsolet": {"var": {"key": {"?": [[270, "    for key in kwargs:"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._validate": {"func": {"fail_callback_output": {"(?, ?) -> None": [[158, "def fail_callback_output(output_value, output):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._validate.validate_js_path": {"param": {"package_name": {"?": [[284, "def validate_js_path(registered_paths, package_name, path_in_package_dist):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._validate.validate_id_string": {"var": {"invalid_found": {"[str]": [[96, "    invalid_found = [x for x in invalid_chars if x in arg_id]"]]}, "invalid_chars": {"str": [[95, "    invalid_chars = \".{\""]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._validate.validate_layou": {"var": {"component_ids": {"[None]": [[339, "    component_ids = {layout_id} if layout_id else set()"]]}, "component": {"?": [[340, "    for component in layout_value._traverse():  # pylint: disable=protected-access"]]}, "component_id": {"None": [[341, "        component_id = stringify_id(getattr(component, \"id\", None))"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._validate.check_obsolete": {"param": {"kwargs": {"?": [[269, "def check_obsolete(kwargs):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._validate.validate_callback_args": {"var": {"name": {"str": [[20, "    name = cls.__name__"]]}, "arg": {"?": [[31, "    for arg in args:"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._validate.fail_callback_output._raise_invali": {"var": {"bad_type": {"?": [[162, "        bad_type = type(bad_val).__name__"]]}}, "param": {"bad_val": {"?": [[161, "    def _raise_invalid(bad_val, outer_val, path, index=None, toplevel=False):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._validate.validate_callback_": {"param": {"args": {"[?]": [[19, "def validate_callback_args(args, cls):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._validate.validate": {"var": {"layout_id": {"None": [[337, "    layout_id = stringify_id(getattr(layout_value, \"id\", None))"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._validate.fail_callback_output._raise_inval": {"var": {"index_string": {"str": [[173, "            index_string = \"[*]\" if index is None else \"[{:d}]\".format(index)"]]}, "outer_id": {"str": [[163, "        outer_id = ("]]}}, "param": {"index": {"None": [[161, "    def _raise_invalid(bad_val, outer_val, path, index=None, toplevel=False):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._validate.validate_id_strin": {"var": {"arg_id": {"?": [[93, "    arg_id = arg.component_id"]]}}, "param": {"arg": {"?": [[92, "def validate_id_string(arg):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._validate.validate_": {"param": {"index": {"?": [[308, "def validate_index(name, checks, index):"]]}, "layout": {"?": [[327, "def validate_layout(layout, layout_value):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._validate.validate_multi_return": {"var": {"i": {"?": [[130, "    for i, outi in enumerate(outputs_list):"]]}, "vi": {"?": [[132, "            vi = output_value[i]"]]}}, "param": {"callback_id": {"?": [[108, "def validate_multi_return(outputs_list, output_value, callback_id):"]]}, "outputs_list": {"?": [[108, "def validate_multi_return(outputs_list, output_value, callback_id):"]]}, "output_value": {"?": [[108, "def validate_multi_return(outputs_list, output_value, callback_id):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._valida": {"func": {"check_obsolete": {"? -> None": [[269, "def check_obsolete(kwargs):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._validate.fail_callback_outp": {"func": {"_validate_value": {"(?, None) -> None": [[207, "    def _validate_value(val, index=None):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._validate.fail_callback_output": {"var": {"i": {"?": [[250, "        for i, val in enumerate(output_value):"]]}, "valid": {"?": [[159, "    valid = _strings + (dict, int, float, type(None), Component)"]]}}, "func": {"_raise_invalid": {"(?, ?, str, None, bool) -> None / (?, Component, ?, None, bool) -> None / (?, Component, str, None, bool) -> None": [[161, "    def _raise_invalid(bad_val, outer_val, path, index=None, toplevel=False):"]]}, "_value_is_valid": {"? -> int": [[204, "    def _value_is_valid(val):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._validate.validate_index": {"var": {"plural": {"str": [[311, "        plural = \"s\" if len(missing) > 1 else \"\""]]}, "missing": {"[?]": [[309, "    missing = [i for check, i in checks if not re.compile(check).search(index)]"]]}}, "param": {"name": {"?": [[308, "def validate_index(name, checks, index):"]]}, "checks": {"?": [[308, "def validate_index(name, checks, index):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._validate.fail_callback_output._value_is_valid": {"param": {"val": {"?": [[204, "    def _value_is_valid(val):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash": {"func": {"validate_callback": {"(?, ?, ?) -> None": [[10, "def validate_callback(output, inputs, state):"]]}, "validate_layout": {"(?, ?) -> None": [[327, "def validate_layout(layout, layout_value):"]]}, "validate_multi_return": {"(?, ?, ?) -> None": [[108, "def validate_multi_return(outputs_list, output_value, callback_id):"]]}, "validate_index": {"(?, ?, ?) -> None": [[308, "def validate_index(name, checks, index):"]]}, "validate_callback_args": {"([?], {<Input> | <Output> | <State>}) -> None / (?, ?) -> None": [[19, "def validate_callback_args(args, cls):"]]}, "validate_id_string": {"? -> None": [[92, "def validate_id_string(arg):"]]}, "validate_id_dict": {"? -> None": [[74, "def validate_id_dict(arg):"]]}, "validate_layout_type": {"? -> None": [[319, "def validate_layout_type(value):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._validate.validate_id_dict": {"var": {"arg_id": {"?": [[75, "    arg_id = arg.component_id"]]}, "k": {"?": [[77, "    for k in arg_id:"]]}}, "param": {"arg": {"?": [[74, "def validate_id_dict(arg):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._validate.fail_callback_output._validate_valu": {"param": {"index": {"None": [[207, "    def _validate_value(val, index=None):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._validate.valid": {"param": {"layout_value": {"?": [[327, "def validate_layout(layout, layout_value):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash._validate.fail_callback_output._raise_invalid": {"var": {"location": {"str": [[168, "            location = \"\"\""], [174, "            location = \"\"\""]]}, "outer_type": {"?": [[166, "        outer_type = type(outer_val).__name__"]]}}, "param": {"outer_val": {"Component": [[161, "    def _raise_invalid(bad_val, outer_val, path, index=None, toplevel=False):"]]}, "path": {"str": [[161, "    def _raise_invalid(bad_val, outer_val, path, index=None, toplevel=False):"]]}, "toplevel": {"bool": [[161, "    def _raise_invalid(bad_val, outer_val, path, index=None, toplevel=False):"]]}}}, ".home.xxm.Desktop.EMSE": {"func": {"validate_js_path": {"(?, ?, ?) -> None": [[284, "def validate_js_path(registered_paths, package_name, path_in_package_dist):"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/tests/unit/test_import.py": {".home.xxm.Desktop.EMSE.dataset.dash.tests.un": {"func": {"test_dash_import_is_correct": {"() -> None": [[5, "def test_dash_import_is_correct():"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.test_import.test_dash_import_is_correc": {"var": {"imported": {"?": [[6, "    imported = importlib.import_module(\"dash\")"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/tests/unit/development/test_base_component.py": {".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_base_component.test_debc017_set_item_raises_key_error": {"var": {"c2": {"Component": [[262, "    c2 = Component(id=\"2\", children=[c1])"]]}, "c1": {"Component": [[261, "    c1 = Component(id=\"1\")"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.dev": {"func": {"test_debc003_get_item_with_children_as_component_instead_of_list": {"() -> None": [[50, "def test_debc003_get_item_with_children_as_component_instead_of_list():"]]}, "test_debc021_to_plotly_json_with_null_arguments": {"() -> None": [[307, "def test_debc021_to_plotly_json_with_null_arguments():"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_base_component.test_debc010_traverse_full_tr": {"var": {"elements": {"[?]": [[126, "    elements = [i for i in c._traverse()]"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_base_componen": {"func": {"test_debc019_del_item_from_class": {"() -> None": [[284, "def test_debc019_del_item_from_class():"]]}, "test_debc010_traverse_full_tree": {"() -> None": [[124, "def test_debc010_traverse_full_tree():"]]}, "test_debc025_iter": {"() -> None": [[372, "def test_debc025_iter():"]]}, "test_debc006_get_item_with_full_tree": {"() -> None": [[79, "def test_debc006_get_item_with_full_tree():"]]}, "test_debc018_del_item_from_list": {"() -> None": [[267, "def test_debc018_del_item_from_list():"]]}, "test_debc011_traverse_with_tuples": {"() -> None": [[130, "def test_debc011_traverse_with_tuples():"]]}, "test_debc009_del_item_full_tree": {"() -> None": [[114, "def test_debc009_del_item_full_tree():"]]}, "test_debc014_set_item": {"() -> None": [[216, "def test_debc014_set_item():"]]}, "test_debc017_set_item_raises_key_error": {"() -> None": [[260, "def test_debc017_set_item_raises_key_error():"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_base_component.test_debc005_get_item_with_nested_children_two_branches": {"var": {"c3": {"Component": [[68, "    c3 = Component(id=\"3\")"]]}, "c2": {"Component": [[67, "    c2 = Component(id=\"2\", children=[c1])"]]}, "c1": {"Component": [[66, "    c1 = Component(id=\"1\")"]]}, "c5": {"Component": [[70, "    c5 = Component(children=[c2, c4])"]]}, "c4": {"Component": [[69, "    c4 = Component(id=\"4\", children=[c3])"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_base_component.test_debc019_del_item_from_class": {"var": {"c2": {"Component": [[286, "    c2 = Component(id=\"2\", children=c1)"]]}, "c1": {"Component": [[285, "    c1 = Component(id=\"1\")"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_base_comp": {"func": {"test_debc005_get_item_with_nested_children_two_branches": {"() -> None": [[65, "def test_debc005_get_item_with_nested_children_two_branches():"]]}, "test_debc004_get_item_with_nested_children_one_branch": {"() -> None": [[56, "def test_debc004_get_item_with_nested_children_one_branch():"]]}, "test_debc013_get_item_raises_key_if_id_doesnt_exist": {"() -> None": [[198, "def test_debc013_get_item_raises_key_if_id_doesnt_exist():"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_base_component.test_debc002_get_item_with_children": {"var": {"c2": {"Component": [[46, "    c2 = Component(children=[c1])"]]}, "c1": {"Component": [[45, "    c1 = Component(id=\"1\")"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_base_component.test_debc003_get_item_with_children_as_component_instead_of_list": {"var": {"c2": {"Component": [[52, "    c2 = Component(id=\"2\", children=c1)"]]}, "c1": {"Component": [[51, "    c1 = Component(id=\"1\")"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_base_component.test_debc009_del_item_full_tr": {"var": {"keys": {"?": [[116, "    keys = reversed([k for k in c])"]]}, "key": {"?": [[117, "    for key in keys:"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_ba": {"func": {"test_debc026_component_not_children": {"() -> None": [[424, "def test_debc026_component_not_children():"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.devel": {"func": {"test_debc027_component_error_message": {"() -> None": [[440, "def test_debc027_component_error_message():"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_base_com": {"func": {"test_debc023_to_plotly_json_with_wildcards": {"() -> None": [[345, "def test_debc023_to_plotly_json_with_wildcards():"]]}, "test_debc020_to_plotly_json_without_children": {"() -> None": [[295, "def test_debc020_to_plotly_json_without_children():"]]}, "test_debc012_to_plotly_json_full_tree": {"() -> None": [[138, "def test_debc012_to_plotly_json_full_tree():"]]}, "test_debc022_to_plotly_json_with_children": {"() -> None": [[329, "def test_debc022_to_plotly_json_with_children():"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_base_compo": {"func": {"test_debc024_len": {"() -> None": [[364, "def test_debc024_len():"]]}, "test_debc001_init": {"() -> None": [[40, "def test_debc001_init():"]]}, "test_debc008_set_item_anywhere_in_tree": {"() -> None": [[102, "def test_debc008_set_item_anywhere_in_tree():"]]}, "test_debc016_set_item_with_nested_children": {"() -> None": [[235, "def test_debc016_set_item_with_nested_children():"]]}, "nested_tree": {"() -> (Component, Component, Component, Component, Component, Component)": [[15, "def nested_tree():"]]}, "test_debc015_set_item_with_children_as_list": {"() -> None": [[226, "def test_debc015_set_item_with_children_as_list():"]]}, "test_debc002_get_item_with_children": {"() -> None": [[44, "def test_debc002_get_item_with_children():"]]}, "test_debc007_len_with_full_tree": {"() -> None": [[94, "def test_debc007_len_with_full_tree():"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_base_component.test_debc006_get_item_with_full_tr": {"var": {"keys": {"[?]": [[81, "    keys = [k for k in c]"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_base_component.test_debc014_set_item": {"var": {"c2": {"Component": [[218, "    c2 = Component(id=\"2\", children=c1a)"]]}, "c1a": {"Component": [[217, "    c1a = Component(id=\"1\", children=\"Hello world\")"]]}, "c1b": {"Component": [[221, "    c1b = Component(id=\"1\", children=\"Brave new world\")"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_base_component.nested_tree": {"var": {"c": {"Component": [[36, "    c = Component(id=\"0\", children=[c5, c4])"]]}, "c3": {"Component": [[29, "    c3 = Component("]]}, "c2": {"Component": [[26, "    c2 = Component("]]}, "c1": {"Component": [[25, "    c1 = Component(id=\"0.1.x.x.0\", children=\"string\")"]]}, "c5": {"Component": [[35, "    c5 = Component(id=\"0.0\")"]]}, "c4": {"Component": [[34, "    c4 = Component(id=\"0.1\", children=c3)"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_base_component.test_debc007_len_with_full_tree": {"var": {"c": {"Component": [[95, "    c = nested_tree()[0]"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_base_component.test_debc006_get_item_with_full_tree": {"var": {"comp": {"Component": [[86, "    for comp in [c1, c2, c3, c4, c5]:"]]}, "c": {"Component": [[80, "    c, c1, c2, c3, c4, c5 = nested_tree()"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_base_component.test_debc012_to_plotly_json_full_tr": {"var": {"expected": {"dict": [[143, "    expected = {"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_base_component.test_debc011_traverse_with_tuples": {"var": {"c": {"Component": [[131, "    c, c1, c2, c3, c4, c5 = nested_tree()"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_base_component.test_debc026_component_not_": {"var": {"children": {"[{Component | int | str}]": [[425, "    children = [Component(id=\"a\"), html.Div(id=\"b\"), \"c\", 1]"], [428, "        children = children[1:] + [children[0]]"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_base_component.test_debc020_to_plotly_json_without_children": {"var": {"c": {"Component": [[296, "    c = Component(id=\"a\")"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_base_component.test_debc009_del_item_full_tree": {"var": {"c": {"Component": [[115, "    c = nested_tree()[0]"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_base_component.test_debc010_traverse_full_tree": {"var": {"c": {"Component": [[125, "    c, c1, c2, c3, c4, c5 = nested_tree()"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_base_component.test_debc025_iter": {"var": {"c": {"Component": [[380, "    c = Component("]]}, "keys": {"[str]": [[407, "    keys = [\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\"]"]]}, "mixins": {"[str]": [[392, "    mixins = ["]]}, "k": {"None": [[417, "    for k in c:"]], "str": [[409, "    for k in keys:"]]}, "m": {"str": [[404, "    for m in mixins:"]]}, "keys2": {"[None]": [[416, "    keys2 = []"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_base_component.test_debc022_to_plotly_json_with_children": {"var": {"c": {"Component": [[330, "    c = Component(id=\"a\", children=\"Hello World\")"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_base_component.test_debc026_component_not_children": {"var": {"i": {"int": [[426, "    for i in range(len(children)):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_base_component.test_debc018_del_item_from_list": {"var": {"c3": {"Component": [[270, "    c3 = Component(id=\"3\", children=[c1, c2])"]]}, "c2": {"Component": [[269, "    c2 = Component(id=\"2\")"]]}, "c1": {"Component": [[268, "    c1 = Component(id=\"1\")"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_base_component.test_debc011_traverse_with_tup": {"var": {"elements": {"[?]": [[134, "    elements = [i for i in c._traverse()]"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_base_component.test_debc008_set_item_anywhere_in_tree": {"var": {"c": {"Component": [[104, "    c = nested_tree()[0]"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_base_component.test_debc023_to_plotly_json_with_wildcards": {"var": {"c": {"Component": [[346, "    c = Component("]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_base_component.test_debc013_get_item_raises_key_if_id_doesnt_exist": {"var": {"c3": {"Component": [[211, "    c3 = Component(children=\"string with no id\")"]]}, "c2": {"Component": [[207, "    c2 = Component(id=\"2\", children=[c1])"]]}, "c": {"Component": [[199, "    c = Component()"]]}, "c1": {"Component": [[203, "    c1 = Component(id=\"1\")"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_base_component.test_debc015_set_item_with_children_as_list": {"var": {"c3": {"Component": [[230, "    c3 = Component(id=\"3\")"]]}, "c2": {"Component": [[228, "    c2 = Component(id=\"2\", children=[c1])"]]}, "c1": {"Component": [[227, "    c1 = Component(id=\"1\")"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_base_component.test_debc012_to_plotly_json_full_t": {"var": {"res": {"?": [[194, "    res = json.loads(json.dumps(c.to_plotly_json(), cls=plotly.utils.PlotlyJSONEncoder))"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_base_component.test_debc008_set_item_anywhere_in_tr": {"var": {"keys": {"[str]": [[103, "    keys = [\"0.0\", \"0.1\", \"0.1.x\", \"0.1.x.x\", \"0.1.x.x.0\"]"]]}, "new_id": {"str": [[108, "        new_id = \"new {}\".format(key)"]]}, "key": {"?": [[107, "    for key in reversed(keys):"]]}, "new_component": {"Component": [[109, "        new_component = Component(id=new_id, children=\"new string\")"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_base_component.test_debc004_get_item_with_nested_children_one_branch": {"var": {"c3": {"Component": [[59, "    c3 = Component(children=[c2])"]]}, "c2": {"Component": [[58, "    c2 = Component(id=\"2\", children=[c1])"]]}, "c1": {"Component": [[57, "    c1 = Component(id=\"1\")"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_base_component.test_debc021_to_plotly_json_with_null_arguments": {"var": {"c": {"Component": [[308, "    c = Component(id=\"a\")"], [318, "    c = Component(id=\"a\", style=None)"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_base_component.test_debc012_to_plotly_json_full_tree": {"var": {"c": {"Component": [[139, "    c = nested_tree()[0]"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_base_component.test_debc016_set_item_with_nested_children": {"var": {"c3b": {"Component": [[242, "    c3b = Component(id=\"3\")"]]}, "c2b": {"Component": [[251, "    c2b = Component(id=\"2\")"]]}, "c3": {"Component": [[238, "    c3 = Component(id=\"3\")"]]}, "c2": {"Component": [[237, "    c2 = Component(id=\"2\", children=[c1])"]]}, "c1": {"Component": [[236, "    c1 = Component(id=\"1\")"]]}, "c5": {"Component": [[240, "    c5 = Component(id=\"5\", children=[c2, c4])"]]}, "c4": {"Component": [[239, "    c4 = Component(id=\"4\", children=[c3])"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/tests/integration/callbacks/test_missing_inputs.py": {".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_inputs.test_cbmi008_multi_wildcards_and_simple_all_missing.out1": {"param": {"a": {"?": [[373, "    def out1(items, a):"]]}, "items": {"?": [[373, "    def out1(items, a):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_inputs.test_cbmi006_all_multi_wildcards_no_outputs": {"var": {"app": {"Dash": [[257, "    app = dash.Dash(__name__, suppress_callback_exceptions=True)"]]}}, "func": {"content": {"? -> {[?] | str}": [[268, "    def content(n):"]]}, "out1": {"? -> str": [[273, "    def out1(items):"]]}, "out2": {"? -> str": [[277, "    def out2(out1):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_inputs.test_cbmi004_some_missing_outputs": {"var": {"app": {"Dash": [[173, "    app = dash.Dash(__name__, suppress_callback_exceptions=True)"]]}}, "func": {"content": {"? -> {[?] | str}": [[183, "    def content(n):"]]}, "out1": {"? -> (?, ?)": [[189, "    def out1(a):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_inputs.test_cbmi009_match_wildcards_all_missing.cssid": {"param": {"v": {"str": [[464, "    def cssid(v):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_inpu": {"func": {"test_cbmi009_match_wildcards_all_missing": {"? -> None": [[399, "def test_cbmi009_match_wildcards_all_missing(dash_duo):"]]}, "test_cbmi002_follow_on_to_two_skipped_callbacks": {"? -> None": [[84, "def test_cbmi002_follow_on_to_two_skipped_callbacks(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_inputs.test_cbmi004_some_missing_outputs.out1": {"param": {"a": {"?": [[189, "    def out1(a):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_inputs.test_cbmi005_all_multi_wildcards_with_output": {"var": {"app": {"Dash": [[211, "    app = dash.Dash(__name__, suppress_callback_exceptions=True)"]]}}, "param": {"dash_duo": {"?": [[208, "def test_cbmi005_all_multi_wildcards_with_output(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_inputs": {"func": {"wait_for_queue": {"? -> None": [[8, "def wait_for_queue(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_inputs.test_cbmi007_all_multi_wildcards_some_output": {"param": {"dash_duo": {"?": [[298, "def test_cbmi007_all_multi_wildcards_some_outputs(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_inputs.test_cbmi005_all_multi_wildcards_with_output.out1": {"param": {"items": {"?": [[228, "    def out1(items):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_inputs.wait_for_queue": {"param": {"dash_duo": {"?": [[8, "def wait_for_queue(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_inputs.test_cbmi008_multi_wildcards_and_simple_all_missing": {"var": {"app": {"Dash": [[353, "    app = dash.Dash(__name__, suppress_callback_exceptions=True)"]]}}, "param": {"dash_duo": {"?": [[350, "def test_cbmi008_multi_wildcards_and_simple_all_missing(dash_duo):"]]}}, "func": {"content": {"? -> {[?] | str}": [[365, "    def content(n):"]]}, "out1": {"(?, ?) -> str": [[373, "    def out1(items, a):"]]}, "out2": {"? -> str": [[377, "    def out2(out1):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_inputs.test_cbmi009_match_wildcards_all_missing.out1": {"param": {"a": {"?": [[437, "    def out1(a, b, c, title):"]]}, "c": {"?": [[437, "    def out1(a, b, c, title):"]]}, "b": {"?": [[437, "    def out1(a, b, c, title):"]]}, "title": {"?": [[437, "    def out1(a, b, c, title):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_inputs.test_cbmi001_all_missing_inputs.content": {"param": {"n": {"?": [[29, "    def content(n):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_inputs.test_cbmi009_match_wildcards_all_missing.out2": {"param": {"out1": {"?": [[448, "    def out2(out1, title):"]]}, "title": {"?": [[448, "    def out2(out1, title):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_inputs.test_cbmi003_some_missing_inputs.out2": {"param": {"out1": {"?": [[154, "    def out2(out1):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_inputs.test_cbmi005_all_multi_wildcards_with_output.conten": {"var": {"out": {"[?]": [[224, "        out = [html.Div(\"item {}\".format(i), id={\"i\": i}) for i in range(n or 0)]"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_inputs.test_cbmi007_all_multi_wildcards_some_outputs.content": {"param": {"n": {"?": [[313, "    def content(n):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_in": {"func": {"test_cbmi005_all_multi_wildcards_with_output": {"? -> None": [[208, "def test_cbmi005_all_multi_wildcards_with_output(dash_duo):"]]}, "test_cbmi007_all_multi_wildcards_some_outputs": {"? -> None": [[298, "def test_cbmi007_all_multi_wildcards_some_outputs(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_inputs.test_cbmi004_some_missing_output": {"param": {"dash_duo": {"?": [[172, "def test_cbmi004_some_missing_outputs(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_inputs.test_cbmi001_all_missing_input": {"param": {"dash_duo": {"?": [[15, "def test_cbmi001_all_missing_inputs(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_inputs.test_cbmi001_all_missing_inputs.out2": {"param": {"out1": {"?": [[52, "    def out2(out1, title):"]]}, "title": {"?": [[52, "    def out2(out1, title):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_inputs.test_cbmi001_all_missing_inputs.out3": {"param": {"out1": {"?": [[59, "    def out3(out1, title):"]]}, "title": {"?": [[59, "    def out3(out1, title):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_inputs.test_cbmi001_all_missing_inputs.out1": {"param": {"a": {"?": [[41, "    def out1(a, b, c, title):"]]}, "c": {"?": [[41, "    def out1(a, b, c, title):"]]}, "b": {"?": [[41, "    def out1(a, b, c, title):"]]}, "title": {"?": [[41, "    def out1(a, b, c, title):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_inputs.test_cbmi009_match_wildcards_all_missing.out3": {"param": {"out1": {"?": [[458, "    def out3(out1, title):"]]}, "title": {"?": [[458, "    def out3(out1, title):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_inputs.test_cbmi005_all_multi_wildcards_with_outpu": {"func": {"content": {"? -> None": [[223, "    def content(n):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_inputs.test_cbmi008_multi_wildcards_and_simple_all_missing.content": {"param": {"n": {"?": [[365, "    def content(n):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_inputs.test_cbmi005_all_multi_wildcards_with_outp": {"func": {"out1": {"? -> str": [[228, "    def out1(items):"]]}, "out2": {"? -> str": [[232, "    def out2(out1):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_inputs.test_cbmi007_all_multi_wildcards_some_outputs.out1": {"var": {"out": {"str": [[322, "        out = \", \".join(items) or \"no items\""]]}}, "param": {"items": {"?": [[321, "    def out1(items):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_inputs.test_cbmi008_multi_wildcards_and_simple_all_missing.out2": {"param": {"out1": {"?": [[377, "    def out2(out1):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_inputs.test_cbmi005_all_multi_wildcards_with_output.out2": {"param": {"out1": {"?": [[232, "    def out2(out1):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_inputs.test_cbmi007_all_multi_wildcards_some_outputs.out2": {"param": {"out1": {"?": [[326, "    def out2(out1):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_inputs.test_cbmi003_some_missing_inputs": {"var": {"app": {"Dash": [[132, "    app = dash.Dash(__name__, suppress_callback_exceptions=True)"]]}}, "func": {"content": {"? -> {[?] | str}": [[144, "    def content(n):"]]}, "out1": {"(?, ?) -> ?": [[150, "    def out1(a, title):"]]}, "out2": {"? -> str": [[154, "    def out2(out1):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callback": {"func": {"test_cbmi001_all_missing_inputs": {"? -> None": [[15, "def test_cbmi001_all_missing_inputs(dash_duo):"]]}, "test_cbmi008_multi_wildcards_and_simple_all_missing": {"? -> None": [[350, "def test_cbmi008_multi_wildcards_and_simple_all_missing(dash_duo):"]]}, "test_cbmi004_some_missing_outputs": {"? -> None": [[172, "def test_cbmi004_some_missing_outputs(dash_duo):"]]}, "test_cbmi003_some_missing_inputs": {"? -> None": [[130, "def test_cbmi003_some_missing_inputs(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_inputs.test_cbmi007_all_multi_wildcards_some_outputs": {"var": {"app": {"Dash": [[301, "    app = dash.Dash(__name__, suppress_callback_exceptions=True)"]]}}, "func": {"content": {"? -> {[?] | str}": [[313, "    def content(n):"]]}, "out1": {"? -> (str, str)": [[321, "    def out1(items):"]]}, "out2": {"? -> str": [[326, "    def out2(out1):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_inputs.test_cbmi006_all_multi_wildcards_no_outputs.conten": {"var": {"out": {"[?]": [[269, "        out = [html.Div(\"item {}\".format(i), id={\"i\": i}) for i in range(n or 0)]"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_inputs.test_cbmi006_all_multi_wildcards_no_outputs.out1": {"param": {"items": {"?": [[273, "    def out1(items):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_inputs.test_cbmi006_all_multi_wildcards_no_outputs.out2": {"param": {"out1": {"?": [[277, "    def out2(out1):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_inputs.test_cbmi001_all_missing_inputs": {"var": {"app": {"Dash": [[16, "    app = dash.Dash(__name__, suppress_callback_exceptions=True)"]]}}, "func": {"content": {"? -> {[?] | str}": [[29, "    def content(n):"]]}, "out1": {"(?, ?, ?, ?) -> None": [[41, "    def out1(a, b, c, title):"]]}, "out2": {"(?, ?) -> str": [[52, "    def out2(out1, title):"]]}, "out3": {"(?, ?) -> str": [[59, "    def out3(out1, title):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_inputs.test_cbmi002_follow_on_to_two_skipped_callbacks": {"var": {"i": {"str": [[118, "    for i in [\"1\", \"2\", \"3\"]:"]]}, "app": {"Dash": [[85, "    app = dash.Dash(__name__, suppress_callback_exceptions=True)"]]}}, "func": {"content": {"? -> {[?] | str}": [[97, "    def content(n):"]]}, "out1": {"? -> ?": [[101, "    def out1(a):"]]}, "out2": {"? -> ?": [[105, "    def out2(b):"]]}, "out3": {"(?, ?) -> ?": [[112, "    def out3(out1, out2):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_inputs.test_cbmi003_some_missing_input": {"var": {"logs": {"?": [[162, "    logs = json.dumps(dash_duo.get_logs())"]]}}, "param": {"dash_duo": {"?": [[130, "def test_cbmi003_some_missing_inputs(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_inputs.test_cbmi002_follow_on_to_two_skipped_callbacks.out1": {"param": {"a": {"?": [[101, "    def out1(a):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_inputs.test_cbmi002_follow_on_to_two_skipped_callbacks.out3": {"param": {"out1": {"?": [[112, "    def out3(out1, out2):"]]}, "out2": {"?": [[112, "    def out3(out1, out2):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_inputs.test_cbmi002_follow_on_to_two_skipped_callbacks.out2": {"param": {"b": {"?": [[105, "    def out2(b):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing": {"func": {"test_cbmi006_all_multi_wildcards_no_outputs": {"? -> None": [[254, "def test_cbmi006_all_multi_wildcards_no_outputs(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_inputs.test_cbmi003_some_missing_inputs.out1": {"param": {"a": {"?": [[150, "    def out1(a, title):"]]}, "title": {"?": [[150, "    def out1(a, title):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_inputs.test_cbmi009_match_wildcards_all_missing": {"var": {"app": {"Dash": [[402, "    app = dash.Dash(__name__, suppress_callback_exceptions=True)"]]}}, "param": {"dash_duo": {"?": [[399, "def test_cbmi009_match_wildcards_all_missing(dash_duo):"]]}}, "func": {"content": {"? -> {[?] | str}": [[415, "    def content(n):"]]}, "out1": {"(?, ?, ?, ?) -> None": [[437, "    def out1(a, b, c, title):"]]}, "out2": {"(?, ?) -> str": [[448, "    def out2(out1, title):"]]}, "out3": {"(?, ?) -> str": [[458, "    def out3(out1, title):"]]}, "cssid": {"str -> str": [[464, "    def cssid(v):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_inputs.test_cbmi002_follow_on_to_two_skipped_callbacks.content": {"param": {"n": {"?": [[97, "    def content(n):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_inputs.test_cbmi006_all_multi_wildcards_no_output": {"param": {"dash_duo": {"?": [[254, "def test_cbmi006_all_multi_wildcards_no_outputs(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_inputs.test_cbmi002_follow_on_to_two_skipped_callback": {"param": {"dash_duo": {"?": [[84, "def test_cbmi002_follow_on_to_two_skipped_callbacks(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_inputs.test_cbmi004_some_missing_outputs.content": {"param": {"n": {"?": [[183, "    def content(n):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_inputs.test_cbmi008_multi_wildcards_and_simple_all_missing.conten": {"var": {"out": {"[?]": [[366, "        out = [html.Div(\"item {}\".format(i), id={\"i\": i}) for i in range(n or 0)]"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_inputs.test_cbmi009_match_wildcards_all_missing.content": {"param": {"n": {"?": [[415, "    def content(n):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_inputs.test_cbmi003_some_missing_inputs.content": {"param": {"n": {"?": [[144, "    def content(n):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_inputs.test_cbmi005_all_multi_wildcards_with_output.content": {"param": {"n": {"?": [[223, "    def content(n):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_inputs.test_cbmi006_all_multi_wildcards_no_outputs.content": {"param": {"n": {"?": [[268, "    def content(n):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_missing_inputs.test_cbmi007_all_multi_wildcards_some_outputs.conten": {"var": {"out": {"[?]": [[314, "        out = [html.Div(\"item {}\".format(i), id={\"i\": i}) for i in range(n or 0)]"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/tests/integration/devtools/test_devtools_ui.py": {".home.xxm.Desktop.EMSE.dataset.dash.tests.integr": {"func": {"test_dvui002_disable_ui_config": {"? -> None": [[37, "def test_dvui002_disable_ui_config(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_devtools_ui.test_dvui002_disable_ui_config": {"var": {"app": {"Dash": [[38, "    app = dash.Dash(__name__)"]]}}, "param": {"dash_duo": {"?": [[37, "def test_dvui002_disable_ui_config(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_devtools_ui.test_dvui001_disable_props_check_config": {"var": {"app": {"Dash": [[10, "    app = dash.Dash(__name__)"]]}}, "param": {"dash_duo": {"?": [[9, "def test_dvui001_disable_props_check_config(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE": {"func": {"test_dvui001_disable_props_check_config": {"? -> None": [[9, "def test_dvui001_disable_props_check_config(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_devtools_ui.test_dvui002_disable_ui_confi": {"var": {"logs": {"str": [[56, "    logs = str(wait.until(dash_duo.get_logs, timeout=1))"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/@plotly/dash-generator-test-component-standard/base/__init__.py": {".home.xxm.Desktop.EMSE.dataset.dash.@plotly.dash-generator-test-component-standard.base": {"var": {"_css_dist": {"[dict]": [[27, "_css_dist = ["]]}, "_js_dist": {"[dict]": [[15, "_js_dist = ["]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.@plotly.dash-generator-test-component-standard.ba": {"var": {"__version__": {"?": [[10, "__version__ = package['version']"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.@plotly.dash-generator-test-component-standard": {"var": {"_basepath": {"str": [[4, "_basepath = _os.path.dirname(__file__)"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.@plotly.dash-generator-test-component-standard.bas": {"var": {"_component": {"?": [[34, "for _component in __all__:"]]}, "_filepath": {"str": [[5, "_filepath = _os.path.abspath(_os.path.join(_basepath, 'package.json'))"]]}, "package_name": {"?": [[9, "package_name = package['name'].replace(' ', '_').replace('-', '_')"]]}, "package": {"?": [[7, "    package = json.load(f)"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/tests/unit/development/test_metadata_conversions.py": {".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_metadata_conversions.test_docgen_to_python_args": {"var": {"prop_name": {"?": [[84, "    for prop_name, prop in list(props.items()):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_metadata_conversions.test_": {"var": {"docstring": {"str": [[72, "    docstring = create_docstring("]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_metadata_conversi": {"func": {"test_docgen_to_python_args": {"? -> None": [[81, "def test_docgen_to_python_args(load_test_metadata_json):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_metadata_conv": {"func": {"test_docstring": {"? -> None": [[71, "def test_docstring(load_test_metadata_json):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_metadata_conversio": {"var": {"expected_arg_strings": {"?": [[11, "expected_arg_strings = OrderedDict("]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_metadata_conversions.test_docstring": {"param": {"load_test_metadata_json": {"?": [[71, "def test_docstring(load_test_metadata_json):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_metadata_conversions.test_docgen_to_python_arg": {"var": {"props": {"?": [[82, "    props = load_test_metadata_json[\"props\"]"]]}}, "param": {"load_test_metadata_json": {"?": [[81, "def test_docgen_to_python_args(load_test_metadata_json):"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/tests/integration/devtools/test_hot_reload.py": {".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_hot_reload": {"var": {"GOUDA": {"str": [[17, "GOUDA = \"\"\""]]}, "RED_BG": {"str": [[11, "RED_BG = \"\"\""]]}}, "func": {"replace_file": {"(str, str) -> (str, str) / (?, ?) -> (str, str)": [[22, "def replace_file(filename, new_content):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_hot_reload.test_dvhr001_hot_reload": {"var": {"app": {"Dash": [[35, "    app = dash.Dash(__name__, assets_folder=\"hr_assets\")"]]}}, "func": {"new_text": {"? -> None": [[42, "    def new_text(n):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_hot_reload.test_dvhr001": {"var": {"hot_reload_settings": {"dict": [[47, "    hot_reload_settings = dict("]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration": {"func": {"test_dvhr001_hot_reload": {"? -> ?": [[34, "def test_dvhr001_hot_reload(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_hot_reload.test_dvhr001_h": {"var": {"soft_reload_file": {"str": [[67, "    soft_reload_file, old_soft = replace_file(\"hot_reload.css\", RED_BG)"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_hot_reload.replace_fil": {"param": {"new_content": {"str": [[22, "def replace_file(filename, new_content):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_hot_reload.replace_file": {"var": {"path": {"str": [[23, "    path = os.path.join(os.path.dirname(__file__), \"hr_assets\", filename)"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_hot_reload.test_dvhr001_hot": {"var": {"hard_reload_file": {"str": [[88, "    hard_reload_file, old_hard = replace_file(\"hot_reload.js\", GOUDA)"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_hot_reload.test_dvhr001_hot_reloa": {"param": {"old_soft": {"?": [[67, "    soft_reload_file, old_soft = replace_file(\"hot_reload.css\", RED_BG)"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_hot_reload.test_dvhr001_hot_reload.new_text": {"param": {"n": {"?": [[42, "    def new_text(n):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_hot_reload.test_dvhr001_hot_rel": {"param": {"dash_duo": {"?": [[34, "def test_dvhr001_hot_reload(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_hot_reload.replace_fi": {"var": {"old_content": {"str": [[26, "        old_content = fp.read()"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.devtools.test_hot_reload.replace_": {"param": {"filename": {"str": [[22, "def replace_file(filename, new_content):"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/tests/unit/test_fingerprint.py": {".home.xxm.Desktop.EMSE.dataset.dash.tests.u": {"var": {"valid_fingerprints": {"[str]": [[79, "valid_fingerprints = ["]]}, "invalid_fingerprints": {"[str]": [[98, "invalid_fingerprints = ["]]}}, "func": {"test_fingerprint": {"() -> None": [[106, "def test_fingerprint():"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.test_fingerprint.test_": {"var": {"fingerprint": {"str": [[109, "        fingerprint = build_fingerprint("]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.test_fingerprint": {"var": {"version": {"int": [[3, "version = 1"]]}, "hash_value": {"int": [[4, "hash_value = 1"]]}, "valid_resources": {"[dict]": [[6, "valid_resources = ["]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.test_fingerprint.test_fingerprint": {"var": {"resource": {"dict": [[107, "    for resource in valid_resources:"]], "str": [[122, "    for resource in valid_fingerprints:"], [126, "    for resource in invalid_fingerprints:"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/dash/development/component_loader.py": {".home.xxm.Desktop.EMSE.dataset.dash.dash.development.component_loader._get_metadata": {"var": {"json_string": {"str": [[17, "        json_string = data_file.read()"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.component_loader.generate_cla": {"var": {"components": {"[?]": [[85, "    components = generate_classes_files(namespace, data, generate_class_file)"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.component_load": {"func": {"generate_classes": {"(str, str) -> None / (?, str) -> None": [[63, "def generate_classes(namespace, metadata_path=\"lib/metadata.json\"):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.component_loader": {"func": {"load_components": {"(str, str) -> [{<Component> | ? -> () -> None}] / (?, str) -> [{<Component> | ? -> () -> None}]": [[24, "def load_components(metadata_path, namespace=\"default_namespace\"):"]]}, "_get_metadata": {"str -> None / ? -> None": [[14, "def _get_metadata(metadata_path):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.component_loader.generate_classe": {"var": {"imports_path": {"str": [[79, "    imports_path = os.path.join(namespace, \"_imports_.py\")"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.component_loader._g": {"param": {"metadata_path": {"str": [[14, "def _get_metadata(metadata_path):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.component_loader.generate_classes": {"var": {"data": {"None": [[78, "    data = _get_metadata(metadata_path)"]]}}, "param": {"metadata_path": {"str": [[63, "def generate_classes(namespace, metadata_path=\"lib/metadata.json\"):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.component_loader.generate_cl": {"param": {"namespace": {"str": [[63, "def generate_classes(namespace, metadata_path=\"lib/metadata.json\"):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.component_loader.load_components": {"var": {"componentData": {"?": [[46, "        componentData = data[componentPath]"]]}, "component": {"{<Component> | ? -> () -> None}": [[54, "        component = generate_class("]]}, "data": {"None": [[42, "    data = _get_metadata(metadata_path)"]]}, "componentPath": {"?": [[45, "    for componentPath in data:"]]}, "name": {"?": [[53, "        name = componentPath.split(\"/\").pop().split(\".\")[0]"]]}}, "param": {"metadata_path": {"str": [[24, "def load_components(metadata_path, namespace=\"default_namespace\"):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.component_loader._get_me": {"var": {"data": {"?": [[18, "        data = json.JSONDecoder(object_pairs_hook=collections.OrderedDict).decode("]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.component_loader.load_": {"var": {"components": {"[{<Component> | ? -> () -> None}]": [[40, "    components = []"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.development.component_loader.load_component": {"param": {"namespace": {"str": [[24, "def load_components(metadata_path, namespace=\"default_namespace\"):"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/tests/unit/development/test_generate_class.py": {".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_generate_class.test_docstring": {"param": {"component_class": {"?": [[105, "def test_docstring(component_class):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_generate_cla": {"func": {"test_required_props": {"? -> None": [[115, "def test_required_props(component_written_class):"]]}, "test_docstring": {"? -> None": [[105, "def test_docstring(component_class):"]]}, "test_no_events": {"? -> None": [[111, "def test_no_events(component_class):"]]}, "test_to_plotly_json": {"? -> None": [[40, "def test_to_plotly_json(component_class):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_generate_class.test_arguments_become_attributes": {"var": {"k": {"?": [[66, "    for k, v in list(kwargs.items()):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_generate_class.test_attrs_match_forbidden_pr": {"param": {"component_class": {"?": [[125, "def test_attrs_match_forbidden_props(component_class):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_generate_class.test_attrs_match_forbidden_prop": {"var": {"extra_attrs": {"?": [[133, "    extra_attrs = set(a for a in base_attrs if a[0] != \"_\")"]]}, "base_attrs": {"?": [[132, "    base_attrs = set(dir(c))"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_generate_class.test_repr_with_wildcards": {"var": {"c": {"?": [[97, "    c = component_class(id=\"1\", **{\"data-one\": \"one\", \"aria-two\": \"two\"})"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_gener": {"func": {"component_class": {"? -> {<Component> | ? -> () -> None}": [[14, "def component_class(load_test_metadata_json):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_generate_class.test_arguments_become_attribute": {"var": {"kwargs": {"dict": [[64, "    kwargs = {\"id\": \"my-id\", \"children\": \"text children\", \"optionalArray\": [[1, 2, 3]]}"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_generate_class.test_repr_nested_argu": {"param": {"component_class": {"?": [[89, "def test_repr_nested_arguments(component_class):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_generate_class.test_to_plotly_j": {"param": {"component_class": {"?": [[40, "def test_to_plotly_json(component_class):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_generate_class.test_repr_with_wildcard": {"var": {"repr_string": {"str": [[100, "    repr_string = repr(c)"]]}, "aria_first": {"str": [[99, "    aria_first = \"Table(id='1', aria-two='two', data-one='one')\""]]}}, "param": {"component_class": {"?": [[96, "def test_repr_with_wildcards(component_class):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_g": {"func": {"component_written_class": {"() -> {<Component> | ? -> () -> None}": [[24, "def component_written_class():"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_generate_class.component_c": {"param": {"load_test_metadata_json": {"?": [[14, "def component_class(load_test_metadata_json):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_generate_class.test_repr_with_wildc": {"var": {"data_first": {"str": [[98, "    data_first = \"Table(id='1', data-one='one', aria-two='two')\""]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_generate_class.test_attrs_match_forbidden_pro": {"var": {"expected_attrs": {"[str]": [[130, "    expected_attrs = set(reserved_words + [\"children\"]) - {\"_.*\"}"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_generate_class.test_required": {"param": {"component_written_class": {"?": [[115, "def test_required_props(component_written_class):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_generate_class.test_repr_single_default_argument": {"var": {"c2": {"?": [[72, "    c2 = component_class(children=\"text children\")"]]}, "c1": {"?": [[71, "    c1 = component_class(\"text children\")"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_generate_c": {"func": {"test_repr_single_default_argument": {"? -> None": [[70, "def test_repr_single_default_argument(component_class):"]]}, "test_repr_multiple_arguments": {"? -> None": [[82, "def test_repr_multiple_arguments(component_class):"]]}, "test_repr_single_non_default_argument": {"? -> None": [[77, "def test_repr_single_non_default_argument(component_class):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_generate_class.test_repr_single_non_default_argu": {"param": {"component_class": {"?": [[77, "def test_repr_single_non_default_argument(component_class):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_generate_class.test_attrs_match_forbidden": {"var": {"prop_attrs": {"?": [[141, "    prop_attrs = set(dir(c2))"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_generate_class.test_repr_multiple_argu": {"param": {"component_class": {"?": [[82, "def test_repr_multiple_arguments(component_class):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_generate_cl": {"func": {"test_repr_nested_arguments": {"? -> None": [[89, "def test_repr_nested_arguments(component_class):"]]}, "test_arguments_become_attributes": {"? -> None": [[63, "def test_arguments_become_attributes(component_class):"]]}, "test_attrs_match_forbidden_props": {"? -> None": [[125, "def test_attrs_match_forbidden_props(component_class):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_generate_class.test_repr_single_non_default_argument": {"var": {"c": {"?": [[78, "    c = component_class(id=\"my-id\")"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_generate_class.test_repr_nested_arguments": {"var": {"c3": {"?": [[92, "    c3 = component_class(children=c2)"]]}, "c2": {"?": [[91, "    c2 = component_class(id=\"2\", children=c1)"]]}, "c1": {"?": [[90, "    c1 = component_class(id=\"1\")"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_generate_class.component_written_class": {"var": {"path": {"str": [[25, "    path = os.path.join(_dir, \"metadata_required_test.json\")"]]}, "required_data": {"?": [[28, "        required_data = json.JSONDecoder(object_pairs_hook=OrderedDict).decode("]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_generate_class.test_arguments_become_attribu": {"var": {"component_instance": {"?": [[65, "    component_instance = component_class(**kwargs)"]]}}, "param": {"component_class": {"?": [[63, "def test_arguments_become_attributes(component_class):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_generate_class.test_repr_single_default_argu": {"param": {"component_class": {"?": [[70, "def test_repr_single_default_argument(component_class):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_generate_class.component_written_cla": {"var": {"json_string": {"str": [[27, "        json_string = data_file.read()"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_generate_class.test_repr_multiple_arguments": {"var": {"c": {"?": [[85, "    c = component_class(id=\"my id\", optionalArray=[1, 2, 3])"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_generate_class.test_attrs_match_forbidden_props": {"var": {"c2": {"?": [[140, "    c2 = component_class(\"children\", id=\"c2\", optionalArray=[1])"]]}, "c": {"?": [[131, "    c = component_class()"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_generate_class.test_no_ev": {"param": {"component_class": {"?": [[111, "def test_no_events(component_class):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_generate_class.test_to_plotly_json": {"var": {"c": {"?": [[41, "    c = component_class()"], [48, "    c = component_class(id=\"my-id\")"], [55, "    c = component_class(id=\"my-id\", optionalArray=None)"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.development.test_gen": {"func": {"test_repr_with_wildcards": {"? -> None": [[96, "def test_repr_with_wildcards(component_class):"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/tests/integration/dash_assets/test_dash_assets.py": {".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.dash_assets.test_dash_assets.test_dada002_external_files_init": {"var": {"app": {"Dash": [[87, "    app = Dash(__name__, external_scripts=js_files, external_stylesheets=css_files)"]]}, "css_files": {"[{dict | str}]": [[77, "    css_files = ["]]}, "js_files": {"[{dict | str}]": [[62, "    js_files = ["]]}, "css_urls": {"[{dict | str}]": [[114, "    css_urls = [x[\"href\"] if isinstance(x, dict) else x for x in css_files]"]]}, "js_urls": {"[{dict | str}]": [[113, "    js_urls = [x[\"src\"] if isinstance(x, dict) else x for x in js_files]"]]}}, "param": {"dash_duo": {"?": [[61, "def test_dada002_external_files_init(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.dash_assets.test_dash_assets.test_dada001_asset": {"param": {"dash_duo": {"?": [[10, "def test_dada001_assets(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.dash_assets.test_dash_assets.test_dada002_external_files_ini": {"var": {"fmt": {"?": [[116, "    for fmt, url in itertools.chain("]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.dash_assets.test_dash_assets.test_dada001_assets": {"var": {"app": {"Dash": [[11, "    app = Dash(__name__, assets_ignore=\".*ignored.*\")"]]}, "order": {"[str]": [[46, "    order = ["]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.dash_assets.test_dash_assets.test_dada001_a": {"var": {"tested": {"?": [[44, "    tested = json.loads(dash_duo.wait_for_element(\"#tested\").text)"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.dash_assets.test_dash": {"func": {"test_dada001_assets": {"? -> None": [[10, "def test_dada001_assets(dash_duo):"]]}, "test_dada002_external_files_init": {"? -> None": [[61, "def test_dada002_external_files_init(dash_duo):"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/dash/testing/dash_page.py": {".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.dash_page.DashPageMixin.redux_state_is_loading": {"param": {"self": {"DashPageMixin": [[62, "    def redux_state_is_loading(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.dash_page.DashPageM": {"func": {"redux_state_is_loading": {"DashPageMixin -> ?": [[62, "    def redux_state_is_loading(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.dash_page.DashPageMixin.dash_entry_locator": {"param": {"self": {"DashPageMixin": [[15, "    def dash_entry_locator(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.dash_page.DashPageMixin.redux_state_rq": {"param": {"self": {"DashPageMixin": [[36, "    def redux_state_rqs(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.dash_page.DashPageMixin.get_session_storag": {"param": {"self": {"DashPageMixin": [[81, "    def get_session_storage(self, session_id=\"session\"):"]]}, "session_id": {"str": [[81, "    def get_session_storage(self, session_id=\"session\"):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.dash_page.DashPageMixin.dash_outerhtml_dom": {"param": {"self": {"DashPageMixin": [[19, "    def dash_outerhtml_dom(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.dash_page.DashPageMixin.get_local_storag": {"param": {"self": {"DashPageMixin": [[76, "    def get_local_storage(self, store_id=\"local\"):"]]}, "store_id": {"str": [[76, "    def get_local_storage(self, store_id=\"local\"):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.dash_p": {"class": {"DashPageMixin": {"<DashPageMixin>": [[4, "class DashPageMixin(object):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.dash_page.DashPageMix": {"func": {"dash_innerhtml_dom": {"DashPageMixin -> ?": [[23, "    def dash_innerhtml_dom(self):"]]}, "window_store": {"DashPageMixin -> ?": [[70, "    def window_store(self):"]]}, "get_session_storage": {"(DashPageMixin, str) -> ?": [[81, "    def get_session_storage(self, session_id=\"session\"):"]]}, "clear_session_storage": {"DashPageMixin -> None": [[89, "    def clear_session_storage(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.dash_page.DashPageMixin": {"func": {"redux_state_rqs": {"DashPageMixin -> ?": [[36, "    def redux_state_rqs(self):"]]}, "dash_outerhtml_dom": {"DashPageMixin -> ?": [[19, "    def dash_outerhtml_dom(self):"]]}, "redux_state_paths": {"DashPageMixin -> ?": [[27, "    def redux_state_paths(self):"]]}, "_wait_for_callbacks": {"DashPageMixin -> ?": [[73, "    def _wait_for_callbacks(self):"]]}, "clear_local_storage": {"DashPageMixin -> None": [[86, "    def clear_local_storage(self):"]]}, "get_local_storage": {"(DashPageMixin, str) -> ?": [[76, "    def get_local_storage(self, store_id=\"local\"):"]]}, "clear_storage": {"DashPageMixin -> None": [[92, "    def clear_storage(self):"]]}, "_get_dash_dom_by_attribute": {"(DashPageMixin, ?) -> ? / (DashPageMixin, str) -> ?": [[5, "    def _get_dash_dom_by_attribute(self, attr):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.dash_page.DashPageMixin.redux_state_path": {"param": {"self": {"DashPageMixin": [[27, "    def redux_state_paths(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.dash_page.DashPageMixin.window_stor": {"param": {"self": {"DashPageMixin": [[70, "    def window_store(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.dash_page.DashPageMixin.clear_storag": {"param": {"self": {"DashPageMixin": [[92, "    def clear_storage(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.dash_page.DashPageMixi": {"func": {"dash_entry_locator": {"DashPageMixin -> str": [[15, "    def dash_entry_locator(self):"]]}, "devtools_error_count_locator": {"DashPageMixin -> str": [[11, "    def devtools_error_count_locator(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.dash_page.DashPageMixin.dash_innerhtml_dom": {"param": {"self": {"DashPageMixin": [[23, "    def dash_innerhtml_dom(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.dash_page.DashPageMixin._wait_for_callback": {"param": {"self": {"DashPageMixin": [[73, "    def _wait_for_callbacks(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.dash_page.DashPageMixin.clear_session_storag": {"param": {"self": {"DashPageMixin": [[89, "    def clear_session_storage(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.dash_page.DashPageMixin.clear_local_storag": {"param": {"self": {"DashPageMixin": [[86, "    def clear_local_storage(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.dash_page.DashPageMixin._get_dash_dom_by_attribute": {"param": {"attr": {"str": [[5, "    def _get_dash_dom_by_attribute(self, attr):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.dash_page.DashPageMixin._get_dash_dom_by_attribut": {"param": {"self": {"DashPageMixin": [[5, "    def _get_dash_dom_by_attribute(self, attr):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.dash_page.DashPageMixin.devtools_error_count_locator": {"param": {"self": {"DashPageMixin": [[11, "    def devtools_error_count_locator(self):"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/tests/unit/test_browser.py": {".home.xxm.Desktop.EMSE.dataset.dash.tests.un": {"func": {"test_browser_use_remote_webdriver": {"? -> None": [[21, "def test_browser_use_remote_webdriver(tmpdir):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.test_browser.test_browser_smoke": {"param": {"tmpdir": {"?": [[7, "def test_browser_smoke(browser_type, tmpdir):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.test_browser.test_browser_smok": {"var": {"browser": {"Browser": [[9, "    browser = Browser("]]}}, "param": {"browser_type": {"?": [[7, "def test_browser_smoke(browser_type, tmpdir):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.uni": {"func": {"test_browser_smoke": {"(?, ?) -> None": [[7, "def test_browser_smoke(browser_type, tmpdir):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.test_browser.test_browser_use_remote_webdrive": {"param": {"tmpdir": {"?": [[21, "def test_browser_use_remote_webdriver(tmpdir):"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/tests/integration/callbacks/test_prevent_initial.py": {".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callback": {"func": {"test_cbpi001_prevent_initial_call": {"(?, ?) -> None": [[95, "def test_cbpi001_prevent_initial_call(flavor, dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_prevent_initial.content_callback": {"param": {"app": {"Dash": [[26, "def content_callback(app, flavor, layout):"]]}, "layout": {"?": [[26, "def content_callback(app, flavor, layout):"]]}, "flavor": {"?": [[26, "def content_callback(app, flavor, layout):"]]}}, "func": {"set_content": {"? -> ?": [[37, "        def set_content(_):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_prevent_initial.test_cbpi002_pattern_matching.d": {"param": {"_": {"?": [[225, "    def d(_):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_prevent_initial.test_cbpi001_prevent_initial_call": {"var": {"app": {"Dash": [[96, "    app = make_app(flavor)"]]}}, "param": {"dash_duo": {"?": [[95, "def test_cbpi001_prevent_initial_call(flavor, dash_duo):"]]}}, "func": {"d": {"? -> None": [[137, "    def d(_):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_prevent_initial.const_callbac": {"var": {"kwargs": {"dict": [[45, "    kwargs = {}"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_prevent_initial.content_callbac": {"var": {"kwargs": {"dict": [[27, "    kwargs = {}"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_prevent_initial.concat_callback.f": {"var": {"out": {"str": [[90, "            out = \"\".join(str(arg) for arg in args)"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_prevent_initial.concat_callback": {"var": {"multi_out": {"int": [[66, "    multi_out = isinstance(outputs, (list, tuple))"]]}}, "param": {"outputs": {"{Output | [Output]}": [[61, "def concat_callback(app, flavor, outputs, inputs, prevent_initial_call=False):"]]}, "app": {"Dash": [[61, "def concat_callback(app, flavor, outputs, inputs, prevent_initial_call=False):"]]}, "prevent_initial_call": {"bool": [[61, "def concat_callback(app, flavor, outputs, inputs, prevent_initial_call=False):"]]}, "flavor": {"?": [[61, "def concat_callback(app, flavor, outputs, inputs, prevent_initial_call=False):"]]}, "inputs": {"[Input]": [[61, "def concat_callback(app, flavor, outputs, inputs, prevent_initial_call=False):"]]}}, "func": {"f": {"() -> str": [[89, "        def f(*args):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_prevent_initial.content_callback.set_content": {"param": {"_": {"?": [[37, "        def set_content(_):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_prevent_initial.concat_callbac": {"var": {"kwargs": {"dict": [[62, "    kwargs = {}"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_prevent_initial.test_cbpi001_prevent_initial_c": {"var": {"layout": {"?": [[98, "    layout = html.Div("]]}}, "param": {"flavor": {"?": [[95, "def test_cbpi001_prevent_initial_call(flavor, dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_prevent_initi": {"var": {"flavors": {"[dict]": [[10, "flavors = ["]]}}, "func": {"content_callback": {"(?, ?, ?) -> None / (Dash, ?, ?) -> None": [[26, "def content_callback(app, flavor, layout):"]]}, "concat_callback": {"(?, ?, ?, ?, bool) -> None / (Dash, ?, Output, [Input], bool) -> None / (Dash, ?, [Output], [Input], bool) -> None": [[61, "def concat_callback(app, flavor, outputs, inputs, prevent_initial_call=False):"]]}, "const_callback": {"(?, ?, ?, ?, ?, bool) -> None / (Dash, ?, str, Output, [Input], bool) -> None / (Dash, ?, [str], [Output], [Input], bool) -> None": [[44, "def const_callback(app, flavor, val, outputs, inputs, prevent_initial_call=False):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_prevent_initial.test_cbpi003_multi_output": {"param": {"dash_duo": {"?": [[271, "def test_cbpi003_multi_outputs(flavor, dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_prevent_initial.test_cbpi001_prevent_initial_call.d": {"param": {"_": {"?": [[137, "    def d(_):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_prevent_initial.test_cbpi003_multi_outputs": {"var": {"app": {"Dash": [[272, "    app = make_app(flavor)"]]}, "layout": {"?": [[274, "    layout = html.Div("]]}}, "param": {"flavor": {"?": [[271, "def test_cbpi003_multi_outputs(flavor, dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_prevent_initial.test_cbpi002_pattern_matching": {"var": {"app": {"Dash": [[182, "    app = make_app(flavor)"]]}, "layout": {"?": [[184, "    layout = html.Div("]]}}, "param": {"dash_duo": {"?": [[180, "def test_cbpi002_pattern_matching(flavor, dash_duo):"]]}, "flavor": {"?": [[180, "def test_cbpi002_pattern_matching(flavor, dash_duo):"]]}}, "func": {"d": {"? -> None": [[225, "    def d(_):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_prevent_initial.make_app": {"var": {"kwargs": {"dict": [[20, "    kwargs = {}"]]}}, "param": {"flavor": {"?": [[19, "def make_app(flavor):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_prevent_initial.const_callback": {"var": {"vstr": {"?": [[50, "        vstr = json.dumps(val)"]]}}, "param": {"inputs": {"[Input]": [[44, "def const_callback(app, flavor, val, outputs, inputs, prevent_initial_call=False):"]]}, "prevent_initial_call": {"bool": [[44, "def const_callback(app, flavor, val, outputs, inputs, prevent_initial_call=False):"]]}, "val": {"{[str] | str}": [[44, "def const_callback(app, flavor, val, outputs, inputs, prevent_initial_call=False):"]]}, "outputs": {"{Output | [Output]}": [[44, "def const_callback(app, flavor, val, outputs, inputs, prevent_initial_call=False):"]]}, "app": {"Dash": [[44, "def const_callback(app, flavor, val, outputs, inputs, prevent_initial_call=False):"]]}, "flavor": {"?": [[44, "def const_callback(app, flavor, val, outputs, inputs, prevent_initial_call=False):"]]}}, "func": {"f": {"() -> str": [[57, "        def f(*args):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_prevent_initia": {"func": {"test_cbpi003_multi_outputs": {"(?, ?) -> None": [[271, "def test_cbpi003_multi_outputs(flavor, dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.callbacks.test_prevent_initial": {"func": {"test_cbpi002_pattern_matching": {"(?, ?) -> None": [[180, "def test_cbpi002_pattern_matching(flavor, dash_duo):"]]}, "make_app": {"? -> Dash": [[19, "def make_app(flavor):"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/tests/integration/renderer/test_loading_states.py": {".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_loading_states.test_rdls003_update_title.update": {"param": {"n": {"?": [[199, "    def update(n):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_loading_states.test_rdls001_multi_loading_compo": {"func": {"input_triggers_nested": {"? -> (dict, ?, ?)": [[51, "    def input_triggers_nested(value):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_loading_states.test_rdls002_chained_loading_states.update_output_1": {"param": {"n_clicks": {"?": [[103, "    def update_output_1(n_clicks):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_loading_states.test_rdls002_chained_loading_states.update_output_2": {"param": {"children": {"?": [[108, "    def update_output_2(children):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_loading_states.test_rdls002_chained_loading_state": {"param": {"dash_duo": {"?": [[76, "def test_rdls002_chained_loading_states(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_loading_states.test_rdls002_chained_loading_states.find_text": {"var": {"n": {"?": [[139, "        for n, v in spec.items():"]]}}, "param": {"spec": {"dict": [[132, "    def find_text(spec):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_loading_states.test_rdls001_multi_loading_components.input_triggers_nested": {"param": {"value": {"?": [[51, "    def input_triggers_nested(value):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_loading_states.test_rdls001_multi_loading_component": {"param": {"dash_duo": {"?": [[12, "def test_rdls001_multi_loading_components(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_loading_states.test_rdls002_chained_loading_states.update_output_34": {"param": {"children": {"?": [[116, "    def update_output_34(children):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_loading_states.test_rdls002_chained_loading_states.find_tex": {"var": {"templates": {"[str]": [[133, "        templates = ["]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_loading_states.test_rdls002_chained_loading_stat": {"func": {"find_spinners": {"() -> None": [[122, "    def find_spinners(*nums):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_loading_states.test_rdls003": {"param": {"expected_update_title": {"?": [[183, "def test_rdls003_update_title(dash_duo, kwargs, expected_update_title):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_loading_states.test_rdls002_chained_loading_states": {"var": {"app": {"Dash": [[78, "    app = dash.Dash(__name__)"]]}, "lock1": {"?": [[77, "    lock1, lock2, lock34 = Lock(), Lock(), Lock()"]]}, "btn": {"?": [[147, "    btn = dash_duo.find_element(\"#button\")"]]}}, "func": {"find_text": {"dict -> None": [[132, "    def find_text(spec):"]]}, "update_output_2": {"? -> str": [[108, "    def update_output_2(children):"]]}, "update_output_1": {"? -> str": [[103, "    def update_output_1(n_clicks):"]]}, "loading_wrapped_div": {"(str, str) -> ?": [[80, "    def loading_wrapped_div(_id, color):"]]}, "update_output_34": {"? -> (str, str)": [[116, "    def update_output_34(children):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_loading_states.test_rdls002_chained_loading_states.loading_wrapped_div": {"param": {"color": {"str": [[80, "    def loading_wrapped_div(_id, color):"]]}, "_id": {"str": [[80, "    def loading_wrapped_div(_id, color):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash": {"func": {"test_rdls001_multi_loading_components": {"? -> None": [[12, "def test_rdls001_multi_loading_components(dash_duo):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_loading": {"func": {"test_rdls003_update_title": {"(?, ?, ?) -> None": [[183, "def test_rdls003_update_title(dash_duo, kwargs, expected_update_title):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_loading_states.test_rdls001_multi_loading_com": {"func": {"wait_for_no_spinners": {"() -> None": [[60, "    def wait_for_no_spinners():"]]}, "wait_for_all_spinners": {"() -> None": [[55, "    def wait_for_all_spinners():"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_loading_states.test_rdls002_chained_loading_states.find_spinners": {"var": {"n": {"?": [[127, "        for n in nums:"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_loading_states.test_rdls003_update_title": {"var": {"lock": {"?": [[185, "    lock = Lock()"]]}, "app": {"Dash": [[184, "    app = dash.Dash(\"Dash\", **kwargs)"]]}}, "param": {"dash_duo": {"?": [[183, "def test_rdls003_update_title(dash_duo, kwargs, expected_update_title):"]]}, "kwargs": {"?": [[183, "def test_rdls003_update_title(dash_duo, kwargs, expected_update_title):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_loading_states.test_rdls003_update_titl": {"func": {"update": {"? -> ?": [[199, "    def update(n):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.renderer.test_loading_states.test_rdls001_multi_loading_components": {"var": {"lock": {"?": [[13, "    lock = Lock()"]]}, "app": {"Dash": [[15, "    app = dash.Dash(__name__)"]]}}}, ".home.xxm.Desktop.EMSE": {"func": {"test_rdls002_chained_loading_states": {"? -> None": [[76, "def test_rdls002_chained_loading_states(dash_duo):"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/dash/fingerprint.py": {".home.xxm.Desktop.EMSE.dataset.dash.dash": {"func": {"build_fingerprint": {"(str, ?, int) -> str / (?, ?, ?) -> str": [[7, "def build_fingerprint(path, version, hash_value):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.fingerprint.build_fingerprin": {"var": {"path_parts": {"[str]": [[8, "    path_parts = path.split(\"/\")"]]}}, "param": {"path": {"str": [[7, "def build_fingerprint(path, version, hash_value):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.das": {"func": {"check_fingerprint": {"? -> (str, bool) / str -> (str, bool)": [[19, "def check_fingerprint(path):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.fingerprint.check_fingerprin": {"var": {"path_parts": {"[str]": [[20, "    path_parts = path.split(\"/\")"]]}}, "param": {"path": {"str": [[19, "def check_fingerprint(path):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.fingerprint.check_fingerpri": {"var": {"name_parts": {"[str]": [[21, "    name_parts = path_parts[-1].split(\".\")"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.fingerprint": {"var": {"cache_regex": {"?": [[3, "cache_regex = re.compile(r\"^v[\\w-]+m[0-9a-fA-F]+$\")"]]}, "version_clean": {"?": [[4, "version_clean = re.compile(r\"[^\\w-]\")"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.fingerprint.build_fingerprint": {"var": {"filename": {"str": [[9, "    filename, extension = path_parts[-1].split(\".\", 1)"]]}}, "param": {"version": {"?": [[7, "def build_fingerprint(path, version, hash_value):"]]}, "hash_value": {"int": [[7, "def build_fingerprint(path, version, hash_value):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.fingerprint.check_fingerprint": {"var": {"original_name": {"str": [[25, "        original_name = \".\".join([name_parts[0]] + name_parts[2:])"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/tests/unit/dash/test_dash_import.py": {".home.xxm.Desktop.EMSE.dataset.dash.tests.un": {"func": {"test_dddi001_dash_import_is_correct": {"() -> None": [[5, "def test_dddi001_dash_import_is_correct():"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.dash.test_dash_import.test_dddi001_dash_import_is_correc": {"var": {"imported": {"?": [[6, "    imported = importlib.import_module(\"dash\")"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/dash/dash.py": {".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash.ru": {"var": {"dev_tools_hot_reload_watch_interval": {"None": [[1462, "        dev_tools_hot_reload_watch_interval=None,"]]}, "dev_tools_hot_reload_interval": {"None": [[1461, "        dev_tools_hot_reload_interval=None,"]]}}, "param": {"dev_tools_hot_reload_watch_interval": {"None": [[1467, "    ):"]]}, "dev_tools_hot_reload_interval": {"None": [[1467, "    ):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash._setup_dev_too": {"param": {"self": {"{CustomDash | Dash}": [[1208, "    def _setup_dev_tools(self, **kwargs):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash._generate_meta_html": {"var": {"has_charset": {"int": [[671, "        has_charset = any(\"charset\" in x for x in meta_tags)"]]}, "tags": {"[str]": [[673, "        tags = []"]]}, "meta_tags": {"?": [[667, "        meta_tags = self.config.meta_tags"]]}, "has_ie_compat": {"int": [[668, "        has_ie_compat = any("]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash._add_assets_resourc": {"var": {"res": {"dict": [[1057, "        res = {\"asset_path\": url_path, \"filepath\": file_path}"]]}}, "param": {"self": {"Dash": [[1056, "    def _add_assets_resource(self, url_path, file_path):"]]}, "file_path": {"str": [[1056, "    def _add_assets_resource(self, url_path, file_path):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash._collect_and_register_resource": {"var": {"srcs": {"{[str] | [{bool | str}]}": [[565, "        srcs = []"]]}, "static_url": {"str": [[592, "                static_url = self.get_asset_url(resource[\"asset_path\"])"]]}, "paths": {"{[?] | [bool] | bool}": [[571, "                paths = [paths] if isinstance(paths, str) else paths"]], "bool": [[570, "                paths = resource[\"relative_package_path\"]"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash": {"var": {"include_assets_files": {"bool": [[241, "        include_assets_files=True,"]]}, "assets_ignore": {"str": [[238, "        assets_ignore=\"\","]]}, "callback_id": {"str": [[960, "        callback_id = self._insert_callback(output, inputs, state, prevent_initial_call)"]]}, "index": {"{? -> ? | str}": [[748, "        index = self.interpolate_index("]]}, "external_scripts": {"None": [[249, "        external_scripts=None,"]]}, "prevent_initial_callbacks": {"bool": [[252, "        prevent_initial_callbacks=False,"]]}, "index_string": {"str": [[248, "        index_string=_default_index,"]]}, "dev_tools_silence_routes_logging": {"None": [[1464, "        dev_tools_silence_routes_logging=None,"]]}, "dev_tools_prune_errors": {"None": [[1465, "        dev_tools_prune_errors=None,"]]}, "dev_tools_serve_dev_bundles": {"None": [[1459, "        dev_tools_serve_dev_bundles=None,"]]}, "assets_blueprint_name": {"str": [[381, "        assets_blueprint_name = \"{}{}\".format("]]}, "suppress_callback_exceptions": {"None": [[251, "        suppress_callback_exceptions=None,"]]}}, "param": {"include_assets_files": {"bool": [[257, "    ):"]]}, "assets_ignore": {"str": [[257, "    ):"]]}, "_assets_files": {"bool": [[367, "        if isinstance(plugins, patch_collections_abc(\"Iterable\")):"]]}, "external_scripts": {"str": [[257, "    ):"]]}, "_layout": {"bool": [[367, "        if isinstance(plugins, patch_collections_abc(\"Iterable\")):"]]}, "prevent_initial_callbacks": {"None": [[257, "    ):"]]}, "index_string": {"str": [[257, "    ):"]]}, "_layout_is_function": {"{CustomDash | Dash}": [[367, "        if isinstance(plugins, patch_collections_abc(\"Iterable\")):"]]}, "dev_tools_prune_errors": {"None": [[1467, "    ):"]]}, "dev_tools_silence_routes_logging": {"None": [[1467, "    ):"]]}, "css": {"str": [[367, "        if isinstance(plugins, patch_collections_abc(\"Iterable\")):"]]}, "scripts": {"{CustomDash | Dash}": [[367, "        if isinstance(plugins, patch_collections_abc(\"Iterable\")):"]]}, "routes": {"<Css>": [[367, "        if isinstance(plugins, patch_collections_abc(\"Iterable\")):"]]}, "logger": {"bool": [[367, "        if isinstance(plugins, patch_collections_abc(\"Iterable\")):"]]}, "dev_tools_serve_dev_bundles": {"None": [[1467, "    ):"]]}, "suppress_callback_exceptions": {"None": [[257, "    ):"]]}, "validation_layout": {"Scripts": [[367, "        if isinstance(plugins, patch_collections_abc(\"Iterable\")):"]]}}, "func": {"_setup_dev_tools": {"CustomDash -> AttributeDict / Dash -> AttributeDict": [[1208, "    def _setup_dev_tools(self, **kwargs):"]]}, "run_server": {"(Dash, str, str, str, bool, None, None, None, None, None, None, None, None, None) -> ?": [[1451, "    def run_server("]]}, "_walk_assets_directory": {"Dash -> None": [[1065, "    def _walk_assets_directory(self):"]]}, "_add_url": {"(CustomDash, str, Dash -> ?, str) -> ? / (CustomDash, str, Dash -> None, str) -> None / (CustomDash, str, (Dash, ?, ?) -> None, str) -> None / (Dash, str, Dash -> {? -> ? | str}, str) -> None / (Dash, str, Dash -> ?, str) -> None / (Dash, str, (Dash, ?, ?) -> None, str) -> None / (Dash, str, Dash -> None, str) -> None / (Dash, str, Dash -> None, [str]) -> None / (Dash, str, () -> ?, str) -> None": [[425, "    def _add_url(self, name, view_func, methods=(\"GET\",)):"]]}, "serve_layout": {"Dash -> None": [[493, "    def serve_layout(self):"]]}, "__init__": {"? -> ?": [[232, "    def __init__("]]}, "_serve_default_favicon": {"() -> ?": [[1104, "    def _serve_default_favicon():"]]}, "index": {"Dash -> {? -> ? | str}": [[722, "    def index(self, *args, **kwargs):  # pylint: disable=unused-argument"]]}, "_collect_and_register_resources": {"(Dash, [dict]) -> [{bool | str}] / (Dash, ?) -> [str]": [[542, "    def _collect_and_register_resources(self, resources):"]]}, "layout": {"Dash -> None": [[437, "    def layout(self):"]], "{() -> ? | () -> ? | () -> ? | ? -> ?}": [[444, "    def layout(self, value):"]]}, "enable_dev_tools": {"(Dash, bool, None, None, None, None, None, None, None, None, None) -> bool": [[1235, "    def enable_dev_tools("]]}, "_insert_callback": {"(Dash, ?, ?, (), None) -> str / (Dash, Output, [Input], [State], None) -> str / (Dash, [Output], [Input], (), None) -> str / (Dash, [Output], [Input], [State], None) -> str / (Dash, ?, ?, ?, ?) -> str / (Dash, Output, [Input], (), None) -> str": [[829, "    def _insert_callback(self, output, inputs, state, prevent_initial_call):"]]}, "init_app": {"(CustomDash, None) -> None / (Dash, None) -> None": [[374, "    def init_app(self, app=None):"]]}, "get_asset_url": {"(Dash, str) -> str / (Dash, bool) -> str / (Dash, ?) -> str / (Dash, None) -> str": [[1109, "    def get_asset_url(self, path):"]]}, "serve_component_suites": {"(Dash, ?, ?) -> None": [[684, "    def serve_component_suites(self, package_name, fingerprinted_path):"]]}, "_config": {"Dash -> dict": [[502, "    def _config(self):"]]}, "_layout_value": {"Dash -> None": [[440, "    def _layout_value(self):"]]}, "index_string": {"{? -> ? | str}": [[488, "    def index_string(self, value):"]], "Dash -> str": [[484, "    def index_string(self):"]]}, "dependencies": {"Dash -> ?": [[826, "    def dependencies(self):"]]}, "_add_assets_resource": {"(Dash, str, ?) -> dict / (Dash, ?, ?) -> dict / (Dash, str, str) -> dict": [[1056, "    def _add_assets_resource(self, url_path, file_path):"]]}, "interpolate_index": {"(Dash, str, str, str, str, str, str, str, str) -> {? -> ? | str}": [[768, "    def interpolate_index("]]}, "_generate_renderer": {"Dash -> ?": [[659, "    def _generate_renderer(self):"]]}, "clientside_callback": {"(Dash, ClientsideFunction, [Output], [Input], (), None) -> None / (Dash, str, Output, [Input], (), None) -> None / (Dash, ClientsideFunction, [Output], [Input], [State], None) -> None / (Dash, ClientsideFunction, Output, [Input], (), None) -> None / (Dash, str, [Output], [Input], (), None) -> None / (Dash, ClientsideFunction, Output, [Input], [State], None) -> None / (Dash, ?, ?, ?, (), None) -> None": [[850, "    def clientside_callback("]]}, "callback": {"(Dash, ?, ?, (), None) -> ? -> ? / (Dash, Output, [Input], (), None) -> () -> str -> ? -> ? / ? -> None -> ? -> ? / ? -> dict -> () -> ?": [[948, "    def callback(self, output, inputs, state=(), prevent_initial_call=None):"]]}, "_setup_server": {"Dash -> None": [[1037, "    def _setup_server(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash.serve_reload": {"var": {"_hash": {"?": [[529, "            _hash = _reload.hash"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash.__in": {"var": {"update_title": {"str": [[255, "        update_title=\"Updating...\","]]}}, "param": {"update_title": {"None": [[257, "    ):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash.clientside_callback": {"var": {"out0": {"? -> list": [[925, "                out0 = output[0]"]], "{Output | [Output]}": [[923, "            out0 = output"]]}, "self": {"Dash": [[851, "        self, clientside_function, output, inputs, state=(), prevent_initial_call=None"]]}, "namespace": {"str": [[927, "            namespace = \"_dashprivate_{}\".format(out0.component_id)"], [940, "            namespace = clientside_function.namespace"]]}, "function_name": {"str": [[928, "            function_name = \"{}\".format(out0.component_property)"], [941, "            function_name = clientside_function.function_name"]]}}, "param": {"inputs": {"[Input]": [[852, "    ):"]]}, "prevent_initial_call": {"None": [[852, "    ):"]]}, "clientside_function": {"{ClientsideFunction | str}": [[852, "    ):"]]}, "self": {"Dash": [[852, "    ):"]]}, "state": {"{() | [State]}": [[852, "    ):"]]}, "output": {"{Output | [Output]}": [[852, "    ):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash.enable_dev_tools": {"var": {"debug": {"bool": [[1237, "        debug=None,"], [1320, "            debug = get_combined_config(\"debug\", None, True)"]]}, "_reload": {"AttributeDict": [[1341, "            _reload = self._hot_reload"]]}}, "param": {"debug": {"bool": [[1247, "    ):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash.get_relative_path": {"var": {"asset": {"str": [[1155, "        asset = get_relative_path(self.config.requests_pathname_prefix, path)"]]}}, "param": {"self": {"Dash": [[1118, "    def get_relative_path(self, path):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash.run_server": {"var": {"self": {"Dash": [[1452, "        self,"]]}, "ssl_context": {"?": [[1573, "            ssl_context = flask_run_options.get(\"ssl_context\")"]]}, "host": {"str": [[1453, "        host=os.getenv(\"HOST\", \"127.0.0.1\"),"]]}, "dev_tools_ui": {"None": [[1457, "        dev_tools_ui=None,"]]}, "debug": {"bool": [[1456, "        debug=False,"], [1547, "        debug = self.enable_dev_tools("]]}, "path": {"?": [[1575, "            path = self.config.requests_pathname_prefix"]]}}, "param": {"debug": {"bool": [[1467, "    ):"]]}, "self": {"Dash": [[1467, "    ):"]]}, "host": {"str": [[1467, "    ):"]]}, "dev_tools_ui": {"None": [[1467, "    ):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash._on_assets_change.delete_resource": {"var": {"r": {"?": [[1437, "                        for r in resources:"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash.__init__": {"var": {"name": {"?": [[265, "                name = getattr(server, \"name\", \"__main__\")"]], "str": [[234, "        name=None,"], [267, "            name = name if name else \"__main__\""]]}, "plugin": {"?": [[368, "            for plugin in plugins:"]]}, "self": {"{CustomDash | Dash}": [[233, "        self,"]]}, "compress": {"None": [[246, "        compress=None,"]]}, "server": {"bool": [[235, "        server=True,"]]}, "plugins": {"None": [[254, "        plugins=None,"]]}}, "param": {"self": {"{CustomDash | Dash}": [[257, "    ):"]]}, "plugins": {"{CustomDash | Dash}": [[367, "        if isinstance(plugins, patch_collections_abc(\"Iterable\")):"]], "bool": [[257, "    ):"]]}, "compress": {"None": [[257, "    ):"]]}, "name": {"str": [[257, "    ):"]]}, "server": {"bool": [[257, "    ):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash._setup_serv": {"var": {"eager": {"?": [[1042, "            eager = getattr(module, \"_force_eager_loading\", False)"]]}, "eager_loading": {"?": [[1039, "        eager_loading = self.config.eager_loading"], [1043, "            eager_loading = eager_loading or eager"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash.run_s": {"func": {"verify_url_part": {"(?, int, str) -> None / (?, str, str) -> None": [[1580, "                def verify_url_part(served_part, url_part, part_name):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash.dependenci": {"param": {"self": {"Dash": [[826, "    def dependencies(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash._add_assets_resource": {"param": {"url_path": {"str": [[1056, "    def _add_assets_resource(self, url_path, file_path):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash._generate_css_dist_htm": {"var": {"external_links": {"?": [[599, "        external_links = self.config.external_stylesheets"]]}, "links": {"[{bool | str}]": [[600, "        links = self._collect_and_register_resources(self.css.get_all_css())"]]}}, "param": {"self": {"Dash": [[598, "    def _generate_css_dist_html(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash.callback": {"var": {"multi": {"int": [[961, "        multi = isinstance(output, (list, tuple))"]]}}, "param": {"output": {"Output": [[948, "    def callback(self, output, inputs, state=(), prevent_initial_call=None):"]]}, "self": {"Dash": [[948, "    def callback(self, output, inputs, state=(), prevent_initial_call=None):"]]}, "prevent_initial_call": {"None": [[948, "    def callback(self, output, inputs, state=(), prevent_initial_call=None):"]]}, "state": {"()": [[948, "    def callback(self, output, inputs, state=(), prevent_initial_call=None):"]]}, "inputs": {"[Input]": [[948, "    def callback(self, output, inputs, state=(), prevent_initial_call=None):"]]}}, "func": {"wrap_func": {"() -> str -> ? -> ? / ? -> None -> ? -> ? / ? -> dict -> () -> ?": [[963, "        def wrap_func(func):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash.index_string": {"param": {"self": {"Dash": [[484, "    def index_string(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash._on_assets_change.delete_": {"param": {"resources": {"[?]": [[1435, "                    def delete_resource(resources):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash._insert_callback": {"var": {"prevent_initial_call": {"?": [[831, "            prevent_initial_call = self.config.prevent_initial_callbacks"]]}}, "param": {"output": {"{Output | [Output]}": [[829, "    def _insert_callback(self, output, inputs, state, prevent_initial_call):"]]}, "self": {"Dash": [[829, "    def _insert_callback(self, output, inputs, state, prevent_initial_call):"]]}, "prevent_initial_call": {"None": [[829, "    def _insert_callback(self, output, inputs, state, prevent_initial_call):"]]}, "state": {"{() | [State]}": [[829, "    def _insert_callback(self, output, inputs, state, prevent_initial_call):"]]}, "inputs": {"[Input]": [[829, "    def _insert_callback(self, output, inputs, state, prevent_initial_call):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash.enable_dev_tools._wrap_error": {"var": {"skip": {"int": [[1378, "                skip = 0"], [1381, "                        skip = int((i + 1) / 2)"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash._setup_server": {"var": {"module_name": {"?": [[1040, "        for module_name in ComponentRegistry.registry:"]]}, "module": {"?": [[1041, "            module = sys.modules[module_name]"]]}}, "param": {"self": {"Dash": [[1037, "    def _setup_server(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash.callback.wrap_fu": {"func": {"add_context": {"() -> ?": [[965, "            def add_context(*args, **kwargs):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash._collect_and_register_resources._relative_u": {"param": {"relative_package_path": {"str": [[547, "        def _relative_url_path(relative_package_path=\"\", namespace=\"\"):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash.dispat": {"var": {"changed_props": {"?": [[1024, "        changed_props = body.get(\"changedPropIds\", [])"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash._collect_and_regist": {"var": {"is_dynamic_resource": {"?": [[567, "            is_dynamic_resource = resource.get(\"dynamic\", False)"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash.serve_reload_has": {"var": {"hard": {"?": [[527, "            hard = _reload.hard"]]}, "changed": {"?": [[528, "            changed = _reload.changed_assets"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash.init_": {"param": {"app": {"None": [[374, "    def init_app(self, app=None):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash.serve_component_sui": {"var": {"request_etag": {"?": [[715, "            request_etag = flask.request.headers.get(\"If-None-Match\")"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash.run_server.verify": {"param": {"url_part": {"{int | str}": [[1580, "                def verify_url_part(served_part, url_part, part_name):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash._collect_and_register_": {"var": {"resource": {"dict": [[566, "        for resource in resources:"]]}}, "param": {"resources": {"[dict]": [[542, "    def _collect_and_register_resources(self, resources):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash._layout_valu": {"param": {"self": {"Dash": [[440, "    def _layout_value(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash._": {"var": {"config": {"dict": [[504, "        config = {"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash._collect_and_register_resources": {"var": {"rel_path": {"?": [[573, "                for rel_path in paths:"]]}}, "func": {"_relative_url_path": {"(str, str) -> str": [[547, "        def _relative_url_path(relative_package_path=\"\", namespace=\"\"):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash.dispatch": {"var": {"body": {"?": [[1015, "        body = flask.request.get_json()"]]}, "args": {"[[?]]": [[1031, "        args = inputs_to_vals(inputs) + inputs_to_vals(state)"]]}, "outputs_list": {"{[?] | dict}": [[1019, "        outputs_list = body.get(\"outputs\") or split_callback_id(output)"]]}, "func": {"?": [[1033, "        func = self.callback_map[output][\"callback\"]"]]}, "output": {"?": [[1018, "        output = body[\"output\"]"]]}, "response": {"?": [[1029, "        response = flask.g.dash_response = flask.Response(mimetype=\"application/json\")"]]}}, "param": {"self": {"Dash": [[1014, "    def dispatch(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Das": {"param": {"_hot_reload": {"<Scripts>": [[367, "        if isinstance(plugins, patch_collections_abc(\"Iterable\")):"]]}}, "func": {"get_relative_path": {"(Dash, ?) -> str": [[1118, "    def get_relative_path(self, path):"]]}, "_generate_config_html": {"Dash -> str": [[654, "    def _generate_config_html(self):"]]}, "_generate_meta_html": {"Dash -> str": [[666, "    def _generate_meta_html(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash.__init": {"var": {"base_prefix": {"bool": [[272, "        base_prefix, routes_prefix, requests_prefix = pathname_configs("]]}, "eager_loading": {"bool": [[240, "        eager_loading=False,"]]}, "serve_locally": {"bool": [[245, "        serve_locally=True,"]]}, "show_undo_redo": {"bool": [[253, "        show_undo_redo=False,"]]}}, "param": {"eager_loading": {"bool": [[257, "    ):"]]}, "serve_locally": {"bool": [[257, "    ):"]]}, "show_undo_redo": {"bool": [[257, "    ):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash.serve_component_suites": {"var": {"mimetype": {"?": [[690, "        mimetype = mimetypes.types_map.get(extension, \"application/octet-stream\")"]]}, "tag": {"?": [[713, "            tag = response.get_etag()[0]"]]}, "path_in_pkg": {"str": [[685, "        path_in_pkg, has_fingerprint = check_fingerprint(fingerprinted_path)"]]}, "package": {"?": [[692, "        package = sys.modules[package_name]"]]}}, "param": {"fingerprinted_path": {"?": [[684, "    def serve_component_suites(self, package_name, fingerprinted_path):"]]}, "package_name": {"?": [[684, "    def serve_component_suites(self, package_name, fingerprinted_path):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash.get_asset_ur": {"param": {"self": {"Dash": [[1109, "    def get_asset_url(self, path):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash._config": {"param": {"self": {"Dash": [[502, "    def _config(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.D": {"var": {"requests_pathname_prefix": {"None": [[243, "        requests_pathname_prefix=None,"]]}, "routes_pathname_prefix": {"None": [[244, "        routes_pathname_prefix=None,"]]}}, "param": {"requests_pathname_prefix": {"None": [[257, "    ):"]]}, "registered_paths": {"Css": [[367, "        if isinstance(plugins, patch_collections_abc(\"Iterable\")):"]]}, "routes_pathname_prefix": {"None": [[257, "    ):"]]}}, "func": {"_invalid_resources_handler": {"? -> (?, int)": [[1100, "    def _invalid_resources_handler(err):"]]}, "strip_relative_path": {"(Dash, ?) -> None": [[1159, "    def strip_relative_path(self, path):"]]}, "serve_reload_hash": {"Dash -> None": [[524, "    def serve_reload_hash(self):"]]}, "dispatch": {"Dash -> None": [[1014, "    def dispatch(self):"]]}, "_generate_css_dist_html": {"Dash -> str": [[598, "    def _generate_css_dist_html(self):"]]}, "_generate_scripts_html": {"Dash -> str": [[611, "    def _generate_scripts_html(self):"]]}, "_on_assets_change": {"(Dash, ?, ?, ?) -> None": [[1400, "    def _on_assets_change(self, filename, modified, deleted):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash.enable_dev_too": {"var": {"self": {"Dash": [[1236, "        self,"]]}}, "param": {"self": {"Dash": [[1247, "    ):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash._generate_config_htm": {"param": {"self": {"Dash": [[654, "    def _generate_config_html(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash.layout": {"param": {"self": {"Dash": [[437, "    def layout(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash._insert": {"var": {"callback_id": {"str": [[834, "        callback_id = create_callback_id(output)"]]}, "callback_spec": {"{dict | dict | dict}": [[835, "        callback_spec = {"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash._generate_scripts_html": {"var": {"deps": {"[dict]": [[622, "        deps = []"]]}, "js_dist_dependency": {"?": [[623, "        for js_dist_dependency in dash_renderer._js_dist_dependencies:"]]}, "dep": {"dict": [[624, "            dep = {}"]]}, "dev": {"?": [[630, "        dev = self._dev_tools.serve_dev_bundles"]]}, "srcs": {"[{bool | str}]": [[631, "        srcs = ("]]}, "mode": {"str": [[620, "        mode = \"dev\" if self._dev_tools[\"props_check\"] is True else \"prod\""]]}, "key": {"?": [[625, "            for key, value in js_dist_dependency.items():"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash._collect_and_register_resourc": {"param": {"self": {"Dash": [[542, "    def _collect_and_register_resources(self, resources):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash._generate_scripts_htm": {"param": {"self": {"Dash": [[611, "    def _generate_scripts_html(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash.callback.wrap_": {"param": {"func": {"{() -> str | () -> str | ? -> None | ? -> dict}": [[963, "        def wrap_func(func):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash.index": {"var": {"title": {"?": [[728, "        title = getattr(self, \"title\", \"Dash\")"]]}, "favicon_mod_time": {"int": [[731, "            favicon_mod_time = os.path.getmtime("]]}, "favicon": {"str": [[742, "        favicon = format_tag("]]}, "favicon_url": {"str": [[734, "            favicon_url = self.get_asset_url(self._favicon) + \"?m={}\".format("], [738, "            favicon_url = \"{}_favicon.ico?v={}\".format("]]}, "metas": {"str": [[726, "        metas = self._generate_meta_html()"]]}, "renderer": {"?": [[727, "        renderer = self._generate_renderer()"]]}, "scripts": {"str": [[723, "        scripts = self._generate_scripts_html()"]]}, "config": {"str": [[725, "        config = self._generate_config_html()"]]}, "checks": {"((str, str), (str, str), (str, str), (str, str))": [[759, "        checks = ("]]}, "css": {"str": [[724, "        css = self._generate_css_dist_html()"]]}}, "param": {"self": {"Dash": [[722, "    def index(self, *args, **kwargs):  # pylint: disable=unused-argument"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash.callback.wrap_func.add_contex": {"var": {"output_spec": {"?": [[966, "                output_spec = kwargs.pop(\"outputs_list\")"]]}, "output_value": {"dict": [[969, "                output_value = func(*args, **kwargs)  # %% callback invoked %%"]], "[{_NoUpdate | dict}]": [[977, "                    output_value, output_spec = [output_value], [output_spec]"]]}, "component_ids": {"defaultdict": [[981, "                component_ids = collections.defaultdict(dict)"]]}, "id_str": {"None": [[991, "                            id_str = stringify_id(speci[\"id\"])"]]}, "has_update": {"bool": [[982, "                has_update = False"], [990, "                            has_update = True"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash.ena": {"var": {"dev_tools_serve_dev_bundles": {"None": [[1240, "        dev_tools_serve_dev_bundles=None,"]]}}, "param": {"dev_tools_serve_dev_bundles": {"None": [[1247, "    ):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash._setup_dev_tools": {"var": {"debug": {"?": [[1209, "        debug = kwargs.get(\"debug\", False)"]]}, "attr": {"str": [[1212, "        for attr in ("], [1224, "        for attr, _type, default in ("]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash._collect_and_register_resources._relative_url_path": {"var": {"modified": {"int": [[553, "            modified = int(os.stat(module_path).st_mtime)"]]}}, "param": {"namespace": {"str": [[547, "        def _relative_url_path(relative_package_path=\"\", namespace=\"\"):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash.callback.wrap_func.add_context": {"var": {"vali": {"?": [[986, "                    for vali, speci in ("]]}, "jsonResponse": {"?": [[1000, "                    jsonResponse = json.dumps("]]}, "response": {"dict": [[997, "                response = {\"response\": component_ids, \"multi\": True}"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash.run": {"var": {"dev_tools_hot_reload": {"None": [[1460, "        dev_tools_hot_reload=None,"]]}, "dev_tools_hot_reload_max_retry": {"None": [[1463, "        dev_tools_hot_reload_max_retry=None,"]]}, "dev_tools_props_check": {"None": [[1458, "        dev_tools_props_check=None,"]]}, "served_url": {"?": [[1578, "                served_url, proxied_url = map(urlparse, proxy.split(\"::\"))"]]}}, "param": {"dev_tools_hot_reload": {"None": [[1467, "    ):"]]}, "dev_tools_hot_reload_max_retry": {"None": [[1467, "    ):"]]}, "dev_tools_props_check": {"None": [[1467, "    ):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash.interpolate_index": {"var": {"title": {"str": [[771, "        title=\"\","]]}, "app_entry": {"str": [[775, "        app_entry=\"\","]]}, "self": {"Dash": [[769, "        self,"]]}, "favicon": {"str": [[776, "        favicon=\"\","]]}, "metas": {"str": [[770, "        metas=\"\","]]}, "renderer": {"str": [[777, "        renderer=\"\","]]}, "scripts": {"str": [[774, "        scripts=\"\","]]}, "config": {"str": [[773, "        config=\"\","]]}, "css": {"str": [[772, "        css=\"\","]]}}, "param": {"title": {"str": [[778, "    ):"]]}, "app_entry": {"str": [[778, "    ):"]]}, "self": {"Dash": [[778, "    ):"]]}, "favicon": {"str": [[778, "    ):"]]}, "metas": {"str": [[778, "    ):"]]}, "renderer": {"str": [[778, "    ):"]]}, "scripts": {"str": [[778, "    ):"]]}, "config": {"str": [[778, "    ):"]]}, "css": {"str": [[778, "    ):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash.enab": {"var": {"dev_tools_prune_errors": {"None": [[1246, "        dev_tools_prune_errors=None,"]]}, "dev_tools_hot_reload_watch_interval": {"None": [[1243, "        dev_tools_hot_reload_watch_interval=None,"]]}, "dev_tools_hot_reload": {"None": [[1241, "        dev_tools_hot_reload=None,"]]}, "dev_tools_hot_reload_max_retry": {"None": [[1244, "        dev_tools_hot_reload_max_retry=None,"]]}, "dev_tools_silence_routes_logging": {"None": [[1245, "        dev_tools_silence_routes_logging=None,"]]}, "dev_tools_props_check": {"None": [[1239, "        dev_tools_props_check=None,"]]}, "dev_tools_hot_reload_interval": {"None": [[1242, "        dev_tools_hot_reload_interval=None,"]]}, "dev_tools_ui": {"None": [[1238, "        dev_tools_ui=None,"]]}, "dev_tools": {"AttributeDict": [[1322, "        dev_tools = self._setup_dev_tools("]]}}, "param": {"dev_tools_prune_errors": {"None": [[1247, "    ):"]]}, "dev_tools_hot_reload_watch_interval": {"None": [[1247, "    ):"]]}, "dev_tools_hot_reload": {"None": [[1247, "    ):"]]}, "dev_tools_hot_reload_max_retry": {"None": [[1247, "    ):"]]}, "dev_tools_silence_routes_logging": {"None": [[1247, "    ):"]]}, "dev_tools_props_check": {"None": [[1247, "    ):"]]}, "dev_tools_hot_reload_interval": {"None": [[1247, "    ):"]]}, "dev_tools_ui": {"None": [[1247, "    ):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash.__ini": {"var": {"meta_tags": {"None": [[247, "        meta_tags=None,"]]}, "url_base_pathname": {"None": [[242, "        url_base_pathname=None,"]]}, "assets_url_path": {"str": [[237, "        assets_url_path=\"assets\","]]}, "assets_folder": {"str": [[236, "        assets_folder=\"assets\","]]}, "external_stylesheets": {"None": [[250, "        external_stylesheets=None,"]]}, "assets_external_path": {"None": [[239, "        assets_external_path=None,"]]}}, "param": {"meta_tags": {"None": [[257, "    ):"]]}, "url_base_pathname": {"None": [[257, "    ):"]]}, "assets_url_path": {"str": [[257, "    ):"]]}, "assets_folder": {"str": [[257, "    ):"]]}, "external_stylesheets": {"None": [[257, "    ):"]]}, "assets_external_path": {"None": [[257, "    ):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash.serve_reload_hash": {"var": {"_reload": {"AttributeDict": [[525, "        _reload = self._hot_reload"]]}}, "param": {"self": {"Dash": [[524, "    def serve_reload_hash(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash.serve_component_su": {"var": {"extension": {"str": [[689, "        extension = \".\" + path_in_pkg.split(\".\")[-1]"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash._walk_assets_directory": {"var": {"current": {"?": [[1071, "        for current, _, files in sorted(os.walk(walk_dir)):"]]}, "walk_dir": {"?": [[1066, "        walk_dir = self.config.assets_folder"]]}, "ignore_filter": {"None": [[1069, "        ignore_filter = re.compile(ignore_str) if ignore_str else None"]]}, "files_gen": {"[?]": [[1083, "                files_gen = (x for x in files if not ignore_filter.search(x))"]], "?": [[1085, "                files_gen = files"]]}, "slash_splitter": {"?": [[1067, "        slash_splitter = re.compile(r\"[\\\\/]+\")"]]}, "f": {"?": [[1087, "            for f in sorted(files_gen):"]]}, "ignore_str": {"?": [[1068, "        ignore_str = self.config.assets_ignore"]]}, "s": {"?": [[1075, "                s = current.replace(walk_dir, \"\").lstrip(\"\\\\\").lstrip(\"/\")"]]}, "base": {"?": [[1080, "                    base = splitted[0]"]], "str": [[1073, "                base = \"\""], [1078, "                    base = \"/\".join(slash_splitter.split(s))"]]}, "full": {"str": [[1090, "                full = os.path.join(current, f)"]]}, "splitted": {"?": [[1076, "                splitted = slash_splitter.split(s)"]]}, "path": {"str": [[1088, "                path = \"/\".join([base, f]) if base else f"]]}}, "param": {"self": {"Dash": [[1065, "    def _walk_assets_directory(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash._generate_meta_htm": {"param": {"self": {"Dash": [[666, "    def _generate_meta_html(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash._on_assets_chang": {"var": {"asset_path": {"str": [[1407, "                asset_path = ("]]}, "res": {"dict": [[1425, "                    res = self._add_assets_resource(asset_path, filename)"]]}, "_reload": {"AttributeDict": [[1401, "        _reload = self._hot_reload"]]}}, "param": {"deleted": {"?": [[1400, "    def _on_assets_change(self, filename, modified, deleted):"]]}, "self": {"Dash": [[1400, "    def _on_assets_change(self, filename, modified, deleted):"]]}, "modified": {"?": [[1400, "    def _on_assets_change(self, filename, modified, deleted):"]]}, "filename": {"?": [[1400, "    def _on_assets_change(self, filename, modified, deleted):"]]}}, "func": {"delete_resource": {"[?] -> None": [[1435, "                    def delete_resource(resources):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash.serve_component_suit": {"var": {"response": {"?": [[701, "        response = flask.Response("], [718, "                response = flask.Response(None, status=304)"]]}}, "param": {"self": {"Dash": [[684, "    def serve_component_suites(self, package_name, fingerprinted_path):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash._invalid_resources_handl": {"param": {"err": {"?": [[1100, "    def _invalid_resources_handler(err):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash.serve_": {"var": {"layout": {"None": [[494, "        layout = self._layout_value()"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash.enable_dev_tool": {"var": {"packages": {"[?]": [[1346, "            packages = ["]]}, "component_packages_dist": {"[str]": [[1352, "            component_packages_dist = ["]]}}, "func": {"_wrap_errors": {"? -> (?, int)": [[1372, "            def _wrap_errors(_):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash._collect_and_register_resources._relative_ur": {"var": {"module_path": {"str": [[549, "            module_path = os.path.join("]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash.serve_layout": {"param": {"self": {"Dash": [[493, "    def serve_layout(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash.init_app": {"var": {"config": {"AttributeDict": [[376, "        config = self.config"]]}}, "param": {"self": {"{CustomDash | Dash}": [[374, "    def init_app(self, app=None):"]]}}, "func": {"_handle_error": {"? -> (str, int)": [[402, "        def _handle_error(_):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash.run_serve": {"var": {"display_url": {"(?, ?, str, ?)": [[1601, "                display_url = ("]], "(str, str, str, ?)": [[1608, "                display_url = (protocol, host, \":{}\".format(port), path)"]]}, "protocol": {"str": [[1574, "            protocol = \"https\" if ssl_context else \"http\""]]}, "port": {"int": [[1562, "            port = int(port)"]], "str": [[1454, "        port=os.getenv(\"PORT\", \"8050\"),"]]}, "proxy": {"str": [[1455, "        proxy=os.getenv(\"DASH_PROXY\", None),"]]}}, "param": {"port": {"str": [[1467, "    ):"]]}, "proxy": {"str": [[1467, "    ):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash.init_app._handle_error": {"param": {"_": {"?": [[402, "        def _handle_error(_):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash._add_ur": {"var": {"full_name": {"str": [[426, "        full_name = self.config.routes_pathname_prefix + name"]]}}, "param": {"self": {"{CustomDash | Dash}": [[425, "    def _add_url(self, name, view_func, methods=(\"GET\",)):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.d": {"class": {"Dash": {"<Dash>": [[105, "class Dash(object):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash.strip_relative_": {"param": {"path": {"?": [[1159, "    def strip_relative_path(self, path):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash._generate_renderer": {"param": {"self": {"Dash": [[659, "    def _generate_renderer(self):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash._add_url": {"param": {"methods": {"{[str] | str}": [[425, "    def _add_url(self, name, view_func, methods=(\"GET\",)):"]]}, "name": {"str": [[425, "    def _add_url(self, name, view_func, methods=(\"GET\",)):"]]}, "view_func": {"{() -> ? | (Dash, ?, ?) -> None | Dash -> ? | Dash -> None | Dash -> None | Dash -> None | Dash -> {? -> ? | str}}": [[425, "    def _add_url(self, name, view_func, methods=(\"GET\",)):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash.get_relative_": {"param": {"path": {"?": [[1118, "    def get_relative_path(self, path):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash.get_asset_url": {"var": {"asset": {"str": [[1110, "        asset = get_asset_path("]]}}, "param": {"path": {"{bool | str}": [[1109, "    def get_asset_url(self, path):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash._on_assets_change.delete_resourc": {"var": {"to_delete": {"None": [[1436, "                        to_delete = None"]], "?": [[1439, "                                to_delete = r"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash._setup": {"var": {"dev_tools": {"AttributeDict": [[1210, "        dev_tools = self._dev_tools = AttributeDict()"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash.enable_dev_tools._wrap_errors": {"var": {"i": {"?": [[1379, "                for i, line in enumerate(tb.plaintext.splitlines()):"]]}, "tb": {"?": [[1377, "                tb = get_current_traceback()"]]}}, "param": {"_": {"?": [[1372, "            def _wrap_errors(_):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash": {"var": {"_re_index_scripts_id": {"(str, str)": [[83, "_re_index_scripts_id = 'src=\"[^\"]*dash[-_]renderer[^\"]*\"', \"dash-renderer\""]]}, "_re_index_config_id": {"(str, str)": [[82, "_re_index_config_id = 'id=\"_dash-config\"', \"#_dash-config\""]]}, "_re_renderer_scripts_id": {"(str, str)": [[84, "_re_renderer_scripts_id = 'id=\"_dash-renderer', \"new DashRenderer\""]]}, "_re_index_entry_id": {"(str, str)": [[81, "_re_index_entry_id = 'id=\"react-entry-point\"', \"#react-entry-point\""]]}, "_re_index_config": {"(str, str)": [[78, "_re_index_config = \"{%config%}\", \"{%config%}\""]]}, "_re_index_entry": {"(str, str)": [[77, "_re_index_entry = \"{%app_entry%}\", \"{%app_entry%}\""]]}, "no_update": {"_NoUpdate": [[93, "no_update = _NoUpdate()"]]}, "_re_index_scripts": {"(str, str)": [[79, "_re_index_scripts = \"{%scripts%}\", \"{%scripts%}\""]]}, "_app_entry": {"str": [[69, "_app_entry = \"\"\""]]}, "_inline_clientside_template": {"str": [[96, "_inline_clientside_template = \"\"\""]]}, "_default_index": {"str": [[51, "_default_index = \"\"\"<!DOCTYPE html>"]]}}, "class": {"_NoUpdate": {"<_NoUpdate>": [[87, "class _NoUpdate(object):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash.run_server.verify_url": {"param": {"part_name": {"str": [[1580, "                def verify_url_part(served_part, url_part, part_name):"]]}, "served_part": {"?": [[1580, "                def verify_url_part(served_part, url_part, part_name):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.dash.dash.Dash.strip_relative_path": {"param": {"self": {"Dash": [[1159, "    def strip_relative_path(self, path):"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/dash/testing/newhooks.py": {".home.xxm.Desktop.EMSE.dataset.dash.dash.testing.newhook": {"func": {"pytest_setup_options": {"() -> None": [[1, "def pytest_setup_options():"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/@plotly/dash-generator-test-component-standard/setup.py": {".home.xxm.Desktop.EMSE.dataset.dash.@plotly.dash-generator-test-component-standard.setu": {"var": {"package_name": {"str": [[7, "package_name = str(package[\"name\"].replace(\" \", \"_\").replace(\"-\", \"_\"))"]]}, "package": {"?": [[5, "    package = json.load(f)"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/tests/integration/utils.py": {".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.utils.invincible": {"param": {"func": {"?": [[7, "def invincible(func):"]]}}, "func": {"wrap": {"() -> ?": [[8, "    def wrap():"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.utils.wait_for": {"var": {"timeout": {"int": [[55, "        timeout = TIMEOUT"]], "?": [[52, "        timeout = kwargs[\"timeout\"]"]]}}, "param": {"get_message": {"{() -> str | () -> ": [[21, "def wait_for(condition_function, get_message=lambda: \"\", *args, **kwargs):"]]}, "condition_function": {"{() -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool | () -> bool}": [[21, "def wait_for(condition_function, get_message=lambda: \"\", *args, **kwargs):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.utils.wait_fo": {"var": {"start_time": {"int": [[57, "    start_time = time.time()"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.integration.utils": {"var": {"TIMEOUT": {"int": [[4, "TIMEOUT = 5  # Seconds"]]}}, "class": {"WaitForTimeout": {"<WaitForTimeout>": [[17, "class WaitForTimeout(Exception):"]]}}, "func": {"invincible": {"? -> () -> ?": [[7, "def invincible(func):"]]}, "wait_for": {"(() -> bool, () -> str) -> ? / (() -> bool, () -> str) -> bool / (?, () -> str) -> bool": [[21, "def wait_for(condition_function, get_message=lambda: \"\", *args, **kwargs):"]]}, "wrapped_condition_function": {"() -> bool": [[41, "    def wrapped_condition_function():"]]}}}}, "/home/xxm/Desktop/EMSE/dataset/dash/tests/unit/test_configs.py": {".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.test_configs.test_valid_pathname_prefix_init": {"var": {"_": {"bool": [[43, "    _, routes, req = pathname_configs("]]}}, "param": {"req_prefix": {"?": [[42, "):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.test_configs.test_port_env_fail_str": {"var": {"app": {"Dash": [[233, "    app = Dash()"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.test_configs.test_pathname_prefix_environ_requests": {"var": {"_": {"bool": [[90, "    _, _, req = pathname_configs()"]]}}, "param": {"empty_environ": {"?": [[88, "def test_pathname_prefix_environ_requests(empty_environ):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.test_configs.test_app_name_": {"param": {"server": {"?": [[156, "def test_app_name_server(empty_environ, name, server, expected):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.test_configs.test_load_dash_env_vars_refects_to_os": {"param": {"empty_environ": {"bool": [[135, "def test_load_dash_env_vars_refects_to_os_environ(empty_environ):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.test_configs.test_valid_pathname_prefix_ini": {"param": {"expected_route": {"?": [[42, "):"]]}, "expected_req": {"?": [[42, "):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.test_c": {"func": {"test_port_env_fail_range": {"? -> None": [[242, "def test_port_env_fail_range(empty_environ):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.test_configs.test_no_proxy_success": {"var": {"app": {"Dash": [[260, "    app = Dash()"]]}}, "param": {"caplog": {"?": [[259, "def test_no_proxy_success(mocker, caplog, empty_environ):"]]}, "empty_environ": {"?": [[259, "def test_no_proxy_success(mocker, caplog, empty_environ):"]]}, "mocker": {"?": [[259, "def test_no_proxy_success(mocker, caplog, empty_environ):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.test_configs.test_get_combined_config_props_check": {"var": {"val3": {"bool": [[131, "    val3 = get_combined_config(\"props_check\", False, default=True)"]]}, "val2": {"bool": [[128, "    val2 = get_combined_config(\"props_check\", None, default=False)"]]}, "val1": {"bool": [[122, "    val1 = get_combined_config(\"props_check\", None, default=False)"]]}}, "param": {"val3": {"(str, str, None) -> {bool | str} / (str, bool, bool) -> bool / (str, None, None) -> bool / (str, None, str) -> {bool | str} / (str, None, bool) -> bool / (str, ?, None) -> bool / (str, bool, None) -> bool": [[135, "def test_load_dash_env_vars_refects_to_os_environ(empty_environ):"]]}, "empty_environ": {"bool": [[121, "def test_get_combined_config_props_check(empty_environ):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.test_configs.test_pathname_prefix_relative_u": {"param": {"partial_path": {"?": [[176, "def test_pathname_prefix_relative_url(prefix, partial_path, expected):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.test_configs.test_get_combined_config_dev_tools_ui": {"var": {"val3": {"bool": [[117, "    val3 = get_combined_config(\"ui\", False, default=True)"]]}, "val2": {"bool": [[114, "    val2 = get_combined_config(\"ui\", None, default=False)"]]}, "val1": {"bool": [[108, "    val1 = get_combined_config(\"ui\", None, default=False)"]]}}, "param": {"val3": {"(str, str, None) -> {bool | str} / (str, bool, bool) -> bool / (str, None, None) -> bool / (str, None, str) -> {bool | str} / (str, None, bool) -> bool / (str, ?, None) -> bool / (str, bool, None) -> bool": [[121, "def test_get_combined_config_props_check(empty_environ):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.test_configs.test_proxy_succe": {"var": {"proxystr": {"str": [[281, "    proxystr = \"http://{}:{}::{}\".format(host, port, proxy)"]]}}, "param": {"host": {"?": [[280, "def test_proxy_success(mocker, caplog, empty_environ, proxy, host, port, path):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.test_configs.test_valid_pathname_prefix": {"var": {"empty_environ": {"?": [[41, "    empty_environ, route_prefix, req_prefix, expected_route, expected_req"]]}}, "param": {"empty_environ": {"?": [[42, "):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.test_configs.test_proxy_failu": {"param": {"empty_environ": {"?": [[290, "def test_proxy_failure(mocker, empty_environ):"]]}, "mocker": {"?": [[290, "def test_proxy_failure(mocker, empty_environ):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.test_configs.test_port_env_fail_s": {"param": {"empty_environ": {"?": [[232, "def test_port_env_fail_str(empty_environ):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.test_configs.empty_environ": {"var": {"k": {"<list>": [[20, "    for k in DASH_ENV_VARS.keys():"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.test_configs.test_invalid_strip_relative": {"param": {"partial_path": {"?": [[227, "def test_invalid_strip_relative_path(prefix, partial_path):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.test_configs.test_valid_pathname_prefix_in": {"param": {"route_prefix": {"?": [[42, "):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.test_configs.test_pathname_prefix_from_environ_app_na": {"param": {"empty_environ": {"?": [[75, "def test_pathname_prefix_from_environ_app_name(empty_environ):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.test_config": {"param": {"test_load_dash_env_vars_refects_to_os_environ": {"bool": [[135, "def test_load_dash_env_vars_refects_to_os_environ(empty_environ):"]]}}, "func": {"test_pathname_prefix_from_environ_app_name": {"? -> None": [[75, "def test_pathname_prefix_from_environ_app_name(empty_environ):"]]}, "test_pathname_prefix_environ_requests": {"? -> None": [[88, "def test_pathname_prefix_environ_requests(empty_environ):"]]}, "test_no_proxy_success": {"(?, ?, ?) -> None": [[259, "def test_no_proxy_success(mocker, caplog, empty_environ):"]]}, "test_pathname_prefix_relative_url": {"(?, ?, ?) -> None": [[176, "def test_pathname_prefix_relative_url(prefix, partial_path, expected):"]]}, "test_app_name_server": {"(?, ?, ?, ?) -> None": [[156, "def test_app_name_server(empty_environ, name, server, expected):"]]}, "test_dash_env_vars": {"? -> None": [[25, "def test_dash_env_vars(empty_environ):"]]}, "test_proxy_failure": {"(?, ?) -> None": [[290, "def test_proxy_failure(mocker, empty_environ):"]]}, "test_pathname_prefix_environ_routes": {"? -> None": [[82, "def test_pathname_prefix_environ_routes(empty_environ):"]]}, "test_valid_pathname_prefix_init": {"(?, ?, ?, ?, ?) -> None": [[40, "def test_valid_pathname_prefix_init("]]}, "test_strip_relative_path": {"(?, ?, ?) -> None": [[214, "def test_strip_relative_path(prefix, partial_path, expected):"]]}, "test_invalid_pathname_prefix": {"? -> None": [[52, "def test_invalid_pathname_prefix(empty_environ):"]]}, "test_load_dash_env_vars_refects_to_os_environ": {"? -> None": [[135, "def test_load_dash_env_vars_refects_to_os_environ(empty_environ):"]]}, "test_proxy_success": {"(?, ?, ?, ?, ?, ?, ?) -> None": [[280, "def test_proxy_success(mocker, caplog, empty_environ, proxy, host, port, path):"]]}, "test_invalid_strip_relative_path": {"(?, ?) -> None": [[227, "def test_invalid_strip_relative_path(prefix, partial_path):"]]}, "test_pathname_prefix_assets": {"(?, ?, ?) -> None": [[102, "def test_pathname_prefix_assets(empty_environ, req, expected):"]]}, "test_port_env_fail_str": {"? -> None": [[232, "def test_port_env_fail_str(empty_environ):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.test_configs.test_app_name_server": {"var": {"app": {"Dash": [[157, "    app = Dash(name=name, server=server)"]]}}, "param": {"expected": {"?": [[156, "def test_app_name_server(empty_environ, name, server, expected):"]]}, "name": {"?": [[156, "def test_app_name_server(empty_environ, name, server, expected):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.test_configs.test_get_combined_config_dev_tools_u": {"param": {"empty_environ": {"?": [[107, "def test_get_combined_config_dev_tools_ui(empty_environ):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash": {"func": {"test_get_combined_config_dev_tools_ui": {"? -> None": [[107, "def test_get_combined_config_dev_tools_ui(empty_environ):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.test_configs.test_pathname_prefix_relative_url": {"var": {"path": {"str": [[177, "    path = get_relative_path(prefix, partial_path)"]]}}, "param": {"expected": {"?": [[176, "def test_pathname_prefix_relative_url(prefix, partial_path, expected):"]]}, "prefix": {"?": [[176, "def test_pathname_prefix_relative_url(prefix, partial_path, expected):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.test_configs.test_dash_env_vars": {"param": {"empty_environ": {"?": [[25, "def test_dash_env_vars(empty_environ):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.test_configs.test_strip_relative_path": {"param": {"expected": {"?": [[214, "def test_strip_relative_path(prefix, partial_path, expected):"]]}, "prefix": {"?": [[214, "def test_strip_relative_path(prefix, partial_path, expected):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.test_configs.test_proxy_success": {"var": {"app": {"Dash": [[282, "    app = Dash(url_base_pathname=path)"]]}}, "param": {"empty_environ": {"?": [[280, "def test_proxy_success(mocker, caplog, empty_environ, proxy, host, port, path):"]]}, "mocker": {"?": [[280, "def test_proxy_success(mocker, caplog, empty_environ, proxy, host, port, path):"]]}, "caplog": {"?": [[280, "def test_proxy_success(mocker, caplog, empty_environ, proxy, host, port, path):"]]}, "path": {"?": [[280, "def test_proxy_success(mocker, caplog, empty_environ, proxy, host, port, path):"]]}, "port": {"?": [[280, "def test_proxy_success(mocker, caplog, empty_environ, proxy, host, port, path):"]]}, "proxy": {"?": [[280, "def test_proxy_success(mocker, caplog, empty_environ, proxy, host, port, path):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.test_configs.test_invalid_strip_relative_path": {"param": {"prefix": {"?": [[227, "def test_invalid_strip_relative_path(prefix, partial_path):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.test_configs.test_port_env_fail_rang": {"param": {"empty_environ": {"?": [[242, "def test_port_env_fail_range(empty_environ):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.test_configs.test_strip_relative_": {"var": {"path": {"None": [[215, "    path = strip_relative_path(prefix, partial_path)"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.test_configs.test_proxy_failure": {"var": {"app": {"Dash": [[291, "    app = Dash()"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.test_configs.test_load_dash_env_vars_refects_to_os_environ": {"var": {"var": {"<list>": [[136, "    for var in DASH_ENV_VARS.keys():"]]}, "vars": {"AttributeDict": [[138, "        vars = load_dash_env_vars()"], [142, "        vars = load_dash_env_vars()"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.test_configs.test_app_name_s": {"param": {"empty_environ": {"?": [[156, "def test_app_name_server(empty_environ, name, server, expected):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.test_configs.test_invalid_pathname_prefix": {"var": {"_": {"bool": [[57, "        _, _, _ = pathname_configs("], [63, "        _, _, _ = pathname_configs("]], "{bool | str}": [[54, "        _, _, _ = pathname_configs(\"/my-path\", \"/another-path\")"], [69, "        _, _, _ = pathname_configs(\"my-path\")"], [72, "        _, _, _ = pathname_configs(\"/my-path\")"]]}}, "param": {"empty_environ": {"?": [[52, "def test_invalid_pathname_prefix(empty_environ):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.test_configs": {"func": {"empty_environ": {"() -> None": [[19, "def empty_environ():"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.test_conf": {"func": {"test_invalid_get_relative_path": {"(?, ?) -> None": [[185, "def test_invalid_get_relative_path(prefix, partial_path):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.test_configs.test_pathname_prefix_from_environ_app_name": {"var": {"_": {"bool": [[77, "    _, routes, req = pathname_configs()"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.test_configs.test_pathname_prefix_assets": {"var": {"path": {"str": [[103, "    path = get_asset_path(req, \"reset.css\", \"assets\")"]]}}, "param": {"expected": {"?": [[102, "def test_pathname_prefix_assets(empty_environ, req, expected):"]]}, "req": {"?": [[102, "def test_pathname_prefix_assets(empty_environ, req, expected):"]]}, "empty_environ": {"?": [[102, "def test_pathname_prefix_assets(empty_environ, req, expected):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.test_configs.test_invalid_get_relative_path": {"param": {"prefix": {"?": [[185, "def test_invalid_get_relative_path(prefix, partial_path):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.test_configs.test_pathname_prefix_environ_routes": {"var": {"_": {"bool": [[84, "    _, routes, _ = pathname_configs()"]]}}, "param": {"empty_environ": {"?": [[82, "def test_pathname_prefix_environ_routes(empty_environ):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.test_configs.test_invalid_get_relative": {"param": {"partial_path": {"?": [[185, "def test_invalid_get_relative_path(prefix, partial_path):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.u": {"param": {"test_get_combined_config_props_check": {"bool": [[121, "def test_get_combined_config_props_check(empty_environ):"]]}}, "func": {"test_get_combined_config_props_check": {"? -> None": [[121, "def test_get_combined_config_props_check(empty_environ):"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.test_configs.test_port_env_fail_range": {"var": {"app": {"Dash": [[243, "    app = Dash()"]]}}}, ".home.xxm.Desktop.EMSE.dataset.dash.tests.unit.test_configs.test_strip_relative": {"param": {"partial_path": {"?": [[214, "def test_strip_relative_path(prefix, partial_path, expected):"]]}}}}}